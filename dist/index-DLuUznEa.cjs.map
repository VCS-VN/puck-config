{"version":3,"file":"index-DLuUznEa.cjs","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/advlist/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const applyListFormat = (editor, listName, styleValue) => {\n      const cmd = listName === 'UL' ? 'InsertUnorderedList' : 'InsertOrderedList';\n      editor.execCommand(cmd, false, styleValue === false ? null : { 'list-style-type': styleValue });\n    };\n\n    const register$2 = editor => {\n      editor.addCommand('ApplyUnorderedListStyle', (ui, value) => {\n        applyListFormat(editor, 'UL', value['list-style-type']);\n      });\n      editor.addCommand('ApplyOrderedListStyle', (ui, value) => {\n        applyListFormat(editor, 'OL', value['list-style-type']);\n      });\n    };\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('advlist_number_styles', {\n        processor: 'string[]',\n        default: 'default,lower-alpha,lower-greek,lower-roman,upper-alpha,upper-roman'.split(',')\n      });\n      registerOption('advlist_bullet_styles', {\n        processor: 'string[]',\n        default: 'default,circle,square'.split(',')\n      });\n    };\n    const getNumberStyles = option('advlist_number_styles');\n    const getBulletStyles = option('advlist_bullet_styles');\n\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n\n    const isCustomList = list => /\\btox\\-/.test(list.className);\n    const isChildOfBody = (editor, elm) => {\n      return editor.dom.isChildOf(elm, editor.getBody());\n    };\n    const matchNodeNames = regex => node => isNonNullable(node) && regex.test(node.nodeName);\n    const isListNode = matchNodeNames(/^(OL|UL|DL)$/);\n    const isTableCellNode = matchNodeNames(/^(TH|TD)$/);\n    const inList = (editor, parents, nodeName) => findUntil(parents, parent => isListNode(parent) && !isCustomList(parent), isTableCellNode).exists(list => list.nodeName === nodeName && isChildOfBody(editor, list));\n    const getSelectedStyleType = editor => {\n      const listElm = editor.dom.getParent(editor.selection.getNode(), 'ol,ul');\n      const style = editor.dom.getStyle(listElm, 'listStyleType');\n      return Optional.from(style);\n    };\n    const isWithinNonEditable = (editor, element) => element !== null && !editor.dom.isEditable(element);\n    const isWithinNonEditableList = (editor, element) => {\n      const parentList = editor.dom.getParent(element, 'ol,ul,dl');\n      return isWithinNonEditable(editor, parentList) && editor.selection.isEditable();\n    };\n    const setNodeChangeHandler = (editor, nodeChangeHandler) => {\n      const initialNode = editor.selection.getNode();\n      nodeChangeHandler({\n        parents: editor.dom.getParents(initialNode),\n        element: initialNode\n      });\n      editor.on('NodeChange', nodeChangeHandler);\n      return () => editor.off('NodeChange', nodeChangeHandler);\n    };\n\n    const styleValueToText = styleValue => {\n      return styleValue.replace(/\\-/g, ' ').replace(/\\b\\w/g, chr => {\n        return chr.toUpperCase();\n      });\n    };\n    const normalizeStyleValue = styleValue => isNullable(styleValue) || styleValue === 'default' ? '' : styleValue;\n    const makeSetupHandler = (editor, nodeName) => api => {\n      const updateButtonState = (editor, parents) => {\n        const element = editor.selection.getStart(true);\n        api.setActive(inList(editor, parents, nodeName));\n        api.setEnabled(!isWithinNonEditableList(editor, element) && editor.selection.isEditable());\n      };\n      const nodeChangeHandler = e => updateButtonState(editor, e.parents);\n      return setNodeChangeHandler(editor, nodeChangeHandler);\n    };\n    const addSplitButton = (editor, id, tooltip, cmd, nodeName, styles) => {\n      editor.ui.registry.addSplitButton(id, {\n        tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        presets: 'listpreview',\n        columns: 3,\n        fetch: callback => {\n          const items = global.map(styles, styleValue => {\n            const iconStyle = nodeName === 'OL' ? 'num' : 'bull';\n            const iconName = styleValue === 'disc' || styleValue === 'decimal' ? 'default' : styleValue;\n            const itemValue = normalizeStyleValue(styleValue);\n            const displayText = styleValueToText(styleValue);\n            return {\n              type: 'choiceitem',\n              value: itemValue,\n              icon: 'list-' + iconStyle + '-' + iconName,\n              text: displayText\n            };\n          });\n          callback(items);\n        },\n        onAction: () => editor.execCommand(cmd),\n        onItemAction: (_splitButtonApi, value) => {\n          applyListFormat(editor, nodeName, value);\n        },\n        select: value => {\n          const listStyleType = getSelectedStyleType(editor);\n          return listStyleType.map(listStyle => value === listStyle).getOr(false);\n        },\n        onSetup: makeSetupHandler(editor, nodeName)\n      });\n    };\n    const addButton = (editor, id, tooltip, cmd, nodeName, styleValue) => {\n      editor.ui.registry.addToggleButton(id, {\n        active: false,\n        tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        onSetup: makeSetupHandler(editor, nodeName),\n        onAction: () => editor.queryCommandState(cmd) || styleValue === '' ? editor.execCommand(cmd) : applyListFormat(editor, nodeName, styleValue)\n      });\n    };\n    const addControl = (editor, id, tooltip, cmd, nodeName, styles) => {\n      if (styles.length > 1) {\n        addSplitButton(editor, id, tooltip, cmd, nodeName, styles);\n      } else {\n        addButton(editor, id, tooltip, cmd, nodeName, normalizeStyleValue(styles[0]));\n      }\n    };\n    const register = editor => {\n      addControl(editor, 'numlist', 'Numbered list', 'InsertOrderedList', 'OL', getNumberStyles(editor));\n      addControl(editor, 'bullist', 'Bullet list', 'InsertUnorderedList', 'UL', getBulletStyles(editor));\n    };\n\n    var Plugin = () => {\n      global$1.add('advlist', editor => {\n        if (editor.hasPlugin('lists')) {\n          register$1(editor);\n          register(editor);\n          register$2(editor);\n        } else {\n          console.error('Please use the Lists plugin together with the Advanced List plugin.');\n        }\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","applyListFormat","editor","listName","styleValue","cmd","register$2","ui","value","option","name","register$1","registerOption","getNumberStyles","getBulletStyles","isNullable","a","isNonNullable","global","Optional","tag","onNone","onSome","mapper","binder","predicate","replacement","thunk","message","worker","findUntil","xs","pred","until","i","len","x","isCustomList","list","isChildOfBody","elm","matchNodeNames","node","regex","isListNode","isTableCellNode","inList","parents","nodeName","parent","getSelectedStyleType","listElm","style","isWithinNonEditable","element","isWithinNonEditableList","parentList","setNodeChangeHandler","nodeChangeHandler","initialNode","styleValueToText","chr","normalizeStyleValue","makeSetupHandler","api","updateButtonState","e","addSplitButton","id","tooltip","styles","callback","items","iconStyle","iconName","itemValue","displayText","_splitButtonApi","listStyle","addButton","addControl","register","Plugin"],"mappings":"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","x_google_ignoreList":[0]}