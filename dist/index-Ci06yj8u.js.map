{"version":3,"file":"index-Ci06yj8u.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/autolink/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n  'use strict';\n\n  var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n  const link = () => /(?:[A-Za-z][A-Za-z\\d.+-]{0,14}:\\/\\/(?:[-.~*+=!&;:'%@?^${}(),\\w]+@)?|www\\.|[-;:&=+$,.\\w]+@)[A-Za-z\\d-]+(?:\\.[A-Za-z\\d-]+)*(?::\\d+)?(?:\\/(?:[-.~*+=!;:'%@$(),\\/\\w]*[-~*+=%@$()\\/\\w])?)?(?:\\?(?:[-.~*+=!&;:'%@?^${}(),\\/\\w]+))?(?:#(?:[-.~*+=!&;:'%@?^${}(),\\/\\w]+))?/g;\n\n  const option = name => editor => editor.options.get(name);\n  const register = editor => {\n    const registerOption = editor.options.register;\n    registerOption('autolink_pattern', {\n      processor: 'regexp',\n      default: new RegExp('^' + link().source + '$', 'i')\n    });\n    registerOption('link_default_target', { processor: 'string' });\n    registerOption('link_default_protocol', {\n      processor: 'string',\n      default: 'https'\n    });\n  };\n  const getAutoLinkPattern = option('autolink_pattern');\n  const getDefaultLinkTarget = option('link_default_target');\n  const getDefaultLinkProtocol = option('link_default_protocol');\n  const allowUnsafeLinkTarget = option('allow_unsafe_link_target');\n\n  const hasProto = (v, constructor, predicate) => {\n    var _a;\n    if (predicate(v, constructor.prototype)) {\n      return true;\n    } else {\n      return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n    }\n  };\n  const typeOf = x => {\n    const t = typeof x;\n    if (x === null) {\n      return 'null';\n    } else if (t === 'object' && Array.isArray(x)) {\n      return 'array';\n    } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n      return 'string';\n    } else {\n      return t;\n    }\n  };\n  const isType = type => value => typeOf(value) === type;\n  const eq = t => a => t === a;\n  const isString = isType('string');\n  const isUndefined = eq(undefined);\n  const isNullable = a => a === null || a === undefined;\n  const isNonNullable = a => !isNullable(a);\n\n  const not = f => t => !f(t);\n\n  const hasOwnProperty = Object.hasOwnProperty;\n  const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n  const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n  const contains = (str, substr, start = 0, end) => {\n    const idx = str.indexOf(substr, start);\n    if (idx !== -1) {\n      return isUndefined(end) ? true : idx + substr.length <= end;\n    } else {\n      return false;\n    }\n  };\n  const startsWith = (str, prefix) => {\n    return checkRange(str, prefix, 0);\n  };\n\n  const zeroWidth = '\\uFEFF';\n  const isZwsp = char => char === zeroWidth;\n  const removeZwsp = s => s.replace(/\\uFEFF/g, '');\n\n  var global = tinymce.util.Tools.resolve('tinymce.dom.TextSeeker');\n\n  const isTextNode = node => node.nodeType === 3;\n  const isElement = node => node.nodeType === 1;\n  const isBracketOrSpace = char => /^[(\\[{ \\u00a0]$/.test(char);\n  const hasProtocol = url => /^([A-Za-z][A-Za-z\\d.+-]*:\\/\\/)|mailto:/.test(url);\n  const isPunctuation = char => /[?!,.;:]/.test(char);\n  const findChar = (text, index, predicate) => {\n    for (let i = index - 1; i >= 0; i--) {\n      const char = text.charAt(i);\n      if (!isZwsp(char) && predicate(char)) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  const freefallRtl = (container, offset) => {\n    let tempNode = container;\n    let tempOffset = offset;\n    while (isElement(tempNode) && tempNode.childNodes[tempOffset]) {\n      tempNode = tempNode.childNodes[tempOffset];\n      tempOffset = isTextNode(tempNode) ? tempNode.data.length : tempNode.childNodes.length;\n    }\n    return {\n      container: tempNode,\n      offset: tempOffset\n    };\n  };\n\n  const parseCurrentLine = (editor, offset) => {\n    var _a;\n    const voidElements = editor.schema.getVoidElements();\n    const autoLinkPattern = getAutoLinkPattern(editor);\n    const {dom, selection} = editor;\n    if (dom.getParent(selection.getNode(), 'a[href]') !== null) {\n      return null;\n    }\n    const rng = selection.getRng();\n    const textSeeker = global(dom, node => {\n      return dom.isBlock(node) || has(voidElements, node.nodeName.toLowerCase()) || dom.getContentEditable(node) === 'false';\n    });\n    const {\n      container: endContainer,\n      offset: endOffset\n    } = freefallRtl(rng.endContainer, rng.endOffset);\n    const root = (_a = dom.getParent(endContainer, dom.isBlock)) !== null && _a !== void 0 ? _a : dom.getRoot();\n    const endSpot = textSeeker.backwards(endContainer, endOffset + offset, (node, offset) => {\n      const text = node.data;\n      const idx = findChar(text, offset, not(isBracketOrSpace));\n      return idx === -1 || isPunctuation(text[idx]) ? idx : idx + 1;\n    }, root);\n    if (!endSpot) {\n      return null;\n    }\n    let lastTextNode = endSpot.container;\n    const startSpot = textSeeker.backwards(endSpot.container, endSpot.offset, (node, offset) => {\n      lastTextNode = node;\n      const idx = findChar(node.data, offset, isBracketOrSpace);\n      return idx === -1 ? idx : idx + 1;\n    }, root);\n    const newRng = dom.createRng();\n    if (!startSpot) {\n      newRng.setStart(lastTextNode, 0);\n    } else {\n      newRng.setStart(startSpot.container, startSpot.offset);\n    }\n    newRng.setEnd(endSpot.container, endSpot.offset);\n    const rngText = removeZwsp(newRng.toString());\n    const matches = rngText.match(autoLinkPattern);\n    if (matches) {\n      let url = matches[0];\n      if (startsWith(url, 'www.')) {\n        const protocol = getDefaultLinkProtocol(editor);\n        url = protocol + '://' + url;\n      } else if (contains(url, '@') && !hasProtocol(url)) {\n        url = 'mailto:' + url;\n      }\n      return {\n        rng: newRng,\n        url\n      };\n    } else {\n      return null;\n    }\n  };\n  const convertToLink = (editor, result) => {\n    const {dom, selection} = editor;\n    const {rng, url} = result;\n    const bookmark = selection.getBookmark();\n    selection.setRng(rng);\n    const command = 'createlink';\n    const args = {\n      command,\n      ui: false,\n      value: url\n    };\n    const beforeExecEvent = editor.dispatch('BeforeExecCommand', args);\n    if (!beforeExecEvent.isDefaultPrevented()) {\n      editor.getDoc().execCommand(command, false, url);\n      editor.dispatch('ExecCommand', args);\n      const defaultLinkTarget = getDefaultLinkTarget(editor);\n      if (isString(defaultLinkTarget)) {\n        const anchor = selection.getNode();\n        dom.setAttrib(anchor, 'target', defaultLinkTarget);\n        if (defaultLinkTarget === '_blank' && !allowUnsafeLinkTarget(editor)) {\n          dom.setAttrib(anchor, 'rel', 'noopener');\n        }\n      }\n    }\n    selection.moveToBookmark(bookmark);\n    editor.nodeChanged();\n  };\n  const handleSpacebar = editor => {\n    const result = parseCurrentLine(editor, -1);\n    if (isNonNullable(result)) {\n      convertToLink(editor, result);\n    }\n  };\n  const handleBracket = handleSpacebar;\n  const handleEnter = editor => {\n    const result = parseCurrentLine(editor, 0);\n    if (isNonNullable(result)) {\n      convertToLink(editor, result);\n    }\n  };\n  const setup = editor => {\n    editor.on('keydown', e => {\n      if (e.keyCode === 13 && !e.isDefaultPrevented()) {\n        handleEnter(editor);\n      }\n    });\n    editor.on('keyup', e => {\n      if (e.keyCode === 32) {\n        handleSpacebar(editor);\n      } else if (e.keyCode === 48 && e.shiftKey || e.keyCode === 221) {\n        handleBracket(editor);\n      }\n    });\n  };\n\n  var Plugin = () => {\n    global$1.add('autolink', editor => {\n      register(editor);\n      setup(editor);\n    });\n  };\n\n  Plugin();\n\n})();\n"],"names":["global$1","link","option","name","editor","register","registerOption","getAutoLinkPattern","getDefaultLinkTarget","getDefaultLinkProtocol","allowUnsafeLinkTarget","hasProto","v","constructor","predicate","_a","typeOf","x","t","o","proto","isType","type","value","eq","a","isString","isUndefined","isNullable","isNonNullable","not","f","hasOwnProperty","has","obj","key","checkRange","str","substr","start","contains","end","idx","startsWith","prefix","zeroWidth","isZwsp","char","removeZwsp","s","global","isTextNode","node","isElement","isBracketOrSpace","hasProtocol","url","isPunctuation","findChar","text","index","i","freefallRtl","container","offset","tempNode","tempOffset","parseCurrentLine","voidElements","autoLinkPattern","dom","selection","rng","textSeeker","endContainer","endOffset","root","endSpot","lastTextNode","startSpot","newRng","matches","convertToLink","result","bookmark","command","args","defaultLinkTarget","anchor","handleSpacebar","handleBracket","handleEnter","setup","Plugin"],"mappings":"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","x_google_ignoreList":[0]}