{"version":3,"file":"index-Ds6gCyvU.cjs","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/insertdatetime/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('insertdatetime_dateformat', {\n        processor: 'string',\n        default: editor.translate('%Y-%m-%d')\n      });\n      registerOption('insertdatetime_timeformat', {\n        processor: 'string',\n        default: editor.translate('%H:%M:%S')\n      });\n      registerOption('insertdatetime_formats', {\n        processor: 'string[]',\n        default: [\n          '%H:%M:%S',\n          '%Y-%m-%d',\n          '%I:%M:%S %p',\n          '%D'\n        ]\n      });\n      registerOption('insertdatetime_element', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const getDateFormat = option('insertdatetime_dateformat');\n    const getTimeFormat = option('insertdatetime_timeformat');\n    const getFormats = option('insertdatetime_formats');\n    const shouldInsertTimeElement = option('insertdatetime_element');\n    const getDefaultDateTime = editor => {\n      const formats = getFormats(editor);\n      return formats.length > 0 ? formats[0] : getTimeFormat(editor);\n    };\n\n    const daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n    const daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n    const monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n    const monthsLong = 'January February March April May June July August September October November December'.split(' ');\n    const addZeros = (value, len) => {\n      value = '' + value;\n      if (value.length < len) {\n        for (let i = 0; i < len - value.length; i++) {\n          value = '0' + value;\n        }\n      }\n      return value;\n    };\n    const getDateTime = (editor, fmt, date = new Date()) => {\n      fmt = fmt.replace('%D', '%m/%d/%Y');\n      fmt = fmt.replace('%r', '%I:%M:%S %p');\n      fmt = fmt.replace('%Y', '' + date.getFullYear());\n      fmt = fmt.replace('%y', '' + date.getYear());\n      fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n      fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n      fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n      fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n      fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n      fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n      fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n      fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n      fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n      fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n      fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n      fmt = fmt.replace('%%', '%');\n      return fmt;\n    };\n    const updateElement = (editor, timeElm, computerTime, userTime) => {\n      const newTimeElm = editor.dom.create('time', { datetime: computerTime }, userTime);\n      editor.dom.replace(newTimeElm, timeElm);\n      editor.selection.select(newTimeElm, true);\n      editor.selection.collapse(false);\n    };\n    const insertDateTime = (editor, format) => {\n      if (shouldInsertTimeElement(editor)) {\n        const userTime = getDateTime(editor, format);\n        let computerTime;\n        if (/%[HMSIp]/.test(format)) {\n          computerTime = getDateTime(editor, '%Y-%m-%dT%H:%M');\n        } else {\n          computerTime = getDateTime(editor, '%Y-%m-%d');\n        }\n        const timeElm = editor.dom.getParent(editor.selection.getStart(), 'time');\n        if (timeElm) {\n          updateElement(editor, timeElm, computerTime, userTime);\n        } else {\n          editor.insertContent('<time datetime=\"' + computerTime + '\">' + userTime + '</time>');\n        }\n      } else {\n        editor.insertContent(getDateTime(editor, format));\n      }\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mceInsertDate', (_ui, value) => {\n        insertDateTime(editor, value !== null && value !== void 0 ? value : getDateFormat(editor));\n      });\n      editor.addCommand('mceInsertTime', (_ui, value) => {\n        insertDateTime(editor, value !== null && value !== void 0 ? value : getTimeFormat(editor));\n      });\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const formats = getFormats(editor);\n      const defaultFormat = Cell(getDefaultDateTime(editor));\n      const insertDateTime = format => editor.execCommand('mceInsertDate', false, format);\n      editor.ui.registry.addSplitButton('insertdatetime', {\n        icon: 'insert-time',\n        tooltip: 'Insert date/time',\n        select: value => value === defaultFormat.get(),\n        fetch: done => {\n          done(global.map(formats, format => ({\n            type: 'choiceitem',\n            text: getDateTime(editor, format),\n            value: format\n          })));\n        },\n        onAction: _api => {\n          insertDateTime(defaultFormat.get());\n        },\n        onItemAction: (_api, value) => {\n          defaultFormat.set(value);\n          insertDateTime(value);\n        },\n        onSetup: onSetupEditable(editor)\n      });\n      const makeMenuItemHandler = format => () => {\n        defaultFormat.set(format);\n        insertDateTime(format);\n      };\n      editor.ui.registry.addNestedMenuItem('insertdatetime', {\n        icon: 'insert-time',\n        text: 'Date/time',\n        getSubmenuItems: () => global.map(formats, format => ({\n          type: 'menuitem',\n          text: getDateTime(editor, format),\n          onAction: makeMenuItemHandler(format)\n        })),\n        onSetup: onSetupEditable(editor)\n      });\n    };\n\n    var Plugin = () => {\n      global$1.add('insertdatetime', editor => {\n        register$2(editor);\n        register$1(editor);\n        register(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","option","name","editor","register$2","registerOption","getDateFormat","getTimeFormat","getFormats","shouldInsertTimeElement","getDefaultDateTime","formats","daysShort","daysLong","monthsShort","monthsLong","addZeros","value","len","i","getDateTime","fmt","date","updateElement","timeElm","computerTime","userTime","newTimeElm","insertDateTime","format","register$1","_ui","Cell","initial","v","global","onSetupEditable","api","nodeChanged","register","defaultFormat","done","_api","makeMenuItemHandler","Plugin"],"mappings":"6WAIC,UAAY,CAGT,IAAIA,EAAW,QAAQ,KAAK,MAAM,QAAQ,uBAAuB,EAEjE,MAAMC,EAASC,GAAQC,GAAUA,EAAO,QAAQ,IAAID,CAAI,EAClDE,EAAaD,GAAU,CAC3B,MAAME,EAAiBF,EAAO,QAAQ,SACtCE,EAAe,4BAA6B,CAC1C,UAAW,SACX,QAASF,EAAO,UAAU,UAAU,CAAA,CACrC,EACDE,EAAe,4BAA6B,CAC1C,UAAW,SACX,QAASF,EAAO,UAAU,UAAU,CAAA,CACrC,EACDE,EAAe,yBAA0B,CACvC,UAAW,WACX,QAAS,CACP,WACA,WACA,cACA,IAAA,CACF,CACD,EACDA,EAAe,yBAA0B,CACvC,UAAW,UACX,QAAS,EAAA,CACV,CAAA,EAEGC,EAAgBL,EAAO,2BAA2B,EAClDM,EAAgBN,EAAO,2BAA2B,EAClDO,EAAaP,EAAO,wBAAwB,EAC5CQ,EAA0BR,EAAO,wBAAwB,EACzDS,EAAqBP,GAAU,CACnC,MAAMQ,EAAUH,EAAWL,CAAM,EACjC,OAAOQ,EAAQ,OAAS,EAAIA,EAAQ,CAAC,EAAIJ,EAAcJ,CAAM,CAAA,EAGzDS,EAAY,kCAAkC,MAAM,GAAG,EACvDC,EAAW,kEAAkE,MAAM,GAAG,EACtFC,EAAc,kDAAkD,MAAM,GAAG,EACzEC,EAAa,wFAAwF,MAAM,GAAG,EAC9GC,EAAW,CAACC,EAAOC,IAAQ,CAE/B,GADAD,EAAQ,GAAKA,EACTA,EAAM,OAASC,EACjB,QAASC,EAAI,EAAGA,EAAID,EAAMD,EAAM,OAAQE,IACtCF,EAAQ,IAAMA,EAGlB,OAAOA,CAAA,EAEHG,EAAc,CAACjB,EAAQkB,EAAKC,EAAO,IAAI,QAC3CD,EAAMA,EAAI,QAAQ,KAAM,UAAU,EAClCA,EAAMA,EAAI,QAAQ,KAAM,aAAa,EACrCA,EAAMA,EAAI,QAAQ,KAAM,GAAKC,EAAK,aAAa,EAC/CD,EAAMA,EAAI,QAAQ,KAAM,GAAKC,EAAK,SAAS,EAC3CD,EAAMA,EAAI,QAAQ,KAAML,EAASM,EAAK,SAAA,EAAa,EAAG,CAAC,CAAC,EACxDD,EAAMA,EAAI,QAAQ,KAAML,EAASM,EAAK,UAAW,CAAC,CAAC,EACnDD,EAAMA,EAAI,QAAQ,KAAM,GAAKL,EAASM,EAAK,WAAY,CAAC,CAAC,EACzDD,EAAMA,EAAI,QAAQ,KAAM,GAAKL,EAASM,EAAK,aAAc,CAAC,CAAC,EAC3DD,EAAMA,EAAI,QAAQ,KAAM,GAAKL,EAASM,EAAK,aAAc,CAAC,CAAC,EAC3DD,EAAMA,EAAI,QAAQ,KAAM,KAAOC,EAAK,WAAa,IAAM,GAAK,EAAE,EAC9DD,EAAMA,EAAI,QAAQ,KAAYC,EAAK,WAAa,GAAK,KAAO,IAAK,EACjED,EAAMA,EAAI,QAAQ,KAAM,GAAKlB,EAAO,UAAUY,EAAWO,EAAK,SAAA,CAAU,CAAC,CAAC,EAC1ED,EAAMA,EAAI,QAAQ,KAAM,GAAKlB,EAAO,UAAUW,EAAYQ,EAAK,SAAA,CAAU,CAAC,CAAC,EAC3ED,EAAMA,EAAI,QAAQ,KAAM,GAAKlB,EAAO,UAAUU,EAASS,EAAK,OAAA,CAAQ,CAAC,CAAC,EACtED,EAAMA,EAAI,QAAQ,KAAM,GAAKlB,EAAO,UAAUS,EAAUU,EAAK,OAAA,CAAQ,CAAC,CAAC,EACvED,EAAMA,EAAI,QAAQ,KAAM,GAAG,EACpBA,GAEHE,EAAgB,CAACpB,EAAQqB,EAASC,EAAcC,IAAa,CACjE,MAAMC,EAAaxB,EAAO,IAAI,OAAO,OAAQ,CAAE,SAAUsB,CAAA,EAAgBC,CAAQ,EACjFvB,EAAO,IAAI,QAAQwB,EAAYH,CAAO,EACtCrB,EAAO,UAAU,OAAOwB,EAAY,EAAI,EACxCxB,EAAO,UAAU,SAAS,EAAK,CAAA,EAE3ByB,EAAiB,CAACzB,EAAQ0B,IAAW,CACzC,GAAIpB,EAAwBN,CAAM,EAAG,CACnC,MAAMuB,EAAWN,EAAYjB,EAAQ0B,CAAM,EAC3C,IAAIJ,EACA,WAAW,KAAKI,CAAM,EACxBJ,EAAeL,EAAYjB,EAAQ,gBAAgB,EAEnDsB,EAAeL,EAAYjB,EAAQ,UAAU,EAE/C,MAAMqB,EAAUrB,EAAO,IAAI,UAAUA,EAAO,UAAU,SAAA,EAAY,MAAM,EACpEqB,EACFD,EAAcpB,EAAQqB,EAASC,EAAcC,CAAQ,EAErDvB,EAAO,cAAc,mBAAqBsB,EAAe,KAAOC,EAAW,SAAS,CACtF,MAEAvB,EAAO,cAAciB,EAAYjB,EAAQ0B,CAAM,CAAC,CAClD,EAGIC,EAAa3B,GAAU,CAC3BA,EAAO,WAAW,gBAAiB,CAAC4B,EAAKd,IAAU,CACjDW,EAAezB,EAAQc,GAA6CX,EAAcH,CAAM,CAAC,CAAA,CAC1F,EACDA,EAAO,WAAW,gBAAiB,CAAC4B,EAAKd,IAAU,CACjDW,EAAezB,EAAQc,GAA6CV,EAAcJ,CAAM,CAAC,CAAA,CAC1F,CAAA,EAGG6B,EAAOC,GAAW,CACtB,IAAIhB,EAAQgB,EAOZ,MAAO,CACL,IAPU,IACHhB,EAOP,IALUiB,GAAK,CACfjB,EAAQiB,CAAA,CAIR,CACF,EAGF,IAAIC,EAAS,QAAQ,KAAK,MAAM,QAAQ,oBAAoB,EAE5D,MAAMC,KAA4BC,GAAO,CACvC,MAAMC,EAAc,IAAM,CACxBD,EAAI,WAAWlC,EAAO,UAAU,WAAA,CAAY,CAAA,EAE9C,OAAAA,EAAO,GAAG,aAAcmC,CAAW,EACnCA,EAAA,EACO,IAAM,CACXnC,EAAO,IAAI,aAAcmC,CAAW,CAAA,CACtC,EAEIC,EAAWpC,GAAU,CACzB,MAAMQ,EAAUH,EAAWL,CAAM,EAC3BqC,EAAgBR,EAAKtB,EAAmBP,CAAM,CAAC,EAC/CyB,EAAiBC,GAAU1B,EAAO,YAAY,gBAAiB,GAAO0B,CAAM,EAClF1B,EAAO,GAAG,SAAS,eAAe,iBAAkB,CAClD,KAAM,cACN,QAAS,mBACT,OAAQc,GAASA,IAAUuB,EAAc,IAAA,EACzC,MAAOC,GAAQ,CACbA,EAAKN,EAAO,IAAIxB,EAASkB,IAAW,CAClC,KAAM,aACN,KAAMT,EAAYjB,EAAQ0B,CAAM,EAChC,MAAOA,CAAA,EACP,CAAC,CAAA,EAEL,SAAUa,GAAQ,CAChBd,EAAeY,EAAc,KAAK,CAAA,EAEpC,aAAc,CAACE,EAAMzB,IAAU,CAC7BuB,EAAc,IAAIvB,CAAK,EACvBW,EAAeX,CAAK,CAAA,EAEtB,QAASmB,EAAgBjC,CAAM,CAAA,CAChC,EACD,MAAMwC,KAAgC,IAAM,CAC1CH,EAAc,IAAIX,CAAM,EACxBD,EAAeC,CAAM,CAAA,EAEvB1B,EAAO,GAAG,SAAS,kBAAkB,iBAAkB,CACrD,KAAM,cACN,KAAM,YACN,gBAAiB,IAAMgC,EAAO,IAAIxB,EAASkB,IAAW,CACpD,KAAM,WACN,KAAMT,EAAYjB,EAAQ0B,CAAM,EAChC,SAAUc,EAAoBd,CAAM,CAAA,EACpC,EACF,QAASO,EAAgBjC,CAAM,CAAA,CAChC,CAAA,EAGH,IAAIyC,EAAS,IAAM,CACjB5C,EAAS,IAAI,iBAAkBG,GAAU,CACvCC,EAAWD,CAAM,EACjB2B,EAAW3B,CAAM,EACjBoC,EAASpC,CAAM,CAAA,CAChB,CAAA,EAGHyC,EAAA,CAEJ,GAAA","x_google_ignoreList":[0]}