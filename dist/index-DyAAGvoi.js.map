{"version":3,"file":"index-DyAAGvoi.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/preview/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const option = name => editor => editor.options.get(name);\n    const getContentStyle = option('content_style');\n    const shouldUseContentCssCors = option('content_css_cors');\n    const getBodyClass = option('body_class');\n    const getBodyId = option('body_id');\n\n    const getPreviewHtml = editor => {\n      var _a;\n      let headHtml = '';\n      const encode = editor.dom.encode;\n      const contentStyle = (_a = getContentStyle(editor)) !== null && _a !== void 0 ? _a : '';\n      headHtml += '<base href=\"' + encode(editor.documentBaseURI.getURI()) + '\">';\n      const cors = shouldUseContentCssCors(editor) ? ' crossorigin=\"anonymous\"' : '';\n      global.each(editor.contentCSS, url => {\n        headHtml += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + encode(editor.documentBaseURI.toAbsolute(url)) + '\"' + cors + '>';\n      });\n      if (contentStyle) {\n        headHtml += '<style type=\"text/css\">' + contentStyle + '</style>';\n      }\n      const bodyId = getBodyId(editor);\n      const bodyClass = getBodyClass(editor);\n      const isMetaKeyPressed = global$1.os.isMacOS() || global$1.os.isiOS() ? 'e.metaKey' : 'e.ctrlKey && !e.altKey';\n      const preventClicksOnLinksScript = '<script>' + 'document.addEventListener && document.addEventListener(\"click\", function(e) {' + 'for (var elm = e.target; elm; elm = elm.parentNode) {' + 'if (elm.nodeName === \"A\" && !(' + isMetaKeyPressed + ')) {' + 'e.preventDefault();' + '}' + '}' + '}, false);' + '</script> ';\n      const directionality = editor.getBody().dir;\n      const dirAttr = directionality ? ' dir=\"' + encode(directionality) + '\"' : '';\n      const previewHtml = '<!DOCTYPE html>' + '<html>' + '<head>' + headHtml + '</head>' + '<body id=\"' + encode(bodyId) + '\" class=\"mce-content-body ' + encode(bodyClass) + '\"' + dirAttr + '>' + editor.getContent() + preventClicksOnLinksScript + '</body>' + '</html>';\n      return previewHtml;\n    };\n\n    const open = editor => {\n      const content = getPreviewHtml(editor);\n      const dataApi = editor.windowManager.open({\n        title: 'Preview',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [{\n              name: 'preview',\n              type: 'iframe',\n              sandboxed: true,\n              transparent: false\n            }]\n        },\n        buttons: [{\n            type: 'cancel',\n            name: 'close',\n            text: 'Close',\n            primary: true\n          }],\n        initialData: { preview: content }\n      });\n      dataApi.focus('close');\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mcePreview', () => {\n        open(editor);\n      });\n    };\n\n    const register = editor => {\n      const onAction = () => editor.execCommand('mcePreview');\n      editor.ui.registry.addButton('preview', {\n        icon: 'preview',\n        tooltip: 'Preview',\n        onAction\n      });\n      editor.ui.registry.addMenuItem('preview', {\n        icon: 'preview',\n        text: 'Preview',\n        onAction\n      });\n    };\n\n    var Plugin = () => {\n      global$2.add('preview', editor => {\n        register$1(editor);\n        register(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$2","global$1","global","option","name","editor","getContentStyle","shouldUseContentCssCors","getBodyClass","getBodyId","getPreviewHtml","_a","headHtml","encode","contentStyle","cors","url","bodyId","bodyClass","preventClicksOnLinksScript","directionality","dirAttr","open","content","register$1","register","onAction","Plugin"],"mappings":";;;;;;;;;;;;;;;;;CAIC,WAAY;AAGT,MAAIA,IAAW,QAAQ,KAAK,MAAM,QAAQ,uBAAuB,GAE7DC,IAAW,QAAQ,KAAK,MAAM,QAAQ,aAAa,GAEnDC,IAAS,QAAQ,KAAK,MAAM,QAAQ,oBAAoB;AAE5D,QAAMC,IAAS,CAAAC,MAAQ,CAAAC,MAAUA,EAAO,QAAQ,IAAID,CAAI,GAClDE,IAAkBH,EAAO,eAAe,GACxCI,IAA0BJ,EAAO,kBAAkB,GACnDK,IAAeL,EAAO,YAAY,GAClCM,IAAYN,EAAO,SAAS,GAE5BO,IAAiB,CAAAL,MAAU;AAC/B,QAAIM;AACJ,QAAIC,IAAW;AACf,UAAMC,IAASR,EAAO,IAAI,QACpBS,KAAgBH,IAAKL,EAAgBD,CAAM,OAAO,QAAQM,MAAO,SAASA,IAAK;AACrF,IAAAC,KAAY,iBAAiBC,EAAOR,EAAO,gBAAgB,OAAA,CAAQ,IAAI;AACvE,UAAMU,IAAOR,EAAwBF,CAAM,IAAI,6BAA6B;AAC5E,IAAAH,EAAO,KAAKG,EAAO,YAAY,CAAAW,MAAO;AACpC,MAAAJ,KAAY,kDAAkDC,EAAOR,EAAO,gBAAgB,WAAWW,CAAG,CAAC,IAAI,MAAMD,IAAO;AAAA,IAAA,CAC7H,GACGD,MACFF,KAAY,4BAA4BE,IAAe;AAEzD,UAAMG,IAASR,EAAUJ,CAAM,GACzBa,IAAYV,EAAaH,CAAM,GAE/Bc,IAA6B,8KADVlB,EAAS,GAAG,QAAA,KAAaA,EAAS,GAAG,UAAU,cAAc,4BAC4J,kDAC5OmB,IAAiBf,EAAO,QAAA,EAAU,KAClCgB,IAAUD,IAAiB,WAAWP,EAAOO,CAAc,IAAI,MAAM;AAE3E,WADoB,gCAA0CR,IAAW,sBAA2BC,EAAOI,CAAM,IAAI,+BAA+BJ,EAAOK,CAAS,IAAI,MAAMG,IAAU,MAAMhB,EAAO,WAAA,IAAec,IAA6B;AAAA,EAC1O,GAGHG,IAAO,CAAAjB,MAAU;AACrB,UAAMkB,IAAUb,EAAeL,CAAM;AAqBrC,IApBgBA,EAAO,cAAc,KAAK;AAAA,MACxC,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,OAAO,CAAC;AAAA,UACJ,MAAM;AAAA,UACN,MAAM;AAAA,UACN,WAAW;AAAA,UACX,aAAa;AAAA,QAAA,CACd;AAAA,MAAA;AAAA,MAEL,SAAS,CAAC;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MAAA,CACV;AAAA,MACH,aAAa,EAAE,SAASkB,EAAA;AAAA,IAAQ,CACjC,EACO,MAAM,OAAO;AAAA,EAAA,GAGjBC,IAAa,CAAAnB,MAAU;AAC3B,IAAAA,EAAO,WAAW,cAAc,MAAM;AACpC,MAAAiB,EAAKjB,CAAM;AAAA,IAAA,CACZ;AAAA,EAAA,GAGGoB,IAAW,CAAApB,MAAU;AACzB,UAAMqB,IAAW,MAAMrB,EAAO,YAAY,YAAY;AACtD,IAAAA,EAAO,GAAG,SAAS,UAAU,WAAW;AAAA,MACtC,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAAqB;AAAA,IAAA,CACD,GACDrB,EAAO,GAAG,SAAS,YAAY,WAAW;AAAA,MACxC,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAAqB;AAAA,IAAA,CACD;AAAA,EAAA;AAGH,MAAIC,IAAS,MAAM;AACjB,IAAA3B,EAAS,IAAI,WAAW,CAAAK,MAAU;AAChC,MAAAmB,EAAWnB,CAAM,GACjBoB,EAASpB,CAAM;AAAA,IAAA,CAChB;AAAA,EAAA;AAGH,EAAAsB,EAAA;AAEJ,GAAA;;;;;","x_google_ignoreList":[0]}