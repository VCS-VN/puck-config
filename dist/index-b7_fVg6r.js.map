{"version":3,"file":"index-b7_fVg6r.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/media/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativePush = Array.prototype.push;\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const get$1 = (obj, key) => {\n      return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('audio_template_callback', { processor: 'function' });\n      registerOption('video_template_callback', { processor: 'function' });\n      registerOption('iframe_template_callback', { processor: 'function' });\n      registerOption('media_live_embeds', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('media_filter_html', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('media_url_resolver', { processor: 'function' });\n      registerOption('media_alt_source', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('media_poster', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('media_dimensions', {\n        processor: 'boolean',\n        default: true\n      });\n    };\n    const getAudioTemplateCallback = option('audio_template_callback');\n    const getVideoTemplateCallback = option('video_template_callback');\n    const getIframeTemplateCallback = option('iframe_template_callback');\n    const hasLiveEmbeds = option('media_live_embeds');\n    const shouldFilterHtml = option('media_filter_html');\n    const getUrlResolver = option('media_url_resolver');\n    const hasAltSource = option('media_alt_source');\n    const hasPoster = option('media_poster');\n    const hasDimensions = option('media_dimensions');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.html.DomParser');\n\n    const DOM$1 = global$4.DOM;\n    const trimPx = value => value.replace(/px$/, '');\n    const getEphoxEmbedData = node => {\n      const style = node.attr('style');\n      const styles = style ? DOM$1.parseStyle(style) : {};\n      return {\n        type: 'ephox-embed-iri',\n        source: node.attr('data-ephox-embed-iri'),\n        altsource: '',\n        poster: '',\n        width: get$1(styles, 'max-width').map(trimPx).getOr(''),\n        height: get$1(styles, 'max-height').map(trimPx).getOr('')\n      };\n    };\n    const htmlToData = (html, schema) => {\n      let data = {};\n      const parser = global$3({\n        validate: false,\n        forced_root_block: false\n      }, schema);\n      const rootNode = parser.parse(html);\n      for (let node = rootNode; node; node = node.walk()) {\n        if (node.type === 1) {\n          const name = node.name;\n          if (node.attr('data-ephox-embed-iri')) {\n            data = getEphoxEmbedData(node);\n            break;\n          } else {\n            if (!data.source && name === 'param') {\n              data.source = node.attr('movie');\n            }\n            if (name === 'iframe' || name === 'object' || name === 'embed' || name === 'video' || name === 'audio') {\n              if (!data.type) {\n                data.type = name;\n              }\n              data = global$5.extend(node.attributes.map, data);\n            }\n            if (name === 'source') {\n              if (!data.source) {\n                data.source = node.attr('src');\n              } else if (!data.altsource) {\n                data.altsource = node.attr('src');\n              }\n            }\n            if (name === 'img' && !data.poster) {\n              data.poster = node.attr('src');\n            }\n          }\n        }\n      }\n      data.source = data.source || data.src || '';\n      data.altsource = data.altsource || '';\n      data.poster = data.poster || '';\n      return data;\n    };\n\n    const guess = url => {\n      var _a;\n      const mimes = {\n        mp3: 'audio/mpeg',\n        m4a: 'audio/x-m4a',\n        wav: 'audio/wav',\n        mp4: 'video/mp4',\n        webm: 'video/webm',\n        ogg: 'video/ogg',\n        swf: 'application/x-shockwave-flash'\n      };\n      const fileEnd = (_a = url.toLowerCase().split('.').pop()) !== null && _a !== void 0 ? _a : '';\n      return get$1(mimes, fileEnd).getOr('');\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    const Parser = (schema, settings = {}) => global$3({\n      forced_root_block: false,\n      validate: false,\n      allow_conditional_comments: true,\n      ...settings\n    }, schema);\n\n    const DOM = global$4.DOM;\n    const addPx = value => /^[0-9.]+$/.test(value) ? value + 'px' : value;\n    const updateEphoxEmbed = (data, node) => {\n      const style = node.attr('style');\n      const styleMap = style ? DOM.parseStyle(style) : {};\n      if (isNonNullable(data.width)) {\n        styleMap['max-width'] = addPx(data.width);\n      }\n      if (isNonNullable(data.height)) {\n        styleMap['max-height'] = addPx(data.height);\n      }\n      node.attr('style', DOM.serializeStyle(styleMap));\n    };\n    const sources = [\n      'source',\n      'altsource'\n    ];\n    const updateHtml = (html, data, updateAll, schema) => {\n      let numSources = 0;\n      let sourceCount = 0;\n      const parser = Parser(schema);\n      parser.addNodeFilter('source', nodes => numSources = nodes.length);\n      const rootNode = parser.parse(html);\n      for (let node = rootNode; node; node = node.walk()) {\n        if (node.type === 1) {\n          const name = node.name;\n          if (node.attr('data-ephox-embed-iri')) {\n            updateEphoxEmbed(data, node);\n            break;\n          } else {\n            switch (name) {\n            case 'video':\n            case 'object':\n            case 'embed':\n            case 'img':\n            case 'iframe':\n              if (data.height !== undefined && data.width !== undefined) {\n                node.attr('width', data.width);\n                node.attr('height', data.height);\n              }\n              break;\n            }\n            if (updateAll) {\n              switch (name) {\n              case 'video':\n                node.attr('poster', data.poster);\n                node.attr('src', null);\n                for (let index = numSources; index < 2; index++) {\n                  if (data[sources[index]]) {\n                    const source = new global$2('source', 1);\n                    source.attr('src', data[sources[index]]);\n                    source.attr('type', data[sources[index] + 'mime'] || null);\n                    node.append(source);\n                  }\n                }\n                break;\n              case 'iframe':\n                node.attr('src', data.source);\n                break;\n              case 'object':\n                const hasImage = node.getAll('img').length > 0;\n                if (data.poster && !hasImage) {\n                  node.attr('src', data.poster);\n                  const img = new global$2('img', 1);\n                  img.attr('src', data.poster);\n                  img.attr('width', data.width);\n                  img.attr('height', data.height);\n                  node.append(img);\n                }\n                break;\n              case 'source':\n                if (sourceCount < 2) {\n                  node.attr('src', data[sources[sourceCount]]);\n                  node.attr('type', data[sources[sourceCount] + 'mime'] || null);\n                  if (!data[sources[sourceCount]]) {\n                    node.remove();\n                    continue;\n                  }\n                }\n                sourceCount++;\n                break;\n              case 'img':\n                if (!data.poster) {\n                  node.remove();\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n      return global$1({}, schema).serialize(rootNode);\n    };\n\n    const urlPatterns = [\n      {\n        regex: /youtu\\.be\\/([\\w\\-_\\?&=.]+)/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: 'www.youtube.com/embed/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /youtube\\.com(.+)v=([^&]+)(&([a-z0-9&=\\-_]+))?/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: 'www.youtube.com/embed/$2?$4',\n        allowFullscreen: true\n      },\n      {\n        regex: /youtube.com\\/embed\\/([a-z0-9\\?&=\\-_]+)/i,\n        type: 'iframe',\n        w: 560,\n        h: 314,\n        url: 'www.youtube.com/embed/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/([0-9]+)\\?h=(\\w+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: 'player.vimeo.com/video/$1?h=$2&title=0&byline=0&portrait=0&color=8dc7dc',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/(.*)\\/([0-9]+)\\?h=(\\w+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: 'player.vimeo.com/video/$2?h=$3&title=0&amp;byline=0',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/([0-9]+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: 'player.vimeo.com/video/$1?title=0&byline=0&portrait=0&color=8dc7dc',\n        allowFullscreen: true\n      },\n      {\n        regex: /vimeo\\.com\\/(.*)\\/([0-9]+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: 'player.vimeo.com/video/$2?title=0&amp;byline=0',\n        allowFullscreen: true\n      },\n      {\n        regex: /maps\\.google\\.([a-z]{2,3})\\/maps\\/(.+)msid=(.+)/,\n        type: 'iframe',\n        w: 425,\n        h: 350,\n        url: 'maps.google.com/maps/ms?msid=$2&output=embed\"',\n        allowFullscreen: false\n      },\n      {\n        regex: /dailymotion\\.com\\/video\\/([^_]+)/,\n        type: 'iframe',\n        w: 480,\n        h: 270,\n        url: 'www.dailymotion.com/embed/video/$1',\n        allowFullscreen: true\n      },\n      {\n        regex: /dai\\.ly\\/([^_]+)/,\n        type: 'iframe',\n        w: 480,\n        h: 270,\n        url: 'www.dailymotion.com/embed/video/$1',\n        allowFullscreen: true\n      }\n    ];\n    const getProtocol = url => {\n      const protocolMatches = url.match(/^(https?:\\/\\/|www\\.)(.+)$/i);\n      if (protocolMatches && protocolMatches.length > 1) {\n        return protocolMatches[1] === 'www.' ? 'https://' : protocolMatches[1];\n      } else {\n        return 'https://';\n      }\n    };\n    const getUrl = (pattern, url) => {\n      const protocol = getProtocol(url);\n      const match = pattern.regex.exec(url);\n      let newUrl = protocol + pattern.url;\n      if (isNonNullable(match)) {\n        for (let i = 0; i < match.length; i++) {\n          newUrl = newUrl.replace('$' + i, () => match[i] ? match[i] : '');\n        }\n      }\n      return newUrl.replace(/\\?$/, '');\n    };\n    const matchPattern = url => {\n      const patterns = urlPatterns.filter(pattern => pattern.regex.test(url));\n      if (patterns.length > 0) {\n        return global$5.extend({}, patterns[0], { url: getUrl(patterns[0], url) });\n      } else {\n        return null;\n      }\n    };\n\n    const getIframeHtml = (data, iframeTemplateCallback) => {\n      if (iframeTemplateCallback) {\n        return iframeTemplateCallback(data);\n      } else {\n        const allowFullscreen = data.allowfullscreen ? ' allowFullscreen=\"1\"' : '';\n        return '<iframe src=\"' + data.source + '\" width=\"' + data.width + '\" height=\"' + data.height + '\"' + allowFullscreen + '></iframe>';\n      }\n    };\n    const getFlashHtml = data => {\n      let html = '<object data=\"' + data.source + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" type=\"application/x-shockwave-flash\">';\n      if (data.poster) {\n        html += '<img src=\"' + data.poster + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" />';\n      }\n      html += '</object>';\n      return html;\n    };\n    const getAudioHtml = (data, audioTemplateCallback) => {\n      if (audioTemplateCallback) {\n        return audioTemplateCallback(data);\n      } else {\n        return '<audio controls=\"controls\" src=\"' + data.source + '\">' + (data.altsource ? '\\n<source src=\"' + data.altsource + '\"' + (data.altsourcemime ? ' type=\"' + data.altsourcemime + '\"' : '') + ' />\\n' : '') + '</audio>';\n      }\n    };\n    const getVideoHtml = (data, videoTemplateCallback) => {\n      if (videoTemplateCallback) {\n        return videoTemplateCallback(data);\n      } else {\n        return '<video width=\"' + data.width + '\" height=\"' + data.height + '\"' + (data.poster ? ' poster=\"' + data.poster + '\"' : '') + ' controls=\"controls\">\\n' + '<source src=\"' + data.source + '\"' + (data.sourcemime ? ' type=\"' + data.sourcemime + '\"' : '') + ' />\\n' + (data.altsource ? '<source src=\"' + data.altsource + '\"' + (data.altsourcemime ? ' type=\"' + data.altsourcemime + '\"' : '') + ' />\\n' : '') + '</video>';\n      }\n    };\n    const dataToHtml = (editor, dataIn) => {\n      var _a;\n      const data = global$5.extend({}, dataIn);\n      if (!data.source) {\n        global$5.extend(data, htmlToData((_a = data.embed) !== null && _a !== void 0 ? _a : '', editor.schema));\n        if (!data.source) {\n          return '';\n        }\n      }\n      if (!data.altsource) {\n        data.altsource = '';\n      }\n      if (!data.poster) {\n        data.poster = '';\n      }\n      data.source = editor.convertURL(data.source, 'source');\n      data.altsource = editor.convertURL(data.altsource, 'source');\n      data.sourcemime = guess(data.source);\n      data.altsourcemime = guess(data.altsource);\n      data.poster = editor.convertURL(data.poster, 'poster');\n      const pattern = matchPattern(data.source);\n      if (pattern) {\n        data.source = pattern.url;\n        data.type = pattern.type;\n        data.allowfullscreen = pattern.allowFullscreen;\n        data.width = data.width || String(pattern.w);\n        data.height = data.height || String(pattern.h);\n      }\n      if (data.embed) {\n        return updateHtml(data.embed, data, true, editor.schema);\n      } else {\n        const audioTemplateCallback = getAudioTemplateCallback(editor);\n        const videoTemplateCallback = getVideoTemplateCallback(editor);\n        const iframeTemplateCallback = getIframeTemplateCallback(editor);\n        data.width = data.width || '300';\n        data.height = data.height || '150';\n        global$5.each(data, (value, key) => {\n          data[key] = editor.dom.encode('' + value);\n        });\n        if (data.type === 'iframe') {\n          return getIframeHtml(data, iframeTemplateCallback);\n        } else if (data.sourcemime === 'application/x-shockwave-flash') {\n          return getFlashHtml(data);\n        } else if (data.sourcemime.indexOf('audio') !== -1) {\n          return getAudioHtml(data, audioTemplateCallback);\n        } else {\n          return getVideoHtml(data, videoTemplateCallback);\n        }\n      }\n    };\n\n    const isMediaElement = element => element.hasAttribute('data-mce-object') || element.hasAttribute('data-ephox-embed-iri');\n    const setup$2 = editor => {\n      editor.on('click keyup touchend', () => {\n        const selectedNode = editor.selection.getNode();\n        if (selectedNode && editor.dom.hasClass(selectedNode, 'mce-preview-object')) {\n          if (editor.dom.getAttrib(selectedNode, 'data-mce-selected')) {\n            selectedNode.setAttribute('data-mce-selected', '2');\n          }\n        }\n      });\n      editor.on('ObjectResized', e => {\n        const target = e.target;\n        if (target.getAttribute('data-mce-object')) {\n          let html = target.getAttribute('data-mce-html');\n          if (html) {\n            html = unescape(html);\n            target.setAttribute('data-mce-html', escape(updateHtml(html, {\n              width: String(e.width),\n              height: String(e.height)\n            }, false, editor.schema)));\n          }\n        }\n      });\n    };\n\n    const cache = {};\n    const embedPromise = (data, dataToHtml, handler) => {\n      return new Promise((res, rej) => {\n        const wrappedResolve = response => {\n          if (response.html) {\n            cache[data.source] = response;\n          }\n          return res({\n            url: data.source,\n            html: response.html ? response.html : dataToHtml(data)\n          });\n        };\n        if (cache[data.source]) {\n          wrappedResolve(cache[data.source]);\n        } else {\n          handler({ url: data.source }, wrappedResolve, rej);\n        }\n      });\n    };\n    const defaultPromise = (data, dataToHtml) => Promise.resolve({\n      html: dataToHtml(data),\n      url: data.source\n    });\n    const loadedData = editor => data => dataToHtml(editor, data);\n    const getEmbedHtml = (editor, data) => {\n      const embedHandler = getUrlResolver(editor);\n      return embedHandler ? embedPromise(data, loadedData(editor), embedHandler) : defaultPromise(data, loadedData(editor));\n    };\n    const isCached = url => has(cache, url);\n\n    const extractMeta = (sourceInput, data) => get$1(data, sourceInput).bind(mainData => get$1(mainData, 'meta'));\n    const getValue = (data, metaData, sourceInput) => prop => {\n      const getFromData = () => get$1(data, prop);\n      const getFromMetaData = () => get$1(metaData, prop);\n      const getNonEmptyValue = c => get$1(c, 'value').bind(v => v.length > 0 ? Optional.some(v) : Optional.none());\n      const getFromValueFirst = () => getFromData().bind(child => isObject(child) ? getNonEmptyValue(child).orThunk(getFromMetaData) : getFromMetaData().orThunk(() => Optional.from(child)));\n      const getFromMetaFirst = () => getFromMetaData().orThunk(() => getFromData().bind(child => isObject(child) ? getNonEmptyValue(child) : Optional.from(child)));\n      return { [prop]: (prop === sourceInput ? getFromValueFirst() : getFromMetaFirst()).getOr('') };\n    };\n    const getDimensions = (data, metaData) => {\n      const dimensions = {};\n      get$1(data, 'dimensions').each(dims => {\n        each$1([\n          'width',\n          'height'\n        ], prop => {\n          get$1(metaData, prop).orThunk(() => get$1(dims, prop)).each(value => dimensions[prop] = value);\n        });\n      });\n      return dimensions;\n    };\n    const unwrap = (data, sourceInput) => {\n      const metaData = sourceInput && sourceInput !== 'dimensions' ? extractMeta(sourceInput, data).getOr({}) : {};\n      const get = getValue(data, metaData, sourceInput);\n      return {\n        ...get('source'),\n        ...get('altsource'),\n        ...get('poster'),\n        ...get('embed'),\n        ...getDimensions(data, metaData)\n      };\n    };\n    const wrap = data => {\n      const wrapped = {\n        ...data,\n        source: { value: get$1(data, 'source').getOr('') },\n        altsource: { value: get$1(data, 'altsource').getOr('') },\n        poster: { value: get$1(data, 'poster').getOr('') }\n      };\n      each$1([\n        'width',\n        'height'\n      ], prop => {\n        get$1(data, prop).each(value => {\n          const dimensions = wrapped.dimensions || {};\n          dimensions[prop] = value;\n          wrapped.dimensions = dimensions;\n        });\n      });\n      return wrapped;\n    };\n    const handleError = editor => error => {\n      const errorMessage = error && error.msg ? 'Media embed handler error: ' + error.msg : 'Media embed handler threw unknown error.';\n      editor.notificationManager.open({\n        type: 'error',\n        text: errorMessage\n      });\n    };\n    const getEditorData = editor => {\n      const element = editor.selection.getNode();\n      const snippet = isMediaElement(element) ? editor.serializer.serialize(element, { selection: true }) : '';\n      const data = htmlToData(snippet, editor.schema);\n      const getDimensionsOfElement = () => {\n        if (isEmbedIframe(data.source, data.type)) {\n          const rect = editor.dom.getRect(element);\n          return {\n            width: rect.w.toString().replace(/px$/, ''),\n            height: rect.h.toString().replace(/px$/, '')\n          };\n        } else {\n          return {};\n        }\n      };\n      const dimensions = getDimensionsOfElement();\n      return {\n        embed: snippet,\n        ...data,\n        ...dimensions\n      };\n    };\n    const addEmbedHtml = (api, editor) => response => {\n      if (isString(response.url) && response.url.trim().length > 0) {\n        const html = response.html;\n        const snippetData = htmlToData(html, editor.schema);\n        const nuData = {\n          ...snippetData,\n          source: response.url,\n          embed: html\n        };\n        api.setData(wrap(nuData));\n      }\n    };\n    const selectPlaceholder = (editor, beforeObjects) => {\n      const afterObjects = editor.dom.select('*[data-mce-object]');\n      for (let i = 0; i < beforeObjects.length; i++) {\n        for (let y = afterObjects.length - 1; y >= 0; y--) {\n          if (beforeObjects[i] === afterObjects[y]) {\n            afterObjects.splice(y, 1);\n          }\n        }\n      }\n      editor.selection.select(afterObjects[0]);\n    };\n    const handleInsert = (editor, html) => {\n      const beforeObjects = editor.dom.select('*[data-mce-object]');\n      editor.insertContent(html);\n      selectPlaceholder(editor, beforeObjects);\n      editor.nodeChanged();\n    };\n    const isEmbedIframe = (url, mediaDataType) => isNonNullable(mediaDataType) && mediaDataType === 'ephox-embed-iri' && isNonNullable(matchPattern(url));\n    const shouldInsertAsNewIframe = (prevData, newData) => {\n      const hasDimensionsChanged = (prevData, newData) => prevData.width !== newData.width || prevData.height !== newData.height;\n      return hasDimensionsChanged(prevData, newData) && isEmbedIframe(newData.source, prevData.type);\n    };\n    const submitForm = (prevData, newData, editor) => {\n      var _a;\n      newData.embed = shouldInsertAsNewIframe(prevData, newData) && hasDimensions(editor) ? dataToHtml(editor, {\n        ...newData,\n        embed: ''\n      }) : updateHtml((_a = newData.embed) !== null && _a !== void 0 ? _a : '', newData, false, editor.schema);\n      if (newData.embed && (prevData.source === newData.source || isCached(newData.source))) {\n        handleInsert(editor, newData.embed);\n      } else {\n        getEmbedHtml(editor, newData).then(response => {\n          handleInsert(editor, response.html);\n        }).catch(handleError(editor));\n      }\n    };\n    const showDialog = editor => {\n      const editorData = getEditorData(editor);\n      const currentData = Cell(editorData);\n      const initialData = wrap(editorData);\n      const handleSource = (prevData, api) => {\n        const serviceData = unwrap(api.getData(), 'source');\n        if (prevData.source !== serviceData.source) {\n          addEmbedHtml(win, editor)({\n            url: serviceData.source,\n            html: ''\n          });\n          getEmbedHtml(editor, serviceData).then(addEmbedHtml(win, editor)).catch(handleError(editor));\n        }\n      };\n      const handleEmbed = api => {\n        var _a;\n        const data = unwrap(api.getData());\n        const dataFromEmbed = htmlToData((_a = data.embed) !== null && _a !== void 0 ? _a : '', editor.schema);\n        api.setData(wrap(dataFromEmbed));\n      };\n      const handleUpdate = (api, sourceInput, prevData) => {\n        const dialogData = unwrap(api.getData(), sourceInput);\n        const data = shouldInsertAsNewIframe(prevData, dialogData) && hasDimensions(editor) ? {\n          ...dialogData,\n          embed: ''\n        } : dialogData;\n        const embed = dataToHtml(editor, data);\n        api.setData(wrap({\n          ...data,\n          embed\n        }));\n      };\n      const mediaInput = [{\n          name: 'source',\n          type: 'urlinput',\n          filetype: 'media',\n          label: 'Source',\n          picker_text: 'Browse files'\n        }];\n      const sizeInput = !hasDimensions(editor) ? [] : [{\n          type: 'sizeinput',\n          name: 'dimensions',\n          label: 'Constrain proportions',\n          constrain: true\n        }];\n      const generalTab = {\n        title: 'General',\n        name: 'general',\n        items: flatten([\n          mediaInput,\n          sizeInput\n        ])\n      };\n      const embedTextarea = {\n        type: 'textarea',\n        name: 'embed',\n        label: 'Paste your embed code below:'\n      };\n      const embedTab = {\n        title: 'Embed',\n        items: [embedTextarea]\n      };\n      const advancedFormItems = [];\n      if (hasAltSource(editor)) {\n        advancedFormItems.push({\n          name: 'altsource',\n          type: 'urlinput',\n          filetype: 'media',\n          label: 'Alternative source URL'\n        });\n      }\n      if (hasPoster(editor)) {\n        advancedFormItems.push({\n          name: 'poster',\n          type: 'urlinput',\n          filetype: 'image',\n          label: 'Media poster (Image URL)'\n        });\n      }\n      const advancedTab = {\n        title: 'Advanced',\n        name: 'advanced',\n        items: advancedFormItems\n      };\n      const tabs = [\n        generalTab,\n        embedTab\n      ];\n      if (advancedFormItems.length > 0) {\n        tabs.push(advancedTab);\n      }\n      const body = {\n        type: 'tabpanel',\n        tabs\n      };\n      const win = editor.windowManager.open({\n        title: 'Insert/Edit Media',\n        size: 'normal',\n        body,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        onSubmit: api => {\n          const serviceData = unwrap(api.getData());\n          submitForm(currentData.get(), serviceData, editor);\n          api.close();\n        },\n        onChange: (api, detail) => {\n          switch (detail.name) {\n          case 'source':\n            handleSource(currentData.get(), api);\n            break;\n          case 'embed':\n            handleEmbed(api);\n            break;\n          case 'dimensions':\n          case 'altsource':\n          case 'poster':\n            handleUpdate(api, detail.name, currentData.get());\n            break;\n          }\n          currentData.set(unwrap(api.getData()));\n        },\n        initialData\n      });\n    };\n\n    const get = editor => {\n      const showDialog$1 = () => {\n        showDialog(editor);\n      };\n      return { showDialog: showDialog$1 };\n    };\n\n    const register$1 = editor => {\n      const showDialog$1 = () => {\n        showDialog(editor);\n      };\n      editor.addCommand('mceMedia', showDialog$1);\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const startsWith = (str, prefix) => {\n      return checkRange(str, prefix, 0);\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const isLiveEmbedNode = node => {\n      const name = node.name;\n      return name === 'iframe' || name === 'video' || name === 'audio';\n    };\n    const getDimension = (node, styles, dimension, defaultValue = null) => {\n      const value = node.attr(dimension);\n      if (isNonNullable(value)) {\n        return value;\n      } else if (!has(styles, dimension)) {\n        return defaultValue;\n      } else {\n        return null;\n      }\n    };\n    const setDimensions = (node, previewNode, styles) => {\n      const useDefaults = previewNode.name === 'img' || node.name === 'video';\n      const defaultWidth = useDefaults ? '300' : null;\n      const fallbackHeight = node.name === 'audio' ? '30' : '150';\n      const defaultHeight = useDefaults ? fallbackHeight : null;\n      previewNode.attr({\n        width: getDimension(node, styles, 'width', defaultWidth),\n        height: getDimension(node, styles, 'height', defaultHeight)\n      });\n    };\n    const appendNodeContent = (editor, nodeName, previewNode, html) => {\n      const newNode = Parser(editor.schema).parse(html, { context: nodeName });\n      while (newNode.firstChild) {\n        previewNode.append(newNode.firstChild);\n      }\n    };\n    const createPlaceholderNode = (editor, node) => {\n      const name = node.name;\n      const placeHolder = new global$2('img', 1);\n      retainAttributesAndInnerHtml(editor, node, placeHolder);\n      setDimensions(node, placeHolder, {});\n      placeHolder.attr({\n        'style': node.attr('style'),\n        'src': global.transparentSrc,\n        'data-mce-object': name,\n        'class': 'mce-object mce-object-' + name\n      });\n      return placeHolder;\n    };\n    const createPreviewNode = (editor, node) => {\n      var _a;\n      const name = node.name;\n      const previewWrapper = new global$2('span', 1);\n      previewWrapper.attr({\n        'contentEditable': 'false',\n        'style': node.attr('style'),\n        'data-mce-object': name,\n        'class': 'mce-preview-object mce-object-' + name\n      });\n      retainAttributesAndInnerHtml(editor, node, previewWrapper);\n      const styles = editor.dom.parseStyle((_a = node.attr('style')) !== null && _a !== void 0 ? _a : '');\n      const previewNode = new global$2(name, 1);\n      setDimensions(node, previewNode, styles);\n      previewNode.attr({\n        src: node.attr('src'),\n        style: node.attr('style'),\n        class: node.attr('class')\n      });\n      if (name === 'iframe') {\n        previewNode.attr({\n          allowfullscreen: node.attr('allowfullscreen'),\n          frameborder: '0',\n          sandbox: node.attr('sandbox')\n        });\n      } else {\n        const attrs = [\n          'controls',\n          'crossorigin',\n          'currentTime',\n          'loop',\n          'muted',\n          'poster',\n          'preload'\n        ];\n        each$1(attrs, attrName => {\n          previewNode.attr(attrName, node.attr(attrName));\n        });\n        const sanitizedHtml = previewWrapper.attr('data-mce-html');\n        if (isNonNullable(sanitizedHtml)) {\n          appendNodeContent(editor, name, previewNode, unescape(sanitizedHtml));\n        }\n      }\n      const shimNode = new global$2('span', 1);\n      shimNode.attr('class', 'mce-shim');\n      previewWrapper.append(previewNode);\n      previewWrapper.append(shimNode);\n      return previewWrapper;\n    };\n    const retainAttributesAndInnerHtml = (editor, sourceNode, targetNode) => {\n      var _a;\n      const attribs = (_a = sourceNode.attributes) !== null && _a !== void 0 ? _a : [];\n      let ai = attribs.length;\n      while (ai--) {\n        const attrName = attribs[ai].name;\n        let attrValue = attribs[ai].value;\n        if (attrName !== 'width' && attrName !== 'height' && attrName !== 'style' && !startsWith(attrName, 'data-mce-')) {\n          if (attrName === 'data' || attrName === 'src') {\n            attrValue = editor.convertURL(attrValue, attrName);\n          }\n          targetNode.attr('data-mce-p-' + attrName, attrValue);\n        }\n      }\n      const serializer = global$1({ inner: true }, editor.schema);\n      const tempNode = new global$2('div', 1);\n      each$1(sourceNode.children(), child => tempNode.append(child));\n      const innerHtml = serializer.serialize(tempNode);\n      if (innerHtml) {\n        targetNode.attr('data-mce-html', escape(innerHtml));\n        targetNode.empty();\n      }\n    };\n    const isPageEmbedWrapper = node => {\n      const nodeClass = node.attr('class');\n      return isString(nodeClass) && /\\btiny-pageembed\\b/.test(nodeClass);\n    };\n    const isWithinEmbedWrapper = node => {\n      let tempNode = node;\n      while (tempNode = tempNode.parent) {\n        if (tempNode.attr('data-ephox-embed-iri') || isPageEmbedWrapper(tempNode)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const placeHolderConverter = editor => nodes => {\n      let i = nodes.length;\n      let node;\n      while (i--) {\n        node = nodes[i];\n        if (!node.parent) {\n          continue;\n        }\n        if (node.parent.attr('data-mce-object')) {\n          continue;\n        }\n        if (isLiveEmbedNode(node) && hasLiveEmbeds(editor)) {\n          if (!isWithinEmbedWrapper(node)) {\n            node.replace(createPreviewNode(editor, node));\n          }\n        } else {\n          if (!isWithinEmbedWrapper(node)) {\n            node.replace(createPlaceholderNode(editor, node));\n          }\n        }\n      }\n    };\n\n    const parseAndSanitize = (editor, context, html) => {\n      const getEditorOption = editor.options.get;\n      const sanitize = getEditorOption('xss_sanitization');\n      const validate = shouldFilterHtml(editor);\n      return Parser(editor.schema, {\n        sanitize,\n        validate\n      }).parse(html, { context });\n    };\n\n    const setup$1 = editor => {\n      editor.on('PreInit', () => {\n        const {schema, serializer, parser} = editor;\n        const boolAttrs = schema.getBoolAttrs();\n        each$1('webkitallowfullscreen mozallowfullscreen'.split(' '), name => {\n          boolAttrs[name] = {};\n        });\n        each({ embed: ['wmode'] }, (attrs, name) => {\n          const rule = schema.getElementRule(name);\n          if (rule) {\n            each$1(attrs, attr => {\n              rule.attributes[attr] = {};\n              rule.attributesOrder.push(attr);\n            });\n          }\n        });\n        parser.addNodeFilter('iframe,video,audio,object,embed', placeHolderConverter(editor));\n        serializer.addAttributeFilter('data-mce-object', (nodes, name) => {\n          var _a;\n          let i = nodes.length;\n          while (i--) {\n            const node = nodes[i];\n            if (!node.parent) {\n              continue;\n            }\n            const realElmName = node.attr(name);\n            const realElm = new global$2(realElmName, 1);\n            if (realElmName !== 'audio') {\n              const className = node.attr('class');\n              if (className && className.indexOf('mce-preview-object') !== -1 && node.firstChild) {\n                realElm.attr({\n                  width: node.firstChild.attr('width'),\n                  height: node.firstChild.attr('height')\n                });\n              } else {\n                realElm.attr({\n                  width: node.attr('width'),\n                  height: node.attr('height')\n                });\n              }\n            }\n            realElm.attr({ style: node.attr('style') });\n            const attribs = (_a = node.attributes) !== null && _a !== void 0 ? _a : [];\n            let ai = attribs.length;\n            while (ai--) {\n              const attrName = attribs[ai].name;\n              if (attrName.indexOf('data-mce-p-') === 0) {\n                realElm.attr(attrName.substr(11), attribs[ai].value);\n              }\n            }\n            const innerHtml = node.attr('data-mce-html');\n            if (innerHtml) {\n              const fragment = parseAndSanitize(editor, realElmName, unescape(innerHtml));\n              each$1(fragment.children(), child => realElm.append(child));\n            }\n            node.replace(realElm);\n          }\n        });\n      });\n      editor.on('SetContent', () => {\n        const dom = editor.dom;\n        each$1(dom.select('span.mce-preview-object'), elm => {\n          if (dom.select('span.mce-shim', elm).length === 0) {\n            dom.add(elm, 'span', { class: 'mce-shim' });\n          }\n        });\n      });\n    };\n\n    const setup = editor => {\n      editor.on('ResolveName', e => {\n        let name;\n        if (e.target.nodeType === 1 && (name = e.target.getAttribute('data-mce-object'))) {\n          e.name = name;\n        }\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mceMedia');\n      editor.ui.registry.addToggleButton('media', {\n        tooltip: 'Insert/edit media',\n        icon: 'embed',\n        onAction,\n        onSetup: buttonApi => {\n          const selection = editor.selection;\n          buttonApi.setActive(isMediaElement(selection.getNode()));\n          const unbindSelectorChanged = selection.selectorChangedWithUnbind('img[data-mce-object],span[data-mce-object],div[data-ephox-embed-iri]', buttonApi.setActive).unbind;\n          const unbindEditable = onSetupEditable(editor)(buttonApi);\n          return () => {\n            unbindSelectorChanged();\n            unbindEditable();\n          };\n        }\n      });\n      editor.ui.registry.addMenuItem('media', {\n        icon: 'embed',\n        text: 'Media...',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n    };\n\n    var Plugin = () => {\n      global$6.add('media', editor => {\n        register$2(editor);\n        register$1(editor);\n        register(editor);\n        setup(editor);\n        setup$1(editor);\n        setup$2(editor);\n        return get(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$6","hasProto","v","constructor","predicate","_a","typeOf","x","t","o","proto","isType","type","value","isString","isObject","isArray","isNullable","a","isNonNullable","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","nativePush","each$1","xs","f","i","len","flatten","r","Cell","initial","keys","hasOwnProperty","each","obj","props","k","get$1","key","has","option","name","editor","register$2","registerOption","getAudioTemplateCallback","getVideoTemplateCallback","getIframeTemplateCallback","hasLiveEmbeds","shouldFilterHtml","getUrlResolver","hasAltSource","hasPoster","hasDimensions","global$5","global$4","global$3","DOM$1","trimPx","getEphoxEmbedData","node","style","styles","htmlToData","html","schema","data","rootNode","guess","url","mimes","fileEnd","global$2","global$1","Parser","settings","DOM","addPx","updateEphoxEmbed","styleMap","sources","updateHtml","updateAll","numSources","sourceCount","parser","nodes","index","source","hasImage","img","urlPatterns","getProtocol","protocolMatches","getUrl","pattern","protocol","match","newUrl","matchPattern","patterns","getIframeHtml","iframeTemplateCallback","allowFullscreen","getFlashHtml","getAudioHtml","audioTemplateCallback","getVideoHtml","videoTemplateCallback","dataToHtml","dataIn","isMediaElement","element","setup$2","selectedNode","target","cache","embedPromise","handler","res","rej","wrappedResolve","response","defaultPromise","loadedData","getEmbedHtml","embedHandler","isCached","extractMeta","sourceInput","mainData","getValue","metaData","prop","getFromData","getFromMetaData","getNonEmptyValue","getFromValueFirst","child","getFromMetaFirst","getDimensions","dimensions","dims","unwrap","get","wrap","wrapped","handleError","error","errorMessage","getEditorData","snippet","isEmbedIframe","rect","addEmbedHtml","api","nuData","selectPlaceholder","beforeObjects","afterObjects","y","handleInsert","mediaDataType","shouldInsertAsNewIframe","prevData","newData","submitForm","showDialog","editorData","currentData","initialData","handleSource","serviceData","win","handleEmbed","dataFromEmbed","handleUpdate","dialogData","embed","mediaInput","sizeInput","generalTab","embedTab","advancedFormItems","advancedTab","tabs","body","detail","register$1","showDialog$1","checkRange","str","substr","start","startsWith","prefix","global","isLiveEmbedNode","getDimension","dimension","defaultValue","setDimensions","previewNode","useDefaults","defaultWidth","fallbackHeight","defaultHeight","appendNodeContent","nodeName","newNode","createPlaceholderNode","placeHolder","retainAttributesAndInnerHtml","createPreviewNode","previewWrapper","attrName","sanitizedHtml","shimNode","sourceNode","targetNode","attribs","ai","attrValue","serializer","tempNode","innerHtml","isPageEmbedWrapper","nodeClass","isWithinEmbedWrapper","placeHolderConverter","parseAndSanitize","context","getEditorOption","sanitize","validate","setup$1","boolAttrs","attrs","rule","attr","realElmName","realElm","className","fragment","dom","elm","setup","onSetupEditable","nodeChanged","register","onAction","buttonApi","selection","unbindSelectorChanged","unbindEditable","Plugin"],"mappings":";;;;;;;;;;;;;;;;;CAIC,WAAY;AAGT,MAAIA,IAAW,QAAQ,KAAK,MAAM,QAAQ,uBAAuB;AAEjE,QAAMC,IAAW,CAACC,GAAGC,GAAaC,MAAc;AAC9C,QAAIC;AACJ,WAAID,EAAUF,GAAGC,EAAY,SAAS,IAC7B,OAEEE,IAAKH,EAAE,iBAAiB,QAAQG,MAAO,SAAS,SAASA,EAAG,UAAUF,EAAY;AAAA,EAC7F,GAEIG,IAAS,CAAAC,MAAK;AAClB,UAAMC,IAAI,OAAOD;AACjB,WAAIA,MAAM,OACD,SACEC,MAAM,YAAY,MAAM,QAAQD,CAAC,IACnC,UACEC,MAAM,YAAYP,EAASM,GAAG,QAAQ,CAACE,GAAGC,MAAUA,EAAM,cAAcD,CAAC,CAAC,IAC5E,WAEAD;AAAA,EACT,GAEIG,IAAS,CAAAC,MAAQ,CAAAC,MAASP,EAAOO,CAAK,MAAMD,GAC5CE,IAAWH,EAAO,QAAQ,GAC1BI,IAAWJ,EAAO,QAAQ,GAC1BK,KAAUL,EAAO,OAAO,GACxBM,KAAa,CAAAC,MAAKA,KAAM,MACxBC,IAAgB,CAAAD,MAAK,CAACD,GAAWC,CAAC;AAAA,EAExC,MAAME,EAAS;AAAA,IACb,YAAYC,GAAKR,GAAO;AACtB,WAAK,MAAMQ,GACX,KAAK,QAAQR;AAAA,IAAA;AAAA,IAEf,OAAO,KAAKA,GAAO;AACjB,aAAO,IAAIO,EAAS,IAAMP,CAAK;AAAA,IAAA;AAAA,IAEjC,OAAO,OAAO;AACZ,aAAOO,EAAS;AAAA,IAAA;AAAA,IAElB,KAAKE,GAAQC,GAAQ;AACnB,aAAI,KAAK,MACAA,EAAO,KAAK,KAAK,IAEjBD,EAAA;AAAA,IACT;AAAA,IAEF,SAAS;AACP,aAAO,KAAK;AAAA,IAAA;AAAA,IAEd,SAAS;AACP,aAAO,CAAC,KAAK;AAAA,IAAA;AAAA,IAEf,IAAIE,GAAQ;AACV,aAAI,KAAK,MACAJ,EAAS,KAAKI,EAAO,KAAK,KAAK,CAAC,IAEhCJ,EAAS,KAAA;AAAA,IAClB;AAAA,IAEF,KAAKK,GAAQ;AACX,aAAI,KAAK,MACAA,EAAO,KAAK,KAAK,IAEjBL,EAAS,KAAA;AAAA,IAClB;AAAA,IAEF,OAAOhB,GAAW;AAChB,aAAO,KAAK,OAAOA,EAAU,KAAK,KAAK;AAAA,IAAA;AAAA,IAEzC,OAAOA,GAAW;AAChB,aAAO,CAAC,KAAK,OAAOA,EAAU,KAAK,KAAK;AAAA,IAAA;AAAA,IAE1C,OAAOA,GAAW;AAChB,aAAI,CAAC,KAAK,OAAOA,EAAU,KAAK,KAAK,IAC5B,OAEAgB,EAAS,KAAA;AAAA,IAClB;AAAA,IAEF,MAAMM,GAAa;AACjB,aAAO,KAAK,MAAM,KAAK,QAAQA;AAAA,IAAA;AAAA,IAEjC,GAAGA,GAAa;AACd,aAAO,KAAK,MAAM,OAAOA;AAAA,IAAA;AAAA,IAE3B,WAAWC,GAAO;AAChB,aAAO,KAAK,MAAM,KAAK,QAAQA,EAAA;AAAA,IAAM;AAAA,IAEvC,QAAQA,GAAO;AACb,aAAO,KAAK,MAAM,OAAOA,EAAA;AAAA,IAAM;AAAA,IAEjC,SAASC,GAAS;AAChB,UAAK,KAAK;AAGR,eAAO,KAAK;AAFZ,YAAM,IAAI,MAAMA,KAAmD,yBAAyB;AAAA,IAG9F;AAAA,IAEF,OAAO,KAAKf,GAAO;AACjB,aAAOM,EAAcN,CAAK,IAAIO,EAAS,KAAKP,CAAK,IAAIO,EAAS,KAAA;AAAA,IAAK;AAAA,IAErE,YAAY;AACV,aAAO,KAAK,MAAM,KAAK,QAAQ;AAAA,IAAA;AAAA,IAEjC,iBAAiB;AACf,aAAO,KAAK;AAAA,IAAA;AAAA,IAEd,KAAKS,GAAQ;AACX,MAAI,KAAK,OACPA,EAAO,KAAK,KAAK;AAAA,IACnB;AAAA,IAEF,UAAU;AACR,aAAO,KAAK,MAAM,CAAC,KAAK,KAAK,IAAI,CAAA;AAAA,IAAC;AAAA,IAEpC,WAAW;AACT,aAAO,KAAK,MAAM,QAAS,KAAK,KAAM,MAAM;AAAA,IAAA;AAAA,EAC9C;AAEF,EAAAT,EAAS,gBAAgB,IAAIA,EAAS,EAAK;AAE3C,QAAMU,KAAa,MAAM,UAAU,MAC7BC,IAAS,CAACC,GAAIC,MAAM;AACxB,aAASC,IAAI,GAAGC,IAAMH,EAAG,QAAQE,IAAIC,GAAKD,KAAK;AAC7C,YAAM3B,IAAIyB,EAAGE,CAAC;AACd,MAAAD,EAAE1B,GAAG2B,CAAC;AAAA,IAAA;AAAA,EACR,GAEIE,KAAU,CAAAJ,MAAM;AACpB,UAAMK,IAAI,CAAA;AACV,aAASH,IAAI,GAAGC,IAAMH,EAAG,QAAQE,IAAIC,GAAK,EAAED,GAAG;AAC7C,UAAI,CAAClB,GAAQgB,EAAGE,CAAC,CAAC;AAChB,cAAM,IAAI,MAAM,sBAAsBA,IAAI,+BAA+BF,CAAE;AAE7E,MAAAF,GAAW,MAAMO,GAAGL,EAAGE,CAAC,CAAC;AAAA,IAAA;AAE3B,WAAOG;AAAA,EAAA,GAGHC,KAAO,CAAAC,MAAW;AACtB,QAAI1B,IAAQ0B;AAOZ,WAAO;AAAA,MACL,KAPU,MACH1B;AAAA,MAOP,KALU,CAAAX,MAAK;AACf,QAAAW,IAAQX;AAAA,MAAA;AAAA,IAIR;AAAA,EACF,GAGIsC,KAAO,OAAO,MACdC,KAAiB,OAAO,gBACxBC,KAAO,CAACC,GAAKV,MAAM;AACvB,UAAMW,IAAQJ,GAAKG,CAAG;AACtB,aAASE,IAAI,GAAGV,IAAMS,EAAM,QAAQC,IAAIV,GAAKU,KAAK;AAChD,YAAMX,IAAIU,EAAMC,CAAC,GACXtC,IAAIoC,EAAIT,CAAC;AACf,MAAAD,EAAE1B,GAAG2B,CAAC;AAAA,IAAA;AAAA,EACR,GAEIY,IAAQ,CAACH,GAAKI,MACXC,EAAIL,GAAKI,CAAG,IAAI3B,EAAS,KAAKuB,EAAII,CAAG,CAAC,IAAI3B,EAAS,KAAA,GAEtD4B,IAAM,CAACL,GAAKI,MAAQN,GAAe,KAAKE,GAAKI,CAAG,GAEhDE,IAAS,CAAAC,MAAQ,CAAAC,MAAUA,EAAO,QAAQ,IAAID,CAAI,GAClDE,KAAa,CAAAD,MAAU;AAC3B,UAAME,IAAiBF,EAAO,QAAQ;AACtC,IAAAE,EAAe,2BAA2B,EAAE,WAAW,WAAA,CAAY,GACnEA,EAAe,2BAA2B,EAAE,WAAW,WAAA,CAAY,GACnEA,EAAe,4BAA4B,EAAE,WAAW,WAAA,CAAY,GACpEA,EAAe,qBAAqB;AAAA,MAClC,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV,GACDA,EAAe,qBAAqB;AAAA,MAClC,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV,GACDA,EAAe,sBAAsB,EAAE,WAAW,WAAA,CAAY,GAC9DA,EAAe,oBAAoB;AAAA,MACjC,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV,GACDA,EAAe,gBAAgB;AAAA,MAC7B,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV,GACDA,EAAe,oBAAoB;AAAA,MACjC,WAAW;AAAA,MACX,SAAS;AAAA,IAAA,CACV;AAAA,EAAA,GAEGC,KAA2BL,EAAO,yBAAyB,GAC3DM,KAA2BN,EAAO,yBAAyB,GAC3DO,KAA4BP,EAAO,0BAA0B,GAC7DQ,KAAgBR,EAAO,mBAAmB,GAC1CS,KAAmBT,EAAO,mBAAmB,GAC7CU,KAAiBV,EAAO,oBAAoB,GAC5CW,KAAeX,EAAO,kBAAkB,GACxCY,KAAYZ,EAAO,cAAc,GACjCa,IAAgBb,EAAO,kBAAkB;AAE/C,MAAIc,IAAW,QAAQ,KAAK,MAAM,QAAQ,oBAAoB,GAE1DC,IAAW,QAAQ,KAAK,MAAM,QAAQ,sBAAsB,GAE5DC,IAAW,QAAQ,KAAK,MAAM,QAAQ,wBAAwB;AAElE,QAAMC,KAAQF,EAAS,KACjBG,IAAS,CAAAtD,MAASA,EAAM,QAAQ,OAAO,EAAE,GACzCuD,KAAoB,CAAAC,MAAQ;AAChC,UAAMC,IAAQD,EAAK,KAAK,OAAO,GACzBE,IAASD,IAAQJ,GAAM,WAAWI,CAAK,IAAI,CAAA;AACjD,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQD,EAAK,KAAK,sBAAsB;AAAA,MACxC,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,OAAOvB,EAAMyB,GAAQ,WAAW,EAAE,IAAIJ,CAAM,EAAE,MAAM,EAAE;AAAA,MACtD,QAAQrB,EAAMyB,GAAQ,YAAY,EAAE,IAAIJ,CAAM,EAAE,MAAM,EAAE;AAAA,IAAA;AAAA,EAC1D,GAEIK,IAAa,CAACC,GAAMC,MAAW;AACnC,QAAIC,IAAO,CAAA;AAKX,UAAMC,IAJSX,EAAS;AAAA,MACtB,UAAU;AAAA,MACV,mBAAmB;AAAA,IAAA,GAClBS,CAAM,EACe,MAAMD,CAAI;AAClC,aAASJ,IAAOO,GAAUP,GAAMA,IAAOA,EAAK;AAC1C,UAAIA,EAAK,SAAS,GAAG;AACnB,cAAMnB,IAAOmB,EAAK;AAClB,YAAIA,EAAK,KAAK,sBAAsB,GAAG;AACrC,UAAAM,IAAOP,GAAkBC,CAAI;AAC7B;AAAA,QAAA;AAEA,UAAI,CAACM,EAAK,UAAUzB,MAAS,YAC3ByB,EAAK,SAASN,EAAK,KAAK,OAAO,KAE7BnB,MAAS,YAAYA,MAAS,YAAYA,MAAS,WAAWA,MAAS,WAAWA,MAAS,aACxFyB,EAAK,SACRA,EAAK,OAAOzB,IAEdyB,IAAOZ,EAAS,OAAOM,EAAK,WAAW,KAAKM,CAAI,IAE9CzB,MAAS,aACNyB,EAAK,SAEEA,EAAK,cACfA,EAAK,YAAYN,EAAK,KAAK,KAAK,KAFhCM,EAAK,SAASN,EAAK,KAAK,KAAK,IAK7BnB,MAAS,SAAS,CAACyB,EAAK,WAC1BA,EAAK,SAASN,EAAK,KAAK,KAAK;AAAA,MAEjC;AAGJ,WAAAM,EAAK,SAASA,EAAK,UAAUA,EAAK,OAAO,IACzCA,EAAK,YAAYA,EAAK,aAAa,IACnCA,EAAK,SAASA,EAAK,UAAU,IACtBA;AAAA,EAAA,GAGHE,IAAQ,CAAAC,MAAO;AACnB,QAAIzE;AACJ,UAAM0E,IAAQ;AAAA,MACZ,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,IAAA,GAEDC,KAAW3E,IAAKyE,EAAI,YAAA,EAAc,MAAM,GAAG,EAAE,IAAA,OAAW,QAAQzE,MAAO,SAASA,IAAK;AAC3F,WAAOyC,EAAMiC,GAAOC,CAAO,EAAE,MAAM,EAAE;AAAA,EAAA;AAGvC,MAAIC,IAAW,QAAQ,KAAK,MAAM,QAAQ,mBAAmB,GAEzDC,IAAW,QAAQ,KAAK,MAAM,QAAQ,yBAAyB;AAEnE,QAAMC,IAAS,CAACT,GAAQU,IAAW,CAAA,MAAOnB,EAAS;AAAA,IACjD,mBAAmB;AAAA,IACnB,UAAU;AAAA,IACV,4BAA4B;AAAA,IAC5B,GAAGmB;AAAA,EAAA,GACFV,CAAM,GAEHW,IAAMrB,EAAS,KACfsB,IAAQ,CAAAzE,MAAS,YAAY,KAAKA,CAAK,IAAIA,IAAQ,OAAOA,GAC1D0E,KAAmB,CAACZ,GAAMN,MAAS;AACvC,UAAMC,IAAQD,EAAK,KAAK,OAAO,GACzBmB,IAAWlB,IAAQe,EAAI,WAAWf,CAAK,IAAI,CAAA;AACjD,IAAInD,EAAcwD,EAAK,KAAK,MAC1Ba,EAAS,WAAW,IAAIF,EAAMX,EAAK,KAAK,IAEtCxD,EAAcwD,EAAK,MAAM,MAC3Ba,EAAS,YAAY,IAAIF,EAAMX,EAAK,MAAM,IAE5CN,EAAK,KAAK,SAASgB,EAAI,eAAeG,CAAQ,CAAC;AAAA,EAAA,GAE3CC,IAAU;AAAA,IACd;AAAA,IACA;AAAA,EAAA,GAEIC,IAAa,CAACjB,GAAME,GAAMgB,GAAWjB,MAAW;AACpD,QAAIkB,IAAa,GACbC,IAAc;AAClB,UAAMC,IAASX,EAAOT,CAAM;AAC5B,IAAAoB,EAAO,cAAc,UAAU,CAAAC,MAASH,IAAaG,EAAM,MAAM;AACjE,UAAMnB,IAAWkB,EAAO,MAAMrB,CAAI;AAClC,aAASJ,IAAOO,GAAUP,GAAMA,IAAOA,EAAK;AAC1C,UAAIA,EAAK,SAAS,GAAG;AACnB,cAAMnB,IAAOmB,EAAK;AAClB,YAAIA,EAAK,KAAK,sBAAsB,GAAG;AACrC,UAAAkB,GAAiBZ,GAAMN,CAAI;AAC3B;AAAA,QAAA,OACK;AACL,kBAAQnB,GAAA;AAAA,YACR,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH,cAAIyB,EAAK,WAAW,UAAaA,EAAK,UAAU,WAC9CN,EAAK,KAAK,SAASM,EAAK,KAAK,GAC7BN,EAAK,KAAK,UAAUM,EAAK,MAAM;AAEjC;AAAA,UAAA;AAEF,cAAIgB;AACF,oBAAQzC,GAAA;AAAA,cACR,KAAK;AACH,gBAAAmB,EAAK,KAAK,UAAUM,EAAK,MAAM,GAC/BN,EAAK,KAAK,OAAO,IAAI;AACrB,yBAAS2B,IAAQJ,GAAYI,IAAQ,GAAGA;AACtC,sBAAIrB,EAAKc,EAAQO,CAAK,CAAC,GAAG;AACxB,0BAAMC,IAAS,IAAIhB,EAAS,UAAU,CAAC;AACvC,oBAAAgB,EAAO,KAAK,OAAOtB,EAAKc,EAAQO,CAAK,CAAC,CAAC,GACvCC,EAAO,KAAK,QAAQtB,EAAKc,EAAQO,CAAK,IAAI,MAAM,KAAK,IAAI,GACzD3B,EAAK,OAAO4B,CAAM;AAAA,kBAAA;AAGtB;AAAA,cACF,KAAK;AACH,gBAAA5B,EAAK,KAAK,OAAOM,EAAK,MAAM;AAC5B;AAAA,cACF,KAAK;AACH,sBAAMuB,IAAW7B,EAAK,OAAO,KAAK,EAAE,SAAS;AAC7C,oBAAIM,EAAK,UAAU,CAACuB,GAAU;AAC5B,kBAAA7B,EAAK,KAAK,OAAOM,EAAK,MAAM;AAC5B,wBAAMwB,IAAM,IAAIlB,EAAS,OAAO,CAAC;AACjC,kBAAAkB,EAAI,KAAK,OAAOxB,EAAK,MAAM,GAC3BwB,EAAI,KAAK,SAASxB,EAAK,KAAK,GAC5BwB,EAAI,KAAK,UAAUxB,EAAK,MAAM,GAC9BN,EAAK,OAAO8B,CAAG;AAAA,gBAAA;AAEjB;AAAA,cACF,KAAK;AACH,oBAAIN,IAAc,MAChBxB,EAAK,KAAK,OAAOM,EAAKc,EAAQI,CAAW,CAAC,CAAC,GAC3CxB,EAAK,KAAK,QAAQM,EAAKc,EAAQI,CAAW,IAAI,MAAM,KAAK,IAAI,GACzD,CAAClB,EAAKc,EAAQI,CAAW,CAAC,IAAG;AAC/B,kBAAAxB,EAAK,OAAA;AACL;AAAA,gBAAA;AAGJ,gBAAAwB;AACA;AAAA,cACF,KAAK;AACH,gBAAKlB,EAAK,UACRN,EAAK,OAAA;AAEP;AAAA,YAAA;AAAA,QAEJ;AAAA,MACF;AAGJ,WAAOa,EAAS,CAAA,GAAIR,CAAM,EAAE,UAAUE,CAAQ;AAAA,EAAA,GAG1CwB,KAAc;AAAA,IAClB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,IAEnB;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,KAAK;AAAA,MACL,iBAAiB;AAAA,IAAA;AAAA,EACnB,GAEIC,KAAc,CAAAvB,MAAO;AACzB,UAAMwB,IAAkBxB,EAAI,MAAM,4BAA4B;AAC9D,WAAIwB,KAAmBA,EAAgB,SAAS,IACvCA,EAAgB,CAAC,MAAM,SAAS,aAAaA,EAAgB,CAAC,IAE9D;AAAA,EACT,GAEIC,KAAS,CAACC,GAAS1B,MAAQ;AAC/B,UAAM2B,IAAWJ,GAAYvB,CAAG,GAC1B4B,IAAQF,EAAQ,MAAM,KAAK1B,CAAG;AACpC,QAAI6B,IAASF,IAAWD,EAAQ;AAChC,QAAIrF,EAAcuF,CAAK;AACrB,eAASxE,IAAI,GAAGA,IAAIwE,EAAM,QAAQxE;AAChC,QAAAyE,IAASA,EAAO,QAAQ,MAAMzE,GAAG,MAAMwE,EAAMxE,CAAC,IAAIwE,EAAMxE,CAAC,IAAI,EAAE;AAGnE,WAAOyE,EAAO,QAAQ,OAAO,EAAE;AAAA,EAAA,GAE3BC,IAAe,CAAA9B,MAAO;AAC1B,UAAM+B,IAAWT,GAAY,OAAO,CAAAI,MAAWA,EAAQ,MAAM,KAAK1B,CAAG,CAAC;AACtE,WAAI+B,EAAS,SAAS,IACb9C,EAAS,OAAO,IAAI8C,EAAS,CAAC,GAAG,EAAE,KAAKN,GAAOM,EAAS,CAAC,GAAG/B,CAAG,GAAG,IAElE;AAAA,EACT,GAGIgC,KAAgB,CAACnC,GAAMoC,MAA2B;AACtD,QAAIA;AACF,aAAOA,EAAuBpC,CAAI;AAC7B;AACL,YAAMqC,IAAkBrC,EAAK,kBAAkB,yBAAyB;AACxE,aAAO,kBAAkBA,EAAK,SAAS,cAAcA,EAAK,QAAQ,eAAeA,EAAK,SAAS,MAAMqC,IAAkB;AAAA,IAAA;AAAA,EACzH,GAEIC,KAAe,CAAAtC,MAAQ;AAC3B,QAAIF,IAAO,mBAAmBE,EAAK,SAAS,cAAcA,EAAK,QAAQ,eAAeA,EAAK,SAAS;AACpG,WAAIA,EAAK,WACPF,KAAQ,eAAeE,EAAK,SAAS,cAAcA,EAAK,QAAQ,eAAeA,EAAK,SAAS,SAE/FF,KAAQ,aACDA;AAAA,EAAA,GAEHyC,KAAe,CAACvC,GAAMwC,MACtBA,IACKA,EAAsBxC,CAAI,IAE1B,qCAAqCA,EAAK,SAAS,QAAQA,EAAK,YAAY;AAAA,iBAAoBA,EAAK,YAAY,OAAOA,EAAK,gBAAgB,YAAYA,EAAK,gBAAgB,MAAM,MAAM;AAAA,IAAU,MAAM,YAG/MyC,KAAe,CAACzC,GAAM0C,MACtBA,IACKA,EAAsB1C,CAAI,IAE1B,mBAAmBA,EAAK,QAAQ,eAAeA,EAAK,SAAS,OAAOA,EAAK,SAAS,cAAcA,EAAK,SAAS,MAAM,MAAM;AAAA,iBAA8CA,EAAK,SAAS,OAAOA,EAAK,aAAa,YAAYA,EAAK,aAAa,MAAM,MAAM;AAAA,KAAWA,EAAK,YAAY,kBAAkBA,EAAK,YAAY,OAAOA,EAAK,gBAAgB,YAAYA,EAAK,gBAAgB,MAAM,MAAM;AAAA,IAAU,MAAM,YAGtZ2C,IAAa,CAACnE,GAAQoE,MAAW;AACrC,QAAIlH;AACJ,UAAMsE,IAAOZ,EAAS,OAAO,CAAA,GAAIwD,CAAM;AACvC,QAAI,CAAC5C,EAAK,WACRZ,EAAS,OAAOY,GAAMH,GAAYnE,IAAKsE,EAAK,WAAW,QAAQtE,MAAO,SAASA,IAAK,IAAI8C,EAAO,MAAM,CAAC,GAClG,CAACwB,EAAK;AACR,aAAO;AAGX,IAAKA,EAAK,cACRA,EAAK,YAAY,KAEdA,EAAK,WACRA,EAAK,SAAS,KAEhBA,EAAK,SAASxB,EAAO,WAAWwB,EAAK,QAAQ,QAAQ,GACrDA,EAAK,YAAYxB,EAAO,WAAWwB,EAAK,WAAW,QAAQ,GAC3DA,EAAK,aAAaE,EAAMF,EAAK,MAAM,GACnCA,EAAK,gBAAgBE,EAAMF,EAAK,SAAS,GACzCA,EAAK,SAASxB,EAAO,WAAWwB,EAAK,QAAQ,QAAQ;AACrD,UAAM6B,IAAUI,EAAajC,EAAK,MAAM;AAQxC,QAPI6B,MACF7B,EAAK,SAAS6B,EAAQ,KACtB7B,EAAK,OAAO6B,EAAQ,MACpB7B,EAAK,kBAAkB6B,EAAQ,iBAC/B7B,EAAK,QAAQA,EAAK,SAAS,OAAO6B,EAAQ,CAAC,GAC3C7B,EAAK,SAASA,EAAK,UAAU,OAAO6B,EAAQ,CAAC,IAE3C7B,EAAK;AACP,aAAOe,EAAWf,EAAK,OAAOA,GAAM,IAAMxB,EAAO,MAAM;AAClD;AACL,YAAMgE,IAAwB7D,GAAyBH,CAAM,GACvDkE,IAAwB9D,GAAyBJ,CAAM,GACvD4D,IAAyBvD,GAA0BL,CAAM;AAM/D,aALAwB,EAAK,QAAQA,EAAK,SAAS,OAC3BA,EAAK,SAASA,EAAK,UAAU,OAC7BZ,EAAS,KAAKY,GAAM,CAAC9D,GAAOkC,MAAQ;AAClC,QAAA4B,EAAK5B,CAAG,IAAII,EAAO,IAAI,OAAO,KAAKtC,CAAK;AAAA,MAAA,CACzC,GACG8D,EAAK,SAAS,WACTmC,GAAcnC,GAAMoC,CAAsB,IACxCpC,EAAK,eAAe,kCACtBsC,GAAatC,CAAI,IACfA,EAAK,WAAW,QAAQ,OAAO,MAAM,KACvCuC,GAAavC,GAAMwC,CAAqB,IAExCC,GAAazC,GAAM0C,CAAqB;AAAA,IACjD;AAAA,EACF,GAGIG,IAAiB,OAAWC,EAAQ,aAAa,iBAAiB,KAAKA,EAAQ,aAAa,sBAAsB,GAClHC,KAAU,CAAAvE,MAAU;AACxB,IAAAA,EAAO,GAAG,wBAAwB,MAAM;AACtC,YAAMwE,IAAexE,EAAO,UAAU,QAAA;AACtC,MAAIwE,KAAgBxE,EAAO,IAAI,SAASwE,GAAc,oBAAoB,KACpExE,EAAO,IAAI,UAAUwE,GAAc,mBAAmB,KACxDA,EAAa,aAAa,qBAAqB,GAAG;AAAA,IAEtD,CACD,GACDxE,EAAO,GAAG,iBAAiB,CAAA,MAAK;AAC9B,YAAMyE,IAAS,EAAE;AACjB,UAAIA,EAAO,aAAa,iBAAiB,GAAG;AAC1C,YAAInD,IAAOmD,EAAO,aAAa,eAAe;AAC9C,QAAInD,MACFA,IAAO,SAASA,CAAI,GACpBmD,EAAO,aAAa,iBAAiB,OAAOlC,EAAWjB,GAAM;AAAA,UAC3D,OAAO,OAAO,EAAE,KAAK;AAAA,UACrB,QAAQ,OAAO,EAAE,MAAM;AAAA,QAAA,GACtB,IAAOtB,EAAO,MAAM,CAAC,CAAC;AAAA,MAC3B;AAAA,IACF,CACD;AAAA,EAAA,GAGG0E,IAAQ,CAAA,GACRC,KAAe,CAACnD,GAAM2C,GAAYS,MAC/B,IAAI,QAAQ,CAACC,GAAKC,MAAQ;AAC/B,UAAMC,IAAiB,CAAAC,OACjBA,EAAS,SACXN,EAAMlD,EAAK,MAAM,IAAIwD,IAEhBH,EAAI;AAAA,MACT,KAAKrD,EAAK;AAAA,MACV,MAAMwD,EAAS,OAAOA,EAAS,OAAOb,EAAW3C,CAAI;AAAA,IAAA,CACtD;AAEH,IAAIkD,EAAMlD,EAAK,MAAM,IACnBuD,EAAeL,EAAMlD,EAAK,MAAM,CAAC,IAEjCoD,EAAQ,EAAE,KAAKpD,EAAK,OAAA,GAAUuD,GAAgBD,CAAG;AAAA,EACnD,CACD,GAEGG,KAAiB,CAACzD,GAAM2C,MAAe,QAAQ,QAAQ;AAAA,IAC3D,MAAMA,EAAW3C,CAAI;AAAA,IACrB,KAAKA,EAAK;AAAA,EAAA,CACX,GACK0D,IAAa,CAAAlF,MAAU,CAAAwB,MAAQ2C,EAAWnE,GAAQwB,CAAI,GACtD2D,KAAe,CAACnF,GAAQwB,MAAS;AACrC,UAAM4D,IAAe5E,GAAeR,CAAM;AAC1C,WAAOoF,IAAeT,GAAanD,GAAM0D,EAAWlF,CAAM,GAAGoF,CAAY,IAAIH,GAAezD,GAAM0D,EAAWlF,CAAM,CAAC;AAAA,EAAA,GAEhHqF,KAAW,CAAA1D,MAAO9B,EAAI6E,GAAO/C,CAAG,GAEhC2D,KAAc,CAACC,GAAa/D,MAAS7B,EAAM6B,GAAM+D,CAAW,EAAE,KAAK,CAAAC,MAAY7F,EAAM6F,GAAU,MAAM,CAAC,GACtGC,KAAW,CAACjE,GAAMkE,GAAUH,MAAgB,CAAAI,MAAQ;AACxD,UAAMC,IAAc,MAAMjG,EAAM6B,GAAMmE,CAAI,GACpCE,IAAkB,MAAMlG,EAAM+F,GAAUC,CAAI,GAC5CG,IAAmB,CAAA,MAAKnG,EAAM,GAAG,OAAO,EAAE,KAAK,CAAA5C,MAAKA,EAAE,SAAS,IAAIkB,EAAS,KAAKlB,CAAC,IAAIkB,EAAS,MAAM,GACrG8H,IAAoB,MAAMH,EAAA,EAAc,KAAK,CAAAI,MAASpI,EAASoI,CAAK,IAAIF,EAAiBE,CAAK,EAAE,QAAQH,CAAe,IAAIA,IAAkB,QAAQ,MAAM5H,EAAS,KAAK+H,CAAK,CAAC,CAAC,GAChLC,IAAmB,MAAMJ,EAAA,EAAkB,QAAQ,MAAMD,EAAA,EAAc,KAAK,CAAAI,MAASpI,EAASoI,CAAK,IAAIF,EAAiBE,CAAK,IAAI/H,EAAS,KAAK+H,CAAK,CAAC,CAAC;AAC5J,WAAO,EAAE,CAACL,CAAI,IAAIA,MAASJ,IAAcQ,EAAA,IAAsBE,EAAA,GAAoB,MAAM,EAAE,EAAA;AAAA,EAAE,GAEzFC,KAAgB,CAAC1E,GAAMkE,MAAa;AACxC,UAAMS,IAAa,CAAA;AACnB,WAAAxG,EAAM6B,GAAM,YAAY,EAAE,KAAK,CAAA4E,MAAQ;AACrC,MAAAxH,EAAO;AAAA,QACL;AAAA,QACA;AAAA,MAAA,GACC,CAAA+G,MAAQ;AACT,QAAAhG,EAAM+F,GAAUC,CAAI,EAAE,QAAQ,MAAMhG,EAAMyG,GAAMT,CAAI,CAAC,EAAE,KAAK,CAAAjI,MAASyI,EAAWR,CAAI,IAAIjI,CAAK;AAAA,MAAA,CAC9F;AAAA,IAAA,CACF,GACMyI;AAAA,EAAA,GAEHE,IAAS,CAAC7E,GAAM+D,MAAgB;AACpC,UAAMG,IAAWH,KAAeA,MAAgB,eAAeD,GAAYC,GAAa/D,CAAI,EAAE,MAAM,CAAA,CAAE,IAAI,CAAA,GACpG8E,IAAMb,GAASjE,GAAMkE,GAAUH,CAAW;AAChD,WAAO;AAAA,MACL,GAAGe,EAAI,QAAQ;AAAA,MACf,GAAGA,EAAI,WAAW;AAAA,MAClB,GAAGA,EAAI,QAAQ;AAAA,MACf,GAAGA,EAAI,OAAO;AAAA,MACd,GAAGJ,GAAc1E,GAAMkE,CAAQ;AAAA,IAAA;AAAA,EACjC,GAEIa,IAAO,CAAA/E,MAAQ;AACnB,UAAMgF,IAAU;AAAA,MACd,GAAGhF;AAAA,MACH,QAAQ,EAAE,OAAO7B,EAAM6B,GAAM,QAAQ,EAAE,MAAM,EAAE,EAAA;AAAA,MAC/C,WAAW,EAAE,OAAO7B,EAAM6B,GAAM,WAAW,EAAE,MAAM,EAAE,EAAA;AAAA,MACrD,QAAQ,EAAE,OAAO7B,EAAM6B,GAAM,QAAQ,EAAE,MAAM,EAAE,EAAA;AAAA,IAAE;AAEnD,WAAA5C,EAAO;AAAA,MACL;AAAA,MACA;AAAA,IAAA,GACC,CAAA+G,MAAQ;AACT,MAAAhG,EAAM6B,GAAMmE,CAAI,EAAE,KAAK,CAAAjI,MAAS;AAC9B,cAAMyI,IAAaK,EAAQ,cAAc,CAAA;AACzC,QAAAL,EAAWR,CAAI,IAAIjI,GACnB8I,EAAQ,aAAaL;AAAA,MAAA,CACtB;AAAA,IAAA,CACF,GACMK;AAAA,EAAA,GAEHC,KAAc,OAAU,CAAAC,MAAS;AACrC,UAAMC,IAAeD,KAASA,EAAM,MAAM,gCAAgCA,EAAM,MAAM;AACtF,IAAA1G,EAAO,oBAAoB,KAAK;AAAA,MAC9B,MAAM;AAAA,MACN,MAAM2G;AAAA,IAAA,CACP;AAAA,EAAA,GAEGC,KAAgB,CAAA5G,MAAU;AAC9B,UAAMsE,IAAUtE,EAAO,UAAU,QAAA,GAC3B6G,IAAUxC,EAAeC,CAAO,IAAItE,EAAO,WAAW,UAAUsE,GAAS,EAAE,WAAW,GAAA,CAAM,IAAI,IAChG9C,IAAOH,EAAWwF,GAAS7G,EAAO,MAAM,GAYxCmG,KAXyB,MAAM;AACnC,UAAIW,GAActF,EAAK,QAAQA,EAAK,IAAI,GAAG;AACzC,cAAMuF,IAAO/G,EAAO,IAAI,QAAQsE,CAAO;AACvC,eAAO;AAAA,UACL,OAAOyC,EAAK,EAAE,WAAW,QAAQ,OAAO,EAAE;AAAA,UAC1C,QAAQA,EAAK,EAAE,WAAW,QAAQ,OAAO,EAAE;AAAA,QAAA;AAAA,MAC7C;AAEA,eAAO,CAAA;AAAA,IACT,GAEiB;AACnB,WAAO;AAAA,MACL,OAAOF;AAAA,MACP,GAAGrF;AAAA,MACH,GAAG2E;AAAA,IAAA;AAAA,EACL,GAEIa,KAAe,CAACC,GAAKjH,MAAW,CAAAgF,MAAY;AAChD,QAAIrH,EAASqH,EAAS,GAAG,KAAKA,EAAS,IAAI,KAAA,EAAO,SAAS,GAAG;AAC5D,YAAM1D,IAAO0D,EAAS,MAEhBkC,IAAS;AAAA,QACb,GAFkB7F,EAAWC,GAAMtB,EAAO,MAAM;AAAA,QAGhD,QAAQgF,EAAS;AAAA,QACjB,OAAO1D;AAAA,MAAA;AAET,MAAA2F,EAAI,QAAQV,EAAKW,CAAM,CAAC;AAAA,IAAA;AAAA,EAC1B,GAEIC,KAAoB,CAACnH,GAAQoH,MAAkB;AACnD,UAAMC,IAAerH,EAAO,IAAI,OAAO,oBAAoB;AAC3D,aAASjB,IAAI,GAAGA,IAAIqI,EAAc,QAAQrI;AACxC,eAASuI,IAAID,EAAa,SAAS,GAAGC,KAAK,GAAGA;AAC5C,QAAIF,EAAcrI,CAAC,MAAMsI,EAAaC,CAAC,KACrCD,EAAa,OAAOC,GAAG,CAAC;AAI9B,IAAAtH,EAAO,UAAU,OAAOqH,EAAa,CAAC,CAAC;AAAA,EAAA,GAEnCE,KAAe,CAACvH,GAAQsB,MAAS;AACrC,UAAM8F,IAAgBpH,EAAO,IAAI,OAAO,oBAAoB;AAC5D,IAAAA,EAAO,cAAcsB,CAAI,GACzB6F,GAAkBnH,GAAQoH,CAAa,GACvCpH,EAAO,YAAA;AAAA,EAAY,GAEf8G,KAAgB,CAACnF,GAAK6F,MAAkBxJ,EAAcwJ,CAAa,KAAKA,MAAkB,qBAAqBxJ,EAAcyF,EAAa9B,CAAG,CAAC,GAC9I8F,KAA0B,CAACC,GAAUC,OACZ,CAACD,GAAUC,MAAYD,EAAS,UAAUC,EAAQ,SAASD,EAAS,WAAWC,EAAQ,QACxFD,GAAUC,CAAO,KAAKb,GAAca,EAAQ,QAAQD,EAAS,IAAI,GAEzFE,KAAa,CAACF,GAAUC,GAAS3H,MAAW;AAChD,QAAI9C;AACJ,IAAAyK,EAAQ,QAAQF,GAAwBC,GAAUC,CAAO,KAAKhH,EAAcX,CAAM,IAAImE,EAAWnE,GAAQ;AAAA,MACvG,GAAG2H;AAAA,MACH,OAAO;AAAA,IAAA,CACR,IAAIpF,GAAYrF,IAAKyK,EAAQ,WAAW,QAAQzK,MAAO,SAASA,IAAK,IAAIyK,GAAS,IAAO3H,EAAO,MAAM,GACnG2H,EAAQ,UAAUD,EAAS,WAAWC,EAAQ,UAAUtC,GAASsC,EAAQ,MAAM,KACjFJ,GAAavH,GAAQ2H,EAAQ,KAAK,IAElCxC,GAAanF,GAAQ2H,CAAO,EAAE,KAAK,CAAA3C,MAAY;AAC7C,MAAAuC,GAAavH,GAAQgF,EAAS,IAAI;AAAA,IAAA,CACnC,EAAE,MAAMyB,GAAYzG,CAAM,CAAC;AAAA,EAC9B,GAEI6H,KAAa,CAAA7H,MAAU;AAC3B,UAAM8H,IAAalB,GAAc5G,CAAM,GACjC+H,IAAc5I,GAAK2I,CAAU,GAC7BE,IAAczB,EAAKuB,CAAU,GAC7BG,IAAe,CAACP,GAAUT,MAAQ;AACtC,YAAMiB,IAAc7B,EAAOY,EAAI,QAAA,GAAW,QAAQ;AAClD,MAAIS,EAAS,WAAWQ,EAAY,WAClClB,GAAamB,GAAKnI,CAAM,EAAE;AAAA,QACxB,KAAKkI,EAAY;AAAA,QACjB,MAAM;AAAA,MAAA,CACP,GACD/C,GAAanF,GAAQkI,CAAW,EAAE,KAAKlB,GAAamB,GAAKnI,CAAM,CAAC,EAAE,MAAMyG,GAAYzG,CAAM,CAAC;AAAA,IAC7F,GAEIoI,IAAc,CAAAnB,MAAO;AACzB,UAAI/J;AACJ,YAAMsE,IAAO6E,EAAOY,EAAI,QAAA,CAAS,GAC3BoB,IAAgBhH,GAAYnE,IAAKsE,EAAK,WAAW,QAAQtE,MAAO,SAASA,IAAK,IAAI8C,EAAO,MAAM;AACrG,MAAAiH,EAAI,QAAQV,EAAK8B,CAAa,CAAC;AAAA,IAAA,GAE3BC,IAAe,CAACrB,GAAK1B,GAAamC,MAAa;AACnD,YAAMa,IAAalC,EAAOY,EAAI,QAAA,GAAW1B,CAAW,GAC9C/D,KAAOiG,GAAwBC,GAAUa,CAAU,KAAK5H,EAAcX,CAAM,IAAI;AAAA,QACpF,GAAGuI;AAAA,QACH,OAAO;AAAA,MAAA,IACLA,GACEC,KAAQrE,EAAWnE,GAAQwB,EAAI;AACrC,MAAAyF,EAAI,QAAQV,EAAK;AAAA,QACf,GAAG/E;AAAA,QACH,OAAAgH;AAAA,MAAA,CACD,CAAC;AAAA,IAAA,GAEEC,IAAa,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,MACP,aAAa;AAAA,IAAA,CACd,GACGC,IAAa/H,EAAcX,CAAM,IAAS,CAAC;AAAA,MAC7C,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,WAAW;AAAA,IAAA,CACZ,IALwC,CAAA,GAMrC2I,IAAa;AAAA,MACjB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,OAAO1J,GAAQ;AAAA,QACbwJ;AAAA,QACAC;AAAA,MAAA,CACD;AAAA,IAAA,GAOGE,IAAW;AAAA,MACf,OAAO;AAAA,MACP,OAAO,CAPa;AAAA,QACpB,MAAM;AAAA,QACN,MAAM;AAAA,QACN,OAAO;AAAA,MAAA,CAIc;AAAA,IAAA,GAEjBC,IAAoB,CAAA;AAC1B,IAAIpI,GAAaT,CAAM,KACrB6I,EAAkB,KAAK;AAAA,MACrB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,IAAA,CACR,GAECnI,GAAUV,CAAM,KAClB6I,EAAkB,KAAK;AAAA,MACrB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,MACV,OAAO;AAAA,IAAA,CACR;AAEH,UAAMC,IAAc;AAAA,MAClB,OAAO;AAAA,MACP,MAAM;AAAA,MACN,OAAOD;AAAA,IAAA,GAEHE,IAAO;AAAA,MACXJ;AAAA,MACAC;AAAA,IAAA;AAEF,IAAIC,EAAkB,SAAS,KAC7BE,EAAK,KAAKD,CAAW;AAEvB,UAAME,IAAO;AAAA,MACX,MAAM;AAAA,MACN,MAAAD;AAAA,IAAA,GAEIZ,IAAMnI,EAAO,cAAc,KAAK;AAAA,MACpC,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAAgJ;AAAA,MACA,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,QAAA;AAAA,QAER;AAAA,UACE,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,QAAA;AAAA,MACX;AAAA,MAEF,UAAU,CAAA/B,MAAO;AACf,cAAMiB,IAAc7B,EAAOY,EAAI,QAAA,CAAS;AACxC,QAAAW,GAAWG,EAAY,OAAOG,GAAalI,CAAM,GACjDiH,EAAI,MAAA;AAAA,MAAM;AAAA,MAEZ,UAAU,CAACA,GAAKgC,MAAW;AACzB,gBAAQA,EAAO,MAAA;AAAA,UACf,KAAK;AACH,YAAAhB,EAAaF,EAAY,IAAA,GAAOd,CAAG;AACnC;AAAA,UACF,KAAK;AACH,YAAAmB,EAAYnB,CAAG;AACf;AAAA,UACF,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,YAAAqB,EAAarB,GAAKgC,EAAO,MAAMlB,EAAY,KAAK;AAChD;AAAA,QAAA;AAEF,QAAAA,EAAY,IAAI1B,EAAOY,EAAI,QAAA,CAAS,CAAC;AAAA,MAAA;AAAA,MAEvC,aAAAe;AAAA,IAAA,CACD;AAAA,EAAA,GAGG1B,KAAM,CAAAtG,OAIH,EAAE,YAHY,MAAM;AACzB,IAAA6H,GAAW7H,CAAM;AAAA,EAAA,EAEE,IAGjBkJ,KAAa,CAAAlJ,MAAU;AAC3B,UAAMmJ,IAAe,MAAM;AACzB,MAAAtB,GAAW7H,CAAM;AAAA,IAAA;AAEnB,IAAAA,EAAO,WAAW,YAAYmJ,CAAY;AAAA,EAAA,GAGtCC,KAAa,CAACC,GAAKC,GAAQC,MAA2BF,EAAI,UAAUC,EAAO,UAAUD,EAAI,OAAOE,GAAOA,IAAQD,EAAO,MAAM,MAAMA,GAClIE,KAAa,CAACH,GAAKI,MAChBL,GAAWC,GAAKI,GAAQ,CAAC;AAGlC,MAAIC,KAAS,QAAQ,KAAK,MAAM,QAAQ,aAAa;AAErD,QAAMC,KAAkB,CAAAzI,MAAQ;AAC9B,UAAMnB,IAAOmB,EAAK;AAClB,WAAOnB,MAAS,YAAYA,MAAS,WAAWA,MAAS;AAAA,EAAA,GAErD6J,KAAe,CAAC1I,GAAME,GAAQyI,GAAWC,IAAe,SAAS;AACrE,UAAMpM,IAAQwD,EAAK,KAAK2I,CAAS;AACjC,WAAI7L,EAAcN,CAAK,IACdA,IACGmC,EAAIuB,GAAQyI,CAAS,IAGxB,OAFAC;AAAA,EAGT,GAEIC,KAAgB,CAAC7I,GAAM8I,GAAa5I,MAAW;AACnD,UAAM6I,IAAcD,EAAY,SAAS,SAAS9I,EAAK,SAAS,SAC1DgJ,IAAeD,IAAc,QAAQ,MACrCE,IAAiBjJ,EAAK,SAAS,UAAU,OAAO,OAChDkJ,IAAgBH,IAAcE,IAAiB;AACrD,IAAAH,EAAY,KAAK;AAAA,MACf,OAAOJ,GAAa1I,GAAME,GAAQ,SAAS8I,CAAY;AAAA,MACvD,QAAQN,GAAa1I,GAAME,GAAQ,UAAUgJ,CAAa;AAAA,IAAA,CAC3D;AAAA,EAAA,GAEGC,KAAoB,CAACrK,GAAQsK,GAAUN,GAAa1I,MAAS;AACjE,UAAMiJ,IAAUvI,EAAOhC,EAAO,MAAM,EAAE,MAAMsB,GAAM,EAAE,SAASgJ,GAAU;AACvE,WAAOC,EAAQ;AACb,MAAAP,EAAY,OAAOO,EAAQ,UAAU;AAAA,EACvC,GAEIC,KAAwB,CAACxK,GAAQkB,MAAS;AAC9C,UAAMnB,IAAOmB,EAAK,MACZuJ,IAAc,IAAI3I,EAAS,OAAO,CAAC;AACzC,WAAA4I,GAA6B1K,GAAQkB,GAAMuJ,CAAW,GACtDV,GAAc7I,GAAMuJ,GAAa,EAAE,GACnCA,EAAY,KAAK;AAAA,MACf,OAASvJ,EAAK,KAAK,OAAO;AAAA,MAC1B,KAAOwI,GAAO;AAAA,MACd,mBAAmB3J;AAAA,MACnB,OAAS,2BAA2BA;AAAA,IAAA,CACrC,GACM0K;AAAA,EAAA,GAEHE,KAAoB,CAAC3K,GAAQkB,MAAS;AAC1C,QAAIhE;AACJ,UAAM6C,IAAOmB,EAAK,MACZ0J,IAAiB,IAAI9I,EAAS,QAAQ,CAAC;AAC7C,IAAA8I,EAAe,KAAK;AAAA,MAClB,iBAAmB;AAAA,MACnB,OAAS1J,EAAK,KAAK,OAAO;AAAA,MAC1B,mBAAmBnB;AAAA,MACnB,OAAS,mCAAmCA;AAAA,IAAA,CAC7C,GACD2K,GAA6B1K,GAAQkB,GAAM0J,CAAc;AACzD,UAAMxJ,IAASpB,EAAO,IAAI,YAAY9C,IAAKgE,EAAK,KAAK,OAAO,OAAO,QAAQhE,MAAO,SAASA,IAAK,EAAE,GAC5F8M,IAAc,IAAIlI,EAAS/B,GAAM,CAAC;AAOxC,QANAgK,GAAc7I,GAAM8I,GAAa5I,CAAM,GACvC4I,EAAY,KAAK;AAAA,MACf,KAAK9I,EAAK,KAAK,KAAK;AAAA,MACpB,OAAOA,EAAK,KAAK,OAAO;AAAA,MACxB,OAAOA,EAAK,KAAK,OAAO;AAAA,IAAA,CACzB,GACGnB,MAAS;AACX,MAAAiK,EAAY,KAAK;AAAA,QACf,iBAAiB9I,EAAK,KAAK,iBAAiB;AAAA,QAC5C,aAAa;AAAA,QACb,SAASA,EAAK,KAAK,SAAS;AAAA,MAAA,CAC7B;AAAA,SACI;AAUL,MAAAtC,EATc;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,GAEY,CAAAiM,MAAY;AACxB,QAAAb,EAAY,KAAKa,GAAU3J,EAAK,KAAK2J,CAAQ,CAAC;AAAA,MAAA,CAC/C;AACD,YAAMC,IAAgBF,EAAe,KAAK,eAAe;AACzD,MAAI5M,EAAc8M,CAAa,KAC7BT,GAAkBrK,GAAQD,GAAMiK,GAAa,SAASc,CAAa,CAAC;AAAA,IACtE;AAEF,UAAMC,IAAW,IAAIjJ,EAAS,QAAQ,CAAC;AACvC,WAAAiJ,EAAS,KAAK,SAAS,UAAU,GACjCH,EAAe,OAAOZ,CAAW,GACjCY,EAAe,OAAOG,CAAQ,GACvBH;AAAA,EAAA,GAEHF,KAA+B,CAAC1K,GAAQgL,GAAYC,MAAe;AACvE,QAAI/N;AACJ,UAAMgO,KAAWhO,IAAK8N,EAAW,gBAAgB,QAAQ9N,MAAO,SAASA,IAAK,CAAA;AAC9E,QAAIiO,IAAKD,EAAQ;AACjB,WAAOC,OAAM;AACX,YAAMN,IAAWK,EAAQC,CAAE,EAAE;AAC7B,UAAIC,IAAYF,EAAQC,CAAE,EAAE;AAC5B,MAAIN,MAAa,WAAWA,MAAa,YAAYA,MAAa,WAAW,CAACrB,GAAWqB,GAAU,WAAW,OACxGA,MAAa,UAAUA,MAAa,WACtCO,IAAYpL,EAAO,WAAWoL,GAAWP,CAAQ,IAEnDI,EAAW,KAAK,gBAAgBJ,GAAUO,CAAS;AAAA,IACrD;AAEF,UAAMC,IAAatJ,EAAS,EAAE,OAAO,GAAA,GAAQ/B,EAAO,MAAM,GACpDsL,IAAW,IAAIxJ,EAAS,OAAO,CAAC;AACtC,IAAAlD,EAAOoM,EAAW,YAAY,OAASM,EAAS,OAAOtF,CAAK,CAAC;AAC7D,UAAMuF,IAAYF,EAAW,UAAUC,CAAQ;AAC/C,IAAIC,MACFN,EAAW,KAAK,iBAAiB,OAAOM,CAAS,CAAC,GAClDN,EAAW,MAAA;AAAA,EACb,GAEIO,KAAqB,CAAAtK,MAAQ;AACjC,UAAMuK,IAAYvK,EAAK,KAAK,OAAO;AACnC,WAAOvD,EAAS8N,CAAS,KAAK,qBAAqB,KAAKA,CAAS;AAAA,EAAA,GAE7DC,KAAuB,CAAAxK,MAAQ;AACnC,QAAIoK,IAAWpK;AACf,WAAOoK,IAAWA,EAAS;AACzB,UAAIA,EAAS,KAAK,sBAAsB,KAAKE,GAAmBF,CAAQ;AACtE,eAAO;AAGX,WAAO;AAAA,EAAA,GAEHK,KAAuB,OAAU,CAAA/I,MAAS;AAC9C,QAAI7D,IAAI6D,EAAM,QACV1B;AACJ,WAAOnC;AAEL,MADAmC,IAAO0B,EAAM7D,CAAC,GACTmC,EAAK,WAGNA,EAAK,OAAO,KAAK,iBAAiB,MAGlCyI,GAAgBzI,CAAI,KAAKZ,GAAcN,CAAM,IAC1C0L,GAAqBxK,CAAI,KAC5BA,EAAK,QAAQyJ,GAAkB3K,GAAQkB,CAAI,CAAC,IAGzCwK,GAAqBxK,CAAI,KAC5BA,EAAK,QAAQsJ,GAAsBxK,GAAQkB,CAAI,CAAC;AAAA,EAGtD,GAGI0K,KAAmB,CAAC5L,GAAQ6L,GAASvK,MAAS;AAClD,UAAMwK,IAAkB9L,EAAO,QAAQ,KACjC+L,IAAWD,EAAgB,kBAAkB,GAC7CE,IAAWzL,GAAiBP,CAAM;AACxC,WAAOgC,EAAOhC,EAAO,QAAQ;AAAA,MAC3B,UAAA+L;AAAA,MACA,UAAAC;AAAA,IAAA,CACD,EAAE,MAAM1K,GAAM,EAAE,SAAAuK,GAAS;AAAA,EAAA,GAGtBI,KAAU,CAAAjM,MAAU;AACxB,IAAAA,EAAO,GAAG,WAAW,MAAM;AACzB,YAAM,EAAC,QAAAuB,GAAQ,YAAA8J,GAAY,QAAA1I,EAAA,IAAU3C,GAC/BkM,IAAY3K,EAAO,aAAA;AACzB,MAAA3C,EAAO,2CAA2C,MAAM,GAAG,GAAG,CAAAmB,MAAQ;AACpE,QAAAmM,EAAUnM,CAAI,IAAI,CAAA;AAAA,MAAC,CACpB,GACDR,GAAK,EAAE,OAAO,CAAC,OAAO,KAAK,CAAC4M,GAAOpM,MAAS;AAC1C,cAAMqM,IAAO7K,EAAO,eAAexB,CAAI;AACvC,QAAIqM,KACFxN,EAAOuN,GAAO,CAAAE,MAAQ;AACpB,UAAAD,EAAK,WAAWC,CAAI,IAAI,CAAA,GACxBD,EAAK,gBAAgB,KAAKC,CAAI;AAAA,QAAA,CAC/B;AAAA,MACH,CACD,GACD1J,EAAO,cAAc,mCAAmCgJ,GAAqB3L,CAAM,CAAC,GACpFqL,EAAW,mBAAmB,mBAAmB,CAACzI,GAAO7C,MAAS;AAChE,YAAI7C;AACJ,YAAI6B,IAAI6D,EAAM;AACd,eAAO7D,OAAK;AACV,gBAAMmC,IAAO0B,EAAM7D,CAAC;AACpB,cAAI,CAACmC,EAAK;AACR;AAEF,gBAAMoL,IAAcpL,EAAK,KAAKnB,CAAI,GAC5BwM,IAAU,IAAIzK,EAASwK,GAAa,CAAC;AAC3C,cAAIA,MAAgB,SAAS;AAC3B,kBAAME,IAAYtL,EAAK,KAAK,OAAO;AACnC,YAAIsL,KAAaA,EAAU,QAAQ,oBAAoB,MAAM,MAAMtL,EAAK,aACtEqL,EAAQ,KAAK;AAAA,cACX,OAAOrL,EAAK,WAAW,KAAK,OAAO;AAAA,cACnC,QAAQA,EAAK,WAAW,KAAK,QAAQ;AAAA,YAAA,CACtC,IAEDqL,EAAQ,KAAK;AAAA,cACX,OAAOrL,EAAK,KAAK,OAAO;AAAA,cACxB,QAAQA,EAAK,KAAK,QAAQ;AAAA,YAAA,CAC3B;AAAA,UACH;AAEF,UAAAqL,EAAQ,KAAK,EAAE,OAAOrL,EAAK,KAAK,OAAO,GAAG;AAC1C,gBAAMgK,KAAWhO,IAAKgE,EAAK,gBAAgB,QAAQhE,MAAO,SAASA,IAAK,CAAA;AACxE,cAAIiO,IAAKD,EAAQ;AACjB,iBAAOC,OAAM;AACX,kBAAMN,IAAWK,EAAQC,CAAE,EAAE;AAC7B,YAAIN,EAAS,QAAQ,aAAa,MAAM,KACtC0B,EAAQ,KAAK1B,EAAS,OAAO,EAAE,GAAGK,EAAQC,CAAE,EAAE,KAAK;AAAA,UACrD;AAEF,gBAAMI,IAAYrK,EAAK,KAAK,eAAe;AAC3C,cAAIqK,GAAW;AACb,kBAAMkB,IAAWb,GAAiB5L,GAAQsM,GAAa,SAASf,CAAS,CAAC;AAC1E,YAAA3M,EAAO6N,EAAS,YAAY,OAASF,EAAQ,OAAOvG,CAAK,CAAC;AAAA,UAAA;AAE5D,UAAA9E,EAAK,QAAQqL,CAAO;AAAA,QAAA;AAAA,MACtB,CACD;AAAA,IAAA,CACF,GACDvM,EAAO,GAAG,cAAc,MAAM;AAC5B,YAAM0M,IAAM1M,EAAO;AACnB,MAAApB,EAAO8N,EAAI,OAAO,yBAAyB,GAAG,CAAAC,MAAO;AACnD,QAAID,EAAI,OAAO,iBAAiBC,CAAG,EAAE,WAAW,KAC9CD,EAAI,IAAIC,GAAK,QAAQ,EAAE,OAAO,YAAY;AAAA,MAC5C,CACD;AAAA,IAAA,CACF;AAAA,EAAA,GAGGC,KAAQ,CAAA5M,MAAU;AACtB,IAAAA,EAAO,GAAG,eAAe,CAAA,MAAK;AAC5B,UAAID;AACJ,MAAI,EAAE,OAAO,aAAa,MAAMA,IAAO,EAAE,OAAO,aAAa,iBAAiB,OAC5E,EAAE,OAAOA;AAAA,IACX,CACD;AAAA,EAAA,GAGG8M,KAAkB,OAAU,CAAA5F,MAAO;AACvC,UAAM6F,IAAc,MAAM;AACxB,MAAA7F,EAAI,WAAWjH,EAAO,UAAU,WAAA,CAAY;AAAA,IAAA;AAE9C,WAAAA,EAAO,GAAG,cAAc8M,CAAW,GACnCA,EAAA,GACO,MAAM;AACX,MAAA9M,EAAO,IAAI,cAAc8M,CAAW;AAAA,IAAA;AAAA,EACtC,GAEIC,KAAW,CAAA/M,MAAU;AACzB,UAAMgN,IAAW,MAAMhN,EAAO,YAAY,UAAU;AACpD,IAAAA,EAAO,GAAG,SAAS,gBAAgB,SAAS;AAAA,MAC1C,SAAS;AAAA,MACT,MAAM;AAAA,MACN,UAAAgN;AAAA,MACA,SAAS,CAAAC,MAAa;AACpB,cAAMC,IAAYlN,EAAO;AACzB,QAAAiN,EAAU,UAAU5I,EAAe6I,EAAU,QAAA,CAAS,CAAC;AACvD,cAAMC,IAAwBD,EAAU,0BAA0B,wEAAwED,EAAU,SAAS,EAAE,QACzJG,IAAiBP,GAAgB7M,CAAM,EAAEiN,CAAS;AACxD,eAAO,MAAM;AACX,UAAAE,EAAA,GACAC,EAAA;AAAA,QAAe;AAAA,MACjB;AAAA,IACF,CACD,GACDpN,EAAO,GAAG,SAAS,YAAY,SAAS;AAAA,MACtC,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAAgN;AAAA,MACA,SAASH,GAAgB7M,CAAM;AAAA,IAAA,CAChC;AAAA,EAAA;AAGH,MAAIqN,KAAS,MAAM;AACjB,IAAAxQ,EAAS,IAAI,SAAS,CAAAmD,OACpBC,GAAWD,CAAM,GACjBkJ,GAAWlJ,CAAM,GACjB+M,GAAS/M,CAAM,GACf4M,GAAM5M,CAAM,GACZiM,GAAQjM,CAAM,GACduE,GAAQvE,CAAM,GACPsG,GAAItG,CAAM,EAClB;AAAA,EAAA;AAGH,EAAAqN,GAAA;AAEJ,GAAA;;;;;","x_google_ignoreList":[0]}