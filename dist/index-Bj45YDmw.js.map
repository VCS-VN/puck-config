{"version":3,"file":"index-Bj45YDmw.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/fullscreen/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const get$5 = fullscreenState => ({ isFullscreen: () => fullscreenState.get() !== null });\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq$1 = t => a => t === a;\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isArray = isType$1('array');\n    const isNull = eq$1(null);\n    const isBoolean = isSimpleType('boolean');\n    const isUndefined = eq$1(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n\n    const noop = () => {\n    };\n    const compose = (fa, fb) => {\n      return (...args) => {\n        return fa(fb.apply(null, args));\n      };\n    };\n    const compose1 = (fbc, fab) => a => fbc(fab(a));\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const never = constant(false);\n    const always = constant(true);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativePush = Array.prototype.push;\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const filter$1 = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find$1 = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind$3 = (xs, f) => flatten(map(xs, f));\n    const get$4 = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$4(xs, 0);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const lift2 = (oa, ob, f) => oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n\n    const singleton = doRevoke => {\n      const subject = Cell(Optional.none());\n      const revoke = () => subject.get().each(doRevoke);\n      const clear = () => {\n        revoke();\n        subject.set(Optional.none());\n      };\n      const isSet = () => subject.get().isSome();\n      const get = () => subject.get();\n      const set = s => {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear,\n        isSet,\n        get,\n        set\n      };\n    };\n    const unbindable = () => singleton(s => s.unbind());\n    const value = () => {\n      const subject = singleton(noop);\n      const on = f => subject.get().each(f);\n      return {\n        ...subject,\n        on\n      };\n    };\n\n    const first = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        if (isNull(timer)) {\n          timer = setTimeout(() => {\n            timer = null;\n            fn.apply(null, args);\n          }, rate);\n        }\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const keys = Object.keys;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n\n    const Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const path = (parts, scope) => {\n      let o = scope !== undefined && scope !== null ? scope : Global;\n      for (let i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    const resolve = (p, scope) => {\n      const parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    const unsafe = (name, scope) => {\n      return resolve(name, scope);\n    };\n    const getOrDie = (name, scope) => {\n      const actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n\n    const getPrototypeOf = Object.getPrototypeOf;\n    const sandHTMLElement = scope => {\n      return getOrDie('HTMLElement', scope);\n    };\n    const isPrototypeOf = x => {\n      const scope = resolve('ownerDocument.defaultView', x);\n      return isObject(x) && (sandHTMLElement(scope).prototype.isPrototypeOf(x) || /^HTML\\w*Element$/.test(getPrototypeOf(x).constructor.name));\n    };\n\n    const DOCUMENT = 9;\n    const DOCUMENT_FRAGMENT = 11;\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const type = element => element.dom.nodeType;\n    const isType = t => element => type(element) === t;\n    const isHTMLElement = element => isElement(element) && isPrototypeOf(element.dom);\n    const isElement = isType(ELEMENT);\n    const isText = isType(TEXT);\n    const isDocument = isType(DOCUMENT);\n    const isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set$1 = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const get$3 = (element, key) => {\n      const v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    const remove = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n\n    const supports = element => element.dom.classList !== undefined;\n\n    const has = (element, clazz) => supports(element) && element.dom.classList.contains(clazz);\n\n    const contains = (str, substr, start = 0, end) => {\n      const idx = str.indexOf(substr, start);\n      if (idx !== -1) {\n        return isUndefined(end) ? true : idx + substr.length <= end;\n      } else {\n        return false;\n      }\n    };\n\n    const isSupported$1 = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    const fromDom = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom,\n      fromPoint\n    };\n\n    const is = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    const bypassSelector = dom => dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT || dom.childElementCount === 0;\n    const all$1 = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n\n    const eq = (e1, e2) => e1.dom === e2.dom;\n\n    const owner = element => SugarElement.fromDom(element.dom.ownerDocument);\n    const documentOrOwner = dos => isDocument(dos) ? dos : owner(dos);\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parents = (element, isRoot) => {\n      const stop = isFunction(isRoot) ? isRoot : never;\n      let dom = element.dom;\n      const ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        const rawParent = dom.parentNode;\n        const p = SugarElement.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    const siblings$2 = element => {\n      const filterSelf = elements => filter$1(elements, x => !eq(element, x));\n      return parent(element).map(children).map(filterSelf).getOr([]);\n    };\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children = element => map(element.dom.childNodes, SugarElement.fromDom);\n\n    const isShadowRoot = dos => isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    const supported = isFunction(Element.prototype.attachShadow) && isFunction(Node.prototype.getRootNode);\n    const isSupported = constant(supported);\n    const getRootNode = supported ? e => SugarElement.fromDom(e.dom.getRootNode()) : documentOrOwner;\n    const getShadowRoot = e => {\n      const r = getRootNode(e);\n      return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    const getShadowHost = e => SugarElement.fromDom(e.dom.host);\n    const getOriginalEventTarget = event => {\n      if (isSupported() && isNonNullable(event.target)) {\n        const el = SugarElement.fromDom(event.target);\n        if (isElement(el) && isOpenShadowHost(el)) {\n          if (event.composed && event.composedPath) {\n            const composedPath = event.composedPath();\n            if (composedPath) {\n              return head(composedPath);\n            }\n          }\n        }\n      }\n      return Optional.from(event.target);\n    };\n    const isOpenShadowHost = element => isNonNullable(element.dom.shadowRoot);\n\n    const inBody = element => {\n      const dom = isText(element) ? element.dom.parentNode : element.dom;\n      if (dom === undefined || dom === null || dom.ownerDocument === null) {\n        return false;\n      }\n      const doc = dom.ownerDocument;\n      return getShadowRoot(SugarElement.fromDom(dom)).fold(() => doc.body.contains(dom), compose1(inBody, getShadowHost));\n    };\n    const getBody = doc => {\n      const b = doc.dom.body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return SugarElement.fromDom(b);\n    };\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported$1(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const set = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n    const setAll = (element, css) => {\n      const dom = element.dom;\n      each(css, (v, k) => {\n        internalSet(dom, k, v);\n      });\n    };\n    const get$2 = (element, property) => {\n      const dom = element.dom;\n      const styles = window.getComputedStyle(dom);\n      const r = styles.getPropertyValue(property);\n      return r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n    };\n    const getUnsafeProperty = (dom, property) => isSupported$1(dom) ? dom.style.getPropertyValue(property) : '';\n\n    const mkEvent = (target, x, y, stop, prevent, kill, raw) => ({\n      target,\n      x,\n      y,\n      stop,\n      prevent,\n      kill,\n      raw\n    });\n    const fromRawEvent = rawEvent => {\n      const target = SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));\n      const stop = () => rawEvent.stopPropagation();\n      const prevent = () => rawEvent.preventDefault();\n      const kill = compose(prevent, stop);\n      return mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n    };\n    const handle = (filter, handler) => rawEvent => {\n      if (filter(rawEvent)) {\n        handler(fromRawEvent(rawEvent));\n      }\n    };\n    const binder = (element, event, filter, handler, useCapture) => {\n      const wrapped = handle(filter, handler);\n      element.dom.addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    const bind$2 = (element, event, filter, handler) => binder(element, event, filter, handler, false);\n    const unbind = (element, event, handler, useCapture) => {\n      element.dom.removeEventListener(event, handler, useCapture);\n    };\n\n    const filter = always;\n    const bind$1 = (element, event, handler) => bind$2(element, event, filter, handler);\n\n    const cached = f => {\n      let called = false;\n      let r;\n      return (...args) => {\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    const DeviceType = (os, browser, userAgent, mediaMatch) => {\n      const isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      const isiPhone = os.isiOS() && !isiPad;\n      const isMobile = os.isiOS() || os.isAndroid();\n      const isTouch = isMobile || mediaMatch('(pointer:coarse)');\n      const isTablet = isiPad || !isiPhone && isMobile && mediaMatch('(min-device-width:768px)');\n      const isPhone = isiPhone || isMobile && !isTablet;\n      const iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      const isDesktop = !isPhone && !isTablet && !iOSwebview;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview),\n        isDesktop: constant(isDesktop)\n      };\n    };\n\n    const firstMatch = (regexes, s) => {\n      for (let i = 0; i < regexes.length; i++) {\n        const x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    const find = (regexes, agent) => {\n      const r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      const group = i => {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$2(group(1), group(2));\n    };\n    const detect$3 = (versionRegexes, agent) => {\n      const cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown$2();\n      }\n      return find(versionRegexes, cleanedAgent);\n    };\n    const unknown$2 = () => {\n      return nu$2(0, 0);\n    };\n    const nu$2 = (major, minor) => {\n      return {\n        major,\n        minor\n      };\n    };\n    const Version = {\n      nu: nu$2,\n      detect: detect$3,\n      unknown: unknown$2\n    };\n\n    const detectBrowser$1 = (browsers, userAgentData) => {\n      return findMap(userAgentData.brands, uaBrand => {\n        const lcBrand = uaBrand.brand.toLowerCase();\n        return find$1(browsers, browser => {\n          var _a;\n          return lcBrand === ((_a = browser.brand) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n        }).map(info => ({\n          current: info.name,\n          version: Version.nu(parseInt(uaBrand.version, 10), 0)\n        }));\n      });\n    };\n\n    const detect$2 = (candidates, userAgent) => {\n      const agent = String(userAgent).toLowerCase();\n      return find$1(candidates, candidate => {\n        return candidate.search(agent);\n      });\n    };\n    const detectBrowser = (browsers, userAgent) => {\n      return detect$2(browsers, userAgent).map(browser => {\n        const version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version\n        };\n      });\n    };\n    const detectOs = (oses, userAgent) => {\n      return detect$2(oses, userAgent).map(os => {\n        const version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version\n        };\n      });\n    };\n\n    const normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    const checkContains = target => {\n      return uastring => {\n        return contains(uastring, target);\n      };\n    };\n    const browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: uastring => {\n          return contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chromium',\n        brand: 'Chromium',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: uastring => {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: uastring => {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: uastring => {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    const oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: uastring => {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'macOS',\n        search: checkContains('mac os x'),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      },\n      {\n        name: 'ChromeOS',\n        search: checkContains('cros'),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }\n    ];\n    const PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    const edge = 'Edge';\n    const chromium = 'Chromium';\n    const ie = 'IE';\n    const opera = 'Opera';\n    const firefox = 'Firefox';\n    const safari = 'Safari';\n    const unknown$1 = () => {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu$1 = info => {\n      const current = info.current;\n      const version = info.version;\n      const isBrowser = name => () => current === name;\n      return {\n        current,\n        version,\n        isEdge: isBrowser(edge),\n        isChromium: isBrowser(chromium),\n        isIE: isBrowser(ie),\n        isOpera: isBrowser(opera),\n        isFirefox: isBrowser(firefox),\n        isSafari: isBrowser(safari)\n      };\n    };\n    const Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chromium: constant(chromium),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    const windows = 'Windows';\n    const ios = 'iOS';\n    const android = 'Android';\n    const linux = 'Linux';\n    const macos = 'macOS';\n    const solaris = 'Solaris';\n    const freebsd = 'FreeBSD';\n    const chromeos = 'ChromeOS';\n    const unknown = () => {\n      return nu({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu = info => {\n      const current = info.current;\n      const version = info.version;\n      const isOS = name => () => current === name;\n      return {\n        current,\n        version,\n        isWindows: isOS(windows),\n        isiOS: isOS(ios),\n        isAndroid: isOS(android),\n        isMacOS: isOS(macos),\n        isLinux: isOS(linux),\n        isSolaris: isOS(solaris),\n        isFreeBSD: isOS(freebsd),\n        isChromeOS: isOS(chromeos)\n      };\n    };\n    const OperatingSystem = {\n      unknown,\n      nu,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      macos: constant(macos),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd),\n      chromeos: constant(chromeos)\n    };\n\n    const detect$1 = (userAgent, userAgentDataOpt, mediaMatch) => {\n      const browsers = PlatformInfo.browsers();\n      const oses = PlatformInfo.oses();\n      const browser = userAgentDataOpt.bind(userAgentData => detectBrowser$1(browsers, userAgentData)).orThunk(() => detectBrowser(browsers, userAgent)).fold(Browser.unknown, Browser.nu);\n      const os = detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      const deviceType = DeviceType(os, browser, userAgent, mediaMatch);\n      return {\n        browser,\n        os,\n        deviceType\n      };\n    };\n    const PlatformDetection = { detect: detect$1 };\n\n    const mediaMatch = query => window.matchMedia(query).matches;\n    let platform = cached(() => PlatformDetection.detect(navigator.userAgent, Optional.from(navigator.userAgentData), mediaMatch));\n    const detect = () => platform();\n\n    const r = (left, top) => {\n      const translate = (x, y) => r(left + x, top + y);\n      return {\n        left,\n        top,\n        translate\n      };\n    };\n    const SugarPosition = r;\n\n    const get$1 = _DOC => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      const y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return SugarPosition(x, y);\n    };\n\n    const get = _win => {\n      const win = _win === undefined ? window : _win;\n      if (detect().browser.isFirefox()) {\n        return Optional.none();\n      } else {\n        return Optional.from(win.visualViewport);\n      }\n    };\n    const bounds = (x, y, width, height) => ({\n      x,\n      y,\n      width,\n      height,\n      right: x + width,\n      bottom: y + height\n    });\n    const getBounds = _win => {\n      const win = _win === undefined ? window : _win;\n      const doc = win.document;\n      const scroll = get$1(SugarElement.fromDom(doc));\n      return get(win).fold(() => {\n        const html = win.document.documentElement;\n        const width = html.clientWidth;\n        const height = html.clientHeight;\n        return bounds(scroll.left, scroll.top, width, height);\n      }, visualViewport => bounds(Math.max(visualViewport.pageLeft, scroll.left), Math.max(visualViewport.pageTop, scroll.top), visualViewport.width, visualViewport.height));\n    };\n    const bind = (name, callback, _win) => get(_win).map(visualViewport => {\n      const handler = e => callback(fromRawEvent(e));\n      visualViewport.addEventListener(name, handler);\n      return { unbind: () => visualViewport.removeEventListener(name, handler) };\n    }).getOrThunk(() => ({ unbind: noop }));\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const fireFullscreenStateChanged = (editor, state) => {\n      editor.dispatch('FullscreenStateChanged', { state });\n      editor.dispatch('ResizeEditor');\n    };\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('fullscreen_native', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const getFullscreenNative = option('fullscreen_native');\n\n    const getFullscreenRoot = editor => {\n      const elem = SugarElement.fromDom(editor.getElement());\n      return getShadowRoot(elem).map(getShadowHost).getOrThunk(() => getBody(owner(elem)));\n    };\n    const getFullscreenElement = root => {\n      if (root.fullscreenElement !== undefined) {\n        return root.fullscreenElement;\n      } else if (root.msFullscreenElement !== undefined) {\n        return root.msFullscreenElement;\n      } else if (root.webkitFullscreenElement !== undefined) {\n        return root.webkitFullscreenElement;\n      } else {\n        return null;\n      }\n    };\n    const getFullscreenchangeEventName = () => {\n      if (document.fullscreenElement !== undefined) {\n        return 'fullscreenchange';\n      } else if (document.msFullscreenElement !== undefined) {\n        return 'MSFullscreenChange';\n      } else if (document.webkitFullscreenElement !== undefined) {\n        return 'webkitfullscreenchange';\n      } else {\n        return 'fullscreenchange';\n      }\n    };\n    const requestFullscreen = sugarElem => {\n      const elem = sugarElem.dom;\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      } else if (elem.webkitRequestFullScreen) {\n        elem.webkitRequestFullScreen();\n      }\n    };\n    const exitFullscreen = sugarDoc => {\n      const doc = sugarDoc.dom;\n      if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n      } else if (doc.msExitFullscreen) {\n        doc.msExitFullscreen();\n      } else if (doc.webkitCancelFullScreen) {\n        doc.webkitCancelFullScreen();\n      }\n    };\n    const isFullscreenElement = elem => elem.dom === getFullscreenElement(owner(elem).dom);\n\n    const ancestors$1 = (scope, predicate, isRoot) => filter$1(parents(scope, isRoot), predicate);\n    const siblings$1 = (scope, predicate) => filter$1(siblings$2(scope), predicate);\n\n    const all = selector => all$1(selector);\n    const ancestors = (scope, selector, isRoot) => ancestors$1(scope, e => is(e, selector), isRoot);\n    const siblings = (scope, selector) => siblings$1(scope, e => is(e, selector));\n\n    const attr = 'data-ephox-mobile-fullscreen-style';\n    const siblingStyles = 'display:none!important;';\n    const ancestorPosition = 'position:absolute!important;';\n    const ancestorStyles = 'top:0!important;left:0!important;margin:0!important;padding:0!important;width:100%!important;height:100%!important;overflow:visible!important;';\n    const bgFallback = 'background-color:rgb(255,255,255)!important;';\n    const isAndroid = global.os.isAndroid();\n    const matchColor = editorBody => {\n      const color = get$2(editorBody, 'background-color');\n      return color !== undefined && color !== '' ? 'background-color:' + color + '!important' : bgFallback;\n    };\n    const clobberStyles = (dom, container, editorBody) => {\n      const gatherSiblings = element => {\n        return siblings(element, '*:not(.tox-silver-sink)');\n      };\n      const clobber = clobberStyle => element => {\n        const styles = get$3(element, 'style');\n        const backup = styles === undefined ? 'no-styles' : styles.trim();\n        if (backup === clobberStyle) {\n          return;\n        } else {\n          set$1(element, attr, backup);\n          setAll(element, dom.parseStyle(clobberStyle));\n        }\n      };\n      const ancestors$1 = ancestors(container, '*');\n      const siblings$1 = bind$3(ancestors$1, gatherSiblings);\n      const bgColor = matchColor(editorBody);\n      each$1(siblings$1, clobber(siblingStyles));\n      each$1(ancestors$1, clobber(ancestorPosition + ancestorStyles + bgColor));\n      const containerStyles = isAndroid === true ? '' : ancestorPosition;\n      clobber(containerStyles + ancestorStyles + bgColor)(container);\n    };\n    const restoreStyles = dom => {\n      const clobberedEls = all('[' + attr + ']');\n      each$1(clobberedEls, element => {\n        const restore = get$3(element, attr);\n        if (restore && restore !== 'no-styles') {\n          setAll(element, dom.parseStyle(restore));\n        } else {\n          remove(element, 'style');\n        }\n        remove(element, attr);\n      });\n    };\n\n    const DOM = global$1.DOM;\n    const getScrollPos = () => getBounds(window);\n    const setScrollPos = pos => window.scrollTo(pos.x, pos.y);\n    const viewportUpdate = get().fold(() => ({\n      bind: noop,\n      unbind: noop\n    }), visualViewport => {\n      const editorContainer = value();\n      const resizeBinder = unbindable();\n      const scrollBinder = unbindable();\n      const refreshScroll = () => {\n        document.body.scrollTop = 0;\n        document.documentElement.scrollTop = 0;\n      };\n      const refreshVisualViewport = () => {\n        window.requestAnimationFrame(() => {\n          editorContainer.on(container => setAll(container, {\n            top: visualViewport.offsetTop + 'px',\n            left: visualViewport.offsetLeft + 'px',\n            height: visualViewport.height + 'px',\n            width: visualViewport.width + 'px'\n          }));\n        });\n      };\n      const update = first(() => {\n        refreshScroll();\n        refreshVisualViewport();\n      }, 50);\n      const bind$1 = element => {\n        editorContainer.set(element);\n        update.throttle();\n        resizeBinder.set(bind('resize', update.throttle));\n        scrollBinder.set(bind('scroll', update.throttle));\n      };\n      const unbind = () => {\n        editorContainer.on(() => {\n          resizeBinder.clear();\n          scrollBinder.clear();\n        });\n        editorContainer.clear();\n      };\n      return {\n        bind: bind$1,\n        unbind\n      };\n    });\n    const toggleFullscreen = (editor, fullscreenState) => {\n      const body = document.body;\n      const documentElement = document.documentElement;\n      const editorContainer = editor.getContainer();\n      const editorContainerS = SugarElement.fromDom(editorContainer);\n      const sinkContainerS = nextSibling(editorContainerS).filter(elm => isHTMLElement(elm) && has(elm, 'tox-silver-sink'));\n      const fullscreenRoot = getFullscreenRoot(editor);\n      const fullscreenInfo = fullscreenState.get();\n      const editorBody = SugarElement.fromDom(editor.getBody());\n      const isTouch = global.deviceType.isTouch();\n      const editorContainerStyle = editorContainer.style;\n      const iframe = editor.iframeElement;\n      const iframeStyle = iframe === null || iframe === void 0 ? void 0 : iframe.style;\n      const handleClasses = handler => {\n        handler(body, 'tox-fullscreen');\n        handler(documentElement, 'tox-fullscreen');\n        handler(editorContainer, 'tox-fullscreen');\n        getShadowRoot(editorContainerS).map(root => getShadowHost(root).dom).each(host => {\n          handler(host, 'tox-fullscreen');\n          handler(host, 'tox-shadowhost');\n        });\n      };\n      const cleanup = () => {\n        if (isTouch) {\n          restoreStyles(editor.dom);\n        }\n        handleClasses(DOM.removeClass);\n        viewportUpdate.unbind();\n        Optional.from(fullscreenState.get()).each(info => info.fullscreenChangeHandler.unbind());\n      };\n      if (!fullscreenInfo) {\n        const fullscreenChangeHandler = bind$1(owner(fullscreenRoot), getFullscreenchangeEventName(), _evt => {\n          if (getFullscreenNative(editor)) {\n            if (!isFullscreenElement(fullscreenRoot) && fullscreenState.get() !== null) {\n              toggleFullscreen(editor, fullscreenState);\n            }\n          }\n        });\n        const newFullScreenInfo = {\n          scrollPos: getScrollPos(),\n          containerWidth: editorContainerStyle.width,\n          containerHeight: editorContainerStyle.height,\n          containerTop: editorContainerStyle.top,\n          containerLeft: editorContainerStyle.left,\n          iframeWidth: iframeStyle.width,\n          iframeHeight: iframeStyle.height,\n          fullscreenChangeHandler,\n          sinkCssPosition: sinkContainerS.map(elm => get$2(elm, 'position'))\n        };\n        if (isTouch) {\n          clobberStyles(editor.dom, editorContainerS, editorBody);\n        }\n        iframeStyle.width = iframeStyle.height = '100%';\n        editorContainerStyle.width = editorContainerStyle.height = '';\n        handleClasses(DOM.addClass);\n        sinkContainerS.each(elm => {\n          set(elm, 'position', 'fixed');\n        });\n        viewportUpdate.bind(editorContainerS);\n        editor.on('remove', cleanup);\n        fullscreenState.set(newFullScreenInfo);\n        if (getFullscreenNative(editor)) {\n          requestFullscreen(fullscreenRoot);\n        }\n        fireFullscreenStateChanged(editor, true);\n      } else {\n        fullscreenInfo.fullscreenChangeHandler.unbind();\n        if (getFullscreenNative(editor) && isFullscreenElement(fullscreenRoot)) {\n          exitFullscreen(owner(fullscreenRoot));\n        }\n        iframeStyle.width = fullscreenInfo.iframeWidth;\n        iframeStyle.height = fullscreenInfo.iframeHeight;\n        editorContainerStyle.width = fullscreenInfo.containerWidth;\n        editorContainerStyle.height = fullscreenInfo.containerHeight;\n        editorContainerStyle.top = fullscreenInfo.containerTop;\n        editorContainerStyle.left = fullscreenInfo.containerLeft;\n        lift2(sinkContainerS, fullscreenInfo.sinkCssPosition, (elm, val) => {\n          set(elm, 'position', val);\n        });\n        cleanup();\n        setScrollPos(fullscreenInfo.scrollPos);\n        fullscreenState.set(null);\n        fireFullscreenStateChanged(editor, false);\n        editor.off('remove', cleanup);\n      }\n    };\n\n    const register$1 = (editor, fullscreenState) => {\n      editor.addCommand('mceFullScreen', () => {\n        toggleFullscreen(editor, fullscreenState);\n      });\n    };\n\n    const makeSetupHandler = (editor, fullscreenState) => api => {\n      api.setActive(fullscreenState.get() !== null);\n      const editorEventCallback = e => api.setActive(e.state);\n      editor.on('FullscreenStateChanged', editorEventCallback);\n      return () => editor.off('FullscreenStateChanged', editorEventCallback);\n    };\n    const register = (editor, fullscreenState) => {\n      const onAction = () => editor.execCommand('mceFullScreen');\n      editor.ui.registry.addToggleMenuItem('fullscreen', {\n        text: 'Fullscreen',\n        icon: 'fullscreen',\n        shortcut: 'Meta+Shift+F',\n        onAction,\n        onSetup: makeSetupHandler(editor, fullscreenState)\n      });\n      editor.ui.registry.addToggleButton('fullscreen', {\n        tooltip: 'Fullscreen',\n        icon: 'fullscreen',\n        onAction,\n        onSetup: makeSetupHandler(editor, fullscreenState)\n      });\n    };\n\n    var Plugin = () => {\n      global$2.add('fullscreen', editor => {\n        const fullscreenState = Cell(null);\n        if (editor.inline) {\n          return get$5(fullscreenState);\n        }\n        register$2(editor);\n        register$1(editor, fullscreenState);\n        register(editor, fullscreenState);\n        editor.addShortcut('Meta+Shift+F', '', 'mceFullScreen');\n        return get$5(fullscreenState);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["Cell","initial","value","v","global$2","get$5","fullscreenState","hasProto","constructor","predicate","_a","typeOf","x","o","proto","isType$1","type","isSimpleType","eq$1","t","a","isString","isObject","isArray","isNull","isBoolean","isUndefined","isNullable","isNonNullable","isFunction","isNumber","noop","compose","fa","fb","args","compose1","fbc","fab","constant","curry","fn","initialArgs","restArgs","all","never","always","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","nativePush","map","xs","f","len","r","i","each$1","filter$1","pred","findUntil","until","find$1","flatten","bind$3","get$4","head","findMap","arr","lift2","oa","ob","singleton","doRevoke","subject","revoke","s","unbindable","first","rate","timer","keys","each","obj","props","k","Global","path","parts","scope","resolve","p","unsafe","name","getOrDie","actual","getPrototypeOf","sandHTMLElement","isPrototypeOf","DOCUMENT","DOCUMENT_FRAGMENT","ELEMENT","TEXT","element","isType","isHTMLElement","isElement","isText","isDocument","isDocumentFragment","rawSet","dom","key","set$1","get$3","remove","supports","has","clazz","contains","str","substr","start","end","idx","isSupported$1","fromHtml","html","div","fromDom","fromTag","node","fromText","text","SugarElement","docElm","y","is","selector","elem","bypassSelector","all$1","base","eq","e1","e2","owner","documentOrOwner","dos","parent","parents","isRoot","stop","ret","rawParent","siblings$2","filterSelf","elements","children","nextSibling","isShadowRoot","supported","isSupported","getRootNode","getShadowRoot","getShadowHost","getOriginalEventTarget","event","el","isOpenShadowHost","composedPath","inBody","doc","getBody","b","internalSet","property","set","setAll","css","get$2","getUnsafeProperty","mkEvent","target","prevent","kill","raw","fromRawEvent","rawEvent","handle","filter","handler","useCapture","wrapped","unbind","bind$2","bind$1","cached","called","DeviceType","os","browser","userAgent","mediaMatch","isiPad","isiPhone","isMobile","isTouch","isTablet","isPhone","iOSwebview","isDesktop","firstMatch","regexes","find","agent","group","nu$2","detect$3","versionRegexes","cleanedAgent","unknown$2","major","minor","Version","detectBrowser$1","browsers","userAgentData","uaBrand","lcBrand","info","detect$2","candidates","candidate","detectBrowser","version","detectOs","oses","normalVersionRegex","checkContains","uastring","PlatformInfo","edge","chromium","ie","opera","firefox","safari","unknown$1","nu$1","current","isBrowser","Browser","windows","ios","android","linux","macos","solaris","freebsd","chromeos","unknown","nu","isOS","OperatingSystem","PlatformDetection","userAgentDataOpt","deviceType","query","platform","detect","left","top","SugarPosition","get$1","_DOC","get","_win","win","bounds","width","height","getBounds","scroll","visualViewport","bind","callback","e","global$1","global","fireFullscreenStateChanged","editor","state","option","register$2","registerOption","getFullscreenNative","getFullscreenRoot","getFullscreenElement","root","getFullscreenchangeEventName","requestFullscreen","sugarElem","exitFullscreen","sugarDoc","isFullscreenElement","ancestors$1","siblings$1","ancestors","siblings","attr","siblingStyles","ancestorPosition","ancestorStyles","bgFallback","isAndroid","matchColor","editorBody","color","clobberStyles","container","gatherSiblings","clobber","styles","backup","clobberStyle","bgColor","restoreStyles","clobberedEls","restore","DOM","getScrollPos","setScrollPos","pos","viewportUpdate","editorContainer","resizeBinder","scrollBinder","refreshScroll","refreshVisualViewport","update","toggleFullscreen","body","documentElement","editorContainerS","sinkContainerS","elm","fullscreenRoot","fullscreenInfo","editorContainerStyle","iframe","iframeStyle","handleClasses","host","cleanup","val","fullscreenChangeHandler","_evt","newFullScreenInfo","register$1","makeSetupHandler","api","editorEventCallback","register","onAction","Plugin"],"mappings":"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","x_google_ignoreList":[0]}