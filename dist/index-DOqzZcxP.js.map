{"version":3,"file":"index-DOqzZcxP.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/autoresize/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const fireResizeEditor = editor => editor.dispatch('ResizeEditor');\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('autoresize_overflow_padding', {\n        processor: 'number',\n        default: 1\n      });\n      registerOption('autoresize_bottom_margin', {\n        processor: 'number',\n        default: 50\n      });\n    };\n    const getMinHeight = option('min_height');\n    const getMaxHeight = option('max_height');\n    const getAutoResizeOverflowPadding = option('autoresize_overflow_padding');\n    const getAutoResizeBottomMargin = option('autoresize_bottom_margin');\n\n    const isFullscreen = editor => editor.plugins.fullscreen && editor.plugins.fullscreen.isFullscreen();\n    const toggleScrolling = (editor, state) => {\n      const body = editor.getBody();\n      if (body) {\n        body.style.overflowY = state ? '' : 'hidden';\n        if (!state) {\n          body.scrollTop = 0;\n        }\n      }\n    };\n    const parseCssValueToInt = (dom, elm, name, computed) => {\n      var _a;\n      const value = parseInt((_a = dom.getStyle(elm, name, computed)) !== null && _a !== void 0 ? _a : '', 10);\n      return isNaN(value) ? 0 : value;\n    };\n    const shouldScrollIntoView = trigger => {\n      if ((trigger === null || trigger === void 0 ? void 0 : trigger.type.toLowerCase()) === 'setcontent') {\n        const setContentEvent = trigger;\n        return setContentEvent.selection === true || setContentEvent.paste === true;\n      } else {\n        return false;\n      }\n    };\n    const resize = (editor, oldSize, trigger, getExtraMarginBottom) => {\n      var _a;\n      const dom = editor.dom;\n      const doc = editor.getDoc();\n      if (!doc) {\n        return;\n      }\n      if (isFullscreen(editor)) {\n        toggleScrolling(editor, true);\n        return;\n      }\n      const docEle = doc.documentElement;\n      const resizeBottomMargin = getExtraMarginBottom ? getExtraMarginBottom() : getAutoResizeOverflowPadding(editor);\n      const minHeight = (_a = getMinHeight(editor)) !== null && _a !== void 0 ? _a : editor.getElement().offsetHeight;\n      let resizeHeight = minHeight;\n      const marginTop = parseCssValueToInt(dom, docEle, 'margin-top', true);\n      const marginBottom = parseCssValueToInt(dom, docEle, 'margin-bottom', true);\n      let contentHeight = docEle.offsetHeight + marginTop + marginBottom + resizeBottomMargin;\n      if (contentHeight < 0) {\n        contentHeight = 0;\n      }\n      const containerHeight = editor.getContainer().offsetHeight;\n      const contentAreaHeight = editor.getContentAreaContainer().offsetHeight;\n      const chromeHeight = containerHeight - contentAreaHeight;\n      if (contentHeight + chromeHeight > minHeight) {\n        resizeHeight = contentHeight + chromeHeight;\n      }\n      const maxHeight = getMaxHeight(editor);\n      if (maxHeight && resizeHeight > maxHeight) {\n        resizeHeight = maxHeight;\n        toggleScrolling(editor, true);\n      } else {\n        toggleScrolling(editor, false);\n      }\n      if (resizeHeight !== oldSize.get()) {\n        const deltaSize = resizeHeight - oldSize.get();\n        dom.setStyle(editor.getContainer(), 'height', resizeHeight + 'px');\n        oldSize.set(resizeHeight);\n        fireResizeEditor(editor);\n        if (global.browser.isSafari() && (global.os.isMacOS() || global.os.isiOS())) {\n          const win = editor.getWin();\n          win.scrollTo(win.pageXOffset, win.pageYOffset);\n        }\n        if (editor.hasFocus() && shouldScrollIntoView(trigger)) {\n          editor.selection.scrollIntoView();\n        }\n        if ((global.browser.isSafari() || global.browser.isChromium()) && deltaSize < 0) {\n          resize(editor, oldSize, trigger, getExtraMarginBottom);\n        }\n      }\n    };\n    const setup = (editor, oldSize) => {\n      let getExtraMarginBottom = () => getAutoResizeBottomMargin(editor);\n      let resizeCounter;\n      let sizeAfterFirstResize;\n      editor.on('init', e => {\n        resizeCounter = 0;\n        const overflowPadding = getAutoResizeOverflowPadding(editor);\n        const dom = editor.dom;\n        dom.setStyles(editor.getDoc().documentElement, { height: 'auto' });\n        if (global.browser.isEdge() || global.browser.isIE()) {\n          dom.setStyles(editor.getBody(), {\n            'paddingLeft': overflowPadding,\n            'paddingRight': overflowPadding,\n            'min-height': 0\n          });\n        } else {\n          dom.setStyles(editor.getBody(), {\n            paddingLeft: overflowPadding,\n            paddingRight: overflowPadding\n          });\n        }\n        resize(editor, oldSize, e, getExtraMarginBottom);\n        resizeCounter += 1;\n      });\n      editor.on('NodeChange SetContent keyup FullscreenStateChanged ResizeContent', e => {\n        if (resizeCounter === 1) {\n          sizeAfterFirstResize = editor.getContainer().offsetHeight;\n          resize(editor, oldSize, e, getExtraMarginBottom);\n          resizeCounter += 1;\n        } else if (resizeCounter === 2) {\n          const isLooping = sizeAfterFirstResize < editor.getContainer().offsetHeight;\n          if (isLooping) {\n            const dom = editor.dom;\n            const doc = editor.getDoc();\n            dom.setStyles(doc.documentElement, { 'min-height': 0 });\n            dom.setStyles(editor.getBody(), { 'min-height': 'inherit' });\n          }\n          getExtraMarginBottom = isLooping ? constant(0) : getExtraMarginBottom;\n          resizeCounter += 1;\n        } else {\n          resize(editor, oldSize, e, getExtraMarginBottom);\n        }\n      });\n    };\n\n    const register = (editor, oldSize) => {\n      editor.addCommand('mceAutoResize', () => {\n        resize(editor, oldSize);\n      });\n    };\n\n    var Plugin = () => {\n      global$1.add('autoresize', editor => {\n        register$1(editor);\n        if (!editor.options.isSet('resize')) {\n          editor.options.set('resize', false);\n        }\n        if (!editor.inline) {\n          const oldSize = Cell(0);\n          register(editor, oldSize);\n          setup(editor, oldSize);\n        }\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["Cell","initial","value","v","global$1","constant","global","fireResizeEditor","editor","option","name","register$1","registerOption","getMinHeight","getMaxHeight","getAutoResizeOverflowPadding","getAutoResizeBottomMargin","isFullscreen","toggleScrolling","state","body","parseCssValueToInt","dom","elm","computed","_a","shouldScrollIntoView","trigger","setContentEvent","resize","oldSize","getExtraMarginBottom","doc","docEle","resizeBottomMargin","minHeight","resizeHeight","marginTop","marginBottom","contentHeight","containerHeight","contentAreaHeight","chromeHeight","maxHeight","deltaSize","win","setup","resizeCounter","sizeAfterFirstResize","e","overflowPadding","isLooping","register","Plugin"],"mappings":"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","x_google_ignoreList":[0]}