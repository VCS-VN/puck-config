{"version":3,"file":"index-D0MHR2uw.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/pagebreak/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('pagebreak_separator', {\n        processor: 'string',\n        default: '<!-- pagebreak -->'\n      });\n      registerOption('pagebreak_split_block', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const getSeparatorHtml = option('pagebreak_separator');\n    const shouldSplitBlock = option('pagebreak_split_block');\n\n    const pageBreakClass = 'mce-pagebreak';\n    const getPlaceholderHtml = shouldSplitBlock => {\n      const html = `<img src=\"${ global.transparentSrc }\" class=\"${ pageBreakClass }\" data-mce-resize=\"false\" data-mce-placeholder />`;\n      return shouldSplitBlock ? `<p>${ html }</p>` : html;\n    };\n    const setup$1 = editor => {\n      const separatorHtml = getSeparatorHtml(editor);\n      const shouldSplitBlock$1 = () => shouldSplitBlock(editor);\n      const pageBreakSeparatorRegExp = new RegExp(separatorHtml.replace(/[\\?\\.\\*\\[\\]\\(\\)\\{\\}\\+\\^\\$\\:]/g, a => {\n        return '\\\\' + a;\n      }), 'gi');\n      editor.on('BeforeSetContent', e => {\n        e.content = e.content.replace(pageBreakSeparatorRegExp, getPlaceholderHtml(shouldSplitBlock$1()));\n      });\n      editor.on('PreInit', () => {\n        editor.serializer.addNodeFilter('img', nodes => {\n          let i = nodes.length, node, className;\n          while (i--) {\n            node = nodes[i];\n            className = node.attr('class');\n            if (className && className.indexOf(pageBreakClass) !== -1) {\n              const parentNode = node.parent;\n              if (parentNode && editor.schema.getBlockElements()[parentNode.name] && shouldSplitBlock$1()) {\n                parentNode.type = 3;\n                parentNode.value = separatorHtml;\n                parentNode.raw = true;\n                node.remove();\n                continue;\n              }\n              node.type = 3;\n              node.value = separatorHtml;\n              node.raw = true;\n            }\n          }\n        });\n      });\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mcePageBreak', () => {\n        editor.insertContent(getPlaceholderHtml(shouldSplitBlock(editor)));\n      });\n    };\n\n    const setup = editor => {\n      editor.on('ResolveName', e => {\n        if (e.target.nodeName === 'IMG' && editor.dom.hasClass(e.target, pageBreakClass)) {\n          e.name = 'pagebreak';\n        }\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mcePageBreak');\n      editor.ui.registry.addButton('pagebreak', {\n        icon: 'page-break',\n        tooltip: 'Page break',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n      editor.ui.registry.addMenuItem('pagebreak', {\n        text: 'Page break',\n        icon: 'page-break',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n    };\n\n    var Plugin = () => {\n      global$1.add('pagebreak', editor => {\n        register$2(editor);\n        register$1(editor);\n        register(editor);\n        setup$1(editor);\n        setup(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","global","option","name","editor","register$2","registerOption","getSeparatorHtml","shouldSplitBlock","pageBreakClass","getPlaceholderHtml","html","setup$1","separatorHtml","shouldSplitBlock$1","pageBreakSeparatorRegExp","a","e","nodes","i","node","className","parentNode","register$1","setup","onSetupEditable","api","nodeChanged","register","onAction","Plugin"],"mappings":"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","x_google_ignoreList":[0]}