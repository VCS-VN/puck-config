{"version":3,"file":"index-BZUMDdNJ.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/image/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const getPrototypeOf = Object.getPrototypeOf;\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const is = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf(o) === proto);\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isPlainObject = value => is(value, Object);\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const noop = () => {\n    };\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const nativePush = Array.prototype.push;\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const get = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get(xs, 0);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const remove = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    const fromDom = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom,\n      fromPoint\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const isNotEmpty = s => s.length > 0;\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('image_dimensions', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('image_advtab', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('image_uploadtab', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('image_prepend_url', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('image_class_list', { processor: 'object[]' });\n      registerOption('image_description', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('image_title', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('image_caption', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('image_list', {\n        processor: value => {\n          const valid = value === false || isString(value) || isArrayOf(value, isObject) || isFunction(value);\n          return valid ? {\n            value,\n            valid\n          } : {\n            valid: false,\n            message: 'Must be false, a string, an array or a function.'\n          };\n        },\n        default: false\n      });\n    };\n    const hasDimensions = option('image_dimensions');\n    const hasAdvTab = option('image_advtab');\n    const hasUploadTab = option('image_uploadtab');\n    const getPrependUrl = option('image_prepend_url');\n    const getClassList = option('image_class_list');\n    const hasDescription = option('image_description');\n    const hasImageTitle = option('image_title');\n    const hasImageCaption = option('image_caption');\n    const getImageList = option('image_list');\n    const showAccessibilityOptions = option('a11y_advanced_options');\n    const isAutomaticUploadsEnabled = option('automatic_uploads');\n    const hasUploadUrl = editor => isNotEmpty(editor.options.get('images_upload_url'));\n    const hasUploadHandler = editor => isNonNullable(editor.options.get('images_upload_handler'));\n\n    const parseIntAndGetMax = (val1, val2) => Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    const getImageSize = url => new Promise(callback => {\n      const img = document.createElement('img');\n      const done = dimensions => {\n        img.onload = img.onerror = null;\n        if (img.parentNode) {\n          img.parentNode.removeChild(img);\n        }\n        callback(dimensions);\n      };\n      img.onload = () => {\n        const width = parseIntAndGetMax(img.width, img.clientWidth);\n        const height = parseIntAndGetMax(img.height, img.clientHeight);\n        const dimensions = {\n          width,\n          height\n        };\n        done(Promise.resolve(dimensions));\n      };\n      img.onerror = () => {\n        done(Promise.reject(`Failed to get image dimensions for: ${ url }`));\n      };\n      const style = img.style;\n      style.visibility = 'hidden';\n      style.position = 'fixed';\n      style.bottom = style.left = '0px';\n      style.width = style.height = 'auto';\n      document.body.appendChild(img);\n      img.src = url;\n    });\n    const removePixelSuffix = value => {\n      if (value) {\n        value = value.replace(/px$/, '');\n      }\n      return value;\n    };\n    const addPixelSuffix = value => {\n      if (value.length > 0 && /^[0-9]+$/.test(value)) {\n        value += 'px';\n      }\n      return value;\n    };\n    const mergeMargins = css => {\n      if (css.margin) {\n        const splitMargin = String(css.margin).split(' ');\n        switch (splitMargin.length) {\n        case 1:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[0];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[0];\n          break;\n        case 2:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 3:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 4:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[3];\n        }\n        delete css.margin;\n      }\n      return css;\n    };\n    const createImageList = (editor, callback) => {\n      const imageList = getImageList(editor);\n      if (isString(imageList)) {\n        fetch(imageList).then(res => {\n          if (res.ok) {\n            res.json().then(callback);\n          }\n        });\n      } else if (isFunction(imageList)) {\n        imageList(callback);\n      } else {\n        callback(imageList);\n      }\n    };\n    const waitLoadImage = (editor, data, imgElm) => {\n      const selectImage = () => {\n        imgElm.onload = imgElm.onerror = null;\n        if (editor.selection) {\n          editor.selection.select(imgElm);\n          editor.nodeChanged();\n        }\n      };\n      imgElm.onload = () => {\n        if (!data.width && !data.height && hasDimensions(editor)) {\n          editor.dom.setAttribs(imgElm, {\n            width: String(imgElm.clientWidth),\n            height: String(imgElm.clientHeight)\n          });\n        }\n        selectImage();\n      };\n      imgElm.onerror = selectImage;\n    };\n    const blobToDataUri = blob => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.onerror = () => {\n        var _a;\n        reject((_a = reader.error) === null || _a === void 0 ? void 0 : _a.message);\n      };\n      reader.readAsDataURL(blob);\n    });\n    const isPlaceholderImage = imgElm => imgElm.nodeName === 'IMG' && (imgElm.hasAttribute('data-mce-object') || imgElm.hasAttribute('data-mce-placeholder'));\n    const isSafeImageUrl = (editor, src) => {\n      const getOption = editor.options.get;\n      return global$2.isDomSafe(src, 'img', {\n        allow_html_data_urls: getOption('allow_html_data_urls'),\n        allow_script_urls: getOption('allow_script_urls'),\n        allow_svg_data_urls: getOption('allow_svg_data_urls')\n      });\n    };\n\n    const DOM = global$3.DOM;\n    const getHspace = image => {\n      if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n        return removePixelSuffix(image.style.marginLeft);\n      } else {\n        return '';\n      }\n    };\n    const getVspace = image => {\n      if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n        return removePixelSuffix(image.style.marginTop);\n      } else {\n        return '';\n      }\n    };\n    const getBorder = image => {\n      if (image.style.borderWidth) {\n        return removePixelSuffix(image.style.borderWidth);\n      } else {\n        return '';\n      }\n    };\n    const getAttrib = (image, name) => {\n      var _a;\n      if (image.hasAttribute(name)) {\n        return (_a = image.getAttribute(name)) !== null && _a !== void 0 ? _a : '';\n      } else {\n        return '';\n      }\n    };\n    const hasCaption = image => image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    const updateAttrib = (image, name, value) => {\n      if (value === '' || value === null) {\n        image.removeAttribute(name);\n      } else {\n        image.setAttribute(name, value);\n      }\n    };\n    const wrapInFigure = image => {\n      const figureElm = DOM.create('figure', { class: 'image' });\n      DOM.insertAfter(figureElm, image);\n      figureElm.appendChild(image);\n      figureElm.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n      figureElm.contentEditable = 'false';\n    };\n    const removeFigure = image => {\n      const figureElm = image.parentNode;\n      if (isNonNullable(figureElm)) {\n        DOM.insertAfter(image, figureElm);\n        DOM.remove(figureElm);\n      }\n    };\n    const toggleCaption = image => {\n      if (hasCaption(image)) {\n        removeFigure(image);\n      } else {\n        wrapInFigure(image);\n      }\n    };\n    const normalizeStyle = (image, normalizeCss) => {\n      const attrValue = image.getAttribute('style');\n      const value = normalizeCss(attrValue !== null ? attrValue : '');\n      if (value.length > 0) {\n        image.setAttribute('style', value);\n        image.setAttribute('data-mce-style', value);\n      } else {\n        image.removeAttribute('style');\n      }\n    };\n    const setSize = (name, normalizeCss) => (image, name, value) => {\n      const styles = image.style;\n      if (styles[name]) {\n        styles[name] = addPixelSuffix(value);\n        normalizeStyle(image, normalizeCss);\n      } else {\n        updateAttrib(image, name, value);\n      }\n    };\n    const getSize = (image, name) => {\n      if (image.style[name]) {\n        return removePixelSuffix(image.style[name]);\n      } else {\n        return getAttrib(image, name);\n      }\n    };\n    const setHspace = (image, value) => {\n      const pxValue = addPixelSuffix(value);\n      image.style.marginLeft = pxValue;\n      image.style.marginRight = pxValue;\n    };\n    const setVspace = (image, value) => {\n      const pxValue = addPixelSuffix(value);\n      image.style.marginTop = pxValue;\n      image.style.marginBottom = pxValue;\n    };\n    const setBorder = (image, value) => {\n      const pxValue = addPixelSuffix(value);\n      image.style.borderWidth = pxValue;\n    };\n    const setBorderStyle = (image, value) => {\n      image.style.borderStyle = value;\n    };\n    const getBorderStyle = image => {\n      var _a;\n      return (_a = image.style.borderStyle) !== null && _a !== void 0 ? _a : '';\n    };\n    const isFigure = elm => isNonNullable(elm) && elm.nodeName === 'FIGURE';\n    const isImage = elm => elm.nodeName === 'IMG';\n    const getIsDecorative = image => DOM.getAttrib(image, 'alt').length === 0 && DOM.getAttrib(image, 'role') === 'presentation';\n    const getAlt = image => {\n      if (getIsDecorative(image)) {\n        return '';\n      } else {\n        return getAttrib(image, 'alt');\n      }\n    };\n    const defaultData = () => ({\n      src: '',\n      alt: '',\n      title: '',\n      width: '',\n      height: '',\n      class: '',\n      style: '',\n      caption: false,\n      hspace: '',\n      vspace: '',\n      border: '',\n      borderStyle: '',\n      isDecorative: false\n    });\n    const getStyleValue = (normalizeCss, data) => {\n      var _a;\n      const image = document.createElement('img');\n      updateAttrib(image, 'style', data.style);\n      if (getHspace(image) || data.hspace !== '') {\n        setHspace(image, data.hspace);\n      }\n      if (getVspace(image) || data.vspace !== '') {\n        setVspace(image, data.vspace);\n      }\n      if (getBorder(image) || data.border !== '') {\n        setBorder(image, data.border);\n      }\n      if (getBorderStyle(image) || data.borderStyle !== '') {\n        setBorderStyle(image, data.borderStyle);\n      }\n      return normalizeCss((_a = image.getAttribute('style')) !== null && _a !== void 0 ? _a : '');\n    };\n    const create = (normalizeCss, data) => {\n      const image = document.createElement('img');\n      write(normalizeCss, {\n        ...data,\n        caption: false\n      }, image);\n      setAlt(image, data.alt, data.isDecorative);\n      if (data.caption) {\n        const figure = DOM.create('figure', { class: 'image' });\n        figure.appendChild(image);\n        figure.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n        figure.contentEditable = 'false';\n        return figure;\n      } else {\n        return image;\n      }\n    };\n    const read = (normalizeCss, image) => ({\n      src: getAttrib(image, 'src'),\n      alt: getAlt(image),\n      title: getAttrib(image, 'title'),\n      width: getSize(image, 'width'),\n      height: getSize(image, 'height'),\n      class: getAttrib(image, 'class'),\n      style: normalizeCss(getAttrib(image, 'style')),\n      caption: hasCaption(image),\n      hspace: getHspace(image),\n      vspace: getVspace(image),\n      border: getBorder(image),\n      borderStyle: getBorderStyle(image),\n      isDecorative: getIsDecorative(image)\n    });\n    const updateProp = (image, oldData, newData, name, set) => {\n      if (newData[name] !== oldData[name]) {\n        set(image, name, String(newData[name]));\n      }\n    };\n    const setAlt = (image, alt, isDecorative) => {\n      if (isDecorative) {\n        DOM.setAttrib(image, 'role', 'presentation');\n        const sugarImage = SugarElement.fromDom(image);\n        set(sugarImage, 'alt', '');\n      } else {\n        if (isNull(alt)) {\n          const sugarImage = SugarElement.fromDom(image);\n          remove(sugarImage, 'alt');\n        } else {\n          const sugarImage = SugarElement.fromDom(image);\n          set(sugarImage, 'alt', alt);\n        }\n        if (DOM.getAttrib(image, 'role') === 'presentation') {\n          DOM.setAttrib(image, 'role', '');\n        }\n      }\n    };\n    const updateAlt = (image, oldData, newData) => {\n      if (newData.alt !== oldData.alt || newData.isDecorative !== oldData.isDecorative) {\n        setAlt(image, newData.alt, newData.isDecorative);\n      }\n    };\n    const normalized = (set, normalizeCss) => (image, name, value) => {\n      set(image, value);\n      normalizeStyle(image, normalizeCss);\n    };\n    const write = (normalizeCss, newData, image) => {\n      const oldData = read(normalizeCss, image);\n      updateProp(image, oldData, newData, 'caption', (image, _name, _value) => toggleCaption(image));\n      updateProp(image, oldData, newData, 'src', updateAttrib);\n      updateProp(image, oldData, newData, 'title', updateAttrib);\n      updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n      updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n      updateProp(image, oldData, newData, 'class', updateAttrib);\n      updateProp(image, oldData, newData, 'style', normalized((image, value) => updateAttrib(image, 'style', value), normalizeCss));\n      updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n      updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n      updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n      updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n      updateAlt(image, oldData, newData);\n    };\n\n    const normalizeCss$1 = (editor, cssText) => {\n      const css = editor.dom.styles.parse(cssText);\n      const mergedCss = mergeMargins(css);\n      const compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n      return editor.dom.styles.serialize(compressed);\n    };\n    const getSelectedImage = editor => {\n      const imgElm = editor.selection.getNode();\n      const figureElm = editor.dom.getParent(imgElm, 'figure.image');\n      if (figureElm) {\n        return editor.dom.select('img', figureElm)[0];\n      }\n      if (imgElm && (imgElm.nodeName !== 'IMG' || isPlaceholderImage(imgElm))) {\n        return null;\n      }\n      return imgElm;\n    };\n    const splitTextBlock = (editor, figure) => {\n      var _a;\n      const dom = editor.dom;\n      const textBlockElements = filter(editor.schema.getTextBlockElements(), (_, parentElm) => !editor.schema.isValidChild(parentElm, 'figure'));\n      const textBlock = dom.getParent(figure.parentNode, node => hasNonNullableKey(textBlockElements, node.nodeName), editor.getBody());\n      if (textBlock) {\n        return (_a = dom.split(textBlock, figure)) !== null && _a !== void 0 ? _a : figure;\n      } else {\n        return figure;\n      }\n    };\n    const readImageDataFromSelection = editor => {\n      const image = getSelectedImage(editor);\n      return image ? read(css => normalizeCss$1(editor, css), image) : defaultData();\n    };\n    const insertImageAtCaret = (editor, data) => {\n      const elm = create(css => normalizeCss$1(editor, css), data);\n      editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n      editor.focus();\n      editor.selection.setContent(elm.outerHTML);\n      const insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n      editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n      if (isFigure(insertedElm)) {\n        const figure = splitTextBlock(editor, insertedElm);\n        editor.selection.select(figure);\n      } else {\n        editor.selection.select(insertedElm);\n      }\n    };\n    const syncSrcAttr = (editor, image) => {\n      editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    const deleteImage = (editor, image) => {\n      if (image) {\n        const elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n        editor.dom.remove(elm);\n        editor.focus();\n        editor.nodeChanged();\n        if (editor.dom.isEmpty(editor.getBody())) {\n          editor.setContent('');\n          editor.selection.setCursorLocation();\n        }\n      }\n    };\n    const writeImageDataToSelection = (editor, data) => {\n      const image = getSelectedImage(editor);\n      if (image) {\n        write(css => normalizeCss$1(editor, css), data, image);\n        syncSrcAttr(editor, image);\n        if (isFigure(image.parentNode)) {\n          const figure = image.parentNode;\n          splitTextBlock(editor, figure);\n          editor.selection.select(image.parentNode);\n        } else {\n          editor.selection.select(image);\n          waitLoadImage(editor, data, image);\n        }\n      }\n    };\n    const sanitizeImageData = (editor, data) => {\n      const src = data.src;\n      return {\n        ...data,\n        src: isSafeImageUrl(editor, src) ? src : ''\n      };\n    };\n    const insertOrUpdateImage = (editor, partialData) => {\n      const image = getSelectedImage(editor);\n      if (image) {\n        const selectedImageData = read(css => normalizeCss$1(editor, css), image);\n        const data = {\n          ...selectedImageData,\n          ...partialData\n        };\n        const sanitizedData = sanitizeImageData(editor, data);\n        if (data.src) {\n          writeImageDataToSelection(editor, sanitizedData);\n        } else {\n          deleteImage(editor, image);\n        }\n      } else if (partialData.src) {\n        insertImageAtCaret(editor, {\n          ...defaultData(),\n          ...partialData\n        });\n      }\n    };\n\n    const deep = (old, nu) => {\n      const bothObjects = isPlainObject(old) && isPlainObject(nu);\n      return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    const baseMerge = merger => {\n      return (...objects) => {\n        if (objects.length === 0) {\n          throw new Error(`Can't merge zero objects`);\n        }\n        const ret = {};\n        for (let j = 0; j < objects.length; j++) {\n          const curObject = objects[j];\n          for (const key in curObject) {\n            if (has(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    const deepMerge = baseMerge(deep);\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.ImageUploader');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const getValue = item => isString(item.value) ? item.value : '';\n    const getText = item => {\n      if (isString(item.text)) {\n        return item.text;\n      } else if (isString(item.title)) {\n        return item.title;\n      } else {\n        return '';\n      }\n    };\n    const sanitizeList = (list, extractValue) => {\n      const out = [];\n      global.each(list, item => {\n        const text = getText(item);\n        if (item.menu !== undefined) {\n          const items = sanitizeList(item.menu, extractValue);\n          out.push({\n            text,\n            items\n          });\n        } else {\n          const value = extractValue(item);\n          out.push({\n            text,\n            value\n          });\n        }\n      });\n      return out;\n    };\n    const sanitizer = (extractor = getValue) => list => {\n      if (list) {\n        return Optional.from(list).map(list => sanitizeList(list, extractor));\n      } else {\n        return Optional.none();\n      }\n    };\n    const sanitize = list => sanitizer(getValue)(list);\n    const isGroup = item => has(item, 'items');\n    const findEntryDelegate = (list, value) => findMap(list, item => {\n      if (isGroup(item)) {\n        return findEntryDelegate(item.items, value);\n      } else if (item.value === value) {\n        return Optional.some(item);\n      } else {\n        return Optional.none();\n      }\n    });\n    const findEntry = (optList, value) => optList.bind(list => findEntryDelegate(list, value));\n    const ListUtils = {\n      sanitizer,\n      sanitize,\n      findEntry\n    };\n\n    const makeTab$2 = _info => ({\n      title: 'Advanced',\n      name: 'advanced',\n      items: [{\n          type: 'grid',\n          columns: 2,\n          items: [\n            {\n              type: 'input',\n              label: 'Vertical space',\n              name: 'vspace',\n              inputMode: 'numeric'\n            },\n            {\n              type: 'input',\n              label: 'Horizontal space',\n              name: 'hspace',\n              inputMode: 'numeric'\n            },\n            {\n              type: 'input',\n              label: 'Border width',\n              name: 'border',\n              inputMode: 'numeric'\n            },\n            {\n              type: 'listbox',\n              name: 'borderstyle',\n              label: 'Border style',\n              items: [\n                {\n                  text: 'Select...',\n                  value: ''\n                },\n                {\n                  text: 'Solid',\n                  value: 'solid'\n                },\n                {\n                  text: 'Dotted',\n                  value: 'dotted'\n                },\n                {\n                  text: 'Dashed',\n                  value: 'dashed'\n                },\n                {\n                  text: 'Double',\n                  value: 'double'\n                },\n                {\n                  text: 'Groove',\n                  value: 'groove'\n                },\n                {\n                  text: 'Ridge',\n                  value: 'ridge'\n                },\n                {\n                  text: 'Inset',\n                  value: 'inset'\n                },\n                {\n                  text: 'Outset',\n                  value: 'outset'\n                },\n                {\n                  text: 'None',\n                  value: 'none'\n                },\n                {\n                  text: 'Hidden',\n                  value: 'hidden'\n                }\n              ]\n            }\n          ]\n        }]\n    });\n    const AdvTab = { makeTab: makeTab$2 };\n\n    const collect = editor => {\n      const urlListSanitizer = ListUtils.sanitizer(item => editor.convertURL(item.value || item.url || '', 'src'));\n      const futureImageList = new Promise(completer => {\n        createImageList(editor, imageList => {\n          completer(urlListSanitizer(imageList).map(items => flatten([\n            [{\n                text: 'None',\n                value: ''\n              }],\n            items\n          ])));\n        });\n      });\n      const classList = ListUtils.sanitize(getClassList(editor));\n      const hasAdvTab$1 = hasAdvTab(editor);\n      const hasUploadTab$1 = hasUploadTab(editor);\n      const hasUploadUrl$1 = hasUploadUrl(editor);\n      const hasUploadHandler$1 = hasUploadHandler(editor);\n      const image = readImageDataFromSelection(editor);\n      const hasDescription$1 = hasDescription(editor);\n      const hasImageTitle$1 = hasImageTitle(editor);\n      const hasDimensions$1 = hasDimensions(editor);\n      const hasImageCaption$1 = hasImageCaption(editor);\n      const hasAccessibilityOptions = showAccessibilityOptions(editor);\n      const automaticUploads = isAutomaticUploadsEnabled(editor);\n      const prependURL = Optional.some(getPrependUrl(editor)).filter(preUrl => isString(preUrl) && preUrl.length > 0);\n      return futureImageList.then(imageList => ({\n        image,\n        imageList,\n        classList,\n        hasAdvTab: hasAdvTab$1,\n        hasUploadTab: hasUploadTab$1,\n        hasUploadUrl: hasUploadUrl$1,\n        hasUploadHandler: hasUploadHandler$1,\n        hasDescription: hasDescription$1,\n        hasImageTitle: hasImageTitle$1,\n        hasDimensions: hasDimensions$1,\n        hasImageCaption: hasImageCaption$1,\n        prependURL,\n        hasAccessibilityOptions,\n        automaticUploads\n      }));\n    };\n\n    const makeItems = info => {\n      const imageUrl = {\n        name: 'src',\n        type: 'urlinput',\n        filetype: 'image',\n        label: 'Source',\n        picker_text: 'Browse files'\n      };\n      const imageList = info.imageList.map(items => ({\n        name: 'images',\n        type: 'listbox',\n        label: 'Image list',\n        items\n      }));\n      const imageDescription = {\n        name: 'alt',\n        type: 'input',\n        label: 'Alternative description',\n        enabled: !(info.hasAccessibilityOptions && info.image.isDecorative)\n      };\n      const imageTitle = {\n        name: 'title',\n        type: 'input',\n        label: 'Image title'\n      };\n      const imageDimensions = {\n        name: 'dimensions',\n        type: 'sizeinput'\n      };\n      const isDecorative = {\n        type: 'label',\n        label: 'Accessibility',\n        items: [{\n            name: 'isDecorative',\n            type: 'checkbox',\n            label: 'Image is decorative'\n          }]\n      };\n      const classList = info.classList.map(items => ({\n        name: 'classes',\n        type: 'listbox',\n        label: 'Class',\n        items\n      }));\n      const caption = {\n        type: 'label',\n        label: 'Caption',\n        items: [{\n            type: 'checkbox',\n            name: 'caption',\n            label: 'Show caption'\n          }]\n      };\n      const getDialogContainerType = useColumns => useColumns ? {\n        type: 'grid',\n        columns: 2\n      } : { type: 'panel' };\n      return flatten([\n        [imageUrl],\n        imageList.toArray(),\n        info.hasAccessibilityOptions && info.hasDescription ? [isDecorative] : [],\n        info.hasDescription ? [imageDescription] : [],\n        info.hasImageTitle ? [imageTitle] : [],\n        info.hasDimensions ? [imageDimensions] : [],\n        [{\n            ...getDialogContainerType(info.classList.isSome() && info.hasImageCaption),\n            items: flatten([\n              classList.toArray(),\n              info.hasImageCaption ? [caption] : []\n            ])\n          }]\n      ]);\n    };\n    const makeTab$1 = info => ({\n      title: 'General',\n      name: 'general',\n      items: makeItems(info)\n    });\n    const MainTab = {\n      makeTab: makeTab$1,\n      makeItems\n    };\n\n    const makeTab = _info => {\n      const items = [{\n          type: 'dropzone',\n          name: 'fileinput'\n        }];\n      return {\n        title: 'Upload',\n        name: 'upload',\n        items\n      };\n    };\n    const UploadTab = { makeTab };\n\n    const createState = info => ({\n      prevImage: ListUtils.findEntry(info.imageList, info.image.src),\n      prevAlt: info.image.alt,\n      open: true\n    });\n    const fromImageData = image => ({\n      src: {\n        value: image.src,\n        meta: {}\n      },\n      images: image.src,\n      alt: image.alt,\n      title: image.title,\n      dimensions: {\n        width: image.width,\n        height: image.height\n      },\n      classes: image.class,\n      caption: image.caption,\n      style: image.style,\n      vspace: image.vspace,\n      border: image.border,\n      hspace: image.hspace,\n      borderstyle: image.borderStyle,\n      fileinput: [],\n      isDecorative: image.isDecorative\n    });\n    const toImageData = (data, removeEmptyAlt) => ({\n      src: data.src.value,\n      alt: (data.alt === null || data.alt.length === 0) && removeEmptyAlt ? null : data.alt,\n      title: data.title,\n      width: data.dimensions.width,\n      height: data.dimensions.height,\n      class: data.classes,\n      style: data.style,\n      caption: data.caption,\n      hspace: data.hspace,\n      vspace: data.vspace,\n      border: data.border,\n      borderStyle: data.borderstyle,\n      isDecorative: data.isDecorative\n    });\n    const addPrependUrl2 = (info, srcURL) => {\n      if (!/^(?:[a-zA-Z]+:)?\\/\\//.test(srcURL)) {\n        return info.prependURL.bind(prependUrl => {\n          if (srcURL.substring(0, prependUrl.length) !== prependUrl) {\n            return Optional.some(prependUrl + srcURL);\n          }\n          return Optional.none();\n        });\n      }\n      return Optional.none();\n    };\n    const addPrependUrl = (info, api) => {\n      const data = api.getData();\n      addPrependUrl2(info, data.src.value).each(srcURL => {\n        api.setData({\n          src: {\n            value: srcURL,\n            meta: data.src.meta\n          }\n        });\n      });\n    };\n    const formFillFromMeta2 = (info, data, meta) => {\n      if (info.hasDescription && isString(meta.alt)) {\n        data.alt = meta.alt;\n      }\n      if (info.hasAccessibilityOptions) {\n        data.isDecorative = meta.isDecorative || data.isDecorative || false;\n      }\n      if (info.hasImageTitle && isString(meta.title)) {\n        data.title = meta.title;\n      }\n      if (info.hasDimensions) {\n        if (isString(meta.width)) {\n          data.dimensions.width = meta.width;\n        }\n        if (isString(meta.height)) {\n          data.dimensions.height = meta.height;\n        }\n      }\n      if (isString(meta.class)) {\n        ListUtils.findEntry(info.classList, meta.class).each(entry => {\n          data.classes = entry.value;\n        });\n      }\n      if (info.hasImageCaption) {\n        if (isBoolean(meta.caption)) {\n          data.caption = meta.caption;\n        }\n      }\n      if (info.hasAdvTab) {\n        if (isString(meta.style)) {\n          data.style = meta.style;\n        }\n        if (isString(meta.vspace)) {\n          data.vspace = meta.vspace;\n        }\n        if (isString(meta.border)) {\n          data.border = meta.border;\n        }\n        if (isString(meta.hspace)) {\n          data.hspace = meta.hspace;\n        }\n        if (isString(meta.borderstyle)) {\n          data.borderstyle = meta.borderstyle;\n        }\n      }\n    };\n    const formFillFromMeta = (info, api) => {\n      const data = api.getData();\n      const meta = data.src.meta;\n      if (meta !== undefined) {\n        const newData = deepMerge({}, data);\n        formFillFromMeta2(info, newData, meta);\n        api.setData(newData);\n      }\n    };\n    const calculateImageSize = (helpers, info, state, api) => {\n      const data = api.getData();\n      const url = data.src.value;\n      const meta = data.src.meta || {};\n      if (!meta.width && !meta.height && info.hasDimensions) {\n        if (isNotEmpty(url)) {\n          helpers.imageSize(url).then(size => {\n            if (state.open) {\n              api.setData({ dimensions: size });\n            }\n          }).catch(e => console.error(e));\n        } else {\n          api.setData({\n            dimensions: {\n              width: '',\n              height: ''\n            }\n          });\n        }\n      }\n    };\n    const updateImagesDropdown = (info, state, api) => {\n      const data = api.getData();\n      const image = ListUtils.findEntry(info.imageList, data.src.value);\n      state.prevImage = image;\n      api.setData({ images: image.map(entry => entry.value).getOr('') });\n    };\n    const changeSrc = (helpers, info, state, api) => {\n      addPrependUrl(info, api);\n      formFillFromMeta(info, api);\n      calculateImageSize(helpers, info, state, api);\n      updateImagesDropdown(info, state, api);\n    };\n    const changeImages = (helpers, info, state, api) => {\n      const data = api.getData();\n      const image = ListUtils.findEntry(info.imageList, data.images);\n      image.each(img => {\n        const updateAlt = data.alt === '' || state.prevImage.map(image => image.text === data.alt).getOr(false);\n        if (updateAlt) {\n          if (img.value === '') {\n            api.setData({\n              src: img,\n              alt: state.prevAlt\n            });\n          } else {\n            api.setData({\n              src: img,\n              alt: img.text\n            });\n          }\n        } else {\n          api.setData({ src: img });\n        }\n      });\n      state.prevImage = image;\n      changeSrc(helpers, info, state, api);\n    };\n    const changeFileInput = (helpers, info, state, api) => {\n      const data = api.getData();\n      api.block('Uploading image');\n      head(data.fileinput).fold(() => {\n        api.unblock();\n      }, file => {\n        const blobUri = URL.createObjectURL(file);\n        const finalize = () => {\n          api.unblock();\n          URL.revokeObjectURL(blobUri);\n        };\n        const updateSrcAndSwitchTab = url => {\n          api.setData({\n            src: {\n              value: url,\n              meta: {}\n            }\n          });\n          api.showTab('general');\n          changeSrc(helpers, info, state, api);\n        };\n        blobToDataUri(file).then(dataUrl => {\n          const blobInfo = helpers.createBlobCache(file, blobUri, dataUrl);\n          if (info.automaticUploads) {\n            helpers.uploadImage(blobInfo).then(result => {\n              updateSrcAndSwitchTab(result.url);\n              finalize();\n            }).catch(err => {\n              finalize();\n              helpers.alertErr(err);\n            });\n          } else {\n            helpers.addToBlobCache(blobInfo);\n            updateSrcAndSwitchTab(blobInfo.blobUri());\n            api.unblock();\n          }\n        });\n      });\n    };\n    const changeHandler = (helpers, info, state) => (api, evt) => {\n      if (evt.name === 'src') {\n        changeSrc(helpers, info, state, api);\n      } else if (evt.name === 'images') {\n        changeImages(helpers, info, state, api);\n      } else if (evt.name === 'alt') {\n        state.prevAlt = api.getData().alt;\n      } else if (evt.name === 'fileinput') {\n        changeFileInput(helpers, info, state, api);\n      } else if (evt.name === 'isDecorative') {\n        api.setEnabled('alt', !api.getData().isDecorative);\n      }\n    };\n    const closeHandler = state => () => {\n      state.open = false;\n    };\n    const makeDialogBody = info => {\n      if (info.hasAdvTab || info.hasUploadUrl || info.hasUploadHandler) {\n        const tabPanel = {\n          type: 'tabpanel',\n          tabs: flatten([\n            [MainTab.makeTab(info)],\n            info.hasAdvTab ? [AdvTab.makeTab(info)] : [],\n            info.hasUploadTab && (info.hasUploadUrl || info.hasUploadHandler) ? [UploadTab.makeTab(info)] : []\n          ])\n        };\n        return tabPanel;\n      } else {\n        const panel = {\n          type: 'panel',\n          items: MainTab.makeItems(info)\n        };\n        return panel;\n      }\n    };\n    const submitHandler = (editor, info, helpers) => api => {\n      const data = deepMerge(fromImageData(info.image), api.getData());\n      const finalData = {\n        ...data,\n        style: getStyleValue(helpers.normalizeCss, toImageData(data, false))\n      };\n      editor.execCommand('mceUpdateImage', false, toImageData(finalData, info.hasAccessibilityOptions));\n      editor.editorUpload.uploadImagesAuto();\n      api.close();\n    };\n    const imageSize = editor => url => {\n      if (!isSafeImageUrl(editor, url)) {\n        return Promise.resolve({\n          width: '',\n          height: ''\n        });\n      } else {\n        return getImageSize(editor.documentBaseURI.toAbsolute(url)).then(dimensions => ({\n          width: String(dimensions.width),\n          height: String(dimensions.height)\n        }));\n      }\n    };\n    const createBlobCache = editor => (file, blobUri, dataUrl) => {\n      var _a;\n      return editor.editorUpload.blobCache.create({\n        blob: file,\n        blobUri,\n        name: (_a = file.name) === null || _a === void 0 ? void 0 : _a.replace(/\\.[^\\.]+$/, ''),\n        filename: file.name,\n        base64: dataUrl.split(',')[1]\n      });\n    };\n    const addToBlobCache = editor => blobInfo => {\n      editor.editorUpload.blobCache.add(blobInfo);\n    };\n    const alertErr = editor => message => {\n      editor.windowManager.alert(message);\n    };\n    const normalizeCss = editor => cssText => normalizeCss$1(editor, cssText);\n    const parseStyle = editor => cssText => editor.dom.parseStyle(cssText);\n    const serializeStyle = editor => (stylesArg, name) => editor.dom.serializeStyle(stylesArg, name);\n    const uploadImage = editor => blobInfo => global$1(editor).upload([blobInfo], false).then(results => {\n      var _a;\n      if (results.length === 0) {\n        return Promise.reject('Failed to upload image');\n      } else if (results[0].status === false) {\n        return Promise.reject((_a = results[0].error) === null || _a === void 0 ? void 0 : _a.message);\n      } else {\n        return results[0];\n      }\n    });\n    const Dialog = editor => {\n      const helpers = {\n        imageSize: imageSize(editor),\n        addToBlobCache: addToBlobCache(editor),\n        createBlobCache: createBlobCache(editor),\n        alertErr: alertErr(editor),\n        normalizeCss: normalizeCss(editor),\n        parseStyle: parseStyle(editor),\n        serializeStyle: serializeStyle(editor),\n        uploadImage: uploadImage(editor)\n      };\n      const open = () => {\n        collect(editor).then(info => {\n          const state = createState(info);\n          return {\n            title: 'Insert/Edit Image',\n            size: 'normal',\n            body: makeDialogBody(info),\n            buttons: [\n              {\n                type: 'cancel',\n                name: 'cancel',\n                text: 'Cancel'\n              },\n              {\n                type: 'submit',\n                name: 'save',\n                text: 'Save',\n                primary: true\n              }\n            ],\n            initialData: fromImageData(info.image),\n            onSubmit: submitHandler(editor, info, helpers),\n            onChange: changeHandler(helpers, info, state),\n            onClose: closeHandler(state)\n          };\n        }).then(editor.windowManager.open);\n      };\n      return { open };\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mceImage', Dialog(editor).open);\n      editor.addCommand('mceUpdateImage', (_ui, data) => {\n        editor.undoManager.transact(() => insertOrUpdateImage(editor, data));\n      });\n    };\n\n    const hasImageClass = node => {\n      const className = node.attr('class');\n      return isNonNullable(className) && /\\bimage\\b/.test(className);\n    };\n    const toggleContentEditableState = state => nodes => {\n      let i = nodes.length;\n      const toggleContentEditable = node => {\n        node.attr('contenteditable', state ? 'true' : null);\n      };\n      while (i--) {\n        const node = nodes[i];\n        if (hasImageClass(node)) {\n          node.attr('contenteditable', state ? 'false' : null);\n          global.each(node.getAll('figcaption'), toggleContentEditable);\n        }\n      }\n    };\n    const setup = editor => {\n      editor.on('PreInit', () => {\n        editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n        editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      editor.ui.registry.addToggleButton('image', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onAction: Dialog(editor).open,\n        onSetup: buttonApi => {\n          buttonApi.setActive(isNonNullable(getSelectedImage(editor)));\n          const unbindSelectorChanged = editor.selection.selectorChangedWithUnbind('img:not([data-mce-object]):not([data-mce-placeholder]),figure.image', buttonApi.setActive).unbind;\n          const unbindEditable = onSetupEditable(editor)(buttonApi);\n          return () => {\n            unbindSelectorChanged();\n            unbindEditable();\n          };\n        }\n      });\n      editor.ui.registry.addMenuItem('image', {\n        icon: 'image',\n        text: 'Image...',\n        onAction: Dialog(editor).open,\n        onSetup: onSetupEditable(editor)\n      });\n      editor.ui.registry.addContextMenu('image', { update: element => editor.selection.isEditable() && (isFigure(element) || isImage(element) && !isPlaceholderImage(element)) ? ['image'] : [] });\n    };\n\n    var Plugin = () => {\n      global$4.add('image', editor => {\n        register$2(editor);\n        setup(editor);\n        register(editor);\n        register$1(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$4","getPrototypeOf","hasProto","v","constructor","predicate","_a","typeOf","x","o","proto","isType","type","value","isSimpleType","eq","t","a","is","isObject","isString","isPlainObject","isArray","isNull","isBoolean","isNullable","isNonNullable","isFunction","isNumber","isArrayOf","pred","i","len","noop","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","keys","hasOwnProperty","each","obj","f","props","k","objAcc","r","internalFilter","onTrue","onFalse","filter","has","key","hasNonNullableKey","nativePush","flatten","xs","get","head","findMap","arr","rawSet","dom","set","element","remove","fromHtml","html","scope","div","fromDom","fromTag","node","fromText","text","SugarElement","docElm","y","global$3","global$2","isNotEmpty","s","option","name","editor","register$2","registerOption","valid","hasDimensions","hasAdvTab","hasUploadTab","getPrependUrl","getClassList","hasDescription","hasImageTitle","hasImageCaption","getImageList","showAccessibilityOptions","isAutomaticUploadsEnabled","hasUploadUrl","hasUploadHandler","parseIntAndGetMax","val1","val2","getImageSize","url","callback","img","done","dimensions","width","height","style","removePixelSuffix","addPixelSuffix","mergeMargins","css","splitMargin","createImageList","imageList","res","waitLoadImage","data","imgElm","selectImage","blobToDataUri","blob","resolve","reject","reader","isPlaceholderImage","isSafeImageUrl","src","getOption","DOM","getHspace","image","getVspace","getBorder","getAttrib","hasCaption","updateAttrib","wrapInFigure","figureElm","removeFigure","toggleCaption","normalizeStyle","normalizeCss","attrValue","setSize","styles","getSize","setHspace","pxValue","setVspace","setBorder","setBorderStyle","getBorderStyle","isFigure","elm","isImage","getIsDecorative","getAlt","defaultData","getStyleValue","create","write","setAlt","figure","read","updateProp","oldData","newData","alt","isDecorative","sugarImage","updateAlt","normalized","_name","_value","normalizeCss$1","cssText","mergedCss","compressed","getSelectedImage","splitTextBlock","textBlockElements","_","parentElm","textBlock","readImageDataFromSelection","insertImageAtCaret","insertedElm","syncSrcAttr","deleteImage","writeImageDataToSelection","sanitizeImageData","insertOrUpdateImage","partialData","sanitizedData","deepMerge","merger","objects","ret","j","curObject","old","nu","global$1","global","getValue","item","getText","sanitizeList","list","extractValue","out","items","sanitizer","extractor","sanitize","isGroup","findEntryDelegate","ListUtils","optList","AdvTab","_info","collect","urlListSanitizer","futureImageList","completer","classList","hasAdvTab$1","hasUploadTab$1","hasUploadUrl$1","hasUploadHandler$1","hasDescription$1","hasImageTitle$1","hasDimensions$1","hasImageCaption$1","hasAccessibilityOptions","automaticUploads","prependURL","preUrl","makeItems","info","imageUrl","imageDescription","imageTitle","imageDimensions","caption","getDialogContainerType","useColumns","MainTab","UploadTab","createState","fromImageData","toImageData","removeEmptyAlt","addPrependUrl2","srcURL","prependUrl","addPrependUrl","api","formFillFromMeta2","meta","entry","formFillFromMeta","calculateImageSize","helpers","state","size","e","updateImagesDropdown","changeSrc","changeImages","changeFileInput","file","blobUri","finalize","updateSrcAndSwitchTab","dataUrl","blobInfo","result","err","changeHandler","evt","closeHandler","makeDialogBody","submitHandler","finalData","imageSize","createBlobCache","addToBlobCache","alertErr","parseStyle","serializeStyle","stylesArg","uploadImage","results","Dialog","register$1","_ui","hasImageClass","className","toggleContentEditableState","nodes","toggleContentEditable","setup","onSetupEditable","nodeChanged","register","buttonApi","unbindSelectorChanged","unbindEditable","Plugin"],"mappings":"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","x_google_ignoreList":[0]}