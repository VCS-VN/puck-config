{"version":3,"file":"index-DYyWaWqJ.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/advlist/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const applyListFormat = (editor, listName, styleValue) => {\n      const cmd = listName === 'UL' ? 'InsertUnorderedList' : 'InsertOrderedList';\n      editor.execCommand(cmd, false, styleValue === false ? null : { 'list-style-type': styleValue });\n    };\n\n    const register$2 = editor => {\n      editor.addCommand('ApplyUnorderedListStyle', (ui, value) => {\n        applyListFormat(editor, 'UL', value['list-style-type']);\n      });\n      editor.addCommand('ApplyOrderedListStyle', (ui, value) => {\n        applyListFormat(editor, 'OL', value['list-style-type']);\n      });\n    };\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('advlist_number_styles', {\n        processor: 'string[]',\n        default: 'default,lower-alpha,lower-greek,lower-roman,upper-alpha,upper-roman'.split(',')\n      });\n      registerOption('advlist_bullet_styles', {\n        processor: 'string[]',\n        default: 'default,circle,square'.split(',')\n      });\n    };\n    const getNumberStyles = option('advlist_number_styles');\n    const getBulletStyles = option('advlist_bullet_styles');\n\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n\n    const isCustomList = list => /\\btox\\-/.test(list.className);\n    const isChildOfBody = (editor, elm) => {\n      return editor.dom.isChildOf(elm, editor.getBody());\n    };\n    const matchNodeNames = regex => node => isNonNullable(node) && regex.test(node.nodeName);\n    const isListNode = matchNodeNames(/^(OL|UL|DL)$/);\n    const isTableCellNode = matchNodeNames(/^(TH|TD)$/);\n    const inList = (editor, parents, nodeName) => findUntil(parents, parent => isListNode(parent) && !isCustomList(parent), isTableCellNode).exists(list => list.nodeName === nodeName && isChildOfBody(editor, list));\n    const getSelectedStyleType = editor => {\n      const listElm = editor.dom.getParent(editor.selection.getNode(), 'ol,ul');\n      const style = editor.dom.getStyle(listElm, 'listStyleType');\n      return Optional.from(style);\n    };\n    const isWithinNonEditable = (editor, element) => element !== null && !editor.dom.isEditable(element);\n    const isWithinNonEditableList = (editor, element) => {\n      const parentList = editor.dom.getParent(element, 'ol,ul,dl');\n      return isWithinNonEditable(editor, parentList) && editor.selection.isEditable();\n    };\n    const setNodeChangeHandler = (editor, nodeChangeHandler) => {\n      const initialNode = editor.selection.getNode();\n      nodeChangeHandler({\n        parents: editor.dom.getParents(initialNode),\n        element: initialNode\n      });\n      editor.on('NodeChange', nodeChangeHandler);\n      return () => editor.off('NodeChange', nodeChangeHandler);\n    };\n\n    const styleValueToText = styleValue => {\n      return styleValue.replace(/\\-/g, ' ').replace(/\\b\\w/g, chr => {\n        return chr.toUpperCase();\n      });\n    };\n    const normalizeStyleValue = styleValue => isNullable(styleValue) || styleValue === 'default' ? '' : styleValue;\n    const makeSetupHandler = (editor, nodeName) => api => {\n      const updateButtonState = (editor, parents) => {\n        const element = editor.selection.getStart(true);\n        api.setActive(inList(editor, parents, nodeName));\n        api.setEnabled(!isWithinNonEditableList(editor, element) && editor.selection.isEditable());\n      };\n      const nodeChangeHandler = e => updateButtonState(editor, e.parents);\n      return setNodeChangeHandler(editor, nodeChangeHandler);\n    };\n    const addSplitButton = (editor, id, tooltip, cmd, nodeName, styles) => {\n      editor.ui.registry.addSplitButton(id, {\n        tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        presets: 'listpreview',\n        columns: 3,\n        fetch: callback => {\n          const items = global.map(styles, styleValue => {\n            const iconStyle = nodeName === 'OL' ? 'num' : 'bull';\n            const iconName = styleValue === 'disc' || styleValue === 'decimal' ? 'default' : styleValue;\n            const itemValue = normalizeStyleValue(styleValue);\n            const displayText = styleValueToText(styleValue);\n            return {\n              type: 'choiceitem',\n              value: itemValue,\n              icon: 'list-' + iconStyle + '-' + iconName,\n              text: displayText\n            };\n          });\n          callback(items);\n        },\n        onAction: () => editor.execCommand(cmd),\n        onItemAction: (_splitButtonApi, value) => {\n          applyListFormat(editor, nodeName, value);\n        },\n        select: value => {\n          const listStyleType = getSelectedStyleType(editor);\n          return listStyleType.map(listStyle => value === listStyle).getOr(false);\n        },\n        onSetup: makeSetupHandler(editor, nodeName)\n      });\n    };\n    const addButton = (editor, id, tooltip, cmd, nodeName, styleValue) => {\n      editor.ui.registry.addToggleButton(id, {\n        active: false,\n        tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        onSetup: makeSetupHandler(editor, nodeName),\n        onAction: () => editor.queryCommandState(cmd) || styleValue === '' ? editor.execCommand(cmd) : applyListFormat(editor, nodeName, styleValue)\n      });\n    };\n    const addControl = (editor, id, tooltip, cmd, nodeName, styles) => {\n      if (styles.length > 1) {\n        addSplitButton(editor, id, tooltip, cmd, nodeName, styles);\n      } else {\n        addButton(editor, id, tooltip, cmd, nodeName, normalizeStyleValue(styles[0]));\n      }\n    };\n    const register = editor => {\n      addControl(editor, 'numlist', 'Numbered list', 'InsertOrderedList', 'OL', getNumberStyles(editor));\n      addControl(editor, 'bullist', 'Bullet list', 'InsertUnorderedList', 'UL', getBulletStyles(editor));\n    };\n\n    var Plugin = () => {\n      global$1.add('advlist', editor => {\n        if (editor.hasPlugin('lists')) {\n          register$1(editor);\n          register(editor);\n          register$2(editor);\n        } else {\n          console.error('Please use the Lists plugin together with the Advanced List plugin.');\n        }\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","applyListFormat","editor","listName","styleValue","cmd","register$2","ui","value","option","name","register$1","registerOption","getNumberStyles","getBulletStyles","isNullable","a","isNonNullable","global","Optional","tag","onNone","onSome","mapper","binder","predicate","replacement","thunk","message","worker","findUntil","xs","pred","until","i","len","x","isCustomList","list","isChildOfBody","elm","matchNodeNames","node","regex","isListNode","isTableCellNode","inList","parents","nodeName","parent","getSelectedStyleType","listElm","style","isWithinNonEditable","element","isWithinNonEditableList","parentList","setNodeChangeHandler","nodeChangeHandler","initialNode","styleValueToText","chr","normalizeStyleValue","makeSetupHandler","api","updateButtonState","e","addSplitButton","id","tooltip","styles","callback","items","iconStyle","iconName","itemValue","displayText","_splitButtonApi","listStyle","addButton","addControl","register","Plugin"],"mappings":"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","x_google_ignoreList":[0]}