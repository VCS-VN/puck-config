{"version":3,"file":"index-BefdeiXd.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/themes/silver/theme.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    const getPrototypeOf$2 = Object.getPrototypeOf;\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq$1 = t => a => t === a;\n    const is$2 = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf$2(o) === proto);\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isPlainObject = value => is$2(value, Object);\n    const isArray = isType$1('array');\n    const isNull = eq$1(null);\n    const isBoolean = isSimpleType('boolean');\n    const isUndefined = eq$1(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const noop = () => {\n    };\n    const noarg = f => () => f();\n    const compose = (fa, fb) => {\n      return (...args) => {\n        return fa(fb.apply(null, args));\n      };\n    };\n    const compose1 = (fbc, fab) => a => fbc(fab(a));\n    const constant$1 = value => {\n      return () => {\n        return value;\n      };\n    };\n    const identity = x => {\n      return x;\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const not = f => t => !f(t);\n    const die = msg => {\n      return () => {\n        throw new Error(msg);\n      };\n    };\n    const apply$1 = f => {\n      return f();\n    };\n    const never = constant$1(false);\n    const always = constant$1(true);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const indexOf = (xs, x) => {\n      const r = rawIndexOf(xs, x);\n      return r === -1 ? Optional.none() : Optional.some(r);\n    };\n    const contains$2 = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const range$2 = (num, f) => {\n      const r = [];\n      for (let i = 0; i < num; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    const chunk$1 = (array, size) => {\n      const r = [];\n      for (let i = 0; i < array.length; i += size) {\n        const s = nativeSlice.call(array, i, i + size);\n        r.push(s);\n      }\n      return r;\n    };\n    const map$2 = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const eachr = (xs, f) => {\n      for (let i = xs.length - 1; i >= 0; i--) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const partition$3 = (xs, pred) => {\n      const pass = [];\n      const fail = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        const arr = pred(x, i) ? pass : fail;\n        arr.push(x);\n      }\n      return {\n        pass,\n        fail\n      };\n    };\n    const filter$2 = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const foldr = (xs, f, acc) => {\n      eachr(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const foldl = (xs, f, acc) => {\n      each$1(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find$5 = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const findIndex$1 = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(i);\n        }\n      }\n      return Optional.none();\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind$3 = (xs, f) => flatten(map$2(xs, f));\n    const forall = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        const x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    const reverse = xs => {\n      const r = nativeSlice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    const difference = (a1, a2) => filter$2(a1, x => !contains$2(a2, x));\n    const mapToObject = (xs, f) => {\n      const r = {};\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        r[String(x)] = f(x, i);\n      }\n      return r;\n    };\n    const pure$2 = x => [x];\n    const sort = (xs, comparator) => {\n      const copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n    const get$h = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$h(xs, 0);\n    const last$1 = xs => get$h(xs, xs.length - 1);\n    const from = isFunction(Array.from) ? Array.from : x => nativeSlice.call(x);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const map$1 = (obj, f) => {\n      return tupleMap(obj, (x, i) => ({\n        k: i,\n        v: f(x, i)\n      }));\n    };\n    const tupleMap = (obj, f) => {\n      const r = {};\n      each(obj, (x, i) => {\n        const tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const bifilter = (obj, pred) => {\n      const t = {};\n      const f = {};\n      internalFilter(obj, pred, objAcc(t), objAcc(f));\n      return {\n        t,\n        f\n      };\n    };\n    const filter$1 = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const mapToArray = (obj, f) => {\n      const r = [];\n      each(obj, (value, name) => {\n        r.push(f(value, name));\n      });\n      return r;\n    };\n    const find$4 = (obj, pred) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        if (pred(x, i, obj)) {\n          return Optional.some(x);\n        }\n      }\n      return Optional.none();\n    };\n    const values = obj => {\n      return mapToArray(obj, identity);\n    };\n    const get$g = (obj, key) => {\n      return has$2(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has$2 = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has$2(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const is$1 = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const equals = (lhs, rhs, comparator = tripleEquals) => lift2(lhs, rhs, comparator).getOr(lhs.isNone() && rhs.isNone());\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    const sequence = arr => {\n      const r = [];\n      for (let i = 0; i < arr.length; i++) {\n        const x = arr[i];\n        if (x.isSome()) {\n          r.push(x.getOrDie());\n        } else {\n          return Optional.none();\n        }\n      }\n      return Optional.some(r);\n    };\n    const lift2 = (oa, ob, f) => oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n    const lift3 = (oa, ob, oc, f) => oa.isSome() && ob.isSome() && oc.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie(), oc.getOrDie())) : Optional.none();\n    const mapFrom = (a, f) => a !== undefined && a !== null ? Optional.some(f(a)) : Optional.none();\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const addToEnd = (str, suffix) => {\n      return str + suffix;\n    };\n    const removeFromStart = (str, numChars) => {\n      return str.substring(numChars);\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const removeLeading = (str, prefix) => {\n      return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n    };\n    const ensureTrailing = (str, suffix) => {\n      return endsWith(str, suffix) ? str : addToEnd(str, suffix);\n    };\n    const contains$1 = (str, substr, start = 0, end) => {\n      const idx = str.indexOf(substr, start);\n      if (idx !== -1) {\n        return isUndefined(end) ? true : idx + substr.length <= end;\n      } else {\n        return false;\n      }\n    };\n    const startsWith = (str, prefix) => {\n      return checkRange(str, prefix, 0);\n    };\n    const endsWith = (str, suffix) => {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    const blank = r => s => s.replace(r, '');\n    const trim$1 = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = s => s.length > 0;\n    const isEmpty = s => !isNotEmpty(s);\n\n    const isSupported$1 = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const fromHtml$2 = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    const fromDom = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    const SugarElement = {\n      fromHtml: fromHtml$2,\n      fromTag,\n      fromText,\n      fromDom,\n      fromPoint\n    };\n\n    const Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const path$1 = (parts, scope) => {\n      let o = scope !== undefined && scope !== null ? scope : Global;\n      for (let i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    const resolve = (p, scope) => {\n      const parts = p.split('.');\n      return path$1(parts, scope);\n    };\n\n    const unsafe = (name, scope) => {\n      return resolve(name, scope);\n    };\n    const getOrDie$1 = (name, scope) => {\n      const actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n\n    const getPrototypeOf$1 = Object.getPrototypeOf;\n    const sandHTMLElement = scope => {\n      return getOrDie$1('HTMLElement', scope);\n    };\n    const isPrototypeOf = x => {\n      const scope = resolve('ownerDocument.defaultView', x);\n      return isObject(x) && (sandHTMLElement(scope).prototype.isPrototypeOf(x) || /^HTML\\w*Element$/.test(getPrototypeOf$1(x).constructor.name));\n    };\n\n    const DOCUMENT = 9;\n    const DOCUMENT_FRAGMENT = 11;\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const name$3 = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    const type$1 = element => element.dom.nodeType;\n    const isType = t => element => type$1(element) === t;\n    const isHTMLElement = element => isElement$1(element) && isPrototypeOf(element.dom);\n    const isElement$1 = isType(ELEMENT);\n    const isText = isType(TEXT);\n    const isDocument = isType(DOCUMENT);\n    const isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n    const isTag = tag => e => isElement$1(e) && name$3(e) === tag;\n\n    const is = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    const bypassSelector = dom => dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT || dom.childElementCount === 0;\n    const all$3 = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? [] : map$2(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n    const one = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? Optional.none() : Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);\n    };\n\n    const eq = (e1, e2) => e1.dom === e2.dom;\n    const contains = (e1, e2) => {\n      const d1 = e1.dom;\n      const d2 = e2.dom;\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n\n    const owner$4 = element => SugarElement.fromDom(element.dom.ownerDocument);\n    const documentOrOwner = dos => isDocument(dos) ? dos : owner$4(dos);\n    const documentElement = element => SugarElement.fromDom(documentOrOwner(element).dom.documentElement);\n    const defaultView = element => SugarElement.fromDom(documentOrOwner(element).dom.defaultView);\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parentNode = element => parent(element);\n    const parentElement = element => Optional.from(element.dom.parentElement).map(SugarElement.fromDom);\n    const parents = (element, isRoot) => {\n      const stop = isFunction(isRoot) ? isRoot : never;\n      let dom = element.dom;\n      const ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        const rawParent = dom.parentNode;\n        const p = SugarElement.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    const offsetParent = element => Optional.from(element.dom.offsetParent).map(SugarElement.fromDom);\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children = element => map$2(element.dom.childNodes, SugarElement.fromDom);\n    const child$2 = (element, index) => {\n      const cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = element => child$2(element, 0);\n    const spot = (element, offset) => ({\n      element,\n      offset\n    });\n    const leaf = (element, offset) => {\n      const cs = children(element);\n      return cs.length > 0 && offset < cs.length ? spot(cs[offset], 0) : spot(element, offset);\n    };\n\n    const isShadowRoot = dos => isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    const supported = isFunction(Element.prototype.attachShadow) && isFunction(Node.prototype.getRootNode);\n    const isSupported = constant$1(supported);\n    const getRootNode = supported ? e => SugarElement.fromDom(e.dom.getRootNode()) : documentOrOwner;\n    const getContentContainer = dos => isShadowRoot(dos) ? dos : SugarElement.fromDom(documentOrOwner(dos).dom.body);\n    const isInShadowRoot = e => getShadowRoot(e).isSome();\n    const getShadowRoot = e => {\n      const r = getRootNode(e);\n      return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    const getShadowHost = e => SugarElement.fromDom(e.dom.host);\n    const getOriginalEventTarget = event => {\n      if (isSupported() && isNonNullable(event.target)) {\n        const el = SugarElement.fromDom(event.target);\n        if (isElement$1(el) && isOpenShadowHost(el)) {\n          if (event.composed && event.composedPath) {\n            const composedPath = event.composedPath();\n            if (composedPath) {\n              return head(composedPath);\n            }\n          }\n        }\n      }\n      return Optional.from(event.target);\n    };\n    const isOpenShadowHost = element => isNonNullable(element.dom.shadowRoot);\n\n    const inBody = element => {\n      const dom = isText(element) ? element.dom.parentNode : element.dom;\n      if (dom === undefined || dom === null || dom.ownerDocument === null) {\n        return false;\n      }\n      const doc = dom.ownerDocument;\n      return getShadowRoot(SugarElement.fromDom(dom)).fold(() => doc.body.contains(dom), compose1(inBody, getShadowHost));\n    };\n    const body = () => getBody(SugarElement.fromDom(document));\n    const getBody = doc => {\n      const b = doc.dom.body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return SugarElement.fromDom(b);\n    };\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set$9 = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const setAll$1 = (element, attrs) => {\n      const dom = element.dom;\n      each(attrs, (v, k) => {\n        rawSet(dom, k, v);\n      });\n    };\n    const get$f = (element, key) => {\n      const v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    const getOpt = (element, key) => Optional.from(get$f(element, key));\n    const has$1 = (element, key) => {\n      const dom = element.dom;\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    const remove$7 = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n    const clone$2 = element => foldl(element.dom.attributes, (acc, attr) => {\n      acc[attr.name] = attr.value;\n      return acc;\n    }, {});\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported$1(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const internalRemove = (dom, property) => {\n      if (isSupported$1(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    const set$8 = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n    const setAll = (element, css) => {\n      const dom = element.dom;\n      each(css, (v, k) => {\n        internalSet(dom, k, v);\n      });\n    };\n    const setOptions = (element, css) => {\n      const dom = element.dom;\n      each(css, (v, k) => {\n        v.fold(() => {\n          internalRemove(dom, k);\n        }, value => {\n          internalSet(dom, k, value);\n        });\n      });\n    };\n    const get$e = (element, property) => {\n      const dom = element.dom;\n      const styles = window.getComputedStyle(dom);\n      const r = styles.getPropertyValue(property);\n      return r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n    };\n    const getUnsafeProperty = (dom, property) => isSupported$1(dom) ? dom.style.getPropertyValue(property) : '';\n    const getRaw = (element, property) => {\n      const dom = element.dom;\n      const raw = getUnsafeProperty(dom, property);\n      return Optional.from(raw).filter(r => r.length > 0);\n    };\n    const getAllRaw = element => {\n      const css = {};\n      const dom = element.dom;\n      if (isSupported$1(dom)) {\n        for (let i = 0; i < dom.style.length; i++) {\n          const ruleName = dom.style.item(i);\n          css[ruleName] = dom.style[ruleName];\n        }\n      }\n      return css;\n    };\n    const isValidValue$1 = (tag, property, value) => {\n      const element = SugarElement.fromTag(tag);\n      set$8(element, property, value);\n      const style = getRaw(element, property);\n      return style.isSome();\n    };\n    const remove$6 = (element, property) => {\n      const dom = element.dom;\n      internalRemove(dom, property);\n      if (is$1(getOpt(element, 'style').map(trim$1), '')) {\n        remove$7(element, 'style');\n      }\n    };\n    const reflow = e => e.dom.offsetWidth;\n\n    const Dimension = (name, getOffset) => {\n      const set = (element, h) => {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        const dom = element.dom;\n        if (isSupported$1(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      const get = element => {\n        const r = getOffset(element);\n        if (r <= 0 || r === null) {\n          const css = get$e(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      const getOuter = get;\n      const aggregate = (element, properties) => foldl(properties, (acc, property) => {\n        const val = get$e(element, property);\n        const value = val === undefined ? 0 : parseInt(val, 10);\n        return isNaN(value) ? acc : acc + value;\n      }, 0);\n      const max = (element, value, properties) => {\n        const cumulativeInclusions = aggregate(element, properties);\n        const absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set,\n        get,\n        getOuter,\n        aggregate,\n        max\n      };\n    };\n\n    const api$2 = Dimension('height', element => {\n      const dom = element.dom;\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    const get$d = element => api$2.get(element);\n    const getOuter$2 = element => api$2.getOuter(element);\n    const setMax$1 = (element, value) => {\n      const inclusions = [\n        'margin-top',\n        'border-top-width',\n        'padding-top',\n        'padding-bottom',\n        'border-bottom-width',\n        'margin-bottom'\n      ];\n      const absMax = api$2.max(element, value, inclusions);\n      set$8(element, 'max-height', absMax + 'px');\n    };\n\n    const r$1 = (left, top) => {\n      const translate = (x, y) => r$1(left + x, top + y);\n      return {\n        left,\n        top,\n        translate\n      };\n    };\n    const SugarPosition = r$1;\n\n    const boxPosition = dom => {\n      const box = dom.getBoundingClientRect();\n      return SugarPosition(box.left, box.top);\n    };\n    const firstDefinedOrZero = (a, b) => {\n      if (a !== undefined) {\n        return a;\n      } else {\n        return b !== undefined ? b : 0;\n      }\n    };\n    const absolute$3 = element => {\n      const doc = element.dom.ownerDocument;\n      const body = doc.body;\n      const win = doc.defaultView;\n      const html = doc.documentElement;\n      if (body === element.dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      const scrollTop = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageYOffset, html.scrollTop);\n      const scrollLeft = firstDefinedOrZero(win === null || win === void 0 ? void 0 : win.pageXOffset, html.scrollLeft);\n      const clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      const clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport$1(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    const viewport$1 = element => {\n      const dom = element.dom;\n      const doc = dom.ownerDocument;\n      const body = doc.body;\n      if (body === dom) {\n        return SugarPosition(body.offsetLeft, body.offsetTop);\n      }\n      if (!inBody(element)) {\n        return SugarPosition(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    const api$1 = Dimension('width', element => element.dom.offsetWidth);\n    const set$7 = (element, h) => api$1.set(element, h);\n    const get$c = element => api$1.get(element);\n    const getOuter$1 = element => api$1.getOuter(element);\n    const setMax = (element, value) => {\n      const inclusions = [\n        'margin-left',\n        'border-left-width',\n        'padding-left',\n        'padding-right',\n        'border-right-width',\n        'margin-right'\n      ];\n      const absMax = api$1.max(element, value, inclusions);\n      set$8(element, 'max-width', absMax + 'px');\n    };\n\n    const cached = f => {\n      let called = false;\n      let r;\n      return (...args) => {\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    const DeviceType = (os, browser, userAgent, mediaMatch) => {\n      const isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      const isiPhone = os.isiOS() && !isiPad;\n      const isMobile = os.isiOS() || os.isAndroid();\n      const isTouch = isMobile || mediaMatch('(pointer:coarse)');\n      const isTablet = isiPad || !isiPhone && isMobile && mediaMatch('(min-device-width:768px)');\n      const isPhone = isiPhone || isMobile && !isTablet;\n      const iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      const isDesktop = !isPhone && !isTablet && !iOSwebview;\n      return {\n        isiPad: constant$1(isiPad),\n        isiPhone: constant$1(isiPhone),\n        isTablet: constant$1(isTablet),\n        isPhone: constant$1(isPhone),\n        isTouch: constant$1(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant$1(iOSwebview),\n        isDesktop: constant$1(isDesktop)\n      };\n    };\n\n    const firstMatch = (regexes, s) => {\n      for (let i = 0; i < regexes.length; i++) {\n        const x = regexes[i];\n        if (x.test(s)) {\n          return x;\n        }\n      }\n      return undefined;\n    };\n    const find$3 = (regexes, agent) => {\n      const r = firstMatch(regexes, agent);\n      if (!r) {\n        return {\n          major: 0,\n          minor: 0\n        };\n      }\n      const group = i => {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$d(group(1), group(2));\n    };\n    const detect$5 = (versionRegexes, agent) => {\n      const cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0) {\n        return unknown$3();\n      }\n      return find$3(versionRegexes, cleanedAgent);\n    };\n    const unknown$3 = () => {\n      return nu$d(0, 0);\n    };\n    const nu$d = (major, minor) => {\n      return {\n        major,\n        minor\n      };\n    };\n    const Version = {\n      nu: nu$d,\n      detect: detect$5,\n      unknown: unknown$3\n    };\n\n    const detectBrowser$1 = (browsers, userAgentData) => {\n      return findMap(userAgentData.brands, uaBrand => {\n        const lcBrand = uaBrand.brand.toLowerCase();\n        return find$5(browsers, browser => {\n          var _a;\n          return lcBrand === ((_a = browser.brand) === null || _a === void 0 ? void 0 : _a.toLowerCase());\n        }).map(info => ({\n          current: info.name,\n          version: Version.nu(parseInt(uaBrand.version, 10), 0)\n        }));\n      });\n    };\n\n    const detect$4 = (candidates, userAgent) => {\n      const agent = String(userAgent).toLowerCase();\n      return find$5(candidates, candidate => {\n        return candidate.search(agent);\n      });\n    };\n    const detectBrowser = (browsers, userAgent) => {\n      return detect$4(browsers, userAgent).map(browser => {\n        const version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version\n        };\n      });\n    };\n    const detectOs = (oses, userAgent) => {\n      return detect$4(oses, userAgent).map(os => {\n        const version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version\n        };\n      });\n    };\n\n    const normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    const checkContains = target => {\n      return uastring => {\n        return contains$1(uastring, target);\n      };\n    };\n    const browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: uastring => {\n          return contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n        }\n      },\n      {\n        name: 'Chromium',\n        brand: 'Chromium',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: uastring => {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: uastring => {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: uastring => {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    const oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: uastring => {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'macOS',\n        search: checkContains('mac os x'),\n        versionRegexes: [/.*?mac\\ os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      },\n      {\n        name: 'ChromeOS',\n        search: checkContains('cros'),\n        versionRegexes: [/.*?chrome\\/([0-9]+)\\.([0-9]+).*/]\n      }\n    ];\n    const PlatformInfo = {\n      browsers: constant$1(browsers),\n      oses: constant$1(oses)\n    };\n\n    const edge = 'Edge';\n    const chromium = 'Chromium';\n    const ie = 'IE';\n    const opera = 'Opera';\n    const firefox = 'Firefox';\n    const safari = 'Safari';\n    const unknown$2 = () => {\n      return nu$c({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu$c = info => {\n      const current = info.current;\n      const version = info.version;\n      const isBrowser = name => () => current === name;\n      return {\n        current,\n        version,\n        isEdge: isBrowser(edge),\n        isChromium: isBrowser(chromium),\n        isIE: isBrowser(ie),\n        isOpera: isBrowser(opera),\n        isFirefox: isBrowser(firefox),\n        isSafari: isBrowser(safari)\n      };\n    };\n    const Browser = {\n      unknown: unknown$2,\n      nu: nu$c,\n      edge: constant$1(edge),\n      chromium: constant$1(chromium),\n      ie: constant$1(ie),\n      opera: constant$1(opera),\n      firefox: constant$1(firefox),\n      safari: constant$1(safari)\n    };\n\n    const windows = 'Windows';\n    const ios = 'iOS';\n    const android = 'Android';\n    const linux = 'Linux';\n    const macos = 'macOS';\n    const solaris = 'Solaris';\n    const freebsd = 'FreeBSD';\n    const chromeos = 'ChromeOS';\n    const unknown$1 = () => {\n      return nu$b({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    const nu$b = info => {\n      const current = info.current;\n      const version = info.version;\n      const isOS = name => () => current === name;\n      return {\n        current,\n        version,\n        isWindows: isOS(windows),\n        isiOS: isOS(ios),\n        isAndroid: isOS(android),\n        isMacOS: isOS(macos),\n        isLinux: isOS(linux),\n        isSolaris: isOS(solaris),\n        isFreeBSD: isOS(freebsd),\n        isChromeOS: isOS(chromeos)\n      };\n    };\n    const OperatingSystem = {\n      unknown: unknown$1,\n      nu: nu$b,\n      windows: constant$1(windows),\n      ios: constant$1(ios),\n      android: constant$1(android),\n      linux: constant$1(linux),\n      macos: constant$1(macos),\n      solaris: constant$1(solaris),\n      freebsd: constant$1(freebsd),\n      chromeos: constant$1(chromeos)\n    };\n\n    const detect$3 = (userAgent, userAgentDataOpt, mediaMatch) => {\n      const browsers = PlatformInfo.browsers();\n      const oses = PlatformInfo.oses();\n      const browser = userAgentDataOpt.bind(userAgentData => detectBrowser$1(browsers, userAgentData)).orThunk(() => detectBrowser(browsers, userAgent)).fold(Browser.unknown, Browser.nu);\n      const os = detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      const deviceType = DeviceType(os, browser, userAgent, mediaMatch);\n      return {\n        browser,\n        os,\n        deviceType\n      };\n    };\n    const PlatformDetection = { detect: detect$3 };\n\n    const mediaMatch = query => window.matchMedia(query).matches;\n    let platform = cached(() => PlatformDetection.detect(navigator.userAgent, Optional.from(navigator.userAgentData), mediaMatch));\n    const detect$2 = () => platform();\n\n    const mkEvent = (target, x, y, stop, prevent, kill, raw) => ({\n      target,\n      x,\n      y,\n      stop,\n      prevent,\n      kill,\n      raw\n    });\n    const fromRawEvent$1 = rawEvent => {\n      const target = SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));\n      const stop = () => rawEvent.stopPropagation();\n      const prevent = () => rawEvent.preventDefault();\n      const kill = compose(prevent, stop);\n      return mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n    };\n    const handle = (filter, handler) => rawEvent => {\n      if (filter(rawEvent)) {\n        handler(fromRawEvent$1(rawEvent));\n      }\n    };\n    const binder = (element, event, filter, handler, useCapture) => {\n      const wrapped = handle(filter, handler);\n      element.dom.addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    const bind$2 = (element, event, filter, handler) => binder(element, event, filter, handler, false);\n    const capture$1 = (element, event, filter, handler) => binder(element, event, filter, handler, true);\n    const unbind = (element, event, handler, useCapture) => {\n      element.dom.removeEventListener(event, handler, useCapture);\n    };\n\n    const before$1 = (marker, element) => {\n      const parent$1 = parent(marker);\n      parent$1.each(v => {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    const after$2 = (marker, element) => {\n      const sibling = nextSibling(marker);\n      sibling.fold(() => {\n        const parent$1 = parent(marker);\n        parent$1.each(v => {\n          append$2(v, element);\n        });\n      }, v => {\n        before$1(v, element);\n      });\n    };\n    const prepend$1 = (parent, element) => {\n      const firstChild$1 = firstChild(parent);\n      firstChild$1.fold(() => {\n        append$2(parent, element);\n      }, v => {\n        parent.dom.insertBefore(element.dom, v.dom);\n      });\n    };\n    const append$2 = (parent, element) => {\n      parent.dom.appendChild(element.dom);\n    };\n    const appendAt = (parent, element, index) => {\n      child$2(parent, index).fold(() => {\n        append$2(parent, element);\n      }, v => {\n        before$1(v, element);\n      });\n    };\n\n    const append$1 = (parent, elements) => {\n      each$1(elements, x => {\n        append$2(parent, x);\n      });\n    };\n\n    const empty = element => {\n      element.dom.textContent = '';\n      each$1(children(element), rogue => {\n        remove$5(rogue);\n      });\n    };\n    const remove$5 = element => {\n      const dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n\n    const get$b = _DOC => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      const y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return SugarPosition(x, y);\n    };\n    const to = (x, y, _DOC) => {\n      const doc = _DOC !== undefined ? _DOC.dom : document;\n      const win = doc.defaultView;\n      if (win) {\n        win.scrollTo(x, y);\n      }\n    };\n\n    const get$a = _win => {\n      const win = _win === undefined ? window : _win;\n      if (detect$2().browser.isFirefox()) {\n        return Optional.none();\n      } else {\n        return Optional.from(win.visualViewport);\n      }\n    };\n    const bounds$1 = (x, y, width, height) => ({\n      x,\n      y,\n      width,\n      height,\n      right: x + width,\n      bottom: y + height\n    });\n    const getBounds$3 = _win => {\n      const win = _win === undefined ? window : _win;\n      const doc = win.document;\n      const scroll = get$b(SugarElement.fromDom(doc));\n      return get$a(win).fold(() => {\n        const html = win.document.documentElement;\n        const width = html.clientWidth;\n        const height = html.clientHeight;\n        return bounds$1(scroll.left, scroll.top, width, height);\n      }, visualViewport => bounds$1(Math.max(visualViewport.pageLeft, scroll.left), Math.max(visualViewport.pageTop, scroll.top), visualViewport.width, visualViewport.height));\n    };\n\n    const getDocument = () => SugarElement.fromDom(document);\n\n    const walkUp = (navigation, doc) => {\n      const frame = navigation.view(doc);\n      return frame.fold(constant$1([]), f => {\n        const parent = navigation.owner(f);\n        const rest = walkUp(navigation, parent);\n        return [f].concat(rest);\n      });\n    };\n    const pathTo = (element, navigation) => {\n      const d = navigation.owner(element);\n      const paths = walkUp(navigation, d);\n      return Optional.some(paths);\n    };\n\n    const view = doc => {\n      var _a;\n      const element = doc.dom === document ? Optional.none() : Optional.from((_a = doc.dom.defaultView) === null || _a === void 0 ? void 0 : _a.frameElement);\n      return element.map(SugarElement.fromDom);\n    };\n    const owner$3 = element => owner$4(element);\n\n    var Navigation = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        view: view,\n        owner: owner$3\n    });\n\n    const find$2 = element => {\n      const doc = getDocument();\n      const scroll = get$b(doc);\n      const path = pathTo(element, Navigation);\n      return path.fold(curry(absolute$3, element), frames => {\n        const offset = viewport$1(element);\n        const r = foldr(frames, (b, a) => {\n          const loc = viewport$1(a);\n          return {\n            left: b.left + loc.left,\n            top: b.top + loc.top\n          };\n        }, {\n          left: 0,\n          top: 0\n        });\n        return SugarPosition(r.left + offset.left + scroll.left, r.top + offset.top + scroll.top);\n      });\n    };\n\n    const pointed = (point, width, height) => ({\n      point,\n      width,\n      height\n    });\n    const rect = (x, y, width, height) => ({\n      x,\n      y,\n      width,\n      height\n    });\n    const bounds = (x, y, width, height) => ({\n      x,\n      y,\n      width,\n      height,\n      right: x + width,\n      bottom: y + height\n    });\n    const box$1 = element => {\n      const xy = absolute$3(element);\n      const w = getOuter$1(element);\n      const h = getOuter$2(element);\n      return bounds(xy.left, xy.top, w, h);\n    };\n    const absolute$2 = element => {\n      const position = find$2(element);\n      const width = getOuter$1(element);\n      const height = getOuter$2(element);\n      return bounds(position.left, position.top, width, height);\n    };\n    const constrain = (original, constraint) => {\n      const left = Math.max(original.x, constraint.x);\n      const top = Math.max(original.y, constraint.y);\n      const right = Math.min(original.right, constraint.right);\n      const bottom = Math.min(original.bottom, constraint.bottom);\n      const width = right - left;\n      const height = bottom - top;\n      return bounds(left, top, width, height);\n    };\n    const constrainByMany = (original, constraints) => {\n      return foldl(constraints, (acc, c) => constrain(acc, c), original);\n    };\n    const win = () => getBounds$3(window);\n\n    var global$a = tinymce.util.Tools.resolve('tinymce.ThemeManager');\n\n    const value$4 = value => {\n      const applyHelper = fn => fn(value);\n      const constHelper = constant$1(value);\n      const outputHelper = () => output;\n      const output = {\n        tag: true,\n        inner: value,\n        fold: (_onError, onValue) => onValue(value),\n        isValue: always,\n        isError: never,\n        map: mapper => Result.value(mapper(value)),\n        mapError: outputHelper,\n        bind: applyHelper,\n        exists: applyHelper,\n        forall: applyHelper,\n        getOr: constHelper,\n        or: outputHelper,\n        getOrThunk: constHelper,\n        orThunk: outputHelper,\n        getOrDie: constHelper,\n        each: fn => {\n          fn(value);\n        },\n        toOptional: () => Optional.some(value)\n      };\n      return output;\n    };\n    const error$1 = error => {\n      const outputHelper = () => output;\n      const output = {\n        tag: false,\n        inner: error,\n        fold: (onError, _onValue) => onError(error),\n        isValue: never,\n        isError: always,\n        map: outputHelper,\n        mapError: mapper => Result.error(mapper(error)),\n        bind: outputHelper,\n        exists: never,\n        forall: always,\n        getOr: identity,\n        or: identity,\n        getOrThunk: apply$1,\n        orThunk: apply$1,\n        getOrDie: die(String(error)),\n        each: noop,\n        toOptional: Optional.none\n      };\n      return output;\n    };\n    const fromOption = (optional, err) => optional.fold(() => error$1(err), value$4);\n    const Result = {\n      value: value$4,\n      error: error$1,\n      fromOption\n    };\n\n    var SimpleResultType;\n    (function (SimpleResultType) {\n      SimpleResultType[SimpleResultType['Error'] = 0] = 'Error';\n      SimpleResultType[SimpleResultType['Value'] = 1] = 'Value';\n    }(SimpleResultType || (SimpleResultType = {})));\n    const fold$1 = (res, onError, onValue) => res.stype === SimpleResultType.Error ? onError(res.serror) : onValue(res.svalue);\n    const partition$2 = results => {\n      const values = [];\n      const errors = [];\n      each$1(results, obj => {\n        fold$1(obj, err => errors.push(err), val => values.push(val));\n      });\n      return {\n        values,\n        errors\n      };\n    };\n    const mapError = (res, f) => {\n      if (res.stype === SimpleResultType.Error) {\n        return {\n          stype: SimpleResultType.Error,\n          serror: f(res.serror)\n        };\n      } else {\n        return res;\n      }\n    };\n    const map = (res, f) => {\n      if (res.stype === SimpleResultType.Value) {\n        return {\n          stype: SimpleResultType.Value,\n          svalue: f(res.svalue)\n        };\n      } else {\n        return res;\n      }\n    };\n    const bind$1 = (res, f) => {\n      if (res.stype === SimpleResultType.Value) {\n        return f(res.svalue);\n      } else {\n        return res;\n      }\n    };\n    const bindError = (res, f) => {\n      if (res.stype === SimpleResultType.Error) {\n        return f(res.serror);\n      } else {\n        return res;\n      }\n    };\n    const svalue = v => ({\n      stype: SimpleResultType.Value,\n      svalue: v\n    });\n    const serror = e => ({\n      stype: SimpleResultType.Error,\n      serror: e\n    });\n    const toResult$1 = res => fold$1(res, Result.error, Result.value);\n    const fromResult$1 = res => res.fold(serror, svalue);\n    const SimpleResult = {\n      fromResult: fromResult$1,\n      toResult: toResult$1,\n      svalue,\n      partition: partition$2,\n      serror,\n      bind: bind$1,\n      bindError,\n      map,\n      mapError,\n      fold: fold$1\n    };\n\n    const field$2 = (key, newKey, presence, prop) => ({\n      tag: 'field',\n      key,\n      newKey,\n      presence,\n      prop\n    });\n    const customField$1 = (newKey, instantiator) => ({\n      tag: 'custom',\n      newKey,\n      instantiator\n    });\n    const fold = (value, ifField, ifCustom) => {\n      switch (value.tag) {\n      case 'field':\n        return ifField(value.key, value.newKey, value.presence, value.prop);\n      case 'custom':\n        return ifCustom(value.newKey, value.instantiator);\n      }\n    };\n\n    const shallow$1 = (old, nu) => {\n      return nu;\n    };\n    const deep$1 = (old, nu) => {\n      const bothObjects = isPlainObject(old) && isPlainObject(nu);\n      return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    const baseMerge = merger => {\n      return (...objects) => {\n        if (objects.length === 0) {\n          throw new Error(`Can't merge zero objects`);\n        }\n        const ret = {};\n        for (let j = 0; j < objects.length; j++) {\n          const curObject = objects[j];\n          for (const key in curObject) {\n            if (has$2(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    const deepMerge = baseMerge(deep$1);\n    const merge$1 = baseMerge(shallow$1);\n\n    const required$2 = () => ({\n      tag: 'required',\n      process: {}\n    });\n    const defaultedThunk = fallbackThunk => ({\n      tag: 'defaultedThunk',\n      process: fallbackThunk\n    });\n    const defaulted$1 = fallback => defaultedThunk(constant$1(fallback));\n    const asOption = () => ({\n      tag: 'option',\n      process: {}\n    });\n    const mergeWithThunk = baseThunk => ({\n      tag: 'mergeWithThunk',\n      process: baseThunk\n    });\n    const mergeWith = base => mergeWithThunk(constant$1(base));\n\n    const mergeValues$1 = (values, base) => values.length > 0 ? SimpleResult.svalue(deepMerge(base, merge$1.apply(undefined, values))) : SimpleResult.svalue(base);\n    const mergeErrors$1 = errors => compose(SimpleResult.serror, flatten)(errors);\n    const consolidateObj = (objects, base) => {\n      const partition = SimpleResult.partition(objects);\n      return partition.errors.length > 0 ? mergeErrors$1(partition.errors) : mergeValues$1(partition.values, base);\n    };\n    const consolidateArr = objects => {\n      const partitions = SimpleResult.partition(objects);\n      return partitions.errors.length > 0 ? mergeErrors$1(partitions.errors) : SimpleResult.svalue(partitions.values);\n    };\n    const ResultCombine = {\n      consolidateObj,\n      consolidateArr\n    };\n\n    const formatObj = input => {\n      return isObject(input) && keys(input).length > 100 ? ' removed due to size' : JSON.stringify(input, null, 2);\n    };\n    const formatErrors = errors => {\n      const es = errors.length > 10 ? errors.slice(0, 10).concat([{\n          path: [],\n          getErrorInfo: constant$1('... (only showing first ten failures)')\n        }]) : errors;\n      return map$2(es, e => {\n        return 'Failed path: (' + e.path.join(' > ') + ')\\n' + e.getErrorInfo();\n      });\n    };\n\n    const nu$a = (path, getErrorInfo) => {\n      return SimpleResult.serror([{\n          path,\n          getErrorInfo\n        }]);\n    };\n    const missingRequired = (path, key, obj) => nu$a(path, () => 'Could not find valid *required* value for \"' + key + '\" in ' + formatObj(obj));\n    const missingKey = (path, key) => nu$a(path, () => 'Choice schema did not contain choice key: \"' + key + '\"');\n    const missingBranch = (path, branches, branch) => nu$a(path, () => 'The chosen schema: \"' + branch + '\" did not exist in branches: ' + formatObj(branches));\n    const unsupportedFields = (path, unsupported) => nu$a(path, () => 'There are unsupported fields: [' + unsupported.join(', ') + '] specified');\n    const custom = (path, err) => nu$a(path, constant$1(err));\n\n    const value$3 = validator => {\n      const extract = (path, val) => {\n        return SimpleResult.bindError(validator(val), err => custom(path, err));\n      };\n      const toString = constant$1('val');\n      return {\n        extract,\n        toString\n      };\n    };\n    const anyValue$1 = value$3(SimpleResult.svalue);\n\n    const requiredAccess = (path, obj, key, bundle) => get$g(obj, key).fold(() => missingRequired(path, key, obj), bundle);\n    const fallbackAccess = (obj, key, fallback, bundle) => {\n      const v = get$g(obj, key).getOrThunk(() => fallback(obj));\n      return bundle(v);\n    };\n    const optionAccess = (obj, key, bundle) => bundle(get$g(obj, key));\n    const optionDefaultedAccess = (obj, key, fallback, bundle) => {\n      const opt = get$g(obj, key).map(val => val === true ? fallback(obj) : val);\n      return bundle(opt);\n    };\n    const extractField = (field, path, obj, key, prop) => {\n      const bundle = av => prop.extract(path.concat([key]), av);\n      const bundleAsOption = optValue => optValue.fold(() => SimpleResult.svalue(Optional.none()), ov => {\n        const result = prop.extract(path.concat([key]), ov);\n        return SimpleResult.map(result, Optional.some);\n      });\n      switch (field.tag) {\n      case 'required':\n        return requiredAccess(path, obj, key, bundle);\n      case 'defaultedThunk':\n        return fallbackAccess(obj, key, field.process, bundle);\n      case 'option':\n        return optionAccess(obj, key, bundleAsOption);\n      case 'defaultedOptionThunk':\n        return optionDefaultedAccess(obj, key, field.process, bundleAsOption);\n      case 'mergeWithThunk': {\n          return fallbackAccess(obj, key, constant$1({}), v => {\n            const result = deepMerge(field.process(obj), v);\n            return bundle(result);\n          });\n        }\n      }\n    };\n    const extractFields = (path, obj, fields) => {\n      const success = {};\n      const errors = [];\n      for (const field of fields) {\n        fold(field, (key, newKey, presence, prop) => {\n          const result = extractField(presence, path, obj, key, prop);\n          SimpleResult.fold(result, err => {\n            errors.push(...err);\n          }, res => {\n            success[newKey] = res;\n          });\n        }, (newKey, instantiator) => {\n          success[newKey] = instantiator(obj);\n        });\n      }\n      return errors.length > 0 ? SimpleResult.serror(errors) : SimpleResult.svalue(success);\n    };\n    const valueThunk = getDelegate => {\n      const extract = (path, val) => getDelegate().extract(path, val);\n      const toString = () => getDelegate().toString();\n      return {\n        extract,\n        toString\n      };\n    };\n    const getSetKeys = obj => keys(filter$1(obj, isNonNullable));\n    const objOfOnly = fields => {\n      const delegate = objOf(fields);\n      const fieldNames = foldr(fields, (acc, value) => {\n        return fold(value, key => deepMerge(acc, { [key]: true }), constant$1(acc));\n      }, {});\n      const extract = (path, o) => {\n        const keys = isBoolean(o) ? [] : getSetKeys(o);\n        const extra = filter$2(keys, k => !hasNonNullableKey(fieldNames, k));\n        return extra.length === 0 ? delegate.extract(path, o) : unsupportedFields(path, extra);\n      };\n      return {\n        extract,\n        toString: delegate.toString\n      };\n    };\n    const objOf = values => {\n      const extract = (path, o) => extractFields(path, o, values);\n      const toString = () => {\n        const fieldStrings = map$2(values, value => fold(value, (key, _okey, _presence, prop) => key + ' -> ' + prop.toString(), (newKey, _instantiator) => 'state(' + newKey + ')'));\n        return 'obj{\\n' + fieldStrings.join('\\n') + '}';\n      };\n      return {\n        extract,\n        toString\n      };\n    };\n    const arrOf = prop => {\n      const extract = (path, array) => {\n        const results = map$2(array, (a, i) => prop.extract(path.concat(['[' + i + ']']), a));\n        return ResultCombine.consolidateArr(results);\n      };\n      const toString = () => 'array(' + prop.toString() + ')';\n      return {\n        extract,\n        toString\n      };\n    };\n    const oneOf = (props, rawF) => {\n      const f = rawF !== undefined ? rawF : identity;\n      const extract = (path, val) => {\n        const errors = [];\n        for (const prop of props) {\n          const res = prop.extract(path, val);\n          if (res.stype === SimpleResultType.Value) {\n            return {\n              stype: SimpleResultType.Value,\n              svalue: f(res.svalue)\n            };\n          }\n          errors.push(res);\n        }\n        return ResultCombine.consolidateArr(errors);\n      };\n      const toString = () => 'oneOf(' + map$2(props, prop => prop.toString()).join(', ') + ')';\n      return {\n        extract,\n        toString\n      };\n    };\n    const setOf$1 = (validator, prop) => {\n      const validateKeys = (path, keys) => arrOf(value$3(validator)).extract(path, keys);\n      const extract = (path, o) => {\n        const keys$1 = keys(o);\n        const validatedKeys = validateKeys(path, keys$1);\n        return SimpleResult.bind(validatedKeys, validKeys => {\n          const schema = map$2(validKeys, vk => {\n            return field$2(vk, vk, required$2(), prop);\n          });\n          return objOf(schema).extract(path, o);\n        });\n      };\n      const toString = () => 'setOf(' + prop.toString() + ')';\n      return {\n        extract,\n        toString\n      };\n    };\n    const thunk = (_desc, processor) => {\n      const getP = cached(processor);\n      const extract = (path, val) => getP().extract(path, val);\n      const toString = () => getP().toString();\n      return {\n        extract,\n        toString\n      };\n    };\n    const arrOfObj = compose(arrOf, objOf);\n\n    const anyValue = constant$1(anyValue$1);\n    const typedValue = (validator, expectedType) => value$3(a => {\n      const actualType = typeof a;\n      return validator(a) ? SimpleResult.svalue(a) : SimpleResult.serror(`Expected type: ${ expectedType } but got: ${ actualType }`);\n    });\n    const number = typedValue(isNumber, 'number');\n    const string = typedValue(isString, 'string');\n    const boolean = typedValue(isBoolean, 'boolean');\n    const functionProcessor = typedValue(isFunction, 'function');\n    const isPostMessageable = val => {\n      if (Object(val) !== val) {\n        return true;\n      }\n      switch ({}.toString.call(val).slice(8, -1)) {\n      case 'Boolean':\n      case 'Number':\n      case 'String':\n      case 'Date':\n      case 'RegExp':\n      case 'Blob':\n      case 'FileList':\n      case 'ImageData':\n      case 'ImageBitmap':\n      case 'ArrayBuffer':\n        return true;\n      case 'Array':\n      case 'Object':\n        return Object.keys(val).every(prop => isPostMessageable(val[prop]));\n      default:\n        return false;\n      }\n    };\n    const postMessageable = value$3(a => {\n      if (isPostMessageable(a)) {\n        return SimpleResult.svalue(a);\n      } else {\n        return SimpleResult.serror('Expected value to be acceptable for sending via postMessage');\n      }\n    });\n\n    const chooseFrom = (path, input, branches, ch) => {\n      const fields = get$g(branches, ch);\n      return fields.fold(() => missingBranch(path, branches, ch), vp => vp.extract(path.concat(['branch: ' + ch]), input));\n    };\n    const choose$2 = (key, branches) => {\n      const extract = (path, input) => {\n        const choice = get$g(input, key);\n        return choice.fold(() => missingKey(path, key), chosen => chooseFrom(path, input, branches, chosen));\n      };\n      const toString = () => 'chooseOn(' + key + '). Possible values: ' + keys(branches);\n      return {\n        extract,\n        toString\n      };\n    };\n\n    const arrOfVal = () => arrOf(anyValue$1);\n    const valueOf = validator => value$3(v => validator(v).fold(SimpleResult.serror, SimpleResult.svalue));\n    const setOf = (validator, prop) => setOf$1(v => SimpleResult.fromResult(validator(v)), prop);\n    const extractValue = (label, prop, obj) => {\n      const res = prop.extract([label], obj);\n      return SimpleResult.mapError(res, errs => ({\n        input: obj,\n        errors: errs\n      }));\n    };\n    const asRaw = (label, prop, obj) => SimpleResult.toResult(extractValue(label, prop, obj));\n    const getOrDie = extraction => {\n      return extraction.fold(errInfo => {\n        throw new Error(formatError(errInfo));\n      }, identity);\n    };\n    const asRawOrDie$1 = (label, prop, obj) => getOrDie(asRaw(label, prop, obj));\n    const formatError = errInfo => {\n      return 'Errors: \\n' + formatErrors(errInfo.errors).join('\\n') + '\\n\\nInput object: ' + formatObj(errInfo.input);\n    };\n    const choose$1 = (key, branches) => choose$2(key, map$1(branches, objOf));\n    const thunkOf = (desc, schema) => thunk(desc, schema);\n\n    const field$1 = field$2;\n    const customField = customField$1;\n    const validateEnum = values => valueOf(value => contains$2(values, value) ? Result.value(value) : Result.error(`Unsupported value: \"${ value }\", choose one of \"${ values.join(', ') }\".`));\n    const required$1 = key => field$1(key, key, required$2(), anyValue());\n    const requiredOf = (key, schema) => field$1(key, key, required$2(), schema);\n    const requiredNumber = key => requiredOf(key, number);\n    const requiredString = key => requiredOf(key, string);\n    const requiredStringEnum = (key, values) => field$1(key, key, required$2(), validateEnum(values));\n    const requiredBoolean = key => requiredOf(key, boolean);\n    const requiredFunction = key => requiredOf(key, functionProcessor);\n    const forbid = (key, message) => field$1(key, key, asOption(), value$3(_v => SimpleResult.serror('The field: ' + key + ' is forbidden. ' + message)));\n    const requiredObjOf = (key, objSchema) => field$1(key, key, required$2(), objOf(objSchema));\n    const requiredArrayOfObj = (key, objFields) => field$1(key, key, required$2(), arrOfObj(objFields));\n    const requiredArrayOf = (key, schema) => field$1(key, key, required$2(), arrOf(schema));\n    const option$3 = key => field$1(key, key, asOption(), anyValue());\n    const optionOf = (key, schema) => field$1(key, key, asOption(), schema);\n    const optionNumber = key => optionOf(key, number);\n    const optionString = key => optionOf(key, string);\n    const optionStringEnum = (key, values) => optionOf(key, validateEnum(values));\n    const optionFunction = key => optionOf(key, functionProcessor);\n    const optionArrayOf = (key, schema) => optionOf(key, arrOf(schema));\n    const optionObjOf = (key, objSchema) => optionOf(key, objOf(objSchema));\n    const optionObjOfOnly = (key, objSchema) => optionOf(key, objOfOnly(objSchema));\n    const defaulted = (key, fallback) => field$1(key, key, defaulted$1(fallback), anyValue());\n    const defaultedOf = (key, fallback, schema) => field$1(key, key, defaulted$1(fallback), schema);\n    const defaultedNumber = (key, fallback) => defaultedOf(key, fallback, number);\n    const defaultedString = (key, fallback) => defaultedOf(key, fallback, string);\n    const defaultedStringEnum = (key, fallback, values) => defaultedOf(key, fallback, validateEnum(values));\n    const defaultedBoolean = (key, fallback) => defaultedOf(key, fallback, boolean);\n    const defaultedFunction = (key, fallback) => defaultedOf(key, fallback, functionProcessor);\n    const defaultedPostMsg = (key, fallback) => defaultedOf(key, fallback, postMessageable);\n    const defaultedArrayOf = (key, fallback, schema) => defaultedOf(key, fallback, arrOf(schema));\n    const defaultedObjOf = (key, fallback, objSchema) => defaultedOf(key, fallback, objOf(objSchema));\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const generate$7 = cases => {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      const constructors = [];\n      const adt = {};\n      each$1(cases, (acase, count) => {\n        const keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        const key = keys$1[0];\n        const value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = (...args) => {\n          const argLength = args.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          const match = branches => {\n            const branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            const allReqd = forall(constructors, reqKey => {\n              return contains$2(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: (...foldArgs) => {\n              if (foldArgs.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n              }\n              const target = foldArgs[count];\n              return target.apply(null, args);\n            },\n            match,\n            log: label => {\n              console.log(label, {\n                constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    const Adt = { generate: generate$7 };\n\n    Adt.generate([\n      {\n        bothErrors: [\n          'error1',\n          'error2'\n        ]\n      },\n      {\n        firstError: [\n          'error1',\n          'value2'\n        ]\n      },\n      {\n        secondError: [\n          'value1',\n          'error2'\n        ]\n      },\n      {\n        bothValues: [\n          'value1',\n          'value2'\n        ]\n      }\n    ]);\n    const partition$1 = results => {\n      const errors = [];\n      const values = [];\n      each$1(results, result => {\n        result.fold(err => {\n          errors.push(err);\n        }, value => {\n          values.push(value);\n        });\n      });\n      return {\n        errors,\n        values\n      };\n    };\n\n    const exclude$1 = (obj, fields) => {\n      const r = {};\n      each(obj, (v, k) => {\n        if (!contains$2(fields, k)) {\n          r[k] = v;\n        }\n      });\n      return r;\n    };\n\n    const wrap$2 = (key, value) => ({ [key]: value });\n    const wrapAll$1 = keyvalues => {\n      const r = {};\n      each$1(keyvalues, kv => {\n        r[kv.key] = kv.value;\n      });\n      return r;\n    };\n\n    const exclude = (obj, fields) => exclude$1(obj, fields);\n    const wrap$1 = (key, value) => wrap$2(key, value);\n    const wrapAll = keyvalues => wrapAll$1(keyvalues);\n    const mergeValues = (values, base) => {\n      return values.length === 0 ? Result.value(base) : Result.value(deepMerge(base, merge$1.apply(undefined, values)));\n    };\n    const mergeErrors = errors => Result.error(flatten(errors));\n    const consolidate = (objs, base) => {\n      const partitions = partition$1(objs);\n      return partitions.errors.length > 0 ? mergeErrors(partitions.errors) : mergeValues(partitions.values, base);\n    };\n\n    const ensureIsRoot = isRoot => isFunction(isRoot) ? isRoot : never;\n    const ancestor$2 = (scope, transform, isRoot) => {\n      let element = scope.dom;\n      const stop = ensureIsRoot(isRoot);\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        const transformed = transform(el);\n        if (transformed.isSome()) {\n          return transformed;\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$4 = (scope, transform, isRoot) => {\n      const current = transform(scope);\n      const stop = ensureIsRoot(isRoot);\n      return current.orThunk(() => stop(scope) ? Optional.none() : ancestor$2(scope, transform, stop));\n    };\n\n    const isSource = (component, simulatedEvent) => eq(component.element, simulatedEvent.event.target);\n\n    const defaultEventHandler = {\n      can: always,\n      abort: never,\n      run: noop\n    };\n    const nu$9 = parts => {\n      if (!hasNonNullableKey(parts, 'can') && !hasNonNullableKey(parts, 'abort') && !hasNonNullableKey(parts, 'run')) {\n        throw new Error('EventHandler defined by: ' + JSON.stringify(parts, null, 2) + ' does not have can, abort, or run!');\n      }\n      return {\n        ...defaultEventHandler,\n        ...parts\n      };\n    };\n    const all$2 = (handlers, f) => (...args) => foldl(handlers, (acc, handler) => acc && f(handler).apply(undefined, args), true);\n    const any = (handlers, f) => (...args) => foldl(handlers, (acc, handler) => acc || f(handler).apply(undefined, args), false);\n    const read$2 = handler => isFunction(handler) ? {\n      can: always,\n      abort: never,\n      run: handler\n    } : handler;\n    const fuse$1 = handlers => {\n      const can = all$2(handlers, handler => handler.can);\n      const abort = any(handlers, handler => handler.abort);\n      const run = (...args) => {\n        each$1(handlers, handler => {\n          handler.run.apply(undefined, args);\n        });\n      };\n      return {\n        can,\n        abort,\n        run\n      };\n    };\n\n    const constant = constant$1;\n    const touchstart = constant('touchstart');\n    const touchmove = constant('touchmove');\n    const touchend = constant('touchend');\n    const touchcancel = constant('touchcancel');\n    const mousedown = constant('mousedown');\n    const mousemove = constant('mousemove');\n    const mouseout = constant('mouseout');\n    const mouseup = constant('mouseup');\n    const mouseover = constant('mouseover');\n    const focusin = constant('focusin');\n    const focusout = constant('focusout');\n    const keydown = constant('keydown');\n    const keyup = constant('keyup');\n    const input = constant('input');\n    const change = constant('change');\n    const click = constant('click');\n    const transitioncancel = constant('transitioncancel');\n    const transitionend = constant('transitionend');\n    const transitionstart = constant('transitionstart');\n    const selectstart = constant('selectstart');\n\n    const prefixName = name => constant$1('alloy.' + name);\n    const alloy = { tap: prefixName('tap') };\n    const focus$4 = prefixName('focus');\n    const postBlur = prefixName('blur.post');\n    const postPaste = prefixName('paste.post');\n    const receive = prefixName('receive');\n    const execute$5 = prefixName('execute');\n    const focusItem = prefixName('focus.item');\n    const tap = alloy.tap;\n    const longpress = prefixName('longpress');\n    const sandboxClose = prefixName('sandbox.close');\n    const typeaheadCancel = prefixName('typeahead.cancel');\n    const systemInit = prefixName('system.init');\n    const documentTouchmove = prefixName('system.touchmove');\n    const documentTouchend = prefixName('system.touchend');\n    const windowScroll = prefixName('system.scroll');\n    const windowResize = prefixName('system.resize');\n    const attachedToDom = prefixName('system.attached');\n    const detachedFromDom = prefixName('system.detached');\n    const dismissRequested = prefixName('system.dismissRequested');\n    const repositionRequested = prefixName('system.repositionRequested');\n    const focusShifted = prefixName('focusmanager.shifted');\n    const slotVisibility = prefixName('slotcontainer.visibility');\n    const externalElementScroll = prefixName('system.external.element.scroll');\n    const changeTab = prefixName('change.tab');\n    const dismissTab = prefixName('dismiss.tab');\n    const highlight$1 = prefixName('highlight');\n    const dehighlight$1 = prefixName('dehighlight');\n\n    const emit = (component, event) => {\n      dispatchWith(component, component.element, event, {});\n    };\n    const emitWith = (component, event, properties) => {\n      dispatchWith(component, component.element, event, properties);\n    };\n    const emitExecute = component => {\n      emit(component, execute$5());\n    };\n    const dispatch = (component, target, event) => {\n      dispatchWith(component, target, event, {});\n    };\n    const dispatchWith = (component, target, event, properties) => {\n      const data = {\n        target,\n        ...properties\n      };\n      component.getSystem().triggerEvent(event, target, data);\n    };\n    const retargetAndDispatchWith = (component, target, eventName, properties) => {\n      const data = {\n        ...properties,\n        target\n      };\n      component.getSystem().triggerEvent(eventName, target, data);\n    };\n    const dispatchEvent = (component, target, event, simulatedEvent) => {\n      component.getSystem().triggerEvent(event, target, simulatedEvent.event);\n    };\n\n    const derive$2 = configs => wrapAll(configs);\n    const abort = (name, predicate) => {\n      return {\n        key: name,\n        value: nu$9({ abort: predicate })\n      };\n    };\n    const can = (name, predicate) => {\n      return {\n        key: name,\n        value: nu$9({ can: predicate })\n      };\n    };\n    const preventDefault = name => {\n      return {\n        key: name,\n        value: nu$9({\n          run: (component, simulatedEvent) => {\n            simulatedEvent.event.prevent();\n          }\n        })\n      };\n    };\n    const run$1 = (name, handler) => {\n      return {\n        key: name,\n        value: nu$9({ run: handler })\n      };\n    };\n    const runActionExtra = (name, action, extra) => {\n      return {\n        key: name,\n        value: nu$9({\n          run: (component, simulatedEvent) => {\n            action.apply(undefined, [\n              component,\n              simulatedEvent\n            ].concat(extra));\n          }\n        })\n      };\n    };\n    const runOnName = name => {\n      return handler => run$1(name, handler);\n    };\n    const runOnSourceName = name => {\n      return handler => ({\n        key: name,\n        value: nu$9({\n          run: (component, simulatedEvent) => {\n            if (isSource(component, simulatedEvent)) {\n              handler(component, simulatedEvent);\n            }\n          }\n        })\n      });\n    };\n    const redirectToUid = (name, uid) => {\n      return run$1(name, (component, simulatedEvent) => {\n        component.getSystem().getByUid(uid).each(redirectee => {\n          dispatchEvent(redirectee, redirectee.element, name, simulatedEvent);\n        });\n      });\n    };\n    const redirectToPart = (name, detail, partName) => {\n      const uid = detail.partUids[partName];\n      return redirectToUid(name, uid);\n    };\n    const runWithTarget = (name, f) => {\n      return run$1(name, (component, simulatedEvent) => {\n        const ev = simulatedEvent.event;\n        const target = component.getSystem().getByDom(ev.target).getOrThunk(() => {\n          const closest = closest$4(ev.target, el => component.getSystem().getByDom(el).toOptional(), never);\n          return closest.getOr(component);\n        });\n        f(component, target, simulatedEvent);\n      });\n    };\n    const cutter = name => {\n      return run$1(name, (component, simulatedEvent) => {\n        simulatedEvent.cut();\n      });\n    };\n    const stopper = name => {\n      return run$1(name, (component, simulatedEvent) => {\n        simulatedEvent.stop();\n      });\n    };\n    const runOnSource = (name, f) => {\n      return runOnSourceName(name)(f);\n    };\n    const runOnAttached = runOnSourceName(attachedToDom());\n    const runOnDetached = runOnSourceName(detachedFromDom());\n    const runOnInit = runOnSourceName(systemInit());\n    const runOnExecute$1 = runOnName(execute$5());\n\n    const fromHtml$1 = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      return children(SugarElement.fromDom(div));\n    };\n\n    const get$9 = element => element.dom.innerHTML;\n    const set$6 = (element, content) => {\n      const owner = owner$4(element);\n      const docDom = owner.dom;\n      const fragment = SugarElement.fromDom(docDom.createDocumentFragment());\n      const contentElements = fromHtml$1(content, docDom);\n      append$1(fragment, contentElements);\n      empty(element);\n      append$2(element, fragment);\n    };\n    const getOuter = element => {\n      const container = SugarElement.fromTag('div');\n      const clone = SugarElement.fromDom(element.dom.cloneNode(true));\n      append$2(container, clone);\n      return get$9(container);\n    };\n\n    const clone$1 = (original, isDeep) => SugarElement.fromDom(original.dom.cloneNode(isDeep));\n    const shallow = original => clone$1(original, false);\n    const deep = original => clone$1(original, true);\n\n    const getHtml = element => {\n      if (isShadowRoot(element)) {\n        return '#shadow-root';\n      } else {\n        const clone = shallow(element);\n        return getOuter(clone);\n      }\n    };\n\n    const element = elem => getHtml(elem);\n\n    const isRecursive = (component, originator, target) => eq(originator, component.element) && !eq(originator, target);\n    const events$i = derive$2([can(focus$4(), (component, simulatedEvent) => {\n        const event = simulatedEvent.event;\n        const originator = event.originator;\n        const target = event.target;\n        if (isRecursive(component, originator, target)) {\n          console.warn(focus$4() + ' did not get interpreted by the desired target. ' + '\\nOriginator: ' + element(originator) + '\\nTarget: ' + element(target) + '\\nCheck the ' + focus$4() + ' event handlers');\n          return false;\n        } else {\n          return true;\n        }\n      })]);\n\n    var DefaultEvents = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$i\n    });\n\n    let unique = 0;\n    const generate$6 = prefix => {\n      const date = new Date();\n      const time = date.getTime();\n      const random = Math.floor(Math.random() * 1000000000);\n      unique++;\n      return prefix + '_' + random + unique + String(time);\n    };\n\n    const prefix$1 = constant$1('alloy-id-');\n    const idAttr$1 = constant$1('data-alloy-id');\n\n    const prefix = prefix$1();\n    const idAttr = idAttr$1();\n    const write = (label, elem) => {\n      const id = generate$6(prefix + label);\n      writeOnly(elem, id);\n      return id;\n    };\n    const writeOnly = (elem, uid) => {\n      Object.defineProperty(elem.dom, idAttr, {\n        value: uid,\n        writable: true\n      });\n    };\n    const read$1 = elem => {\n      const id = isElement$1(elem) ? elem.dom[idAttr] : null;\n      return Optional.from(id);\n    };\n    const generate$5 = prefix => generate$6(prefix);\n\n    const make$8 = identity;\n\n    const NoContextApi = getComp => {\n      const getMessage = event => `The component must be in a context to execute: ${ event }` + (getComp ? '\\n' + element(getComp().element) + ' is not in context.' : '');\n      const fail = event => () => {\n        throw new Error(getMessage(event));\n      };\n      const warn = event => () => {\n        console.warn(getMessage(event));\n      };\n      return {\n        debugInfo: constant$1('fake'),\n        triggerEvent: warn('triggerEvent'),\n        triggerFocus: warn('triggerFocus'),\n        triggerEscape: warn('triggerEscape'),\n        broadcast: warn('broadcast'),\n        broadcastOn: warn('broadcastOn'),\n        broadcastEvent: warn('broadcastEvent'),\n        build: fail('build'),\n        buildOrPatch: fail('buildOrPatch'),\n        addToWorld: fail('addToWorld'),\n        removeFromWorld: fail('removeFromWorld'),\n        addToGui: fail('addToGui'),\n        removeFromGui: fail('removeFromGui'),\n        getByUid: fail('getByUid'),\n        getByDom: fail('getByDom'),\n        isConnected: never\n      };\n    };\n    const singleton$1 = NoContextApi();\n\n    const markAsBehaviourApi = (f, apiName, apiFunction) => {\n      const delegate = apiFunction.toString();\n      const endIndex = delegate.indexOf(')') + 1;\n      const openBracketIndex = delegate.indexOf('(');\n      const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n      f.toFunctionAnnotation = () => ({\n        name: apiName,\n        parameters: cleanParameters(parameters.slice(0, 1).concat(parameters.slice(3)))\n      });\n      return f;\n    };\n    const cleanParameters = parameters => map$2(parameters, p => endsWith(p, '/*') ? p.substring(0, p.length - '/*'.length) : p);\n    const markAsExtraApi = (f, extraName) => {\n      const delegate = f.toString();\n      const endIndex = delegate.indexOf(')') + 1;\n      const openBracketIndex = delegate.indexOf('(');\n      const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n      f.toFunctionAnnotation = () => ({\n        name: extraName,\n        parameters: cleanParameters(parameters)\n      });\n      return f;\n    };\n    const markAsSketchApi = (f, apiFunction) => {\n      const delegate = apiFunction.toString();\n      const endIndex = delegate.indexOf(')') + 1;\n      const openBracketIndex = delegate.indexOf('(');\n      const parameters = delegate.substring(openBracketIndex + 1, endIndex - 1).split(/,\\s*/);\n      f.toFunctionAnnotation = () => ({\n        name: 'OVERRIDE',\n        parameters: cleanParameters(parameters.slice(1))\n      });\n      return f;\n    };\n\n    const premadeTag = generate$6('alloy-premade');\n    const premade$1 = comp => {\n      Object.defineProperty(comp.element.dom, premadeTag, {\n        value: comp.uid,\n        writable: true\n      });\n      return wrap$1(premadeTag, comp);\n    };\n    const isPremade = element => has$2(element.dom, premadeTag);\n    const getPremade = spec => get$g(spec, premadeTag);\n    const makeApi = f => markAsSketchApi((component, ...rest) => f(component.getApis(), component, ...rest), f);\n\n    const NoState = { init: () => nu$8({ readState: constant$1('No State required') }) };\n    const nu$8 = spec => spec;\n\n    const generateFrom$1 = (spec, all) => {\n      const schema = map$2(all, a => optionObjOf(a.name(), [\n        required$1('config'),\n        defaulted('state', NoState)\n      ]));\n      const validated = asRaw('component.behaviours', objOf(schema), spec.behaviours).fold(errInfo => {\n        throw new Error(formatError(errInfo) + '\\nComplete spec:\\n' + JSON.stringify(spec, null, 2));\n      }, identity);\n      return {\n        list: all,\n        data: map$1(validated, optBlobThunk => {\n          const output = optBlobThunk.map(blob => ({\n            config: blob.config,\n            state: blob.state.init(blob.config)\n          }));\n          return constant$1(output);\n        })\n      };\n    };\n    const getBehaviours$3 = bData => bData.list;\n    const getData$2 = bData => bData.data;\n\n    const byInnerKey = (data, tuple) => {\n      const r = {};\n      each(data, (detail, key) => {\n        each(detail, (value, indexKey) => {\n          const chain = get$g(r, indexKey).getOr([]);\n          r[indexKey] = chain.concat([tuple(key, value)]);\n        });\n      });\n      return r;\n    };\n\n    const nu$7 = s => ({\n      classes: isUndefined(s.classes) ? [] : s.classes,\n      attributes: isUndefined(s.attributes) ? {} : s.attributes,\n      styles: isUndefined(s.styles) ? {} : s.styles\n    });\n    const merge = (defnA, mod) => ({\n      ...defnA,\n      attributes: {\n        ...defnA.attributes,\n        ...mod.attributes\n      },\n      styles: {\n        ...defnA.styles,\n        ...mod.styles\n      },\n      classes: defnA.classes.concat(mod.classes)\n    });\n\n    const combine$2 = (info, baseMod, behaviours, base) => {\n      const modsByBehaviour = { ...baseMod };\n      each$1(behaviours, behaviour => {\n        modsByBehaviour[behaviour.name()] = behaviour.exhibit(info, base);\n      });\n      const byAspect = byInnerKey(modsByBehaviour, (name, modification) => ({\n        name,\n        modification\n      }));\n      const combineObjects = objects => foldr(objects, (b, a) => ({\n        ...a.modification,\n        ...b\n      }), {});\n      const combinedClasses = foldr(byAspect.classes, (b, a) => a.modification.concat(b), []);\n      const combinedAttributes = combineObjects(byAspect.attributes);\n      const combinedStyles = combineObjects(byAspect.styles);\n      return nu$7({\n        classes: combinedClasses,\n        attributes: combinedAttributes,\n        styles: combinedStyles\n      });\n    };\n\n    const sortKeys = (label, keyName, array, order) => {\n      try {\n        const sorted = sort(array, (a, b) => {\n          const aKey = a[keyName];\n          const bKey = b[keyName];\n          const aIndex = order.indexOf(aKey);\n          const bIndex = order.indexOf(bKey);\n          if (aIndex === -1) {\n            throw new Error('The ordering for ' + label + ' does not have an entry for ' + aKey + '.\\nOrder specified: ' + JSON.stringify(order, null, 2));\n          }\n          if (bIndex === -1) {\n            throw new Error('The ordering for ' + label + ' does not have an entry for ' + bKey + '.\\nOrder specified: ' + JSON.stringify(order, null, 2));\n          }\n          if (aIndex < bIndex) {\n            return -1;\n          } else if (bIndex < aIndex) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        return Result.value(sorted);\n      } catch (err) {\n        return Result.error([err]);\n      }\n    };\n\n    const uncurried = (handler, purpose) => ({\n      handler,\n      purpose\n    });\n    const curried = (handler, purpose) => ({\n      cHandler: handler,\n      purpose\n    });\n    const curryArgs = (descHandler, extraArgs) => curried(curry.apply(undefined, [descHandler.handler].concat(extraArgs)), descHandler.purpose);\n    const getCurried = descHandler => descHandler.cHandler;\n\n    const behaviourTuple = (name, handler) => ({\n      name,\n      handler\n    });\n    const nameToHandlers = (behaviours, info) => {\n      const r = {};\n      each$1(behaviours, behaviour => {\n        r[behaviour.name()] = behaviour.handlers(info);\n      });\n      return r;\n    };\n    const groupByEvents = (info, behaviours, base) => {\n      const behaviourEvents = {\n        ...base,\n        ...nameToHandlers(behaviours, info)\n      };\n      return byInnerKey(behaviourEvents, behaviourTuple);\n    };\n    const combine$1 = (info, eventOrder, behaviours, base) => {\n      const byEventName = groupByEvents(info, behaviours, base);\n      return combineGroups(byEventName, eventOrder);\n    };\n    const assemble = rawHandler => {\n      const handler = read$2(rawHandler);\n      return (component, simulatedEvent, ...rest) => {\n        const args = [\n          component,\n          simulatedEvent\n        ].concat(rest);\n        if (handler.abort.apply(undefined, args)) {\n          simulatedEvent.stop();\n        } else if (handler.can.apply(undefined, args)) {\n          handler.run.apply(undefined, args);\n        }\n      };\n    };\n    const missingOrderError = (eventName, tuples) => Result.error(['The event (' + eventName + ') has more than one behaviour that listens to it.\\nWhen this occurs, you must ' + 'specify an event ordering for the behaviours in your spec (e.g. [ \"listing\", \"toggling\" ]).\\nThe behaviours that ' + 'can trigger it are: ' + JSON.stringify(map$2(tuples, c => c.name), null, 2)]);\n    const fuse = (tuples, eventOrder, eventName) => {\n      const order = eventOrder[eventName];\n      if (!order) {\n        return missingOrderError(eventName, tuples);\n      } else {\n        return sortKeys('Event: ' + eventName, 'name', tuples, order).map(sortedTuples => {\n          const handlers = map$2(sortedTuples, tuple => tuple.handler);\n          return fuse$1(handlers);\n        });\n      }\n    };\n    const combineGroups = (byEventName, eventOrder) => {\n      const r = mapToArray(byEventName, (tuples, eventName) => {\n        const combined = tuples.length === 1 ? Result.value(tuples[0].handler) : fuse(tuples, eventOrder, eventName);\n        return combined.map(handler => {\n          const assembled = assemble(handler);\n          const purpose = tuples.length > 1 ? filter$2(eventOrder[eventName], o => exists(tuples, t => t.name === o)).join(' > ') : tuples[0].name;\n          return wrap$1(eventName, uncurried(assembled, purpose));\n        });\n      });\n      return consolidate(r, {});\n    };\n\n    const baseBehaviour = 'alloy.base.behaviour';\n    const schema$z = objOf([\n      field$1('dom', 'dom', required$2(), objOf([\n        required$1('tag'),\n        defaulted('styles', {}),\n        defaulted('classes', []),\n        defaulted('attributes', {}),\n        option$3('value'),\n        option$3('innerHtml')\n      ])),\n      required$1('components'),\n      required$1('uid'),\n      defaulted('events', {}),\n      defaulted('apis', {}),\n      field$1('eventOrder', 'eventOrder', mergeWith({\n        [execute$5()]: [\n          'disabling',\n          baseBehaviour,\n          'toggling',\n          'typeaheadevents'\n        ],\n        [focus$4()]: [\n          baseBehaviour,\n          'focusing',\n          'keying'\n        ],\n        [systemInit()]: [\n          baseBehaviour,\n          'disabling',\n          'toggling',\n          'representing'\n        ],\n        [input()]: [\n          baseBehaviour,\n          'representing',\n          'streaming',\n          'invalidating'\n        ],\n        [detachedFromDom()]: [\n          baseBehaviour,\n          'representing',\n          'item-events',\n          'tooltipping'\n        ],\n        [mousedown()]: [\n          'focusing',\n          baseBehaviour,\n          'item-type-events'\n        ],\n        [touchstart()]: [\n          'focusing',\n          baseBehaviour,\n          'item-type-events'\n        ],\n        [mouseover()]: [\n          'item-type-events',\n          'tooltipping'\n        ],\n        [receive()]: [\n          'receiving',\n          'reflecting',\n          'tooltipping'\n        ]\n      }), anyValue()),\n      option$3('domModification')\n    ]);\n    const toInfo = spec => asRaw('custom.definition', schema$z, spec);\n    const toDefinition = detail => ({\n      ...detail.dom,\n      uid: detail.uid,\n      domChildren: map$2(detail.components, comp => comp.element)\n    });\n    const toModification = detail => detail.domModification.fold(() => nu$7({}), nu$7);\n    const toEvents = info => info.events;\n\n    const read = (element, attr) => {\n      const value = get$f(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    const add$4 = (element, attr, id) => {\n      const old = read(element, attr);\n      const nu = old.concat([id]);\n      set$9(element, attr, nu.join(' '));\n      return true;\n    };\n    const remove$4 = (element, attr, id) => {\n      const nu = filter$2(read(element, attr), v => v !== id);\n      if (nu.length > 0) {\n        set$9(element, attr, nu.join(' '));\n      } else {\n        remove$7(element, attr);\n      }\n      return false;\n    };\n\n    const supports = element => element.dom.classList !== undefined;\n    const get$8 = element => read(element, 'class');\n    const add$3 = (element, clazz) => add$4(element, 'class', clazz);\n    const remove$3 = (element, clazz) => remove$4(element, 'class', clazz);\n    const toggle$5 = (element, clazz) => {\n      if (contains$2(get$8(element), clazz)) {\n        return remove$3(element, clazz);\n      } else {\n        return add$3(element, clazz);\n      }\n    };\n\n    const add$2 = (element, clazz) => {\n      if (supports(element)) {\n        element.dom.classList.add(clazz);\n      } else {\n        add$3(element, clazz);\n      }\n    };\n    const cleanClass = element => {\n      const classList = supports(element) ? element.dom.classList : get$8(element);\n      if (classList.length === 0) {\n        remove$7(element, 'class');\n      }\n    };\n    const remove$2 = (element, clazz) => {\n      if (supports(element)) {\n        const classList = element.dom.classList;\n        classList.remove(clazz);\n      } else {\n        remove$3(element, clazz);\n      }\n      cleanClass(element);\n    };\n    const toggle$4 = (element, clazz) => {\n      const result = supports(element) ? element.dom.classList.toggle(clazz) : toggle$5(element, clazz);\n      cleanClass(element);\n      return result;\n    };\n    const has = (element, clazz) => supports(element) && element.dom.classList.contains(clazz);\n\n    const add$1 = (element, classes) => {\n      each$1(classes, x => {\n        add$2(element, x);\n      });\n    };\n    const remove$1 = (element, classes) => {\n      each$1(classes, x => {\n        remove$2(element, x);\n      });\n    };\n    const toggle$3 = (element, classes) => {\n      each$1(classes, x => {\n        toggle$4(element, x);\n      });\n    };\n    const hasAll = (element, classes) => forall(classes, clazz => has(element, clazz));\n    const getNative = element => {\n      const classList = element.dom.classList;\n      const r = new Array(classList.length);\n      for (let i = 0; i < classList.length; i++) {\n        const item = classList.item(i);\n        if (item !== null) {\n          r[i] = item;\n        }\n      }\n      return r;\n    };\n    const get$7 = element => supports(element) ? getNative(element) : get$8(element);\n\n    const get$6 = element => element.dom.value;\n    const set$5 = (element, value) => {\n      if (value === undefined) {\n        throw new Error('Value.set was undefined');\n      }\n      element.dom.value = value;\n    };\n\n    const determineObsoleted = (parent, index, oldObsoleted) => {\n      const newObsoleted = child$2(parent, index);\n      return newObsoleted.map(newObs => {\n        const elemChanged = oldObsoleted.exists(o => !eq(o, newObs));\n        if (elemChanged) {\n          const oldTag = oldObsoleted.map(name$3).getOr('span');\n          const marker = SugarElement.fromTag(oldTag);\n          before$1(newObs, marker);\n          return marker;\n        } else {\n          return newObs;\n        }\n      });\n    };\n    const ensureInDom = (parent, child, obsoleted) => {\n      obsoleted.fold(() => append$2(parent, child), obs => {\n        if (!eq(obs, child)) {\n          before$1(obs, child);\n          remove$5(obs);\n        }\n      });\n    };\n    const patchChildrenWith = (parent, nu, f) => {\n      const builtChildren = map$2(nu, f);\n      const currentChildren = children(parent);\n      each$1(currentChildren.slice(builtChildren.length), remove$5);\n      return builtChildren;\n    };\n    const patchSpecChild = (parent, index, spec, build) => {\n      const oldObsoleted = child$2(parent, index);\n      const childComp = build(spec, oldObsoleted);\n      const obsoleted = determineObsoleted(parent, index, oldObsoleted);\n      ensureInDom(parent, childComp.element, obsoleted);\n      return childComp;\n    };\n    const patchSpecChildren = (parent, specs, build) => patchChildrenWith(parent, specs, (spec, index) => patchSpecChild(parent, index, spec, build));\n    const patchDomChildren = (parent, nodes) => patchChildrenWith(parent, nodes, (node, index) => {\n      const optObsoleted = child$2(parent, index);\n      ensureInDom(parent, node, optObsoleted);\n      return node;\n    });\n\n    const diffKeyValueSet = (newObj, oldObj) => {\n      const newKeys = keys(newObj);\n      const oldKeys = keys(oldObj);\n      const toRemove = difference(oldKeys, newKeys);\n      const toSet = bifilter(newObj, (v, k) => {\n        return !has$2(oldObj, k) || v !== oldObj[k];\n      }).t;\n      return {\n        toRemove,\n        toSet\n      };\n    };\n    const reconcileToDom = (definition, obsoleted) => {\n      const {\n        class: clazz,\n        style,\n        ...existingAttributes\n      } = clone$2(obsoleted);\n      const {\n        toSet: attrsToSet,\n        toRemove: attrsToRemove\n      } = diffKeyValueSet(definition.attributes, existingAttributes);\n      const updateAttrs = () => {\n        each$1(attrsToRemove, a => remove$7(obsoleted, a));\n        setAll$1(obsoleted, attrsToSet);\n      };\n      const existingStyles = getAllRaw(obsoleted);\n      const {\n        toSet: stylesToSet,\n        toRemove: stylesToRemove\n      } = diffKeyValueSet(definition.styles, existingStyles);\n      const updateStyles = () => {\n        each$1(stylesToRemove, s => remove$6(obsoleted, s));\n        setAll(obsoleted, stylesToSet);\n      };\n      const existingClasses = get$7(obsoleted);\n      const classesToRemove = difference(existingClasses, definition.classes);\n      const classesToAdd = difference(definition.classes, existingClasses);\n      const updateClasses = () => {\n        add$1(obsoleted, classesToAdd);\n        remove$1(obsoleted, classesToRemove);\n      };\n      const updateHtml = html => {\n        set$6(obsoleted, html);\n      };\n      const updateChildren = () => {\n        const children = definition.domChildren;\n        patchDomChildren(obsoleted, children);\n      };\n      const updateValue = () => {\n        const valueElement = obsoleted;\n        const value = definition.value.getOrUndefined();\n        if (value !== get$6(valueElement)) {\n          set$5(valueElement, value !== null && value !== void 0 ? value : '');\n        }\n      };\n      updateAttrs();\n      updateClasses();\n      updateStyles();\n      definition.innerHtml.fold(updateChildren, updateHtml);\n      updateValue();\n      return obsoleted;\n    };\n\n    const introduceToDom = definition => {\n      const subject = SugarElement.fromTag(definition.tag);\n      setAll$1(subject, definition.attributes);\n      add$1(subject, definition.classes);\n      setAll(subject, definition.styles);\n      definition.innerHtml.each(html => set$6(subject, html));\n      const children = definition.domChildren;\n      append$1(subject, children);\n      definition.value.each(value => {\n        set$5(subject, value);\n      });\n      return subject;\n    };\n    const attemptPatch = (definition, obsoleted) => {\n      try {\n        const e = reconcileToDom(definition, obsoleted);\n        return Optional.some(e);\n      } catch (err) {\n        return Optional.none();\n      }\n    };\n    const hasMixedChildren = definition => definition.innerHtml.isSome() && definition.domChildren.length > 0;\n    const renderToDom = (definition, optObsoleted) => {\n      const canBePatched = candidate => name$3(candidate) === definition.tag && !hasMixedChildren(definition) && !isPremade(candidate);\n      const elem = optObsoleted.filter(canBePatched).bind(obsoleted => attemptPatch(definition, obsoleted)).getOrThunk(() => introduceToDom(definition));\n      writeOnly(elem, definition.uid);\n      return elem;\n    };\n\n    const getBehaviours$2 = spec => {\n      const behaviours = get$g(spec, 'behaviours').getOr({});\n      return bind$3(keys(behaviours), name => {\n        const behaviour = behaviours[name];\n        return isNonNullable(behaviour) ? [behaviour.me] : [];\n      });\n    };\n    const generateFrom = (spec, all) => generateFrom$1(spec, all);\n    const generate$4 = spec => {\n      const all = getBehaviours$2(spec);\n      return generateFrom(spec, all);\n    };\n\n    const getDomDefinition = (info, bList, bData) => {\n      const definition = toDefinition(info);\n      const infoModification = toModification(info);\n      const baseModification = { 'alloy.base.modification': infoModification };\n      const modification = bList.length > 0 ? combine$2(bData, baseModification, bList, definition) : infoModification;\n      return merge(definition, modification);\n    };\n    const getEvents = (info, bList, bData) => {\n      const baseEvents = { 'alloy.base.behaviour': toEvents(info) };\n      return combine$1(bData, info.eventOrder, bList, baseEvents).getOrDie();\n    };\n    const build$2 = (spec, obsoleted) => {\n      const getMe = () => me;\n      const systemApi = Cell(singleton$1);\n      const info = getOrDie(toInfo(spec));\n      const bBlob = generate$4(spec);\n      const bList = getBehaviours$3(bBlob);\n      const bData = getData$2(bBlob);\n      const modDefinition = getDomDefinition(info, bList, bData);\n      const item = renderToDom(modDefinition, obsoleted);\n      const events = getEvents(info, bList, bData);\n      const subcomponents = Cell(info.components);\n      const connect = newApi => {\n        systemApi.set(newApi);\n      };\n      const disconnect = () => {\n        systemApi.set(NoContextApi(getMe));\n      };\n      const syncComponents = () => {\n        const children$1 = children(item);\n        const subs = bind$3(children$1, child => systemApi.get().getByDom(child).fold(() => [], pure$2));\n        subcomponents.set(subs);\n      };\n      const config = behaviour => {\n        const b = bData;\n        const f = isFunction(b[behaviour.name()]) ? b[behaviour.name()] : () => {\n          throw new Error('Could not find ' + behaviour.name() + ' in ' + JSON.stringify(spec, null, 2));\n        };\n        return f();\n      };\n      const hasConfigured = behaviour => isFunction(bData[behaviour.name()]);\n      const getApis = () => info.apis;\n      const readState = behaviourName => bData[behaviourName]().map(b => b.state.readState()).getOr('not enabled');\n      const me = {\n        uid: spec.uid,\n        getSystem: systemApi.get,\n        config,\n        hasConfigured,\n        spec,\n        readState,\n        getApis,\n        connect,\n        disconnect,\n        element: item,\n        syncComponents,\n        components: subcomponents.get,\n        events\n      };\n      return me;\n    };\n\n    const buildSubcomponents = (spec, obsoleted) => {\n      const components = get$g(spec, 'components').getOr([]);\n      return obsoleted.fold(() => map$2(components, build$1), obs => map$2(components, (c, i) => {\n        return buildOrPatch(c, child$2(obs, i));\n      }));\n    };\n    const buildFromSpec = (userSpec, obsoleted) => {\n      const {\n        events: specEvents,\n        ...spec\n      } = make$8(userSpec);\n      const components = buildSubcomponents(spec, obsoleted);\n      const completeSpec = {\n        ...spec,\n        events: {\n          ...DefaultEvents,\n          ...specEvents\n        },\n        components\n      };\n      return Result.value(build$2(completeSpec, obsoleted));\n    };\n    const text$2 = textContent => {\n      const element = SugarElement.fromText(textContent);\n      return external$1({ element });\n    };\n    const external$1 = spec => {\n      const extSpec = asRawOrDie$1('external.component', objOfOnly([\n        required$1('element'),\n        option$3('uid')\n      ]), spec);\n      const systemApi = Cell(NoContextApi());\n      const connect = newApi => {\n        systemApi.set(newApi);\n      };\n      const disconnect = () => {\n        systemApi.set(NoContextApi(() => me));\n      };\n      const uid = extSpec.uid.getOrThunk(() => generate$5('external'));\n      writeOnly(extSpec.element, uid);\n      const me = {\n        uid,\n        getSystem: systemApi.get,\n        config: Optional.none,\n        hasConfigured: never,\n        connect,\n        disconnect,\n        getApis: () => ({}),\n        element: extSpec.element,\n        spec,\n        readState: constant$1('No state'),\n        syncComponents: noop,\n        components: constant$1([]),\n        events: {}\n      };\n      return premade$1(me);\n    };\n    const uids = generate$5;\n    const isSketchSpec$1 = spec => has$2(spec, 'uid');\n    const buildOrPatch = (spec, obsoleted) => getPremade(spec).getOrThunk(() => {\n      const userSpecWithUid = isSketchSpec$1(spec) ? spec : {\n        uid: uids(''),\n        ...spec\n      };\n      return buildFromSpec(userSpecWithUid, obsoleted).getOrDie();\n    });\n    const build$1 = spec => buildOrPatch(spec, Optional.none());\n    const premade = premade$1;\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    const ancestor$1 = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$3 = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor$1, scope, predicate, isRoot);\n    };\n    const child$1 = (scope, predicate) => {\n      const pred = node => predicate(SugarElement.fromDom(node));\n      const result = find$5(scope.dom.childNodes, pred);\n      return result.map(SugarElement.fromDom);\n    };\n    const descendant$1 = (scope, predicate) => {\n      const descend = node => {\n        for (let i = 0; i < node.childNodes.length; i++) {\n          const child = SugarElement.fromDom(node.childNodes[i]);\n          if (predicate(child)) {\n            return Optional.some(child);\n          }\n          const res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Optional.none();\n      };\n      return descend(scope.dom);\n    };\n\n    const closest$2 = (scope, predicate, isRoot) => closest$3(scope, predicate, isRoot).isSome();\n\n    const ancestor = (scope, selector, isRoot) => ancestor$1(scope, e => is(e, selector), isRoot);\n    const child = (scope, selector) => child$1(scope, e => is(e, selector));\n    const descendant = (scope, selector) => one(selector, scope);\n    const closest$1 = (scope, selector, isRoot) => {\n      const is$1 = (element, selector) => is(element, selector);\n      return ClosestOrAncestor(is$1, ancestor, scope, selector, isRoot);\n    };\n\n    const attribute = 'aria-controls';\n    const find$1 = queryElem => {\n      const dependent = closest$3(queryElem, elem => {\n        if (!isElement$1(elem)) {\n          return false;\n        }\n        const id = get$f(elem, 'id');\n        return id !== undefined && id.indexOf(attribute) > -1;\n      });\n      return dependent.bind(dep => {\n        const id = get$f(dep, 'id');\n        const dos = getRootNode(dep);\n        return descendant(dos, `[${ attribute }=\"${ id }\"]`);\n      });\n    };\n    const manager = () => {\n      const ariaId = generate$6(attribute);\n      const link = elem => {\n        set$9(elem, attribute, ariaId);\n      };\n      const unlink = elem => {\n        remove$7(elem, attribute);\n      };\n      return {\n        id: ariaId,\n        link,\n        unlink\n      };\n    };\n\n    const isAriaPartOf = (component, queryElem) => find$1(queryElem).exists(owner => isPartOf$1(component, owner));\n    const isPartOf$1 = (component, queryElem) => closest$2(queryElem, el => eq(el, component.element), never) || isAriaPartOf(component, queryElem);\n\n    const unknown = 'unknown';\n    var EventConfiguration;\n    (function (EventConfiguration) {\n      EventConfiguration[EventConfiguration['STOP'] = 0] = 'STOP';\n      EventConfiguration[EventConfiguration['NORMAL'] = 1] = 'NORMAL';\n      EventConfiguration[EventConfiguration['LOGGING'] = 2] = 'LOGGING';\n    }(EventConfiguration || (EventConfiguration = {})));\n    const eventConfig = Cell({});\n    const makeEventLogger = (eventName, initialTarget) => {\n      const sequence = [];\n      const startTime = new Date().getTime();\n      return {\n        logEventCut: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'cut',\n            target,\n            purpose\n          });\n        },\n        logEventStopped: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'stopped',\n            target,\n            purpose\n          });\n        },\n        logNoParent: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'no-parent',\n            target,\n            purpose\n          });\n        },\n        logEventNoHandlers: (_name, target) => {\n          sequence.push({\n            outcome: 'no-handlers-left',\n            target\n          });\n        },\n        logEventResponse: (_name, target, purpose) => {\n          sequence.push({\n            outcome: 'response',\n            purpose,\n            target\n          });\n        },\n        write: () => {\n          const finishTime = new Date().getTime();\n          if (contains$2([\n              'mousemove',\n              'mouseover',\n              'mouseout',\n              systemInit()\n            ], eventName)) {\n            return;\n          }\n          console.log(eventName, {\n            event: eventName,\n            time: finishTime - startTime,\n            target: initialTarget.dom,\n            sequence: map$2(sequence, s => {\n              if (!contains$2([\n                  'cut',\n                  'stopped',\n                  'response'\n                ], s.outcome)) {\n                return s.outcome;\n              } else {\n                return '{' + s.purpose + '} ' + s.outcome + ' at (' + element(s.target) + ')';\n              }\n            })\n          });\n        }\n      };\n    };\n    const processEvent = (eventName, initialTarget, f) => {\n      const status = get$g(eventConfig.get(), eventName).orThunk(() => {\n        const patterns = keys(eventConfig.get());\n        return findMap(patterns, p => eventName.indexOf(p) > -1 ? Optional.some(eventConfig.get()[p]) : Optional.none());\n      }).getOr(EventConfiguration.NORMAL);\n      switch (status) {\n      case EventConfiguration.NORMAL:\n        return f(noLogger());\n      case EventConfiguration.LOGGING: {\n          const logger = makeEventLogger(eventName, initialTarget);\n          const output = f(logger);\n          logger.write();\n          return output;\n        }\n      case EventConfiguration.STOP:\n        return true;\n      }\n    };\n    const path = [\n      'alloy/data/Fields',\n      'alloy/debugging/Debugging'\n    ];\n    const getTrace = () => {\n      const err = new Error();\n      if (err.stack !== undefined) {\n        const lines = err.stack.split('\\n');\n        return find$5(lines, line => line.indexOf('alloy') > 0 && !exists(path, p => line.indexOf(p) > -1)).getOr(unknown);\n      } else {\n        return unknown;\n      }\n    };\n    const ignoreEvent = {\n      logEventCut: noop,\n      logEventStopped: noop,\n      logNoParent: noop,\n      logEventNoHandlers: noop,\n      logEventResponse: noop,\n      write: noop\n    };\n    const monitorEvent = (eventName, initialTarget, f) => processEvent(eventName, initialTarget, f);\n    const noLogger = constant$1(ignoreEvent);\n\n    const menuFields = constant$1([\n      required$1('menu'),\n      required$1('selectedMenu')\n    ]);\n    const itemFields = constant$1([\n      required$1('item'),\n      required$1('selectedItem')\n    ]);\n    constant$1(objOf(itemFields().concat(menuFields())));\n    const itemSchema$3 = constant$1(objOf(itemFields()));\n\n    const _initSize = requiredObjOf('initSize', [\n      required$1('numColumns'),\n      required$1('numRows')\n    ]);\n    const itemMarkers = () => requiredOf('markers', itemSchema$3());\n    const tieredMenuMarkers = () => requiredObjOf('markers', [required$1('backgroundMenu')].concat(menuFields()).concat(itemFields()));\n    const markers$1 = required => requiredObjOf('markers', map$2(required, required$1));\n    const onPresenceHandler = (label, fieldName, presence) => {\n      getTrace();\n      return field$1(fieldName, fieldName, presence, valueOf(f => Result.value((...args) => {\n        return f.apply(undefined, args);\n      })));\n    };\n    const onHandler = fieldName => onPresenceHandler('onHandler', fieldName, defaulted$1(noop));\n    const onKeyboardHandler = fieldName => onPresenceHandler('onKeyboardHandler', fieldName, defaulted$1(Optional.none));\n    const onStrictHandler = fieldName => onPresenceHandler('onHandler', fieldName, required$2());\n    const onStrictKeyboardHandler = fieldName => onPresenceHandler('onKeyboardHandler', fieldName, required$2());\n    const output$1 = (name, value) => customField(name, constant$1(value));\n    const snapshot = name => customField(name, identity);\n    const initSize = constant$1(_initSize);\n\n    const nu$6 = (x, y, bubble, direction, placement, boundsRestriction, labelPrefix, alwaysFit = false) => ({\n      x,\n      y,\n      bubble,\n      direction,\n      placement,\n      restriction: boundsRestriction,\n      label: `${ labelPrefix }-${ placement }`,\n      alwaysFit\n    });\n\n    const adt$a = Adt.generate([\n      { southeast: [] },\n      { southwest: [] },\n      { northeast: [] },\n      { northwest: [] },\n      { south: [] },\n      { north: [] },\n      { east: [] },\n      { west: [] }\n    ]);\n    const cata$2 = (subject, southeast, southwest, northeast, northwest, south, north, east, west) => subject.fold(southeast, southwest, northeast, northwest, south, north, east, west);\n    const cataVertical = (subject, south, middle, north) => subject.fold(south, south, north, north, south, north, middle, middle);\n    const cataHorizontal = (subject, east, middle, west) => subject.fold(east, west, east, west, middle, middle, east, west);\n    const southeast$3 = adt$a.southeast;\n    const southwest$3 = adt$a.southwest;\n    const northeast$3 = adt$a.northeast;\n    const northwest$3 = adt$a.northwest;\n    const south$3 = adt$a.south;\n    const north$3 = adt$a.north;\n    const east$3 = adt$a.east;\n    const west$3 = adt$a.west;\n\n    const cycleBy = (value, delta, min, max) => {\n      const r = value + delta;\n      if (r > max) {\n        return min;\n      } else if (r < min) {\n        return max;\n      } else {\n        return r;\n      }\n    };\n    const clamp = (value, min, max) => Math.min(Math.max(value, min), max);\n\n    const getRestriction = (anchor, restriction) => {\n      switch (restriction) {\n      case 1:\n        return anchor.x;\n      case 0:\n        return anchor.x + anchor.width;\n      case 2:\n        return anchor.y;\n      case 3:\n        return anchor.y + anchor.height;\n      }\n    };\n    const boundsRestriction = (anchor, restrictions) => mapToObject([\n      'left',\n      'right',\n      'top',\n      'bottom'\n    ], dir => get$g(restrictions, dir).map(restriction => getRestriction(anchor, restriction)));\n    const adjustBounds = (bounds$1, restriction, bubbleOffset) => {\n      const applyRestriction = (dir, current) => restriction[dir].map(pos => {\n        const isVerticalAxis = dir === 'top' || dir === 'bottom';\n        const offset = isVerticalAxis ? bubbleOffset.top : bubbleOffset.left;\n        const comparator = dir === 'left' || dir === 'top' ? Math.max : Math.min;\n        const newPos = comparator(pos, current) + offset;\n        return isVerticalAxis ? clamp(newPos, bounds$1.y, bounds$1.bottom) : clamp(newPos, bounds$1.x, bounds$1.right);\n      }).getOr(current);\n      const adjustedLeft = applyRestriction('left', bounds$1.x);\n      const adjustedTop = applyRestriction('top', bounds$1.y);\n      const adjustedRight = applyRestriction('right', bounds$1.right);\n      const adjustedBottom = applyRestriction('bottom', bounds$1.bottom);\n      return bounds(adjustedLeft, adjustedTop, adjustedRight - adjustedLeft, adjustedBottom - adjustedTop);\n    };\n\n    const labelPrefix$2 = 'layout';\n    const eastX$1 = anchor => anchor.x;\n    const middleX$1 = (anchor, element) => anchor.x + anchor.width / 2 - element.width / 2;\n    const westX$1 = (anchor, element) => anchor.x + anchor.width - element.width;\n    const northY$2 = (anchor, element) => anchor.y - element.height;\n    const southY$2 = anchor => anchor.y + anchor.height;\n    const centreY$1 = (anchor, element) => anchor.y + anchor.height / 2 - element.height / 2;\n    const eastEdgeX$1 = anchor => anchor.x + anchor.width;\n    const westEdgeX$1 = (anchor, element) => anchor.x - element.width;\n    const southeast$2 = (anchor, element, bubbles) => nu$6(eastX$1(anchor), southY$2(anchor), bubbles.southeast(), southeast$3(), 'southeast', boundsRestriction(anchor, {\n      left: 1,\n      top: 3\n    }), labelPrefix$2);\n    const southwest$2 = (anchor, element, bubbles) => nu$6(westX$1(anchor, element), southY$2(anchor), bubbles.southwest(), southwest$3(), 'southwest', boundsRestriction(anchor, {\n      right: 0,\n      top: 3\n    }), labelPrefix$2);\n    const northeast$2 = (anchor, element, bubbles) => nu$6(eastX$1(anchor), northY$2(anchor, element), bubbles.northeast(), northeast$3(), 'northeast', boundsRestriction(anchor, {\n      left: 1,\n      bottom: 2\n    }), labelPrefix$2);\n    const northwest$2 = (anchor, element, bubbles) => nu$6(westX$1(anchor, element), northY$2(anchor, element), bubbles.northwest(), northwest$3(), 'northwest', boundsRestriction(anchor, {\n      right: 0,\n      bottom: 2\n    }), labelPrefix$2);\n    const north$2 = (anchor, element, bubbles) => nu$6(middleX$1(anchor, element), northY$2(anchor, element), bubbles.north(), north$3(), 'north', boundsRestriction(anchor, { bottom: 2 }), labelPrefix$2);\n    const south$2 = (anchor, element, bubbles) => nu$6(middleX$1(anchor, element), southY$2(anchor), bubbles.south(), south$3(), 'south', boundsRestriction(anchor, { top: 3 }), labelPrefix$2);\n    const east$2 = (anchor, element, bubbles) => nu$6(eastEdgeX$1(anchor), centreY$1(anchor, element), bubbles.east(), east$3(), 'east', boundsRestriction(anchor, { left: 0 }), labelPrefix$2);\n    const west$2 = (anchor, element, bubbles) => nu$6(westEdgeX$1(anchor, element), centreY$1(anchor, element), bubbles.west(), west$3(), 'west', boundsRestriction(anchor, { right: 1 }), labelPrefix$2);\n    const all$1 = () => [\n      southeast$2,\n      southwest$2,\n      northeast$2,\n      northwest$2,\n      south$2,\n      north$2,\n      east$2,\n      west$2\n    ];\n    const allRtl$1 = () => [\n      southwest$2,\n      southeast$2,\n      northwest$2,\n      northeast$2,\n      south$2,\n      north$2,\n      east$2,\n      west$2\n    ];\n    const aboveOrBelow = () => [\n      northeast$2,\n      northwest$2,\n      southeast$2,\n      southwest$2,\n      north$2,\n      south$2\n    ];\n    const aboveOrBelowRtl = () => [\n      northwest$2,\n      northeast$2,\n      southwest$2,\n      southeast$2,\n      north$2,\n      south$2\n    ];\n    const belowOrAbove = () => [\n      southeast$2,\n      southwest$2,\n      northeast$2,\n      northwest$2,\n      south$2,\n      north$2\n    ];\n    const belowOrAboveRtl = () => [\n      southwest$2,\n      southeast$2,\n      northwest$2,\n      northeast$2,\n      south$2,\n      north$2\n    ];\n\n    const chooseChannels = (channels, message) => message.universal ? channels : filter$2(channels, ch => contains$2(message.channels, ch));\n    const events$h = receiveConfig => derive$2([run$1(receive(), (component, message) => {\n        const channelMap = receiveConfig.channels;\n        const channels = keys(channelMap);\n        const receivingData = message;\n        const targetChannels = chooseChannels(channels, receivingData);\n        each$1(targetChannels, ch => {\n          const channelInfo = channelMap[ch];\n          const channelSchema = channelInfo.schema;\n          const data = asRawOrDie$1('channel[' + ch + '] data\\nReceiver: ' + element(component.element), channelSchema, receivingData.data);\n          channelInfo.onReceive(component, data);\n        });\n      })]);\n\n    var ActiveReceiving = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$h\n    });\n\n    var ReceivingSchema = [requiredOf('channels', setOf(Result.value, objOfOnly([\n        onStrictHandler('onReceive'),\n        defaulted('schema', anyValue())\n      ])))];\n\n    const executeEvent = (bConfig, bState, executor) => runOnExecute$1(component => {\n      executor(component, bConfig, bState);\n    });\n    const loadEvent = (bConfig, bState, f) => runOnInit((component, _simulatedEvent) => {\n      f(component, bConfig, bState);\n    });\n    const create$5 = (schema, name, active, apis, extra, state) => {\n      const configSchema = objOfOnly(schema);\n      const schemaSchema = optionObjOf(name, [optionObjOfOnly('config', schema)]);\n      return doCreate(configSchema, schemaSchema, name, active, apis, extra, state);\n    };\n    const createModes$1 = (modes, name, active, apis, extra, state) => {\n      const configSchema = modes;\n      const schemaSchema = optionObjOf(name, [optionOf('config', modes)]);\n      return doCreate(configSchema, schemaSchema, name, active, apis, extra, state);\n    };\n    const wrapApi = (bName, apiFunction, apiName) => {\n      const f = (component, ...rest) => {\n        const args = [component].concat(rest);\n        return component.config({ name: constant$1(bName) }).fold(() => {\n          throw new Error('We could not find any behaviour configuration for: ' + bName + '. Using API: ' + apiName);\n        }, info => {\n          const rest = Array.prototype.slice.call(args, 1);\n          return apiFunction.apply(undefined, [\n            component,\n            info.config,\n            info.state\n          ].concat(rest));\n        });\n      };\n      return markAsBehaviourApi(f, apiName, apiFunction);\n    };\n    const revokeBehaviour = name => ({\n      key: name,\n      value: undefined\n    });\n    const doCreate = (configSchema, schemaSchema, name, active, apis, extra, state) => {\n      const getConfig = info => hasNonNullableKey(info, name) ? info[name]() : Optional.none();\n      const wrappedApis = map$1(apis, (apiF, apiName) => wrapApi(name, apiF, apiName));\n      const wrappedExtra = map$1(extra, (extraF, extraName) => markAsExtraApi(extraF, extraName));\n      const me = {\n        ...wrappedExtra,\n        ...wrappedApis,\n        revoke: curry(revokeBehaviour, name),\n        config: spec => {\n          const prepared = asRawOrDie$1(name + '-config', configSchema, spec);\n          return {\n            key: name,\n            value: {\n              config: prepared,\n              me,\n              configAsRaw: cached(() => asRawOrDie$1(name + '-config', configSchema, spec)),\n              initialConfig: spec,\n              state\n            }\n          };\n        },\n        schema: constant$1(schemaSchema),\n        exhibit: (info, base) => {\n          return lift2(getConfig(info), get$g(active, 'exhibit'), (behaviourInfo, exhibitor) => {\n            return exhibitor(base, behaviourInfo.config, behaviourInfo.state);\n          }).getOrThunk(() => nu$7({}));\n        },\n        name: constant$1(name),\n        handlers: info => {\n          return getConfig(info).map(behaviourInfo => {\n            const getEvents = get$g(active, 'events').getOr(() => ({}));\n            return getEvents(behaviourInfo.config, behaviourInfo.state);\n          }).getOr({});\n        }\n      };\n      return me;\n    };\n\n    const derive$1 = capabilities => wrapAll(capabilities);\n    const simpleSchema = objOfOnly([\n      required$1('fields'),\n      required$1('name'),\n      defaulted('active', {}),\n      defaulted('apis', {}),\n      defaulted('state', NoState),\n      defaulted('extra', {})\n    ]);\n    const create$4 = data => {\n      const value = asRawOrDie$1('Creating behaviour: ' + data.name, simpleSchema, data);\n      return create$5(value.fields, value.name, value.active, value.apis, value.extra, value.state);\n    };\n    const modeSchema = objOfOnly([\n      required$1('branchKey'),\n      required$1('branches'),\n      required$1('name'),\n      defaulted('active', {}),\n      defaulted('apis', {}),\n      defaulted('state', NoState),\n      defaulted('extra', {})\n    ]);\n    const createModes = data => {\n      const value = asRawOrDie$1('Creating behaviour: ' + data.name, modeSchema, data);\n      return createModes$1(choose$1(value.branchKey, value.branches), value.name, value.active, value.apis, value.extra, value.state);\n    };\n    const revoke = constant$1(undefined);\n\n    const Receiving = create$4({\n      fields: ReceivingSchema,\n      name: 'receiving',\n      active: ActiveReceiving\n    });\n\n    const exhibit$6 = (base, posConfig) => nu$7({\n      classes: [],\n      styles: posConfig.useFixed() ? {} : { position: 'relative' }\n    });\n\n    var ActivePosition = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$6\n    });\n\n    const focus$3 = (element, preventScroll = false) => element.dom.focus({ preventScroll });\n    const blur$1 = element => element.dom.blur();\n    const hasFocus = element => {\n      const root = getRootNode(element).dom;\n      return element.dom === root.activeElement;\n    };\n    const active$1 = (root = getDocument()) => Optional.from(root.dom.activeElement).map(SugarElement.fromDom);\n    const search = element => active$1(getRootNode(element)).filter(e => element.dom.contains(e.dom));\n\n    const preserve$1 = (f, container) => {\n      const dos = getRootNode(container);\n      const refocus = active$1(dos).bind(focused => {\n        const hasFocus = elem => eq(focused, elem);\n        return hasFocus(container) ? Optional.some(container) : descendant$1(container, hasFocus);\n      });\n      const result = f(container);\n      refocus.each(oldFocus => {\n        active$1(dos).filter(newFocus => eq(newFocus, oldFocus)).fold(() => {\n          focus$3(oldFocus);\n        }, noop);\n      });\n      return result;\n    };\n\n    const NuPositionCss = (position, left, top, right, bottom) => {\n      const toPx = num => num + 'px';\n      return {\n        position,\n        left: left.map(toPx),\n        top: top.map(toPx),\n        right: right.map(toPx),\n        bottom: bottom.map(toPx)\n      };\n    };\n    const toOptions = position => ({\n      ...position,\n      position: Optional.some(position.position)\n    });\n    const applyPositionCss = (element, position) => {\n      setOptions(element, toOptions(position));\n    };\n\n    const adt$9 = Adt.generate([\n      { none: [] },\n      {\n        relative: [\n          'x',\n          'y',\n          'width',\n          'height'\n        ]\n      },\n      {\n        fixed: [\n          'x',\n          'y',\n          'width',\n          'height'\n        ]\n      }\n    ]);\n    const positionWithDirection = (posName, decision, x, y, width, height) => {\n      const decisionRect = decision.rect;\n      const decisionX = decisionRect.x - x;\n      const decisionY = decisionRect.y - y;\n      const decisionWidth = decisionRect.width;\n      const decisionHeight = decisionRect.height;\n      const decisionRight = width - (decisionX + decisionWidth);\n      const decisionBottom = height - (decisionY + decisionHeight);\n      const left = Optional.some(decisionX);\n      const top = Optional.some(decisionY);\n      const right = Optional.some(decisionRight);\n      const bottom = Optional.some(decisionBottom);\n      const none = Optional.none();\n      return cata$2(decision.direction, () => NuPositionCss(posName, left, top, none, none), () => NuPositionCss(posName, none, top, right, none), () => NuPositionCss(posName, left, none, none, bottom), () => NuPositionCss(posName, none, none, right, bottom), () => NuPositionCss(posName, left, top, none, none), () => NuPositionCss(posName, left, none, none, bottom), () => NuPositionCss(posName, left, top, none, none), () => NuPositionCss(posName, none, top, right, none));\n    };\n    const reposition = (origin, decision) => origin.fold(() => {\n      const decisionRect = decision.rect;\n      return NuPositionCss('absolute', Optional.some(decisionRect.x), Optional.some(decisionRect.y), Optional.none(), Optional.none());\n    }, (x, y, width, height) => {\n      return positionWithDirection('absolute', decision, x, y, width, height);\n    }, (x, y, width, height) => {\n      return positionWithDirection('fixed', decision, x, y, width, height);\n    });\n    const toBox = (origin, element) => {\n      const rel = curry(find$2, element);\n      const position = origin.fold(rel, rel, () => {\n        const scroll = get$b();\n        return find$2(element).translate(-scroll.left, -scroll.top);\n      });\n      const width = getOuter$1(element);\n      const height = getOuter$2(element);\n      return bounds(position.left, position.top, width, height);\n    };\n    const viewport = (origin, optBounds) => optBounds.fold(() => origin.fold(win, win, bounds), bounds$1 => origin.fold(constant$1(bounds$1), constant$1(bounds$1), () => {\n      const pos = translate$2(origin, bounds$1.x, bounds$1.y);\n      return bounds(pos.left, pos.top, bounds$1.width, bounds$1.height);\n    }));\n    const translate$2 = (origin, x, y) => {\n      const pos = SugarPosition(x, y);\n      const removeScroll = () => {\n        const outerScroll = get$b();\n        return pos.translate(-outerScroll.left, -outerScroll.top);\n      };\n      return origin.fold(constant$1(pos), constant$1(pos), removeScroll);\n    };\n    const cata$1 = (subject, onNone, onRelative, onFixed) => subject.fold(onNone, onRelative, onFixed);\n    adt$9.none;\n    const relative$1 = adt$9.relative;\n    const fixed$1 = adt$9.fixed;\n\n    const anchor = (anchorBox, origin) => ({\n      anchorBox,\n      origin\n    });\n    const box = (anchorBox, origin) => anchor(anchorBox, origin);\n\n    const placementAttribute = 'data-alloy-placement';\n    const setPlacement$1 = (element, placement) => {\n      set$9(element, placementAttribute, placement);\n    };\n    const getPlacement = element => getOpt(element, placementAttribute);\n    const reset$2 = element => remove$7(element, placementAttribute);\n\n    const adt$8 = Adt.generate([\n      { fit: ['reposition'] },\n      {\n        nofit: [\n          'reposition',\n          'visibleW',\n          'visibleH',\n          'isVisible'\n        ]\n      }\n    ]);\n    const determinePosition = (box, bounds) => {\n      const {\n        x: boundsX,\n        y: boundsY,\n        right: boundsRight,\n        bottom: boundsBottom\n      } = bounds;\n      const {x, y, right, bottom, width, height} = box;\n      const xInBounds = x >= boundsX && x <= boundsRight;\n      const yInBounds = y >= boundsY && y <= boundsBottom;\n      const originInBounds = xInBounds && yInBounds;\n      const rightInBounds = right <= boundsRight && right >= boundsX;\n      const bottomInBounds = bottom <= boundsBottom && bottom >= boundsY;\n      const sizeInBounds = rightInBounds && bottomInBounds;\n      const visibleW = Math.min(width, x >= boundsX ? boundsRight - x : right - boundsX);\n      const visibleH = Math.min(height, y >= boundsY ? boundsBottom - y : bottom - boundsY);\n      return {\n        originInBounds,\n        sizeInBounds,\n        visibleW,\n        visibleH\n      };\n    };\n    const calcReposition = (box, bounds$1) => {\n      const {\n        x: boundsX,\n        y: boundsY,\n        right: boundsRight,\n        bottom: boundsBottom\n      } = bounds$1;\n      const {x, y, width, height} = box;\n      const maxX = Math.max(boundsX, boundsRight - width);\n      const maxY = Math.max(boundsY, boundsBottom - height);\n      const restrictedX = clamp(x, boundsX, maxX);\n      const restrictedY = clamp(y, boundsY, maxY);\n      const restrictedWidth = Math.min(restrictedX + width, boundsRight) - restrictedX;\n      const restrictedHeight = Math.min(restrictedY + height, boundsBottom) - restrictedY;\n      return bounds(restrictedX, restrictedY, restrictedWidth, restrictedHeight);\n    };\n    const calcMaxSizes = (direction, box, bounds) => {\n      const upAvailable = constant$1(box.bottom - bounds.y);\n      const downAvailable = constant$1(bounds.bottom - box.y);\n      const maxHeight = cataVertical(direction, downAvailable, downAvailable, upAvailable);\n      const westAvailable = constant$1(box.right - bounds.x);\n      const eastAvailable = constant$1(bounds.right - box.x);\n      const maxWidth = cataHorizontal(direction, eastAvailable, eastAvailable, westAvailable);\n      return {\n        maxWidth,\n        maxHeight\n      };\n    };\n    const attempt = (candidate, width, height, bounds$1) => {\n      const bubble = candidate.bubble;\n      const bubbleOffset = bubble.offset;\n      const adjustedBounds = adjustBounds(bounds$1, candidate.restriction, bubbleOffset);\n      const newX = candidate.x + bubbleOffset.left;\n      const newY = candidate.y + bubbleOffset.top;\n      const box = bounds(newX, newY, width, height);\n      const {originInBounds, sizeInBounds, visibleW, visibleH} = determinePosition(box, adjustedBounds);\n      const fits = originInBounds && sizeInBounds;\n      const fittedBox = fits ? box : calcReposition(box, adjustedBounds);\n      const isPartlyVisible = fittedBox.width > 0 && fittedBox.height > 0;\n      const {maxWidth, maxHeight} = calcMaxSizes(candidate.direction, fittedBox, bounds$1);\n      const reposition = {\n        rect: fittedBox,\n        maxHeight,\n        maxWidth,\n        direction: candidate.direction,\n        placement: candidate.placement,\n        classes: {\n          on: bubble.classesOn,\n          off: bubble.classesOff\n        },\n        layout: candidate.label,\n        testY: newY\n      };\n      return fits || candidate.alwaysFit ? adt$8.fit(reposition) : adt$8.nofit(reposition, visibleW, visibleH, isPartlyVisible);\n    };\n    const attempts = (element, candidates, anchorBox, elementBox, bubbles, bounds) => {\n      const panelWidth = elementBox.width;\n      const panelHeight = elementBox.height;\n      const attemptBestFit = (layout, reposition, visibleW, visibleH, isVisible) => {\n        const next = layout(anchorBox, elementBox, bubbles, element, bounds);\n        const attemptLayout = attempt(next, panelWidth, panelHeight, bounds);\n        return attemptLayout.fold(constant$1(attemptLayout), (newReposition, newVisibleW, newVisibleH, newIsVisible) => {\n          const improved = isVisible === newIsVisible ? newVisibleH > visibleH || newVisibleW > visibleW : !isVisible && newIsVisible;\n          return improved ? attemptLayout : adt$8.nofit(reposition, visibleW, visibleH, isVisible);\n        });\n      };\n      const abc = foldl(candidates, (b, a) => {\n        const bestNext = curry(attemptBestFit, a);\n        return b.fold(constant$1(b), bestNext);\n      }, adt$8.nofit({\n        rect: anchorBox,\n        maxHeight: elementBox.height,\n        maxWidth: elementBox.width,\n        direction: southeast$3(),\n        placement: 'southeast',\n        classes: {\n          on: [],\n          off: []\n        },\n        layout: 'none',\n        testY: anchorBox.y\n      }, -1, -1, false));\n      return abc.fold(identity, identity);\n    };\n\n    const singleton = doRevoke => {\n      const subject = Cell(Optional.none());\n      const revoke = () => subject.get().each(doRevoke);\n      const clear = () => {\n        revoke();\n        subject.set(Optional.none());\n      };\n      const isSet = () => subject.get().isSome();\n      const get = () => subject.get();\n      const set = s => {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear,\n        isSet,\n        get,\n        set\n      };\n    };\n    const destroyable = () => singleton(s => s.destroy());\n    const unbindable = () => singleton(s => s.unbind());\n    const value$2 = () => {\n      const subject = singleton(noop);\n      const on = f => subject.get().each(f);\n      return {\n        ...subject,\n        on\n      };\n    };\n\n    const filter = always;\n    const bind = (element, event, handler) => bind$2(element, event, filter, handler);\n    const capture = (element, event, handler) => capture$1(element, event, filter, handler);\n    const fromRawEvent = fromRawEvent$1;\n\n    const properties = [\n      'top',\n      'bottom',\n      'right',\n      'left'\n    ];\n    const timerAttr = 'data-alloy-transition-timer';\n    const isTransitioning$1 = (element, transition) => hasAll(element, transition.classes);\n    const shouldApplyTransitionCss = (transition, decision, lastPlacement) => {\n      return lastPlacement.exists(placer => {\n        const mode = transition.mode;\n        return mode === 'all' ? true : placer[mode] !== decision[mode];\n      });\n    };\n    const hasChanges = (position, intermediate) => {\n      const round = value => parseFloat(value).toFixed(3);\n      return find$4(intermediate, (value, key) => {\n        const newValue = position[key].map(round);\n        const val = value.map(round);\n        return !equals(newValue, val);\n      }).isSome();\n    };\n    const getTransitionDuration = element => {\n      const get = name => {\n        const style = get$e(element, name);\n        const times = style.split(/\\s*,\\s*/);\n        return filter$2(times, isNotEmpty);\n      };\n      const parse = value => {\n        if (isString(value) && /^[\\d.]+/.test(value)) {\n          const num = parseFloat(value);\n          return endsWith(value, 'ms') ? num : num * 1000;\n        } else {\n          return 0;\n        }\n      };\n      const delay = get('transition-delay');\n      const duration = get('transition-duration');\n      return foldl(duration, (acc, dur, i) => {\n        const time = parse(delay[i]) + parse(dur);\n        return Math.max(acc, time);\n      }, 0);\n    };\n    const setupTransitionListeners = (element, transition) => {\n      const transitionEnd = unbindable();\n      const transitionCancel = unbindable();\n      let timer;\n      const isSourceTransition = e => {\n        var _a;\n        const pseudoElement = (_a = e.raw.pseudoElement) !== null && _a !== void 0 ? _a : '';\n        return eq(e.target, element) && isEmpty(pseudoElement) && contains$2(properties, e.raw.propertyName);\n      };\n      const transitionDone = e => {\n        if (isNullable(e) || isSourceTransition(e)) {\n          transitionEnd.clear();\n          transitionCancel.clear();\n          const type = e === null || e === void 0 ? void 0 : e.raw.type;\n          if (isNullable(type) || type === transitionend()) {\n            clearTimeout(timer);\n            remove$7(element, timerAttr);\n            remove$1(element, transition.classes);\n          }\n        }\n      };\n      const transitionStart = bind(element, transitionstart(), e => {\n        if (isSourceTransition(e)) {\n          transitionStart.unbind();\n          transitionEnd.set(bind(element, transitionend(), transitionDone));\n          transitionCancel.set(bind(element, transitioncancel(), transitionDone));\n        }\n      });\n      const duration = getTransitionDuration(element);\n      requestAnimationFrame(() => {\n        timer = setTimeout(transitionDone, duration + 17);\n        set$9(element, timerAttr, timer);\n      });\n    };\n    const startTransitioning = (element, transition) => {\n      add$1(element, transition.classes);\n      getOpt(element, timerAttr).each(timerId => {\n        clearTimeout(parseInt(timerId, 10));\n        remove$7(element, timerAttr);\n      });\n      setupTransitionListeners(element, transition);\n    };\n    const applyTransitionCss = (element, origin, position, transition, decision, lastPlacement) => {\n      const shouldTransition = shouldApplyTransitionCss(transition, decision, lastPlacement);\n      if (shouldTransition || isTransitioning$1(element, transition)) {\n        set$8(element, 'position', position.position);\n        const rect = toBox(origin, element);\n        const intermediatePosition = reposition(origin, {\n          ...decision,\n          rect\n        });\n        const intermediateCssOptions = mapToObject(properties, prop => intermediatePosition[prop]);\n        if (hasChanges(position, intermediateCssOptions)) {\n          setOptions(element, intermediateCssOptions);\n          if (shouldTransition) {\n            startTransitioning(element, transition);\n          }\n          reflow(element);\n        }\n      } else {\n        remove$1(element, transition.classes);\n      }\n    };\n\n    const elementSize = p => ({\n      width: getOuter$1(p),\n      height: getOuter$2(p)\n    });\n    const layout = (anchorBox, element, bubbles, options) => {\n      remove$6(element, 'max-height');\n      remove$6(element, 'max-width');\n      const elementBox = elementSize(element);\n      return attempts(element, options.preference, anchorBox, elementBox, bubbles, options.bounds);\n    };\n    const setClasses = (element, decision) => {\n      const classInfo = decision.classes;\n      remove$1(element, classInfo.off);\n      add$1(element, classInfo.on);\n    };\n    const setHeight = (element, decision, options) => {\n      const maxHeightFunction = options.maxHeightFunction;\n      maxHeightFunction(element, decision.maxHeight);\n    };\n    const setWidth = (element, decision, options) => {\n      const maxWidthFunction = options.maxWidthFunction;\n      maxWidthFunction(element, decision.maxWidth);\n    };\n    const position$2 = (element, decision, options) => {\n      const positionCss = reposition(options.origin, decision);\n      options.transition.each(transition => {\n        applyTransitionCss(element, options.origin, positionCss, transition, decision, options.lastPlacement);\n      });\n      applyPositionCss(element, positionCss);\n    };\n    const setPlacement = (element, decision) => {\n      setPlacement$1(element, decision.placement);\n    };\n\n    const setMaxHeight = (element, maxHeight) => {\n      setMax$1(element, Math.floor(maxHeight));\n    };\n    const anchored = constant$1((element, available) => {\n      setMaxHeight(element, available);\n      setAll(element, {\n        'overflow-x': 'hidden',\n        'overflow-y': 'auto'\n      });\n    });\n    const expandable$1 = constant$1((element, available) => {\n      setMaxHeight(element, available);\n    });\n\n    const defaultOr = (options, key, dephault) => options[key] === undefined ? dephault : options[key];\n    const simple = (anchor, element, bubble, layouts, lastPlacement, optBounds, overrideOptions, transition) => {\n      const maxHeightFunction = defaultOr(overrideOptions, 'maxHeightFunction', anchored());\n      const maxWidthFunction = defaultOr(overrideOptions, 'maxWidthFunction', noop);\n      const anchorBox = anchor.anchorBox;\n      const origin = anchor.origin;\n      const options = {\n        bounds: viewport(origin, optBounds),\n        origin,\n        preference: layouts,\n        maxHeightFunction,\n        maxWidthFunction,\n        lastPlacement,\n        transition\n      };\n      return go(anchorBox, element, bubble, options);\n    };\n    const go = (anchorBox, element, bubble, options) => {\n      const decision = layout(anchorBox, element, bubble, options);\n      position$2(element, decision, options);\n      setPlacement(element, decision);\n      setClasses(element, decision);\n      setHeight(element, decision, options);\n      setWidth(element, decision, options);\n      return {\n        layout: decision.layout,\n        placement: decision.placement\n      };\n    };\n\n    const allAlignments = [\n      'valignCentre',\n      'alignLeft',\n      'alignRight',\n      'alignCentre',\n      'top',\n      'bottom',\n      'left',\n      'right',\n      'inset'\n    ];\n    const nu$5 = (xOffset, yOffset, classes, insetModifier = 1) => {\n      const insetXOffset = xOffset * insetModifier;\n      const insetYOffset = yOffset * insetModifier;\n      const getClasses = prop => get$g(classes, prop).getOr([]);\n      const make = (xDelta, yDelta, alignmentsOn) => {\n        const alignmentsOff = difference(allAlignments, alignmentsOn);\n        return {\n          offset: SugarPosition(xDelta, yDelta),\n          classesOn: bind$3(alignmentsOn, getClasses),\n          classesOff: bind$3(alignmentsOff, getClasses)\n        };\n      };\n      return {\n        southeast: () => make(-xOffset, yOffset, [\n          'top',\n          'alignLeft'\n        ]),\n        southwest: () => make(xOffset, yOffset, [\n          'top',\n          'alignRight'\n        ]),\n        south: () => make(-xOffset / 2, yOffset, [\n          'top',\n          'alignCentre'\n        ]),\n        northeast: () => make(-xOffset, -yOffset, [\n          'bottom',\n          'alignLeft'\n        ]),\n        northwest: () => make(xOffset, -yOffset, [\n          'bottom',\n          'alignRight'\n        ]),\n        north: () => make(-xOffset / 2, -yOffset, [\n          'bottom',\n          'alignCentre'\n        ]),\n        east: () => make(xOffset, -yOffset / 2, [\n          'valignCentre',\n          'left'\n        ]),\n        west: () => make(-xOffset, -yOffset / 2, [\n          'valignCentre',\n          'right'\n        ]),\n        insetNortheast: () => make(insetXOffset, insetYOffset, [\n          'top',\n          'alignLeft',\n          'inset'\n        ]),\n        insetNorthwest: () => make(-insetXOffset, insetYOffset, [\n          'top',\n          'alignRight',\n          'inset'\n        ]),\n        insetNorth: () => make(-insetXOffset / 2, insetYOffset, [\n          'top',\n          'alignCentre',\n          'inset'\n        ]),\n        insetSoutheast: () => make(insetXOffset, -insetYOffset, [\n          'bottom',\n          'alignLeft',\n          'inset'\n        ]),\n        insetSouthwest: () => make(-insetXOffset, -insetYOffset, [\n          'bottom',\n          'alignRight',\n          'inset'\n        ]),\n        insetSouth: () => make(-insetXOffset / 2, -insetYOffset, [\n          'bottom',\n          'alignCentre',\n          'inset'\n        ]),\n        insetEast: () => make(-insetXOffset, -insetYOffset / 2, [\n          'valignCentre',\n          'right',\n          'inset'\n        ]),\n        insetWest: () => make(insetXOffset, -insetYOffset / 2, [\n          'valignCentre',\n          'left',\n          'inset'\n        ])\n      };\n    };\n    const fallback = () => nu$5(0, 0, {});\n\n    const nu$4 = identity;\n\n    const onDirection = (isLtr, isRtl) => element => getDirection(element) === 'rtl' ? isRtl : isLtr;\n    const getDirection = element => get$e(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n\n    var AttributeValue;\n    (function (AttributeValue) {\n      AttributeValue['TopToBottom'] = 'toptobottom';\n      AttributeValue['BottomToTop'] = 'bottomtotop';\n    }(AttributeValue || (AttributeValue = {})));\n    const Attribute = 'data-alloy-vertical-dir';\n    const isBottomToTopDir = el => closest$2(el, current => isElement$1(current) && get$f(current, 'data-alloy-vertical-dir') === AttributeValue.BottomToTop);\n\n    const schema$y = () => optionObjOf('layouts', [\n      required$1('onLtr'),\n      required$1('onRtl'),\n      option$3('onBottomLtr'),\n      option$3('onBottomRtl')\n    ]);\n    const get$5 = (elem, info, defaultLtr, defaultRtl, defaultBottomLtr, defaultBottomRtl, dirElement) => {\n      const isBottomToTop = dirElement.map(isBottomToTopDir).getOr(false);\n      const customLtr = info.layouts.map(ls => ls.onLtr(elem));\n      const customRtl = info.layouts.map(ls => ls.onRtl(elem));\n      const ltr = isBottomToTop ? info.layouts.bind(ls => ls.onBottomLtr.map(f => f(elem))).or(customLtr).getOr(defaultBottomLtr) : customLtr.getOr(defaultLtr);\n      const rtl = isBottomToTop ? info.layouts.bind(ls => ls.onBottomRtl.map(f => f(elem))).or(customRtl).getOr(defaultBottomRtl) : customRtl.getOr(defaultRtl);\n      const f = onDirection(ltr, rtl);\n      return f(elem);\n    };\n\n    const placement$4 = (component, anchorInfo, origin) => {\n      const hotspot = anchorInfo.hotspot;\n      const anchorBox = toBox(origin, hotspot.element);\n      const layouts = get$5(component.element, anchorInfo, belowOrAbove(), belowOrAboveRtl(), aboveOrBelow(), aboveOrBelowRtl(), Optional.some(anchorInfo.hotspot.element));\n      return Optional.some(nu$4({\n        anchorBox,\n        bubble: anchorInfo.bubble.getOr(fallback()),\n        overrides: anchorInfo.overrides,\n        layouts\n      }));\n    };\n    var HotspotAnchor = [\n      required$1('hotspot'),\n      option$3('bubble'),\n      defaulted('overrides', {}),\n      schema$y(),\n      output$1('placement', placement$4)\n    ];\n\n    const placement$3 = (component, anchorInfo, origin) => {\n      const pos = translate$2(origin, anchorInfo.x, anchorInfo.y);\n      const anchorBox = bounds(pos.left, pos.top, anchorInfo.width, anchorInfo.height);\n      const layouts = get$5(component.element, anchorInfo, all$1(), allRtl$1(), all$1(), allRtl$1(), Optional.none());\n      return Optional.some(nu$4({\n        anchorBox,\n        bubble: anchorInfo.bubble,\n        overrides: anchorInfo.overrides,\n        layouts\n      }));\n    };\n    var MakeshiftAnchor = [\n      required$1('x'),\n      required$1('y'),\n      defaulted('height', 0),\n      defaulted('width', 0),\n      defaulted('bubble', fallback()),\n      defaulted('overrides', {}),\n      schema$y(),\n      output$1('placement', placement$3)\n    ];\n\n    const adt$7 = Adt.generate([\n      { screen: ['point'] },\n      {\n        absolute: [\n          'point',\n          'scrollLeft',\n          'scrollTop'\n        ]\n      }\n    ]);\n    const toFixed = pos => pos.fold(identity, (point, scrollLeft, scrollTop) => point.translate(-scrollLeft, -scrollTop));\n    const toAbsolute = pos => pos.fold(identity, identity);\n    const sum = points => foldl(points, (b, a) => b.translate(a.left, a.top), SugarPosition(0, 0));\n    const sumAsFixed = positions => {\n      const points = map$2(positions, toFixed);\n      return sum(points);\n    };\n    const sumAsAbsolute = positions => {\n      const points = map$2(positions, toAbsolute);\n      return sum(points);\n    };\n    const screen = adt$7.screen;\n    const absolute$1 = adt$7.absolute;\n\n    const getOffset = (component, origin, anchorInfo) => {\n      const win = defaultView(anchorInfo.root).dom;\n      const hasSameOwner = frame => {\n        const frameOwner = owner$4(frame);\n        const compOwner = owner$4(component.element);\n        return eq(frameOwner, compOwner);\n      };\n      return Optional.from(win.frameElement).map(SugarElement.fromDom).filter(hasSameOwner).map(absolute$3);\n    };\n    const getRootPoint = (component, origin, anchorInfo) => {\n      const doc = owner$4(component.element);\n      const outerScroll = get$b(doc);\n      const offset = getOffset(component, origin, anchorInfo).getOr(outerScroll);\n      return absolute$1(offset, outerScroll.left, outerScroll.top);\n    };\n\n    const getBox = (left, top, width, height) => {\n      const point = screen(SugarPosition(left, top));\n      return Optional.some(pointed(point, width, height));\n    };\n    const calcNewAnchor = (optBox, rootPoint, anchorInfo, origin, elem) => optBox.map(box => {\n      const points = [\n        rootPoint,\n        box.point\n      ];\n      const topLeft = cata$1(origin, () => sumAsAbsolute(points), () => sumAsAbsolute(points), () => sumAsFixed(points));\n      const anchorBox = rect(topLeft.left, topLeft.top, box.width, box.height);\n      const layoutsLtr = anchorInfo.showAbove ? aboveOrBelow() : belowOrAbove();\n      const layoutsRtl = anchorInfo.showAbove ? aboveOrBelowRtl() : belowOrAboveRtl();\n      const layouts = get$5(elem, anchorInfo, layoutsLtr, layoutsRtl, layoutsLtr, layoutsRtl, Optional.none());\n      return nu$4({\n        anchorBox,\n        bubble: anchorInfo.bubble.getOr(fallback()),\n        overrides: anchorInfo.overrides,\n        layouts\n      });\n    });\n\n    const placement$2 = (component, anchorInfo, origin) => {\n      const rootPoint = getRootPoint(component, origin, anchorInfo);\n      return anchorInfo.node.filter(inBody).bind(target => {\n        const rect = target.dom.getBoundingClientRect();\n        const nodeBox = getBox(rect.left, rect.top, rect.width, rect.height);\n        const elem = anchorInfo.node.getOr(component.element);\n        return calcNewAnchor(nodeBox, rootPoint, anchorInfo, origin, elem);\n      });\n    };\n    var NodeAnchor = [\n      required$1('node'),\n      required$1('root'),\n      option$3('bubble'),\n      schema$y(),\n      defaulted('overrides', {}),\n      defaulted('showAbove', false),\n      output$1('placement', placement$2)\n    ];\n\n    const zeroWidth = '\\uFEFF';\n    const nbsp = '\\xA0';\n\n    const create$3 = (start, soffset, finish, foffset) => ({\n      start,\n      soffset,\n      finish,\n      foffset\n    });\n    const SimRange = { create: create$3 };\n\n    const adt$6 = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    const cata = (subject, onBefore, onOn, onAfter) => subject.fold(onBefore, onOn, onAfter);\n    const getStart$1 = situ => situ.fold(identity, identity, identity);\n    const before = adt$6.before;\n    const on$1 = adt$6.on;\n    const after$1 = adt$6.after;\n    const Situ = {\n      before,\n      on: on$1,\n      after: after$1,\n      cata,\n      getStart: getStart$1\n    };\n\n    const adt$5 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const exactFromRange = simRange => adt$5.exact(simRange.start, simRange.soffset, simRange.finish, simRange.foffset);\n    const getStart = selection => selection.match({\n      domRange: rng => SugarElement.fromDom(rng.startContainer),\n      relative: (startSitu, _finishSitu) => Situ.getStart(startSitu),\n      exact: (start, _soffset, _finish, _foffset) => start\n    });\n    const domRange = adt$5.domRange;\n    const relative = adt$5.relative;\n    const exact = adt$5.exact;\n    const getWin = selection => {\n      const start = getStart(selection);\n      return defaultView(start);\n    };\n    const range$1 = SimRange.create;\n    const SimSelection = {\n      domRange,\n      relative,\n      exact,\n      exactFromRange,\n      getWin,\n      range: range$1\n    };\n\n    const setStart = (rng, situ) => {\n      situ.fold(e => {\n        rng.setStartBefore(e.dom);\n      }, (e, o) => {\n        rng.setStart(e.dom, o);\n      }, e => {\n        rng.setStartAfter(e.dom);\n      });\n    };\n    const setFinish = (rng, situ) => {\n      situ.fold(e => {\n        rng.setEndBefore(e.dom);\n      }, (e, o) => {\n        rng.setEnd(e.dom, o);\n      }, e => {\n        rng.setEndAfter(e.dom);\n      });\n    };\n    const relativeToNative = (win, startSitu, finishSitu) => {\n      const range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    const exactToNative = (win, start, soffset, finish, foffset) => {\n      const rng = win.document.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const toRect = rect => ({\n      left: rect.left,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      width: rect.width,\n      height: rect.height\n    });\n    const getFirstRect$1 = rng => {\n      const rects = rng.getClientRects();\n      const rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n    const getBounds$2 = rng => {\n      const rect = rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Optional.some(rect).map(toRect) : Optional.none();\n    };\n\n    const adt$4 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    const fromRange = (win, type, range) => type(SugarElement.fromDom(range.startContainer), range.startOffset, SugarElement.fromDom(range.endContainer), range.endOffset);\n    const getRanges = (win, selection) => selection.match({\n      domRange: rng => {\n        return {\n          ltr: constant$1(rng),\n          rtl: Optional.none\n        };\n      },\n      relative: (startSitu, finishSitu) => {\n        return {\n          ltr: cached(() => relativeToNative(win, startSitu, finishSitu)),\n          rtl: cached(() => Optional.some(relativeToNative(win, finishSitu, startSitu)))\n        };\n      },\n      exact: (start, soffset, finish, foffset) => {\n        return {\n          ltr: cached(() => exactToNative(win, start, soffset, finish, foffset)),\n          rtl: cached(() => Optional.some(exactToNative(win, finish, foffset, start, soffset)))\n        };\n      }\n    });\n    const doDiagnose = (win, ranges) => {\n      const rng = ranges.ltr();\n      if (rng.collapsed) {\n        const reversed = ranges.rtl().filter(rev => rev.collapsed === false);\n        return reversed.map(rev => adt$4.rtl(SugarElement.fromDom(rev.endContainer), rev.endOffset, SugarElement.fromDom(rev.startContainer), rev.startOffset)).getOrThunk(() => fromRange(win, adt$4.ltr, rng));\n      } else {\n        return fromRange(win, adt$4.ltr, rng);\n      }\n    };\n    const diagnose = (win, selection) => {\n      const ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    const asLtrRange = (win, selection) => {\n      const diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(start.dom, soffset);\n          rng.setEnd(finish.dom, foffset);\n          return rng;\n        },\n        rtl: (start, soffset, finish, foffset) => {\n          const rng = win.document.createRange();\n          rng.setStart(finish.dom, foffset);\n          rng.setEnd(start.dom, soffset);\n          return rng;\n        }\n      });\n    };\n    adt$4.ltr;\n    adt$4.rtl;\n\n    const ancestors = (scope, predicate, isRoot) => filter$2(parents(scope, isRoot), predicate);\n\n    const descendants = (scope, selector) => all$3(selector, scope);\n\n    const makeRange = (start, soffset, finish, foffset) => {\n      const doc = owner$4(start);\n      const rng = doc.dom.createRange();\n      rng.setStart(start.dom, soffset);\n      rng.setEnd(finish.dom, foffset);\n      return rng;\n    };\n    const after = (start, soffset, finish, foffset) => {\n      const r = makeRange(start, soffset, finish, foffset);\n      const same = eq(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    const getNativeSelection = win => Optional.from(win.getSelection());\n    const readRange = selection => {\n      if (selection.rangeCount > 0) {\n        const firstRng = selection.getRangeAt(0);\n        const lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Optional.some(SimRange.create(SugarElement.fromDom(firstRng.startContainer), firstRng.startOffset, SugarElement.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Optional.none();\n      }\n    };\n    const doGetExact = selection => {\n      if (selection.anchorNode === null || selection.focusNode === null) {\n        return readRange(selection);\n      } else {\n        const anchor = SugarElement.fromDom(selection.anchorNode);\n        const focus = SugarElement.fromDom(selection.focusNode);\n        return after(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Optional.some(SimRange.create(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n      }\n    };\n    const getExact = win => getNativeSelection(win).filter(sel => sel.rangeCount > 0).bind(doGetExact);\n    const getFirstRect = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return getFirstRect$1(rng);\n    };\n    const getBounds$1 = (win, selection) => {\n      const rng = asLtrRange(win, selection);\n      return getBounds$2(rng);\n    };\n\n    const NodeValue = (is, name) => {\n      const get = element => {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      const getOption = element => is(element) ? Optional.from(element.dom.nodeValue) : Optional.none();\n      const set = (element, value) => {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom.nodeValue = value;\n      };\n      return {\n        get,\n        getOption,\n        set\n      };\n    };\n\n    const api = NodeValue(isText, 'text');\n    const get$4 = element => api.get(element);\n\n    const point = (element, offset) => ({\n      element,\n      offset\n    });\n    const descendOnce$1 = (element, offset) => {\n      const children$1 = children(element);\n      if (children$1.length === 0) {\n        return point(element, offset);\n      } else if (offset < children$1.length) {\n        return point(children$1[offset], 0);\n      } else {\n        const last = children$1[children$1.length - 1];\n        const len = isText(last) ? get$4(last).length : children(last).length;\n        return point(last, len);\n      }\n    };\n\n    const descendOnce = (element, offset) => isText(element) ? point(element, offset) : descendOnce$1(element, offset);\n    const isSimRange = detail => detail.foffset !== undefined;\n    const getAnchorSelection = (win, anchorInfo) => {\n      const getSelection = anchorInfo.getSelection.getOrThunk(() => () => getExact(win));\n      return getSelection().map(sel => {\n        if (isSimRange(sel)) {\n          const modStart = descendOnce(sel.start, sel.soffset);\n          const modFinish = descendOnce(sel.finish, sel.foffset);\n          return SimSelection.range(modStart.element, modStart.offset, modFinish.element, modFinish.offset);\n        } else {\n          return sel;\n        }\n      });\n    };\n    const placement$1 = (component, anchorInfo, origin) => {\n      const win = defaultView(anchorInfo.root).dom;\n      const rootPoint = getRootPoint(component, origin, anchorInfo);\n      const selectionBox = getAnchorSelection(win, anchorInfo).bind(sel => {\n        if (isSimRange(sel)) {\n          const optRect = getBounds$1(win, SimSelection.exactFromRange(sel)).orThunk(() => {\n            const zeroWidth$1 = SugarElement.fromText(zeroWidth);\n            before$1(sel.start, zeroWidth$1);\n            const rect = getFirstRect(win, SimSelection.exact(zeroWidth$1, 0, zeroWidth$1, 1));\n            remove$5(zeroWidth$1);\n            return rect;\n          });\n          return optRect.bind(rawRect => {\n            return getBox(rawRect.left, rawRect.top, rawRect.width, rawRect.height);\n          });\n        } else {\n          const selectionRect = map$1(sel, cell => cell.dom.getBoundingClientRect());\n          const bounds = {\n            left: Math.min(selectionRect.firstCell.left, selectionRect.lastCell.left),\n            right: Math.max(selectionRect.firstCell.right, selectionRect.lastCell.right),\n            top: Math.min(selectionRect.firstCell.top, selectionRect.lastCell.top),\n            bottom: Math.max(selectionRect.firstCell.bottom, selectionRect.lastCell.bottom)\n          };\n          return getBox(bounds.left, bounds.top, bounds.right - bounds.left, bounds.bottom - bounds.top);\n        }\n      });\n      const targetElement = getAnchorSelection(win, anchorInfo).bind(sel => {\n        if (isSimRange(sel)) {\n          return isElement$1(sel.start) ? Optional.some(sel.start) : parentElement(sel.start);\n        } else {\n          return Optional.some(sel.firstCell);\n        }\n      });\n      const elem = targetElement.getOr(component.element);\n      return calcNewAnchor(selectionBox, rootPoint, anchorInfo, origin, elem);\n    };\n    var SelectionAnchor = [\n      option$3('getSelection'),\n      required$1('root'),\n      option$3('bubble'),\n      schema$y(),\n      defaulted('overrides', {}),\n      defaulted('showAbove', false),\n      output$1('placement', placement$1)\n    ];\n\n    const labelPrefix$1 = 'link-layout';\n    const eastX = anchor => anchor.x + anchor.width;\n    const westX = (anchor, element) => anchor.x - element.width;\n    const northY$1 = (anchor, element) => anchor.y - element.height + anchor.height;\n    const southY$1 = anchor => anchor.y;\n    const southeast$1 = (anchor, element, bubbles) => nu$6(eastX(anchor), southY$1(anchor), bubbles.southeast(), southeast$3(), 'southeast', boundsRestriction(anchor, {\n      left: 0,\n      top: 2\n    }), labelPrefix$1);\n    const southwest$1 = (anchor, element, bubbles) => nu$6(westX(anchor, element), southY$1(anchor), bubbles.southwest(), southwest$3(), 'southwest', boundsRestriction(anchor, {\n      right: 1,\n      top: 2\n    }), labelPrefix$1);\n    const northeast$1 = (anchor, element, bubbles) => nu$6(eastX(anchor), northY$1(anchor, element), bubbles.northeast(), northeast$3(), 'northeast', boundsRestriction(anchor, {\n      left: 0,\n      bottom: 3\n    }), labelPrefix$1);\n    const northwest$1 = (anchor, element, bubbles) => nu$6(westX(anchor, element), northY$1(anchor, element), bubbles.northwest(), northwest$3(), 'northwest', boundsRestriction(anchor, {\n      right: 1,\n      bottom: 3\n    }), labelPrefix$1);\n    const all = () => [\n      southeast$1,\n      southwest$1,\n      northeast$1,\n      northwest$1\n    ];\n    const allRtl = () => [\n      southwest$1,\n      southeast$1,\n      northwest$1,\n      northeast$1\n    ];\n\n    const placement = (component, submenuInfo, origin) => {\n      const anchorBox = toBox(origin, submenuInfo.item.element);\n      const layouts = get$5(component.element, submenuInfo, all(), allRtl(), all(), allRtl(), Optional.none());\n      return Optional.some(nu$4({\n        anchorBox,\n        bubble: fallback(),\n        overrides: submenuInfo.overrides,\n        layouts\n      }));\n    };\n    var SubmenuAnchor = [\n      required$1('item'),\n      schema$y(),\n      defaulted('overrides', {}),\n      output$1('placement', placement)\n    ];\n\n    var AnchorSchema = choose$1('type', {\n      selection: SelectionAnchor,\n      node: NodeAnchor,\n      hotspot: HotspotAnchor,\n      submenu: SubmenuAnchor,\n      makeshift: MakeshiftAnchor\n    });\n\n    const TransitionSchema = [\n      requiredArrayOf('classes', string),\n      defaultedStringEnum('mode', 'all', [\n        'all',\n        'layout',\n        'placement'\n      ])\n    ];\n    const PositionSchema = [\n      defaulted('useFixed', never),\n      option$3('getBounds')\n    ];\n    const PlacementSchema = [\n      requiredOf('anchor', AnchorSchema),\n      optionObjOf('transition', TransitionSchema)\n    ];\n\n    const getFixedOrigin = () => {\n      const html = document.documentElement;\n      return fixed$1(0, 0, html.clientWidth, html.clientHeight);\n    };\n    const getRelativeOrigin = component => {\n      const position = absolute$3(component.element);\n      const bounds = component.element.dom.getBoundingClientRect();\n      return relative$1(position.left, position.top, bounds.width, bounds.height);\n    };\n    const place = (origin, anchoring, optBounds, placee, lastPlace, transition) => {\n      const anchor = box(anchoring.anchorBox, origin);\n      return simple(anchor, placee.element, anchoring.bubble, anchoring.layouts, lastPlace, optBounds, anchoring.overrides, transition);\n    };\n    const position$1 = (component, posConfig, posState, placee, placementSpec) => {\n      const optWithinBounds = Optional.none();\n      positionWithinBounds(component, posConfig, posState, placee, placementSpec, optWithinBounds);\n    };\n    const positionWithinBounds = (component, posConfig, posState, placee, placementSpec, optWithinBounds) => {\n      const placeeDetail = asRawOrDie$1('placement.info', objOf(PlacementSchema), placementSpec);\n      const anchorage = placeeDetail.anchor;\n      const element = placee.element;\n      const placeeState = posState.get(placee.uid);\n      preserve$1(() => {\n        set$8(element, 'position', 'fixed');\n        const oldVisibility = getRaw(element, 'visibility');\n        set$8(element, 'visibility', 'hidden');\n        const origin = posConfig.useFixed() ? getFixedOrigin() : getRelativeOrigin(component);\n        anchorage.placement(component, anchorage, origin).each(anchoring => {\n          const optBounds = optWithinBounds.orThunk(() => posConfig.getBounds.map(apply$1));\n          const newState = place(origin, anchoring, optBounds, placee, placeeState, placeeDetail.transition);\n          posState.set(placee.uid, newState);\n        });\n        oldVisibility.fold(() => {\n          remove$6(element, 'visibility');\n        }, vis => {\n          set$8(element, 'visibility', vis);\n        });\n        if (getRaw(element, 'left').isNone() && getRaw(element, 'top').isNone() && getRaw(element, 'right').isNone() && getRaw(element, 'bottom').isNone() && is$1(getRaw(element, 'position'), 'fixed')) {\n          remove$6(element, 'position');\n        }\n      }, element);\n    };\n    const getMode = (component, pConfig, _pState) => pConfig.useFixed() ? 'fixed' : 'absolute';\n    const reset$1 = (component, pConfig, posState, placee) => {\n      const element = placee.element;\n      each$1([\n        'position',\n        'left',\n        'right',\n        'top',\n        'bottom'\n      ], prop => remove$6(element, prop));\n      reset$2(element);\n      posState.clear(placee.uid);\n    };\n\n    var PositionApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        position: position$1,\n        positionWithinBounds: positionWithinBounds,\n        getMode: getMode,\n        reset: reset$1\n    });\n\n    const init$g = () => {\n      let state = {};\n      const set = (id, data) => {\n        state[id] = data;\n      };\n      const get = id => get$g(state, id);\n      const clear = id => {\n        if (isNonNullable(id)) {\n          delete state[id];\n        } else {\n          state = {};\n        }\n      };\n      return nu$8({\n        readState: () => state,\n        clear,\n        set,\n        get\n      });\n    };\n\n    var PositioningState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$g\n    });\n\n    const Positioning = create$4({\n      fields: PositionSchema,\n      name: 'positioning',\n      active: ActivePosition,\n      apis: PositionApis,\n      state: PositioningState\n    });\n\n    const isConnected = comp => comp.getSystem().isConnected();\n    const fireDetaching = component => {\n      emit(component, detachedFromDom());\n      const children = component.components();\n      each$1(children, fireDetaching);\n    };\n    const fireAttaching = component => {\n      const children = component.components();\n      each$1(children, fireAttaching);\n      emit(component, attachedToDom());\n    };\n    const virtualAttach = (parent, child) => {\n      parent.getSystem().addToWorld(child);\n      if (inBody(parent.element)) {\n        fireAttaching(child);\n      }\n    };\n    const virtualDetach = comp => {\n      fireDetaching(comp);\n      comp.getSystem().removeFromWorld(comp);\n    };\n    const attach$1 = (parent, child) => {\n      append$2(parent.element, child.element);\n    };\n    const detachChildren$1 = component => {\n      each$1(component.components(), childComp => remove$5(childComp.element));\n      empty(component.element);\n      component.syncComponents();\n    };\n    const replaceChildren = (component, newSpecs, buildNewChildren) => {\n      const subs = component.components();\n      detachChildren$1(component);\n      const newChildren = buildNewChildren(newSpecs);\n      const deleted = difference(subs, newChildren);\n      each$1(deleted, comp => {\n        fireDetaching(comp);\n        component.getSystem().removeFromWorld(comp);\n      });\n      each$1(newChildren, childComp => {\n        if (!isConnected(childComp)) {\n          component.getSystem().addToWorld(childComp);\n          attach$1(component, childComp);\n          if (inBody(component.element)) {\n            fireAttaching(childComp);\n          }\n        } else {\n          attach$1(component, childComp);\n        }\n      });\n      component.syncComponents();\n    };\n    const virtualReplaceChildren = (component, newSpecs, buildNewChildren) => {\n      const subs = component.components();\n      const existingComps = bind$3(newSpecs, spec => getPremade(spec).toArray());\n      each$1(subs, childComp => {\n        if (!contains$2(existingComps, childComp)) {\n          virtualDetach(childComp);\n        }\n      });\n      const newChildren = buildNewChildren(newSpecs);\n      const deleted = difference(subs, newChildren);\n      each$1(deleted, deletedComp => {\n        if (isConnected(deletedComp)) {\n          virtualDetach(deletedComp);\n        }\n      });\n      each$1(newChildren, childComp => {\n        if (!isConnected(childComp)) {\n          virtualAttach(component, childComp);\n        }\n      });\n      component.syncComponents();\n    };\n\n    const attach = (parent, child) => {\n      attachWith(parent, child, append$2);\n    };\n    const attachWith = (parent, child, insertion) => {\n      parent.getSystem().addToWorld(child);\n      insertion(parent.element, child.element);\n      if (inBody(parent.element)) {\n        fireAttaching(child);\n      }\n      parent.syncComponents();\n    };\n    const doDetach = component => {\n      fireDetaching(component);\n      remove$5(component.element);\n      component.getSystem().removeFromWorld(component);\n    };\n    const detach = component => {\n      const parent$1 = parent(component.element).bind(p => component.getSystem().getByDom(p).toOptional());\n      doDetach(component);\n      parent$1.each(p => {\n        p.syncComponents();\n      });\n    };\n    const detachChildren = component => {\n      const subs = component.components();\n      each$1(subs, doDetach);\n      empty(component.element);\n      component.syncComponents();\n    };\n    const attachSystem = (element, guiSystem) => {\n      attachSystemWith(element, guiSystem, append$2);\n    };\n    const attachSystemAfter = (element, guiSystem) => {\n      attachSystemWith(element, guiSystem, after$2);\n    };\n    const attachSystemWith = (element, guiSystem, inserter) => {\n      inserter(element, guiSystem.element);\n      const children$1 = children(guiSystem.element);\n      each$1(children$1, child => {\n        guiSystem.getByDom(child).each(fireAttaching);\n      });\n    };\n    const detachSystem = guiSystem => {\n      const children$1 = children(guiSystem.element);\n      each$1(children$1, child => {\n        guiSystem.getByDom(child).each(fireDetaching);\n      });\n      remove$5(guiSystem.element);\n    };\n\n    const rebuild = (sandbox, sConfig, sState, data) => {\n      sState.get().each(_data => {\n        detachChildren(sandbox);\n      });\n      const point = sConfig.getAttachPoint(sandbox);\n      attach(point, sandbox);\n      const built = sandbox.getSystem().build(data);\n      attach(sandbox, built);\n      sState.set(built);\n      return built;\n    };\n    const open$1 = (sandbox, sConfig, sState, data) => {\n      const newState = rebuild(sandbox, sConfig, sState, data);\n      sConfig.onOpen(sandbox, newState);\n      return newState;\n    };\n    const setContent = (sandbox, sConfig, sState, data) => sState.get().map(() => rebuild(sandbox, sConfig, sState, data));\n    const openWhileCloaked = (sandbox, sConfig, sState, data, transaction) => {\n      cloak(sandbox, sConfig);\n      open$1(sandbox, sConfig, sState, data);\n      transaction();\n      decloak(sandbox, sConfig);\n    };\n    const close$1 = (sandbox, sConfig, sState) => {\n      sState.get().each(data => {\n        detachChildren(sandbox);\n        detach(sandbox);\n        sConfig.onClose(sandbox, data);\n        sState.clear();\n      });\n    };\n    const isOpen$1 = (_sandbox, _sConfig, sState) => sState.isOpen();\n    const isPartOf = (sandbox, sConfig, sState, queryElem) => isOpen$1(sandbox, sConfig, sState) && sState.get().exists(data => sConfig.isPartOf(sandbox, data, queryElem));\n    const getState$2 = (_sandbox, _sConfig, sState) => sState.get();\n    const store = (sandbox, cssKey, attr, newValue) => {\n      getRaw(sandbox.element, cssKey).fold(() => {\n        remove$7(sandbox.element, attr);\n      }, v => {\n        set$9(sandbox.element, attr, v);\n      });\n      set$8(sandbox.element, cssKey, newValue);\n    };\n    const restore = (sandbox, cssKey, attr) => {\n      getOpt(sandbox.element, attr).fold(() => remove$6(sandbox.element, cssKey), oldValue => set$8(sandbox.element, cssKey, oldValue));\n    };\n    const cloak = (sandbox, sConfig, _sState) => {\n      const sink = sConfig.getAttachPoint(sandbox);\n      set$8(sandbox.element, 'position', Positioning.getMode(sink));\n      store(sandbox, 'visibility', sConfig.cloakVisibilityAttr, 'hidden');\n    };\n    const hasPosition = element => exists([\n      'top',\n      'left',\n      'right',\n      'bottom'\n    ], pos => getRaw(element, pos).isSome());\n    const decloak = (sandbox, sConfig, _sState) => {\n      if (!hasPosition(sandbox.element)) {\n        remove$6(sandbox.element, 'position');\n      }\n      restore(sandbox, 'visibility', sConfig.cloakVisibilityAttr);\n    };\n\n    var SandboxApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        cloak: cloak,\n        decloak: decloak,\n        open: open$1,\n        openWhileCloaked: openWhileCloaked,\n        close: close$1,\n        isOpen: isOpen$1,\n        isPartOf: isPartOf,\n        getState: getState$2,\n        setContent: setContent\n    });\n\n    const events$g = (sandboxConfig, sandboxState) => derive$2([run$1(sandboxClose(), (sandbox, _simulatedEvent) => {\n        close$1(sandbox, sandboxConfig, sandboxState);\n      })]);\n\n    var ActiveSandbox = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$g\n    });\n\n    var SandboxSchema = [\n      onHandler('onOpen'),\n      onHandler('onClose'),\n      required$1('isPartOf'),\n      required$1('getAttachPoint'),\n      defaulted('cloakVisibilityAttr', 'data-precloak-visibility')\n    ];\n\n    const init$f = () => {\n      const contents = value$2();\n      const readState = constant$1('not-implemented');\n      return nu$8({\n        readState,\n        isOpen: contents.isSet,\n        clear: contents.clear,\n        set: contents.set,\n        get: contents.get\n      });\n    };\n\n    var SandboxState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$f\n    });\n\n    const Sandboxing = create$4({\n      fields: SandboxSchema,\n      name: 'sandboxing',\n      active: ActiveSandbox,\n      apis: SandboxApis,\n      state: SandboxState\n    });\n\n    const dismissPopups = constant$1('dismiss.popups');\n    const repositionPopups = constant$1('reposition.popups');\n    const mouseReleased = constant$1('mouse.released');\n\n    const schema$x = objOfOnly([\n      defaulted('isExtraPart', never),\n      optionObjOf('fireEventInstead', [defaulted('event', dismissRequested())])\n    ]);\n    const receivingChannel$1 = rawSpec => {\n      const detail = asRawOrDie$1('Dismissal', schema$x, rawSpec);\n      return {\n        [dismissPopups()]: {\n          schema: objOfOnly([required$1('target')]),\n          onReceive: (sandbox, data) => {\n            if (Sandboxing.isOpen(sandbox)) {\n              const isPart = Sandboxing.isPartOf(sandbox, data.target) || detail.isExtraPart(sandbox, data.target);\n              if (!isPart) {\n                detail.fireEventInstead.fold(() => Sandboxing.close(sandbox), fe => emit(sandbox, fe.event));\n              }\n            }\n          }\n        }\n      };\n    };\n\n    const schema$w = objOfOnly([\n      optionObjOf('fireEventInstead', [defaulted('event', repositionRequested())]),\n      requiredFunction('doReposition')\n    ]);\n    const receivingChannel = rawSpec => {\n      const detail = asRawOrDie$1('Reposition', schema$w, rawSpec);\n      return {\n        [repositionPopups()]: {\n          onReceive: sandbox => {\n            if (Sandboxing.isOpen(sandbox)) {\n              detail.fireEventInstead.fold(() => detail.doReposition(sandbox), fe => emit(sandbox, fe.event));\n            }\n          }\n        }\n      };\n    };\n\n    const onLoad$5 = (component, repConfig, repState) => {\n      repConfig.store.manager.onLoad(component, repConfig, repState);\n    };\n    const onUnload$2 = (component, repConfig, repState) => {\n      repConfig.store.manager.onUnload(component, repConfig, repState);\n    };\n    const setValue$3 = (component, repConfig, repState, data) => {\n      repConfig.store.manager.setValue(component, repConfig, repState, data);\n    };\n    const getValue$3 = (component, repConfig, repState) => repConfig.store.manager.getValue(component, repConfig, repState);\n    const getState$1 = (component, repConfig, repState) => repState;\n\n    var RepresentApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        onLoad: onLoad$5,\n        onUnload: onUnload$2,\n        setValue: setValue$3,\n        getValue: getValue$3,\n        getState: getState$1\n    });\n\n    const events$f = (repConfig, repState) => {\n      const es = repConfig.resetOnDom ? [\n        runOnAttached((comp, _se) => {\n          onLoad$5(comp, repConfig, repState);\n        }),\n        runOnDetached((comp, _se) => {\n          onUnload$2(comp, repConfig, repState);\n        })\n      ] : [loadEvent(repConfig, repState, onLoad$5)];\n      return derive$2(es);\n    };\n\n    var ActiveRepresenting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$f\n    });\n\n    const memory$1 = () => {\n      const data = Cell(null);\n      const readState = () => ({\n        mode: 'memory',\n        value: data.get()\n      });\n      const isNotSet = () => data.get() === null;\n      const clear = () => {\n        data.set(null);\n      };\n      return nu$8({\n        set: data.set,\n        get: data.get,\n        isNotSet,\n        clear,\n        readState\n      });\n    };\n    const manual = () => {\n      const readState = noop;\n      return nu$8({ readState });\n    };\n    const dataset = () => {\n      const dataByValue = Cell({});\n      const dataByText = Cell({});\n      const readState = () => ({\n        mode: 'dataset',\n        dataByValue: dataByValue.get(),\n        dataByText: dataByText.get()\n      });\n      const clear = () => {\n        dataByValue.set({});\n        dataByText.set({});\n      };\n      const lookup = itemString => get$g(dataByValue.get(), itemString).orThunk(() => get$g(dataByText.get(), itemString));\n      const update = items => {\n        const currentDataByValue = dataByValue.get();\n        const currentDataByText = dataByText.get();\n        const newDataByValue = {};\n        const newDataByText = {};\n        each$1(items, item => {\n          newDataByValue[item.value] = item;\n          get$g(item, 'meta').each(meta => {\n            get$g(meta, 'text').each(text => {\n              newDataByText[text] = item;\n            });\n          });\n        });\n        dataByValue.set({\n          ...currentDataByValue,\n          ...newDataByValue\n        });\n        dataByText.set({\n          ...currentDataByText,\n          ...newDataByText\n        });\n      };\n      return nu$8({\n        readState,\n        lookup,\n        update,\n        clear\n      });\n    };\n    const init$e = spec => spec.store.manager.state(spec);\n\n    var RepresentState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        memory: memory$1,\n        dataset: dataset,\n        manual: manual,\n        init: init$e\n    });\n\n    const setValue$2 = (component, repConfig, repState, data) => {\n      const store = repConfig.store;\n      repState.update([data]);\n      store.setValue(component, data);\n      repConfig.onSetValue(component, data);\n    };\n    const getValue$2 = (component, repConfig, repState) => {\n      const store = repConfig.store;\n      const key = store.getDataKey(component);\n      return repState.lookup(key).getOrThunk(() => store.getFallbackEntry(key));\n    };\n    const onLoad$4 = (component, repConfig, repState) => {\n      const store = repConfig.store;\n      store.initialValue.each(data => {\n        setValue$2(component, repConfig, repState, data);\n      });\n    };\n    const onUnload$1 = (component, repConfig, repState) => {\n      repState.clear();\n    };\n    var DatasetStore = [\n      option$3('initialValue'),\n      required$1('getFallbackEntry'),\n      required$1('getDataKey'),\n      required$1('setValue'),\n      output$1('manager', {\n        setValue: setValue$2,\n        getValue: getValue$2,\n        onLoad: onLoad$4,\n        onUnload: onUnload$1,\n        state: dataset\n      })\n    ];\n\n    const getValue$1 = (component, repConfig, _repState) => repConfig.store.getValue(component);\n    const setValue$1 = (component, repConfig, _repState, data) => {\n      repConfig.store.setValue(component, data);\n      repConfig.onSetValue(component, data);\n    };\n    const onLoad$3 = (component, repConfig, _repState) => {\n      repConfig.store.initialValue.each(data => {\n        repConfig.store.setValue(component, data);\n      });\n    };\n    var ManualStore = [\n      required$1('getValue'),\n      defaulted('setValue', noop),\n      option$3('initialValue'),\n      output$1('manager', {\n        setValue: setValue$1,\n        getValue: getValue$1,\n        onLoad: onLoad$3,\n        onUnload: noop,\n        state: NoState.init\n      })\n    ];\n\n    const setValue = (component, repConfig, repState, data) => {\n      repState.set(data);\n      repConfig.onSetValue(component, data);\n    };\n    const getValue = (component, repConfig, repState) => repState.get();\n    const onLoad$2 = (component, repConfig, repState) => {\n      repConfig.store.initialValue.each(initVal => {\n        if (repState.isNotSet()) {\n          repState.set(initVal);\n        }\n      });\n    };\n    const onUnload = (component, repConfig, repState) => {\n      repState.clear();\n    };\n    var MemoryStore = [\n      option$3('initialValue'),\n      output$1('manager', {\n        setValue,\n        getValue,\n        onLoad: onLoad$2,\n        onUnload,\n        state: memory$1\n      })\n    ];\n\n    var RepresentSchema = [\n      defaultedOf('store', { mode: 'memory' }, choose$1('mode', {\n        memory: MemoryStore,\n        manual: ManualStore,\n        dataset: DatasetStore\n      })),\n      onHandler('onSetValue'),\n      defaulted('resetOnDom', false)\n    ];\n\n    const Representing = create$4({\n      fields: RepresentSchema,\n      name: 'representing',\n      active: ActiveRepresenting,\n      apis: RepresentApis,\n      extra: {\n        setValueFrom: (component, source) => {\n          const value = Representing.getValue(source);\n          Representing.setValue(component, value);\n        }\n      },\n      state: RepresentState\n    });\n\n    const field = (name, forbidden) => defaultedObjOf(name, {}, map$2(forbidden, f => forbid(f.name(), 'Cannot configure ' + f.name() + ' for ' + name)).concat([customField('dump', identity)]));\n    const get$3 = data => data.dump;\n    const augment = (data, original) => ({\n      ...derive$1(original),\n      ...data.dump\n    });\n    const SketchBehaviours = {\n      field,\n      augment,\n      get: get$3\n    };\n\n    const _placeholder = 'placeholder';\n    const adt$3 = Adt.generate([\n      {\n        single: [\n          'required',\n          'valueThunk'\n        ]\n      },\n      {\n        multiple: [\n          'required',\n          'valueThunks'\n        ]\n      }\n    ]);\n    const isSubstituted = spec => has$2(spec, 'uiType');\n    const subPlaceholder = (owner, detail, compSpec, placeholders) => {\n      if (owner.exists(o => o !== compSpec.owner)) {\n        return adt$3.single(true, constant$1(compSpec));\n      }\n      return get$g(placeholders, compSpec.name).fold(() => {\n        throw new Error('Unknown placeholder component: ' + compSpec.name + '\\nKnown: [' + keys(placeholders) + ']\\nNamespace: ' + owner.getOr('none') + '\\nSpec: ' + JSON.stringify(compSpec, null, 2));\n      }, newSpec => newSpec.replace());\n    };\n    const scan = (owner, detail, compSpec, placeholders) => {\n      if (isSubstituted(compSpec) && compSpec.uiType === _placeholder) {\n        return subPlaceholder(owner, detail, compSpec, placeholders);\n      } else {\n        return adt$3.single(false, constant$1(compSpec));\n      }\n    };\n    const substitute = (owner, detail, compSpec, placeholders) => {\n      const base = scan(owner, detail, compSpec, placeholders);\n      return base.fold((req, valueThunk) => {\n        const value = isSubstituted(compSpec) ? valueThunk(detail, compSpec.config, compSpec.validated) : valueThunk(detail);\n        const childSpecs = get$g(value, 'components').getOr([]);\n        const substituted = bind$3(childSpecs, c => substitute(owner, detail, c, placeholders));\n        return [{\n            ...value,\n            components: substituted\n          }];\n      }, (req, valuesThunk) => {\n        if (isSubstituted(compSpec)) {\n          const values = valuesThunk(detail, compSpec.config, compSpec.validated);\n          const preprocessor = compSpec.validated.preprocess.getOr(identity);\n          return preprocessor(values);\n        } else {\n          return valuesThunk(detail);\n        }\n      });\n    };\n    const substituteAll = (owner, detail, components, placeholders) => bind$3(components, c => substitute(owner, detail, c, placeholders));\n    const oneReplace = (label, replacements) => {\n      let called = false;\n      const used = () => called;\n      const replace = () => {\n        if (called) {\n          throw new Error('Trying to use the same placeholder more than once: ' + label);\n        }\n        called = true;\n        return replacements;\n      };\n      const required = () => replacements.fold((req, _) => req, (req, _) => req);\n      return {\n        name: constant$1(label),\n        required,\n        used,\n        replace\n      };\n    };\n    const substitutePlaces = (owner, detail, components, placeholders) => {\n      const ps = map$1(placeholders, (ph, name) => oneReplace(name, ph));\n      const outcome = substituteAll(owner, detail, components, ps);\n      each(ps, p => {\n        if (p.used() === false && p.required()) {\n          throw new Error('Placeholder: ' + p.name() + ' was not found in components list\\nNamespace: ' + owner.getOr('none') + '\\nComponents: ' + JSON.stringify(detail.components, null, 2));\n        }\n      });\n      return outcome;\n    };\n    const single$2 = adt$3.single;\n    const multiple = adt$3.multiple;\n    const placeholder = constant$1(_placeholder);\n\n    const adt$2 = Adt.generate([\n      { required: ['data'] },\n      { external: ['data'] },\n      { optional: ['data'] },\n      { group: ['data'] }\n    ]);\n    const fFactory = defaulted('factory', { sketch: identity });\n    const fSchema = defaulted('schema', []);\n    const fName = required$1('name');\n    const fPname = field$1('pname', 'pname', defaultedThunk(typeSpec => '<alloy.' + generate$6(typeSpec.name) + '>'), anyValue());\n    const fGroupSchema = customField('schema', () => [option$3('preprocess')]);\n    const fDefaults = defaulted('defaults', constant$1({}));\n    const fOverrides = defaulted('overrides', constant$1({}));\n    const requiredSpec = objOf([\n      fFactory,\n      fSchema,\n      fName,\n      fPname,\n      fDefaults,\n      fOverrides\n    ]);\n    const externalSpec = objOf([\n      fFactory,\n      fSchema,\n      fName,\n      fDefaults,\n      fOverrides\n    ]);\n    const optionalSpec = objOf([\n      fFactory,\n      fSchema,\n      fName,\n      fPname,\n      fDefaults,\n      fOverrides\n    ]);\n    const groupSpec = objOf([\n      fFactory,\n      fGroupSchema,\n      fName,\n      required$1('unit'),\n      fPname,\n      fDefaults,\n      fOverrides\n    ]);\n    const asNamedPart = part => {\n      return part.fold(Optional.some, Optional.none, Optional.some, Optional.some);\n    };\n    const name$2 = part => {\n      const get = data => data.name;\n      return part.fold(get, get, get, get);\n    };\n    const asCommon = part => {\n      return part.fold(identity, identity, identity, identity);\n    };\n    const convert = (adtConstructor, partSchema) => spec => {\n      const data = asRawOrDie$1('Converting part type', partSchema, spec);\n      return adtConstructor(data);\n    };\n    const required = convert(adt$2.required, requiredSpec);\n    const external = convert(adt$2.external, externalSpec);\n    const optional = convert(adt$2.optional, optionalSpec);\n    const group = convert(adt$2.group, groupSpec);\n    const original = constant$1('entirety');\n\n    var PartType = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        required: required,\n        external: external,\n        optional: optional,\n        group: group,\n        asNamedPart: asNamedPart,\n        name: name$2,\n        asCommon: asCommon,\n        original: original\n    });\n\n    const combine = (detail, data, partSpec, partValidated) => deepMerge(data.defaults(detail, partSpec, partValidated), partSpec, { uid: detail.partUids[data.name] }, data.overrides(detail, partSpec, partValidated));\n    const subs = (owner, detail, parts) => {\n      const internals = {};\n      const externals = {};\n      each$1(parts, part => {\n        part.fold(data => {\n          internals[data.pname] = single$2(true, (detail, partSpec, partValidated) => data.factory.sketch(combine(detail, data, partSpec, partValidated)));\n        }, data => {\n          const partSpec = detail.parts[data.name];\n          externals[data.name] = constant$1(data.factory.sketch(combine(detail, data, partSpec[original()]), partSpec));\n        }, data => {\n          internals[data.pname] = single$2(false, (detail, partSpec, partValidated) => data.factory.sketch(combine(detail, data, partSpec, partValidated)));\n        }, data => {\n          internals[data.pname] = multiple(true, (detail, _partSpec, _partValidated) => {\n            const units = detail[data.name];\n            return map$2(units, u => data.factory.sketch(deepMerge(data.defaults(detail, u, _partValidated), u, data.overrides(detail, u))));\n          });\n        });\n      });\n      return {\n        internals: constant$1(internals),\n        externals: constant$1(externals)\n      };\n    };\n\n    const generate$3 = (owner, parts) => {\n      const r = {};\n      each$1(parts, part => {\n        asNamedPart(part).each(np => {\n          const g = doGenerateOne(owner, np.pname);\n          r[np.name] = config => {\n            const validated = asRawOrDie$1('Part: ' + np.name + ' in ' + owner, objOf(np.schema), config);\n            return {\n              ...g,\n              config,\n              validated\n            };\n          };\n        });\n      });\n      return r;\n    };\n    const doGenerateOne = (owner, pname) => ({\n      uiType: placeholder(),\n      owner,\n      name: pname\n    });\n    const generateOne$1 = (owner, pname, config) => ({\n      uiType: placeholder(),\n      owner,\n      name: pname,\n      config,\n      validated: {}\n    });\n    const schemas = parts => bind$3(parts, part => part.fold(Optional.none, Optional.some, Optional.none, Optional.none).map(data => requiredObjOf(data.name, data.schema.concat([snapshot(original())]))).toArray());\n    const names = parts => map$2(parts, name$2);\n    const substitutes = (owner, detail, parts) => subs(owner, detail, parts);\n    const components$1 = (owner, detail, internals) => substitutePlaces(Optional.some(owner), detail, detail.components, internals);\n    const getPart = (component, detail, partKey) => {\n      const uid = detail.partUids[partKey];\n      return component.getSystem().getByUid(uid).toOptional();\n    };\n    const getPartOrDie = (component, detail, partKey) => getPart(component, detail, partKey).getOrDie('Could not find part: ' + partKey);\n    const getParts = (component, detail, partKeys) => {\n      const r = {};\n      const uids = detail.partUids;\n      const system = component.getSystem();\n      each$1(partKeys, pk => {\n        r[pk] = constant$1(system.getByUid(uids[pk]));\n      });\n      return r;\n    };\n    const getAllParts = (component, detail) => {\n      const system = component.getSystem();\n      return map$1(detail.partUids, (pUid, _k) => constant$1(system.getByUid(pUid)));\n    };\n    const getAllPartNames = detail => keys(detail.partUids);\n    const getPartsOrDie = (component, detail, partKeys) => {\n      const r = {};\n      const uids = detail.partUids;\n      const system = component.getSystem();\n      each$1(partKeys, pk => {\n        r[pk] = constant$1(system.getByUid(uids[pk]).getOrDie());\n      });\n      return r;\n    };\n    const defaultUids = (baseUid, partTypes) => {\n      const partNames = names(partTypes);\n      return wrapAll(map$2(partNames, pn => ({\n        key: pn,\n        value: baseUid + '-' + pn\n      })));\n    };\n    const defaultUidsSchema = partTypes => field$1('partUids', 'partUids', mergeWithThunk(spec => defaultUids(spec.uid, partTypes)), anyValue());\n\n    var AlloyParts = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        generate: generate$3,\n        generateOne: generateOne$1,\n        schemas: schemas,\n        names: names,\n        substitutes: substitutes,\n        components: components$1,\n        defaultUids: defaultUids,\n        defaultUidsSchema: defaultUidsSchema,\n        getAllParts: getAllParts,\n        getAllPartNames: getAllPartNames,\n        getPart: getPart,\n        getPartOrDie: getPartOrDie,\n        getParts: getParts,\n        getPartsOrDie: getPartsOrDie\n    });\n\n    const base = (partSchemas, partUidsSchemas) => {\n      const ps = partSchemas.length > 0 ? [requiredObjOf('parts', partSchemas)] : [];\n      return ps.concat([\n        required$1('uid'),\n        defaulted('dom', {}),\n        defaulted('components', []),\n        snapshot('originalSpec'),\n        defaulted('debug.sketcher', {})\n      ]).concat(partUidsSchemas);\n    };\n    const asRawOrDie = (label, schema, spec, partSchemas, partUidsSchemas) => {\n      const baseS = base(partSchemas, partUidsSchemas);\n      return asRawOrDie$1(label + ' [SpecSchema]', objOfOnly(baseS.concat(schema)), spec);\n    };\n\n    const single$1 = (owner, schema, factory, spec) => {\n      const specWithUid = supplyUid(spec);\n      const detail = asRawOrDie(owner, schema, specWithUid, [], []);\n      return factory(detail, specWithUid);\n    };\n    const composite$1 = (owner, schema, partTypes, factory, spec) => {\n      const specWithUid = supplyUid(spec);\n      const partSchemas = schemas(partTypes);\n      const partUidsSchema = defaultUidsSchema(partTypes);\n      const detail = asRawOrDie(owner, schema, specWithUid, partSchemas, [partUidsSchema]);\n      const subs = substitutes(owner, detail, partTypes);\n      const components = components$1(owner, detail, subs.internals());\n      return factory(detail, components, specWithUid, subs.externals());\n    };\n    const hasUid = spec => has$2(spec, 'uid');\n    const supplyUid = spec => {\n      return hasUid(spec) ? spec : {\n        ...spec,\n        uid: generate$5('uid')\n      };\n    };\n\n    const isSketchSpec = spec => {\n      return spec.uid !== undefined;\n    };\n    const singleSchema = objOfOnly([\n      required$1('name'),\n      required$1('factory'),\n      required$1('configFields'),\n      defaulted('apis', {}),\n      defaulted('extraApis', {})\n    ]);\n    const compositeSchema = objOfOnly([\n      required$1('name'),\n      required$1('factory'),\n      required$1('configFields'),\n      required$1('partFields'),\n      defaulted('apis', {}),\n      defaulted('extraApis', {})\n    ]);\n    const single = rawConfig => {\n      const config = asRawOrDie$1('Sketcher for ' + rawConfig.name, singleSchema, rawConfig);\n      const sketch = spec => single$1(config.name, config.configFields, config.factory, spec);\n      const apis = map$1(config.apis, makeApi);\n      const extraApis = map$1(config.extraApis, (f, k) => markAsExtraApi(f, k));\n      return {\n        name: config.name,\n        configFields: config.configFields,\n        sketch,\n        ...apis,\n        ...extraApis\n      };\n    };\n    const composite = rawConfig => {\n      const config = asRawOrDie$1('Sketcher for ' + rawConfig.name, compositeSchema, rawConfig);\n      const sketch = spec => composite$1(config.name, config.configFields, config.partFields, config.factory, spec);\n      const parts = generate$3(config.name, config.partFields);\n      const apis = map$1(config.apis, makeApi);\n      const extraApis = map$1(config.extraApis, (f, k) => markAsExtraApi(f, k));\n      return {\n        name: config.name,\n        partFields: config.partFields,\n        configFields: config.configFields,\n        sketch,\n        parts,\n        ...apis,\n        ...extraApis\n      };\n    };\n\n    const inside = target => isTag('input')(target) && get$f(target, 'type') !== 'radio' || isTag('textarea')(target);\n\n    const getCurrent = (component, composeConfig, _composeState) => composeConfig.find(component);\n\n    var ComposeApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getCurrent: getCurrent\n    });\n\n    const ComposeSchema = [required$1('find')];\n\n    const Composing = create$4({\n      fields: ComposeSchema,\n      name: 'composing',\n      apis: ComposeApis\n    });\n\n    const nativeDisabled = [\n      'input',\n      'button',\n      'textarea',\n      'select'\n    ];\n    const onLoad$1 = (component, disableConfig, disableState) => {\n      const f = disableConfig.disabled() ? disable : enable;\n      f(component, disableConfig);\n    };\n    const hasNative = (component, config) => config.useNative === true && contains$2(nativeDisabled, name$3(component.element));\n    const nativeIsDisabled = component => has$1(component.element, 'disabled');\n    const nativeDisable = component => {\n      set$9(component.element, 'disabled', 'disabled');\n    };\n    const nativeEnable = component => {\n      remove$7(component.element, 'disabled');\n    };\n    const ariaIsDisabled = component => get$f(component.element, 'aria-disabled') === 'true';\n    const ariaDisable = component => {\n      set$9(component.element, 'aria-disabled', 'true');\n    };\n    const ariaEnable = component => {\n      set$9(component.element, 'aria-disabled', 'false');\n    };\n    const disable = (component, disableConfig, _disableState) => {\n      disableConfig.disableClass.each(disableClass => {\n        add$2(component.element, disableClass);\n      });\n      const f = hasNative(component, disableConfig) ? nativeDisable : ariaDisable;\n      f(component);\n      disableConfig.onDisabled(component);\n    };\n    const enable = (component, disableConfig, _disableState) => {\n      disableConfig.disableClass.each(disableClass => {\n        remove$2(component.element, disableClass);\n      });\n      const f = hasNative(component, disableConfig) ? nativeEnable : ariaEnable;\n      f(component);\n      disableConfig.onEnabled(component);\n    };\n    const isDisabled = (component, disableConfig) => hasNative(component, disableConfig) ? nativeIsDisabled(component) : ariaIsDisabled(component);\n    const set$4 = (component, disableConfig, disableState, disabled) => {\n      const f = disabled ? disable : enable;\n      f(component, disableConfig);\n    };\n\n    var DisableApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        enable: enable,\n        disable: disable,\n        isDisabled: isDisabled,\n        onLoad: onLoad$1,\n        set: set$4\n    });\n\n    const exhibit$5 = (base, disableConfig) => nu$7({ classes: disableConfig.disabled() ? disableConfig.disableClass.toArray() : [] });\n    const events$e = (disableConfig, disableState) => derive$2([\n      abort(execute$5(), (component, _simulatedEvent) => isDisabled(component, disableConfig)),\n      loadEvent(disableConfig, disableState, onLoad$1)\n    ]);\n\n    var ActiveDisable = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$5,\n        events: events$e\n    });\n\n    var DisableSchema = [\n      defaultedFunction('disabled', never),\n      defaulted('useNative', true),\n      option$3('disableClass'),\n      onHandler('onDisabled'),\n      onHandler('onEnabled')\n    ];\n\n    const Disabling = create$4({\n      fields: DisableSchema,\n      name: 'disabling',\n      active: ActiveDisable,\n      apis: DisableApis\n    });\n\n    const dehighlightAllExcept = (component, hConfig, hState, skip) => {\n      const highlighted = descendants(component.element, '.' + hConfig.highlightClass);\n      each$1(highlighted, h => {\n        const shouldSkip = exists(skip, skipComp => eq(skipComp.element, h));\n        if (!shouldSkip) {\n          remove$2(h, hConfig.highlightClass);\n          component.getSystem().getByDom(h).each(target => {\n            hConfig.onDehighlight(component, target);\n            emit(target, dehighlight$1());\n          });\n        }\n      });\n    };\n    const dehighlightAll = (component, hConfig, hState) => dehighlightAllExcept(component, hConfig, hState, []);\n    const dehighlight = (component, hConfig, hState, target) => {\n      if (isHighlighted(component, hConfig, hState, target)) {\n        remove$2(target.element, hConfig.highlightClass);\n        hConfig.onDehighlight(component, target);\n        emit(target, dehighlight$1());\n      }\n    };\n    const highlight = (component, hConfig, hState, target) => {\n      dehighlightAllExcept(component, hConfig, hState, [target]);\n      if (!isHighlighted(component, hConfig, hState, target)) {\n        add$2(target.element, hConfig.highlightClass);\n        hConfig.onHighlight(component, target);\n        emit(target, highlight$1());\n      }\n    };\n    const highlightFirst = (component, hConfig, hState) => {\n      getFirst(component, hConfig).each(firstComp => {\n        highlight(component, hConfig, hState, firstComp);\n      });\n    };\n    const highlightLast = (component, hConfig, hState) => {\n      getLast(component, hConfig).each(lastComp => {\n        highlight(component, hConfig, hState, lastComp);\n      });\n    };\n    const highlightAt = (component, hConfig, hState, index) => {\n      getByIndex(component, hConfig, hState, index).fold(err => {\n        throw err;\n      }, firstComp => {\n        highlight(component, hConfig, hState, firstComp);\n      });\n    };\n    const highlightBy = (component, hConfig, hState, predicate) => {\n      const candidates = getCandidates(component, hConfig);\n      const targetComp = find$5(candidates, predicate);\n      targetComp.each(c => {\n        highlight(component, hConfig, hState, c);\n      });\n    };\n    const isHighlighted = (component, hConfig, hState, queryTarget) => has(queryTarget.element, hConfig.highlightClass);\n    const getHighlighted = (component, hConfig, _hState) => descendant(component.element, '.' + hConfig.highlightClass).bind(e => component.getSystem().getByDom(e).toOptional());\n    const getByIndex = (component, hConfig, hState, index) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      return Optional.from(items[index]).fold(() => Result.error(new Error('No element found with index ' + index)), component.getSystem().getByDom);\n    };\n    const getFirst = (component, hConfig, _hState) => descendant(component.element, '.' + hConfig.itemClass).bind(e => component.getSystem().getByDom(e).toOptional());\n    const getLast = (component, hConfig, _hState) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      const last = items.length > 0 ? Optional.some(items[items.length - 1]) : Optional.none();\n      return last.bind(c => component.getSystem().getByDom(c).toOptional());\n    };\n    const getDelta$2 = (component, hConfig, hState, delta) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      const current = findIndex$1(items, item => has(item, hConfig.highlightClass));\n      return current.bind(selected => {\n        const dest = cycleBy(selected, delta, 0, items.length - 1);\n        return component.getSystem().getByDom(items[dest]).toOptional();\n      });\n    };\n    const getPrevious = (component, hConfig, hState) => getDelta$2(component, hConfig, hState, -1);\n    const getNext = (component, hConfig, hState) => getDelta$2(component, hConfig, hState, +1);\n    const getCandidates = (component, hConfig, _hState) => {\n      const items = descendants(component.element, '.' + hConfig.itemClass);\n      return cat(map$2(items, i => component.getSystem().getByDom(i).toOptional()));\n    };\n\n    var HighlightApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        dehighlightAll: dehighlightAll,\n        dehighlight: dehighlight,\n        highlight: highlight,\n        highlightFirst: highlightFirst,\n        highlightLast: highlightLast,\n        highlightAt: highlightAt,\n        highlightBy: highlightBy,\n        isHighlighted: isHighlighted,\n        getHighlighted: getHighlighted,\n        getFirst: getFirst,\n        getLast: getLast,\n        getPrevious: getPrevious,\n        getNext: getNext,\n        getCandidates: getCandidates\n    });\n\n    var HighlightSchema = [\n      required$1('highlightClass'),\n      required$1('itemClass'),\n      onHandler('onHighlight'),\n      onHandler('onDehighlight')\n    ];\n\n    const Highlighting = create$4({\n      fields: HighlightSchema,\n      name: 'highlighting',\n      apis: HighlightApis\n    });\n\n    const BACKSPACE = [8];\n    const TAB = [9];\n    const ENTER = [13];\n    const ESCAPE = [27];\n    const SPACE = [32];\n    const LEFT = [37];\n    const UP = [38];\n    const RIGHT = [39];\n    const DOWN = [40];\n\n    const cyclePrev = (values, index, predicate) => {\n      const before = reverse(values.slice(0, index));\n      const after = reverse(values.slice(index + 1));\n      return find$5(before.concat(after), predicate);\n    };\n    const tryPrev = (values, index, predicate) => {\n      const before = reverse(values.slice(0, index));\n      return find$5(before, predicate);\n    };\n    const cycleNext = (values, index, predicate) => {\n      const before = values.slice(0, index);\n      const after = values.slice(index + 1);\n      return find$5(after.concat(before), predicate);\n    };\n    const tryNext = (values, index, predicate) => {\n      const after = values.slice(index + 1);\n      return find$5(after, predicate);\n    };\n\n    const inSet = keys => event => {\n      const raw = event.raw;\n      return contains$2(keys, raw.which);\n    };\n    const and = preds => event => forall(preds, pred => pred(event));\n    const isShift$1 = event => {\n      const raw = event.raw;\n      return raw.shiftKey === true;\n    };\n    const isControl = event => {\n      const raw = event.raw;\n      return raw.ctrlKey === true;\n    };\n    const isNotShift = not(isShift$1);\n\n    const rule = (matches, action) => ({\n      matches,\n      classification: action\n    });\n    const choose = (transitions, event) => {\n      const transition = find$5(transitions, t => t.matches(event));\n      return transition.map(t => t.classification);\n    };\n\n    const reportFocusShifting = (component, prevFocus, newFocus) => {\n      const noChange = prevFocus.exists(p => newFocus.exists(n => eq(n, p)));\n      if (!noChange) {\n        emitWith(component, focusShifted(), {\n          prevFocus,\n          newFocus\n        });\n      }\n    };\n    const dom$2 = () => {\n      const get = component => search(component.element);\n      const set = (component, focusee) => {\n        const prevFocus = get(component);\n        component.getSystem().triggerFocus(focusee, component.element);\n        const newFocus = get(component);\n        reportFocusShifting(component, prevFocus, newFocus);\n      };\n      return {\n        get,\n        set\n      };\n    };\n    const highlights = () => {\n      const get = component => Highlighting.getHighlighted(component).map(item => item.element);\n      const set = (component, element) => {\n        const prevFocus = get(component);\n        component.getSystem().getByDom(element).fold(noop, item => {\n          Highlighting.highlight(component, item);\n        });\n        const newFocus = get(component);\n        reportFocusShifting(component, prevFocus, newFocus);\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var FocusInsideModes;\n    (function (FocusInsideModes) {\n      FocusInsideModes['OnFocusMode'] = 'onFocus';\n      FocusInsideModes['OnEnterOrSpaceMode'] = 'onEnterOrSpace';\n      FocusInsideModes['OnApiMode'] = 'onApi';\n    }(FocusInsideModes || (FocusInsideModes = {})));\n\n    const typical = (infoSchema, stateInit, getKeydownRules, getKeyupRules, optFocusIn) => {\n      const schema = () => infoSchema.concat([\n        defaulted('focusManager', dom$2()),\n        defaultedOf('focusInside', 'onFocus', valueOf(val => contains$2([\n          'onFocus',\n          'onEnterOrSpace',\n          'onApi'\n        ], val) ? Result.value(val) : Result.error('Invalid value for focusInside'))),\n        output$1('handler', me),\n        output$1('state', stateInit),\n        output$1('sendFocusIn', optFocusIn)\n      ]);\n      const processKey = (component, simulatedEvent, getRules, keyingConfig, keyingState) => {\n        const rules = getRules(component, simulatedEvent, keyingConfig, keyingState);\n        return choose(rules, simulatedEvent.event).bind(rule => rule(component, simulatedEvent, keyingConfig, keyingState));\n      };\n      const toEvents = (keyingConfig, keyingState) => {\n        const onFocusHandler = keyingConfig.focusInside !== FocusInsideModes.OnFocusMode ? Optional.none() : optFocusIn(keyingConfig).map(focusIn => run$1(focus$4(), (component, simulatedEvent) => {\n          focusIn(component, keyingConfig, keyingState);\n          simulatedEvent.stop();\n        }));\n        const tryGoInsideComponent = (component, simulatedEvent) => {\n          const isEnterOrSpace = inSet(SPACE.concat(ENTER))(simulatedEvent.event);\n          if (keyingConfig.focusInside === FocusInsideModes.OnEnterOrSpaceMode && isEnterOrSpace && isSource(component, simulatedEvent)) {\n            optFocusIn(keyingConfig).each(focusIn => {\n              focusIn(component, keyingConfig, keyingState);\n              simulatedEvent.stop();\n            });\n          }\n        };\n        const keyboardEvents = [\n          run$1(keydown(), (component, simulatedEvent) => {\n            processKey(component, simulatedEvent, getKeydownRules, keyingConfig, keyingState).fold(() => {\n              tryGoInsideComponent(component, simulatedEvent);\n            }, _ => {\n              simulatedEvent.stop();\n            });\n          }),\n          run$1(keyup(), (component, simulatedEvent) => {\n            processKey(component, simulatedEvent, getKeyupRules, keyingConfig, keyingState).each(_ => {\n              simulatedEvent.stop();\n            });\n          })\n        ];\n        return derive$2(onFocusHandler.toArray().concat(keyboardEvents));\n      };\n      const me = {\n        schema,\n        processKey,\n        toEvents\n      };\n      return me;\n    };\n\n    const create$2 = cyclicField => {\n      const schema = [\n        option$3('onEscape'),\n        option$3('onEnter'),\n        defaulted('selector', '[data-alloy-tabstop=\"true\"]:not(:disabled)'),\n        defaulted('firstTabstop', 0),\n        defaulted('useTabstopAt', always),\n        option$3('visibilitySelector')\n      ].concat([cyclicField]);\n      const isVisible = (tabbingConfig, element) => {\n        const target = tabbingConfig.visibilitySelector.bind(sel => closest$1(element, sel)).getOr(element);\n        return get$d(target) > 0;\n      };\n      const findInitial = (component, tabbingConfig) => {\n        const tabstops = descendants(component.element, tabbingConfig.selector);\n        const visibles = filter$2(tabstops, elem => isVisible(tabbingConfig, elem));\n        return Optional.from(visibles[tabbingConfig.firstTabstop]);\n      };\n      const findCurrent = (component, tabbingConfig) => tabbingConfig.focusManager.get(component).bind(elem => closest$1(elem, tabbingConfig.selector));\n      const isTabstop = (tabbingConfig, element) => isVisible(tabbingConfig, element) && tabbingConfig.useTabstopAt(element);\n      const focusIn = (component, tabbingConfig, _tabbingState) => {\n        findInitial(component, tabbingConfig).each(target => {\n          tabbingConfig.focusManager.set(component, target);\n        });\n      };\n      const goFromTabstop = (component, tabstops, stopIndex, tabbingConfig, cycle) => cycle(tabstops, stopIndex, elem => isTabstop(tabbingConfig, elem)).fold(() => tabbingConfig.cyclic ? Optional.some(true) : Optional.none(), target => {\n        tabbingConfig.focusManager.set(component, target);\n        return Optional.some(true);\n      });\n      const go = (component, _simulatedEvent, tabbingConfig, cycle) => {\n        const tabstops = descendants(component.element, tabbingConfig.selector);\n        return findCurrent(component, tabbingConfig).bind(tabstop => {\n          const optStopIndex = findIndex$1(tabstops, curry(eq, tabstop));\n          return optStopIndex.bind(stopIndex => goFromTabstop(component, tabstops, stopIndex, tabbingConfig, cycle));\n        });\n      };\n      const goBackwards = (component, simulatedEvent, tabbingConfig) => {\n        const navigate = tabbingConfig.cyclic ? cyclePrev : tryPrev;\n        return go(component, simulatedEvent, tabbingConfig, navigate);\n      };\n      const goForwards = (component, simulatedEvent, tabbingConfig) => {\n        const navigate = tabbingConfig.cyclic ? cycleNext : tryNext;\n        return go(component, simulatedEvent, tabbingConfig, navigate);\n      };\n      const isFirstChild = elem => parentNode(elem).bind(firstChild).exists(child => eq(child, elem));\n      const goFromPseudoTabstop = (component, simulatedEvent, tabbingConfig) => findCurrent(component, tabbingConfig).filter(elem => !tabbingConfig.useTabstopAt(elem)).bind(elem => (isFirstChild(elem) ? goBackwards : goForwards)(component, simulatedEvent, tabbingConfig));\n      const execute = (component, simulatedEvent, tabbingConfig) => tabbingConfig.onEnter.bind(f => f(component, simulatedEvent));\n      const exit = (component, simulatedEvent, tabbingConfig) => tabbingConfig.onEscape.bind(f => f(component, simulatedEvent));\n      const getKeydownRules = constant$1([\n        rule(and([\n          isShift$1,\n          inSet(TAB)\n        ]), goBackwards),\n        rule(inSet(TAB), goForwards),\n        rule(and([\n          isNotShift,\n          inSet(ENTER)\n        ]), execute)\n      ]);\n      const getKeyupRules = constant$1([\n        rule(inSet(ESCAPE), exit),\n        rule(inSet(TAB), goFromPseudoTabstop)\n      ]);\n      return typical(schema, NoState.init, getKeydownRules, getKeyupRules, () => Optional.some(focusIn));\n    };\n\n    var AcyclicType = create$2(customField('cyclic', never));\n\n    var CyclicType = create$2(customField('cyclic', always));\n\n    const doDefaultExecute = (component, _simulatedEvent, focused) => {\n      dispatch(component, focused, execute$5());\n      return Optional.some(true);\n    };\n    const defaultExecute = (component, simulatedEvent, focused) => {\n      const isComplex = inside(focused) && inSet(SPACE)(simulatedEvent.event);\n      return isComplex ? Optional.none() : doDefaultExecute(component, simulatedEvent, focused);\n    };\n    const stopEventForFirefox = (_component, _simulatedEvent) => Optional.some(true);\n\n    const schema$v = [\n      defaulted('execute', defaultExecute),\n      defaulted('useSpace', false),\n      defaulted('useEnter', true),\n      defaulted('useControlEnter', false),\n      defaulted('useDown', false)\n    ];\n    const execute$4 = (component, simulatedEvent, executeConfig) => executeConfig.execute(component, simulatedEvent, component.element);\n    const getKeydownRules$5 = (component, _simulatedEvent, executeConfig, _executeState) => {\n      const spaceExec = executeConfig.useSpace && !inside(component.element) ? SPACE : [];\n      const enterExec = executeConfig.useEnter ? ENTER : [];\n      const downExec = executeConfig.useDown ? DOWN : [];\n      const execKeys = spaceExec.concat(enterExec).concat(downExec);\n      return [rule(inSet(execKeys), execute$4)].concat(executeConfig.useControlEnter ? [rule(and([\n          isControl,\n          inSet(ENTER)\n        ]), execute$4)] : []);\n    };\n    const getKeyupRules$5 = (component, _simulatedEvent, executeConfig, _executeState) => executeConfig.useSpace && !inside(component.element) ? [rule(inSet(SPACE), stopEventForFirefox)] : [];\n    var ExecutionType = typical(schema$v, NoState.init, getKeydownRules$5, getKeyupRules$5, () => Optional.none());\n\n    const flatgrid$1 = () => {\n      const dimensions = value$2();\n      const setGridSize = (numRows, numColumns) => {\n        dimensions.set({\n          numRows,\n          numColumns\n        });\n      };\n      const getNumRows = () => dimensions.get().map(d => d.numRows);\n      const getNumColumns = () => dimensions.get().map(d => d.numColumns);\n      return nu$8({\n        readState: () => dimensions.get().map(d => ({\n          numRows: String(d.numRows),\n          numColumns: String(d.numColumns)\n        })).getOr({\n          numRows: '?',\n          numColumns: '?'\n        }),\n        setGridSize,\n        getNumRows,\n        getNumColumns\n      });\n    };\n    const init$d = spec => spec.state(spec);\n\n    var KeyingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        flatgrid: flatgrid$1,\n        init: init$d\n    });\n\n    const useH = movement => (component, simulatedEvent, config, state) => {\n      const move = movement(component.element);\n      return use(move, component, simulatedEvent, config, state);\n    };\n    const west$1 = (moveLeft, moveRight) => {\n      const movement = onDirection(moveLeft, moveRight);\n      return useH(movement);\n    };\n    const east$1 = (moveLeft, moveRight) => {\n      const movement = onDirection(moveRight, moveLeft);\n      return useH(movement);\n    };\n    const useV = move => (component, simulatedEvent, config, state) => use(move, component, simulatedEvent, config, state);\n    const use = (move, component, simulatedEvent, config, state) => {\n      const outcome = config.focusManager.get(component).bind(focused => move(component.element, focused, config, state));\n      return outcome.map(newFocus => {\n        config.focusManager.set(component, newFocus);\n        return true;\n      });\n    };\n    const north$1 = useV;\n    const south$1 = useV;\n    const move$1 = useV;\n\n    const isHidden$1 = dom => dom.offsetWidth <= 0 && dom.offsetHeight <= 0;\n    const isVisible = element => !isHidden$1(element.dom);\n\n    const locate = (candidates, predicate) => findIndex$1(candidates, predicate).map(index => ({\n      index,\n      candidates\n    }));\n\n    const locateVisible = (container, current, selector) => {\n      const predicate = x => eq(x, current);\n      const candidates = descendants(container, selector);\n      const visible = filter$2(candidates, isVisible);\n      return locate(visible, predicate);\n    };\n    const findIndex = (elements, target) => findIndex$1(elements, elem => eq(target, elem));\n\n    const withGrid = (values, index, numCols, f) => {\n      const oldRow = Math.floor(index / numCols);\n      const oldColumn = index % numCols;\n      return f(oldRow, oldColumn).bind(address => {\n        const newIndex = address.row * numCols + address.column;\n        return newIndex >= 0 && newIndex < values.length ? Optional.some(values[newIndex]) : Optional.none();\n      });\n    };\n    const cycleHorizontal$1 = (values, index, numRows, numCols, delta) => withGrid(values, index, numCols, (oldRow, oldColumn) => {\n      const onLastRow = oldRow === numRows - 1;\n      const colsInRow = onLastRow ? values.length - oldRow * numCols : numCols;\n      const newColumn = cycleBy(oldColumn, delta, 0, colsInRow - 1);\n      return Optional.some({\n        row: oldRow,\n        column: newColumn\n      });\n    });\n    const cycleVertical$1 = (values, index, numRows, numCols, delta) => withGrid(values, index, numCols, (oldRow, oldColumn) => {\n      const newRow = cycleBy(oldRow, delta, 0, numRows - 1);\n      const onLastRow = newRow === numRows - 1;\n      const colsInRow = onLastRow ? values.length - newRow * numCols : numCols;\n      const newCol = clamp(oldColumn, 0, colsInRow - 1);\n      return Optional.some({\n        row: newRow,\n        column: newCol\n      });\n    });\n    const cycleRight$1 = (values, index, numRows, numCols) => cycleHorizontal$1(values, index, numRows, numCols, +1);\n    const cycleLeft$1 = (values, index, numRows, numCols) => cycleHorizontal$1(values, index, numRows, numCols, -1);\n    const cycleUp$1 = (values, index, numRows, numCols) => cycleVertical$1(values, index, numRows, numCols, -1);\n    const cycleDown$1 = (values, index, numRows, numCols) => cycleVertical$1(values, index, numRows, numCols, +1);\n\n    const schema$u = [\n      required$1('selector'),\n      defaulted('execute', defaultExecute),\n      onKeyboardHandler('onEscape'),\n      defaulted('captureTab', false),\n      initSize()\n    ];\n    const focusIn$3 = (component, gridConfig, _gridState) => {\n      descendant(component.element, gridConfig.selector).each(first => {\n        gridConfig.focusManager.set(component, first);\n      });\n    };\n    const findCurrent$1 = (component, gridConfig) => gridConfig.focusManager.get(component).bind(elem => closest$1(elem, gridConfig.selector));\n    const execute$3 = (component, simulatedEvent, gridConfig, _gridState) => findCurrent$1(component, gridConfig).bind(focused => gridConfig.execute(component, simulatedEvent, focused));\n    const doMove$2 = cycle => (element, focused, gridConfig, gridState) => locateVisible(element, focused, gridConfig.selector).bind(identified => cycle(identified.candidates, identified.index, gridState.getNumRows().getOr(gridConfig.initSize.numRows), gridState.getNumColumns().getOr(gridConfig.initSize.numColumns)));\n    const handleTab = (_component, _simulatedEvent, gridConfig) => gridConfig.captureTab ? Optional.some(true) : Optional.none();\n    const doEscape$1 = (component, simulatedEvent, gridConfig) => gridConfig.onEscape(component, simulatedEvent);\n    const moveLeft$3 = doMove$2(cycleLeft$1);\n    const moveRight$3 = doMove$2(cycleRight$1);\n    const moveNorth$1 = doMove$2(cycleUp$1);\n    const moveSouth$1 = doMove$2(cycleDown$1);\n    const getKeydownRules$4 = constant$1([\n      rule(inSet(LEFT), west$1(moveLeft$3, moveRight$3)),\n      rule(inSet(RIGHT), east$1(moveLeft$3, moveRight$3)),\n      rule(inSet(UP), north$1(moveNorth$1)),\n      rule(inSet(DOWN), south$1(moveSouth$1)),\n      rule(and([\n        isShift$1,\n        inSet(TAB)\n      ]), handleTab),\n      rule(and([\n        isNotShift,\n        inSet(TAB)\n      ]), handleTab),\n      rule(inSet(SPACE.concat(ENTER)), execute$3)\n    ]);\n    const getKeyupRules$4 = constant$1([\n      rule(inSet(ESCAPE), doEscape$1),\n      rule(inSet(SPACE), stopEventForFirefox)\n    ]);\n    var FlatgridType = typical(schema$u, flatgrid$1, getKeydownRules$4, getKeyupRules$4, () => Optional.some(focusIn$3));\n\n    const f = (container, selector, current, delta, getNewIndex) => {\n      const isDisabledButton = candidate => name$3(candidate) === 'button' && get$f(candidate, 'disabled') === 'disabled';\n      const tryNewIndex = (initial, index, candidates) => getNewIndex(initial, index, delta, 0, candidates.length - 1, candidates[index], newIndex => isDisabledButton(candidates[newIndex]) ? tryNewIndex(initial, newIndex, candidates) : Optional.from(candidates[newIndex]));\n      return locateVisible(container, current, selector).bind(identified => {\n        const index = identified.index;\n        const candidates = identified.candidates;\n        return tryNewIndex(index, index, candidates);\n      });\n    };\n    const horizontalWithoutCycles = (container, selector, current, delta) => f(container, selector, current, delta, (prevIndex, v, d, min, max, oldCandidate, onNewIndex) => {\n      const newIndex = clamp(v + d, min, max);\n      return newIndex === prevIndex ? Optional.from(oldCandidate) : onNewIndex(newIndex);\n    });\n    const horizontal = (container, selector, current, delta) => f(container, selector, current, delta, (prevIndex, v, d, min, max, _oldCandidate, onNewIndex) => {\n      const newIndex = cycleBy(v, d, min, max);\n      return newIndex === prevIndex ? Optional.none() : onNewIndex(newIndex);\n    });\n\n    const schema$t = [\n      required$1('selector'),\n      defaulted('getInitial', Optional.none),\n      defaulted('execute', defaultExecute),\n      onKeyboardHandler('onEscape'),\n      defaulted('executeOnMove', false),\n      defaulted('allowVertical', true),\n      defaulted('allowHorizontal', true),\n      defaulted('cycles', true)\n    ];\n    const findCurrent = (component, flowConfig) => flowConfig.focusManager.get(component).bind(elem => closest$1(elem, flowConfig.selector));\n    const execute$2 = (component, simulatedEvent, flowConfig) => findCurrent(component, flowConfig).bind(focused => flowConfig.execute(component, simulatedEvent, focused));\n    const focusIn$2 = (component, flowConfig, _state) => {\n      flowConfig.getInitial(component).orThunk(() => descendant(component.element, flowConfig.selector)).each(first => {\n        flowConfig.focusManager.set(component, first);\n      });\n    };\n    const moveLeft$2 = (element, focused, info) => (info.cycles ? horizontal : horizontalWithoutCycles)(element, info.selector, focused, -1);\n    const moveRight$2 = (element, focused, info) => (info.cycles ? horizontal : horizontalWithoutCycles)(element, info.selector, focused, +1);\n    const doMove$1 = movement => (component, simulatedEvent, flowConfig, flowState) => movement(component, simulatedEvent, flowConfig, flowState).bind(() => flowConfig.executeOnMove ? execute$2(component, simulatedEvent, flowConfig) : Optional.some(true));\n    const doEscape = (component, simulatedEvent, flowConfig) => flowConfig.onEscape(component, simulatedEvent);\n    const getKeydownRules$3 = (_component, _se, flowConfig, _flowState) => {\n      const westMovers = [...flowConfig.allowHorizontal ? LEFT : []].concat(flowConfig.allowVertical ? UP : []);\n      const eastMovers = [...flowConfig.allowHorizontal ? RIGHT : []].concat(flowConfig.allowVertical ? DOWN : []);\n      return [\n        rule(inSet(westMovers), doMove$1(west$1(moveLeft$2, moveRight$2))),\n        rule(inSet(eastMovers), doMove$1(east$1(moveLeft$2, moveRight$2))),\n        rule(inSet(ENTER), execute$2),\n        rule(inSet(SPACE), execute$2)\n      ];\n    };\n    const getKeyupRules$3 = constant$1([\n      rule(inSet(SPACE), stopEventForFirefox),\n      rule(inSet(ESCAPE), doEscape)\n    ]);\n    var FlowType = typical(schema$t, NoState.init, getKeydownRules$3, getKeyupRules$3, () => Optional.some(focusIn$2));\n\n    const toCell = (matrix, rowIndex, columnIndex) => Optional.from(matrix[rowIndex]).bind(row => Optional.from(row[columnIndex]).map(cell => ({\n      rowIndex,\n      columnIndex,\n      cell\n    })));\n    const cycleHorizontal = (matrix, rowIndex, startCol, deltaCol) => {\n      const row = matrix[rowIndex];\n      const colsInRow = row.length;\n      const newColIndex = cycleBy(startCol, deltaCol, 0, colsInRow - 1);\n      return toCell(matrix, rowIndex, newColIndex);\n    };\n    const cycleVertical = (matrix, colIndex, startRow, deltaRow) => {\n      const nextRowIndex = cycleBy(startRow, deltaRow, 0, matrix.length - 1);\n      const colsInNextRow = matrix[nextRowIndex].length;\n      const nextColIndex = clamp(colIndex, 0, colsInNextRow - 1);\n      return toCell(matrix, nextRowIndex, nextColIndex);\n    };\n    const moveHorizontal = (matrix, rowIndex, startCol, deltaCol) => {\n      const row = matrix[rowIndex];\n      const colsInRow = row.length;\n      const newColIndex = clamp(startCol + deltaCol, 0, colsInRow - 1);\n      return toCell(matrix, rowIndex, newColIndex);\n    };\n    const moveVertical = (matrix, colIndex, startRow, deltaRow) => {\n      const nextRowIndex = clamp(startRow + deltaRow, 0, matrix.length - 1);\n      const colsInNextRow = matrix[nextRowIndex].length;\n      const nextColIndex = clamp(colIndex, 0, colsInNextRow - 1);\n      return toCell(matrix, nextRowIndex, nextColIndex);\n    };\n    const cycleRight = (matrix, startRow, startCol) => cycleHorizontal(matrix, startRow, startCol, +1);\n    const cycleLeft = (matrix, startRow, startCol) => cycleHorizontal(matrix, startRow, startCol, -1);\n    const cycleUp = (matrix, startRow, startCol) => cycleVertical(matrix, startCol, startRow, -1);\n    const cycleDown = (matrix, startRow, startCol) => cycleVertical(matrix, startCol, startRow, +1);\n    const moveLeft$1 = (matrix, startRow, startCol) => moveHorizontal(matrix, startRow, startCol, -1);\n    const moveRight$1 = (matrix, startRow, startCol) => moveHorizontal(matrix, startRow, startCol, +1);\n    const moveUp$1 = (matrix, startRow, startCol) => moveVertical(matrix, startCol, startRow, -1);\n    const moveDown$1 = (matrix, startRow, startCol) => moveVertical(matrix, startCol, startRow, +1);\n\n    const schema$s = [\n      requiredObjOf('selectors', [\n        required$1('row'),\n        required$1('cell')\n      ]),\n      defaulted('cycles', true),\n      defaulted('previousSelector', Optional.none),\n      defaulted('execute', defaultExecute)\n    ];\n    const focusIn$1 = (component, matrixConfig, _state) => {\n      const focused = matrixConfig.previousSelector(component).orThunk(() => {\n        const selectors = matrixConfig.selectors;\n        return descendant(component.element, selectors.cell);\n      });\n      focused.each(cell => {\n        matrixConfig.focusManager.set(component, cell);\n      });\n    };\n    const execute$1 = (component, simulatedEvent, matrixConfig) => search(component.element).bind(focused => matrixConfig.execute(component, simulatedEvent, focused));\n    const toMatrix = (rows, matrixConfig) => map$2(rows, row => descendants(row, matrixConfig.selectors.cell));\n    const doMove = (ifCycle, ifMove) => (element, focused, matrixConfig) => {\n      const move = matrixConfig.cycles ? ifCycle : ifMove;\n      return closest$1(focused, matrixConfig.selectors.row).bind(inRow => {\n        const cellsInRow = descendants(inRow, matrixConfig.selectors.cell);\n        return findIndex(cellsInRow, focused).bind(colIndex => {\n          const allRows = descendants(element, matrixConfig.selectors.row);\n          return findIndex(allRows, inRow).bind(rowIndex => {\n            const matrix = toMatrix(allRows, matrixConfig);\n            return move(matrix, rowIndex, colIndex).map(next => next.cell);\n          });\n        });\n      });\n    };\n    const moveLeft = doMove(cycleLeft, moveLeft$1);\n    const moveRight = doMove(cycleRight, moveRight$1);\n    const moveNorth = doMove(cycleUp, moveUp$1);\n    const moveSouth = doMove(cycleDown, moveDown$1);\n    const getKeydownRules$2 = constant$1([\n      rule(inSet(LEFT), west$1(moveLeft, moveRight)),\n      rule(inSet(RIGHT), east$1(moveLeft, moveRight)),\n      rule(inSet(UP), north$1(moveNorth)),\n      rule(inSet(DOWN), south$1(moveSouth)),\n      rule(inSet(SPACE.concat(ENTER)), execute$1)\n    ]);\n    const getKeyupRules$2 = constant$1([rule(inSet(SPACE), stopEventForFirefox)]);\n    var MatrixType = typical(schema$s, NoState.init, getKeydownRules$2, getKeyupRules$2, () => Optional.some(focusIn$1));\n\n    const schema$r = [\n      required$1('selector'),\n      defaulted('execute', defaultExecute),\n      defaulted('moveOnTab', false)\n    ];\n    const execute = (component, simulatedEvent, menuConfig) => menuConfig.focusManager.get(component).bind(focused => menuConfig.execute(component, simulatedEvent, focused));\n    const focusIn = (component, menuConfig, _state) => {\n      descendant(component.element, menuConfig.selector).each(first => {\n        menuConfig.focusManager.set(component, first);\n      });\n    };\n    const moveUp = (element, focused, info) => horizontal(element, info.selector, focused, -1);\n    const moveDown = (element, focused, info) => horizontal(element, info.selector, focused, +1);\n    const fireShiftTab = (component, simulatedEvent, menuConfig, menuState) => menuConfig.moveOnTab ? move$1(moveUp)(component, simulatedEvent, menuConfig, menuState) : Optional.none();\n    const fireTab = (component, simulatedEvent, menuConfig, menuState) => menuConfig.moveOnTab ? move$1(moveDown)(component, simulatedEvent, menuConfig, menuState) : Optional.none();\n    const getKeydownRules$1 = constant$1([\n      rule(inSet(UP), move$1(moveUp)),\n      rule(inSet(DOWN), move$1(moveDown)),\n      rule(and([\n        isShift$1,\n        inSet(TAB)\n      ]), fireShiftTab),\n      rule(and([\n        isNotShift,\n        inSet(TAB)\n      ]), fireTab),\n      rule(inSet(ENTER), execute),\n      rule(inSet(SPACE), execute)\n    ]);\n    const getKeyupRules$1 = constant$1([rule(inSet(SPACE), stopEventForFirefox)]);\n    var MenuType = typical(schema$r, NoState.init, getKeydownRules$1, getKeyupRules$1, () => Optional.some(focusIn));\n\n    const schema$q = [\n      onKeyboardHandler('onSpace'),\n      onKeyboardHandler('onEnter'),\n      onKeyboardHandler('onShiftEnter'),\n      onKeyboardHandler('onLeft'),\n      onKeyboardHandler('onRight'),\n      onKeyboardHandler('onTab'),\n      onKeyboardHandler('onShiftTab'),\n      onKeyboardHandler('onUp'),\n      onKeyboardHandler('onDown'),\n      onKeyboardHandler('onEscape'),\n      defaulted('stopSpaceKeyup', false),\n      option$3('focusIn')\n    ];\n    const getKeydownRules = (component, simulatedEvent, specialInfo) => [\n      rule(inSet(SPACE), specialInfo.onSpace),\n      rule(and([\n        isNotShift,\n        inSet(ENTER)\n      ]), specialInfo.onEnter),\n      rule(and([\n        isShift$1,\n        inSet(ENTER)\n      ]), specialInfo.onShiftEnter),\n      rule(and([\n        isShift$1,\n        inSet(TAB)\n      ]), specialInfo.onShiftTab),\n      rule(and([\n        isNotShift,\n        inSet(TAB)\n      ]), specialInfo.onTab),\n      rule(inSet(UP), specialInfo.onUp),\n      rule(inSet(DOWN), specialInfo.onDown),\n      rule(inSet(LEFT), specialInfo.onLeft),\n      rule(inSet(RIGHT), specialInfo.onRight),\n      rule(inSet(SPACE), specialInfo.onSpace)\n    ];\n    const getKeyupRules = (component, simulatedEvent, specialInfo) => [\n      ...specialInfo.stopSpaceKeyup ? [rule(inSet(SPACE), stopEventForFirefox)] : [],\n      rule(inSet(ESCAPE), specialInfo.onEscape)\n    ];\n    var SpecialType = typical(schema$q, NoState.init, getKeydownRules, getKeyupRules, specialInfo => specialInfo.focusIn);\n\n    const acyclic = AcyclicType.schema();\n    const cyclic = CyclicType.schema();\n    const flow = FlowType.schema();\n    const flatgrid = FlatgridType.schema();\n    const matrix = MatrixType.schema();\n    const execution = ExecutionType.schema();\n    const menu = MenuType.schema();\n    const special = SpecialType.schema();\n\n    var KeyboardBranches = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        acyclic: acyclic,\n        cyclic: cyclic,\n        flow: flow,\n        flatgrid: flatgrid,\n        matrix: matrix,\n        execution: execution,\n        menu: menu,\n        special: special\n    });\n\n    const isFlatgridState = keyState => hasNonNullableKey(keyState, 'setGridSize');\n    const Keying = createModes({\n      branchKey: 'mode',\n      branches: KeyboardBranches,\n      name: 'keying',\n      active: {\n        events: (keyingConfig, keyingState) => {\n          const handler = keyingConfig.handler;\n          return handler.toEvents(keyingConfig, keyingState);\n        }\n      },\n      apis: {\n        focusIn: (component, keyConfig, keyState) => {\n          keyConfig.sendFocusIn(keyConfig).fold(() => {\n            component.getSystem().triggerFocus(component.element, component.element);\n          }, sendFocusIn => {\n            sendFocusIn(component, keyConfig, keyState);\n          });\n        },\n        setGridSize: (component, keyConfig, keyState, numRows, numColumns) => {\n          if (!isFlatgridState(keyState)) {\n            console.error('Layout does not support setGridSize');\n          } else {\n            keyState.setGridSize(numRows, numColumns);\n          }\n        }\n      },\n      state: KeyingState\n    });\n\n    const withoutReuse = (parent, data) => {\n      preserve$1(() => {\n        replaceChildren(parent, data, () => map$2(data, parent.getSystem().build));\n      }, parent.element);\n    };\n    const withReuse = (parent, data) => {\n      preserve$1(() => {\n        virtualReplaceChildren(parent, data, () => {\n          return patchSpecChildren(parent.element, data, parent.getSystem().buildOrPatch);\n        });\n      }, parent.element);\n    };\n\n    const virtualReplace = (component, replacee, replaceeIndex, childSpec) => {\n      virtualDetach(replacee);\n      const child = patchSpecChild(component.element, replaceeIndex, childSpec, component.getSystem().buildOrPatch);\n      virtualAttach(component, child);\n      component.syncComponents();\n    };\n    const insert = (component, insertion, childSpec) => {\n      const child = component.getSystem().build(childSpec);\n      attachWith(component, child, insertion);\n    };\n    const replace = (component, replacee, replaceeIndex, childSpec) => {\n      detach(replacee);\n      insert(component, (p, c) => appendAt(p, c, replaceeIndex), childSpec);\n    };\n    const set$3 = (component, replaceConfig, replaceState, data) => {\n      const replacer = replaceConfig.reuseDom ? withReuse : withoutReuse;\n      return replacer(component, data);\n    };\n    const append = (component, replaceConfig, replaceState, appendee) => {\n      insert(component, append$2, appendee);\n    };\n    const prepend = (component, replaceConfig, replaceState, prependee) => {\n      insert(component, prepend$1, prependee);\n    };\n    const remove = (component, replaceConfig, replaceState, removee) => {\n      const children = contents(component);\n      const foundChild = find$5(children, child => eq(removee.element, child.element));\n      foundChild.each(detach);\n    };\n    const contents = (component, _replaceConfig) => component.components();\n    const replaceAt = (component, replaceConfig, replaceState, replaceeIndex, replacer) => {\n      const children = contents(component);\n      return Optional.from(children[replaceeIndex]).map(replacee => {\n        replacer.fold(() => detach(replacee), r => {\n          const replacer = replaceConfig.reuseDom ? virtualReplace : replace;\n          replacer(component, replacee, replaceeIndex, r);\n        });\n        return replacee;\n      });\n    };\n    const replaceBy = (component, replaceConfig, replaceState, replaceePred, replacer) => {\n      const children = contents(component);\n      return findIndex$1(children, replaceePred).bind(replaceeIndex => replaceAt(component, replaceConfig, replaceState, replaceeIndex, replacer));\n    };\n\n    var ReplaceApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        append: append,\n        prepend: prepend,\n        remove: remove,\n        replaceAt: replaceAt,\n        replaceBy: replaceBy,\n        set: set$3,\n        contents: contents\n    });\n\n    const Replacing = create$4({\n      fields: [defaultedBoolean('reuseDom', true)],\n      name: 'replacing',\n      apis: ReplaceApis\n    });\n\n    const events$d = (name, eventHandlers) => {\n      const events = derive$2(eventHandlers);\n      return create$4({\n        fields: [required$1('enabled')],\n        name,\n        active: { events: constant$1(events) }\n      });\n    };\n    const config = (name, eventHandlers) => {\n      const me = events$d(name, eventHandlers);\n      return {\n        key: name,\n        value: {\n          config: {},\n          me,\n          configAsRaw: constant$1({}),\n          initialConfig: {},\n          state: NoState\n        }\n      };\n    };\n\n    const focus$2 = (component, focusConfig) => {\n      if (!focusConfig.ignore) {\n        focus$3(component.element);\n        focusConfig.onFocus(component);\n      }\n    };\n    const blur = (component, focusConfig) => {\n      if (!focusConfig.ignore) {\n        blur$1(component.element);\n      }\n    };\n    const isFocused = component => hasFocus(component.element);\n\n    var FocusApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        focus: focus$2,\n        blur: blur,\n        isFocused: isFocused\n    });\n\n    const exhibit$4 = (base, focusConfig) => {\n      const mod = focusConfig.ignore ? {} : { attributes: { tabindex: '-1' } };\n      return nu$7(mod);\n    };\n    const events$c = focusConfig => derive$2([run$1(focus$4(), (component, simulatedEvent) => {\n        focus$2(component, focusConfig);\n        simulatedEvent.stop();\n      })].concat(focusConfig.stopMousedown ? [run$1(mousedown(), (_, simulatedEvent) => {\n        simulatedEvent.event.prevent();\n      })] : []));\n\n    var ActiveFocus = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$4,\n        events: events$c\n    });\n\n    var FocusSchema = [\n      onHandler('onFocus'),\n      defaulted('stopMousedown', false),\n      defaulted('ignore', false)\n    ];\n\n    const Focusing = create$4({\n      fields: FocusSchema,\n      name: 'focusing',\n      active: ActiveFocus,\n      apis: FocusApis\n    });\n\n    const SetupBehaviourCellState = initialState => {\n      const init = () => {\n        const cell = Cell(initialState);\n        const get = () => cell.get();\n        const set = newState => cell.set(newState);\n        const clear = () => cell.set(initialState);\n        const readState = () => cell.get();\n        return {\n          get,\n          set,\n          clear,\n          readState\n        };\n      };\n      return { init };\n    };\n\n    const updateAriaState = (component, toggleConfig, toggleState) => {\n      const ariaInfo = toggleConfig.aria;\n      ariaInfo.update(component, ariaInfo, toggleState.get());\n    };\n    const updateClass = (component, toggleConfig, toggleState) => {\n      toggleConfig.toggleClass.each(toggleClass => {\n        if (toggleState.get()) {\n          add$2(component.element, toggleClass);\n        } else {\n          remove$2(component.element, toggleClass);\n        }\n      });\n    };\n    const set$2 = (component, toggleConfig, toggleState, state) => {\n      const initialState = toggleState.get();\n      toggleState.set(state);\n      updateClass(component, toggleConfig, toggleState);\n      updateAriaState(component, toggleConfig, toggleState);\n      if (initialState !== state) {\n        toggleConfig.onToggled(component, state);\n      }\n    };\n    const toggle$2 = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, !toggleState.get());\n    };\n    const on = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, true);\n    };\n    const off = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, false);\n    };\n    const isOn = (component, toggleConfig, toggleState) => toggleState.get();\n    const onLoad = (component, toggleConfig, toggleState) => {\n      set$2(component, toggleConfig, toggleState, toggleConfig.selected);\n    };\n\n    var ToggleApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        onLoad: onLoad,\n        toggle: toggle$2,\n        isOn: isOn,\n        on: on,\n        off: off,\n        set: set$2\n    });\n\n    const exhibit$3 = () => nu$7({});\n    const events$b = (toggleConfig, toggleState) => {\n      const execute = executeEvent(toggleConfig, toggleState, toggle$2);\n      const load = loadEvent(toggleConfig, toggleState, onLoad);\n      return derive$2(flatten([\n        toggleConfig.toggleOnExecute ? [execute] : [],\n        [load]\n      ]));\n    };\n\n    var ActiveToggle = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$3,\n        events: events$b\n    });\n\n    const updatePressed = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-pressed', status);\n      if (ariaInfo.syncWithExpanded) {\n        updateExpanded(component, ariaInfo, status);\n      }\n    };\n    const updateSelected = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-selected', status);\n    };\n    const updateChecked = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-checked', status);\n    };\n    const updateExpanded = (component, ariaInfo, status) => {\n      set$9(component.element, 'aria-expanded', status);\n    };\n\n    var ToggleSchema = [\n      defaulted('selected', false),\n      option$3('toggleClass'),\n      defaulted('toggleOnExecute', true),\n      onHandler('onToggled'),\n      defaultedOf('aria', { mode: 'none' }, choose$1('mode', {\n        pressed: [\n          defaulted('syncWithExpanded', false),\n          output$1('update', updatePressed)\n        ],\n        checked: [output$1('update', updateChecked)],\n        expanded: [output$1('update', updateExpanded)],\n        selected: [output$1('update', updateSelected)],\n        none: [output$1('update', noop)]\n      }))\n    ];\n\n    const Toggling = create$4({\n      fields: ToggleSchema,\n      name: 'toggling',\n      active: ActiveToggle,\n      apis: ToggleApis,\n      state: SetupBehaviourCellState(false)\n    });\n\n    const pointerEvents = () => {\n      const onClick = (component, simulatedEvent) => {\n        simulatedEvent.stop();\n        emitExecute(component);\n      };\n      return [\n        run$1(click(), onClick),\n        run$1(tap(), onClick),\n        cutter(touchstart()),\n        cutter(mousedown())\n      ];\n    };\n    const events$a = optAction => {\n      const executeHandler = action => runOnExecute$1((component, simulatedEvent) => {\n        action(component);\n        simulatedEvent.stop();\n      });\n      return derive$2(flatten([\n        optAction.map(executeHandler).toArray(),\n        pointerEvents()\n      ]));\n    };\n\n    const hoverEvent = 'alloy.item-hover';\n    const focusEvent = 'alloy.item-focus';\n    const toggledEvent = 'alloy.item-toggled';\n    const onHover = item => {\n      if (search(item.element).isNone() || Focusing.isFocused(item)) {\n        if (!Focusing.isFocused(item)) {\n          Focusing.focus(item);\n        }\n        emitWith(item, hoverEvent, { item });\n      }\n    };\n    const onFocus$1 = item => {\n      emitWith(item, focusEvent, { item });\n    };\n    const onToggled = (item, state) => {\n      emitWith(item, toggledEvent, {\n        item,\n        state\n      });\n    };\n    const hover = constant$1(hoverEvent);\n    const focus$1 = constant$1(focusEvent);\n    const toggled = constant$1(toggledEvent);\n\n    const getItemRole = detail => detail.toggling.map(toggling => toggling.exclusive ? 'menuitemradio' : 'menuitemcheckbox').getOr('menuitem');\n    const getTogglingSpec = tConfig => ({\n      aria: { mode: 'checked' },\n      ...filter$1(tConfig, (_value, name) => name !== 'exclusive'),\n      onToggled: (component, state) => {\n        if (isFunction(tConfig.onToggled)) {\n          tConfig.onToggled(component, state);\n        }\n        onToggled(component, state);\n      }\n    });\n    const builder$2 = detail => ({\n      dom: detail.dom,\n      domModification: {\n        ...detail.domModification,\n        attributes: {\n          'role': getItemRole(detail),\n          ...detail.domModification.attributes,\n          'aria-haspopup': detail.hasSubmenu,\n          ...detail.hasSubmenu ? { 'aria-expanded': false } : {}\n        }\n      },\n      behaviours: SketchBehaviours.augment(detail.itemBehaviours, [\n        detail.toggling.fold(Toggling.revoke, tConfig => Toggling.config(getTogglingSpec(tConfig))),\n        Focusing.config({\n          ignore: detail.ignoreFocus,\n          stopMousedown: detail.ignoreFocus,\n          onFocus: component => {\n            onFocus$1(component);\n          }\n        }),\n        Keying.config({ mode: 'execution' }),\n        Representing.config({\n          store: {\n            mode: 'memory',\n            initialValue: detail.data\n          }\n        }),\n        config('item-type-events', [\n          ...pointerEvents(),\n          run$1(mouseover(), onHover),\n          run$1(focusItem(), Focusing.focus)\n        ])\n      ]),\n      components: detail.components,\n      eventOrder: detail.eventOrder\n    });\n    const schema$p = [\n      required$1('data'),\n      required$1('components'),\n      required$1('dom'),\n      defaulted('hasSubmenu', false),\n      option$3('toggling'),\n      SketchBehaviours.field('itemBehaviours', [\n        Toggling,\n        Focusing,\n        Keying,\n        Representing\n      ]),\n      defaulted('ignoreFocus', false),\n      defaulted('domModification', {}),\n      output$1('builder', builder$2),\n      defaulted('eventOrder', {})\n    ];\n\n    const builder$1 = detail => ({\n      dom: detail.dom,\n      components: detail.components,\n      events: derive$2([stopper(focusItem())])\n    });\n    const schema$o = [\n      required$1('dom'),\n      required$1('components'),\n      output$1('builder', builder$1)\n    ];\n\n    const owner$2 = constant$1('item-widget');\n    const parts$h = constant$1([required({\n        name: 'widget',\n        overrides: detail => {\n          return {\n            behaviours: derive$1([Representing.config({\n                store: {\n                  mode: 'manual',\n                  getValue: _component => {\n                    return detail.data;\n                  },\n                  setValue: noop\n                }\n              })])\n          };\n        }\n      })]);\n\n    const builder = detail => {\n      const subs = substitutes(owner$2(), detail, parts$h());\n      const components = components$1(owner$2(), detail, subs.internals());\n      const focusWidget = component => getPart(component, detail, 'widget').map(widget => {\n        Keying.focusIn(widget);\n        return widget;\n      });\n      const onHorizontalArrow = (component, simulatedEvent) => inside(simulatedEvent.event.target) ? Optional.none() : (() => {\n        if (detail.autofocus) {\n          simulatedEvent.setSource(component.element);\n          return Optional.none();\n        } else {\n          return Optional.none();\n        }\n      })();\n      return {\n        dom: detail.dom,\n        components,\n        domModification: detail.domModification,\n        events: derive$2([\n          runOnExecute$1((component, simulatedEvent) => {\n            focusWidget(component).each(_widget => {\n              simulatedEvent.stop();\n            });\n          }),\n          run$1(mouseover(), onHover),\n          run$1(focusItem(), (component, _simulatedEvent) => {\n            if (detail.autofocus) {\n              focusWidget(component);\n            } else {\n              Focusing.focus(component);\n            }\n          })\n        ]),\n        behaviours: SketchBehaviours.augment(detail.widgetBehaviours, [\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: detail.data\n            }\n          }),\n          Focusing.config({\n            ignore: detail.ignoreFocus,\n            onFocus: component => {\n              onFocus$1(component);\n            }\n          }),\n          Keying.config({\n            mode: 'special',\n            focusIn: detail.autofocus ? component => {\n              focusWidget(component);\n            } : revoke(),\n            onLeft: onHorizontalArrow,\n            onRight: onHorizontalArrow,\n            onEscape: (component, simulatedEvent) => {\n              if (!Focusing.isFocused(component) && !detail.autofocus) {\n                Focusing.focus(component);\n                return Optional.some(true);\n              } else if (detail.autofocus) {\n                simulatedEvent.setSource(component.element);\n                return Optional.none();\n              } else {\n                return Optional.none();\n              }\n            }\n          })\n        ])\n      };\n    };\n    const schema$n = [\n      required$1('uid'),\n      required$1('data'),\n      required$1('components'),\n      required$1('dom'),\n      defaulted('autofocus', false),\n      defaulted('ignoreFocus', false),\n      SketchBehaviours.field('widgetBehaviours', [\n        Representing,\n        Focusing,\n        Keying\n      ]),\n      defaulted('domModification', {}),\n      defaultUidsSchema(parts$h()),\n      output$1('builder', builder)\n    ];\n\n    const itemSchema$2 = choose$1('type', {\n      widget: schema$n,\n      item: schema$p,\n      separator: schema$o\n    });\n    const configureGrid = (detail, movementInfo) => ({\n      mode: 'flatgrid',\n      selector: '.' + detail.markers.item,\n      initSize: {\n        numColumns: movementInfo.initSize.numColumns,\n        numRows: movementInfo.initSize.numRows\n      },\n      focusManager: detail.focusManager\n    });\n    const configureMatrix = (detail, movementInfo) => ({\n      mode: 'matrix',\n      selectors: {\n        row: movementInfo.rowSelector,\n        cell: '.' + detail.markers.item\n      },\n      previousSelector: movementInfo.previousSelector,\n      focusManager: detail.focusManager\n    });\n    const configureMenu = (detail, movementInfo) => ({\n      mode: 'menu',\n      selector: '.' + detail.markers.item,\n      moveOnTab: movementInfo.moveOnTab,\n      focusManager: detail.focusManager\n    });\n    const parts$g = constant$1([group({\n        factory: {\n          sketch: spec => {\n            const itemInfo = asRawOrDie$1('menu.spec item', itemSchema$2, spec);\n            return itemInfo.builder(itemInfo);\n          }\n        },\n        name: 'items',\n        unit: 'item',\n        defaults: (detail, u) => {\n          return has$2(u, 'uid') ? u : {\n            ...u,\n            uid: generate$5('item')\n          };\n        },\n        overrides: (detail, u) => {\n          return {\n            type: u.type,\n            ignoreFocus: detail.fakeFocus,\n            domModification: { classes: [detail.markers.item] }\n          };\n        }\n      })]);\n    const schema$m = constant$1([\n      required$1('value'),\n      required$1('items'),\n      required$1('dom'),\n      required$1('components'),\n      defaulted('eventOrder', {}),\n      field('menuBehaviours', [\n        Highlighting,\n        Representing,\n        Composing,\n        Keying\n      ]),\n      defaultedOf('movement', {\n        mode: 'menu',\n        moveOnTab: true\n      }, choose$1('mode', {\n        grid: [\n          initSize(),\n          output$1('config', configureGrid)\n        ],\n        matrix: [\n          output$1('config', configureMatrix),\n          required$1('rowSelector'),\n          defaulted('previousSelector', Optional.none)\n        ],\n        menu: [\n          defaulted('moveOnTab', true),\n          output$1('config', configureMenu)\n        ]\n      })),\n      itemMarkers(),\n      defaulted('fakeFocus', false),\n      defaulted('focusManager', dom$2()),\n      onHandler('onHighlight'),\n      onHandler('onDehighlight')\n    ]);\n\n    const focus = constant$1('alloy.menu-focus');\n\n    const deselectOtherRadioItems = (menu, item) => {\n      const checkedRadioItems = descendants(menu.element, '[role=\"menuitemradio\"][aria-checked=\"true\"]');\n      each$1(checkedRadioItems, ele => {\n        if (!eq(ele, item.element)) {\n          menu.getSystem().getByDom(ele).each(c => {\n            Toggling.off(c);\n          });\n        }\n      });\n    };\n    const make$7 = (detail, components, _spec, _externals) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      markers: detail.markers,\n      behaviours: augment(detail.menuBehaviours, [\n        Highlighting.config({\n          highlightClass: detail.markers.selectedItem,\n          itemClass: detail.markers.item,\n          onHighlight: detail.onHighlight,\n          onDehighlight: detail.onDehighlight\n        }),\n        Representing.config({\n          store: {\n            mode: 'memory',\n            initialValue: detail.value\n          }\n        }),\n        Composing.config({ find: Optional.some }),\n        Keying.config(detail.movement.config(detail, detail.movement))\n      ]),\n      events: derive$2([\n        run$1(focus$1(), (menu, simulatedEvent) => {\n          const event = simulatedEvent.event;\n          menu.getSystem().getByDom(event.target).each(item => {\n            Highlighting.highlight(menu, item);\n            simulatedEvent.stop();\n            emitWith(menu, focus(), {\n              menu,\n              item\n            });\n          });\n        }),\n        run$1(hover(), (menu, simulatedEvent) => {\n          const item = simulatedEvent.event.item;\n          Highlighting.highlight(menu, item);\n        }),\n        run$1(toggled(), (menu, simulatedEvent) => {\n          const {item, state} = simulatedEvent.event;\n          if (state && get$f(item.element, 'role') === 'menuitemradio') {\n            deselectOtherRadioItems(menu, item);\n          }\n        })\n      ]),\n      components,\n      eventOrder: detail.eventOrder,\n      domModification: { attributes: { role: 'menu' } }\n    });\n\n    const Menu = composite({\n      name: 'Menu',\n      configFields: schema$m(),\n      partFields: parts$g(),\n      factory: make$7\n    });\n\n    const transpose$1 = obj => tupleMap(obj, (v, k) => ({\n      k: v,\n      v: k\n    }));\n    const trace = (items, byItem, byMenu, finish) => get$g(byMenu, finish).bind(triggerItem => get$g(items, triggerItem).bind(triggerMenu => {\n      const rest = trace(items, byItem, byMenu, triggerMenu);\n      return Optional.some([triggerMenu].concat(rest));\n    })).getOr([]);\n    const generate$2 = (menus, expansions) => {\n      const items = {};\n      each(menus, (menuItems, menu) => {\n        each$1(menuItems, item => {\n          items[item] = menu;\n        });\n      });\n      const byItem = expansions;\n      const byMenu = transpose$1(expansions);\n      const menuPaths = map$1(byMenu, (_triggerItem, submenu) => [submenu].concat(trace(items, byItem, byMenu, submenu)));\n      return map$1(items, menu => get$g(menuPaths, menu).getOr([menu]));\n    };\n\n    const init$c = () => {\n      const expansions = Cell({});\n      const menus = Cell({});\n      const paths = Cell({});\n      const primary = value$2();\n      const directory = Cell({});\n      const clear = () => {\n        expansions.set({});\n        menus.set({});\n        paths.set({});\n        primary.clear();\n      };\n      const isClear = () => primary.get().isNone();\n      const setMenuBuilt = (menuName, built) => {\n        menus.set({\n          ...menus.get(),\n          [menuName]: {\n            type: 'prepared',\n            menu: built\n          }\n        });\n      };\n      const setContents = (sPrimary, sMenus, sExpansions, dir) => {\n        primary.set(sPrimary);\n        expansions.set(sExpansions);\n        menus.set(sMenus);\n        directory.set(dir);\n        const sPaths = generate$2(dir, sExpansions);\n        paths.set(sPaths);\n      };\n      const getTriggeringItem = menuValue => find$4(expansions.get(), (v, _k) => v === menuValue);\n      const getTriggerData = (menuValue, getItemByValue, path) => getPreparedMenu(menuValue).bind(menu => getTriggeringItem(menuValue).bind(triggeringItemValue => getItemByValue(triggeringItemValue).map(triggeredItem => ({\n        triggeredMenu: menu,\n        triggeringItem: triggeredItem,\n        triggeringPath: path\n      }))));\n      const getTriggeringPath = (itemValue, getItemByValue) => {\n        const extraPath = filter$2(lookupItem(itemValue).toArray(), menuValue => getPreparedMenu(menuValue).isSome());\n        return get$g(paths.get(), itemValue).bind(path => {\n          const revPath = reverse(extraPath.concat(path));\n          const triggers = bind$3(revPath, (menuValue, menuIndex) => getTriggerData(menuValue, getItemByValue, revPath.slice(0, menuIndex + 1)).fold(() => is$1(primary.get(), menuValue) ? [] : [Optional.none()], data => [Optional.some(data)]));\n          return sequence(triggers);\n        });\n      };\n      const expand = itemValue => get$g(expansions.get(), itemValue).map(menu => {\n        const current = get$g(paths.get(), itemValue).getOr([]);\n        return [menu].concat(current);\n      });\n      const collapse = itemValue => get$g(paths.get(), itemValue).bind(path => path.length > 1 ? Optional.some(path.slice(1)) : Optional.none());\n      const refresh = itemValue => get$g(paths.get(), itemValue);\n      const getPreparedMenu = menuValue => lookupMenu(menuValue).bind(extractPreparedMenu);\n      const lookupMenu = menuValue => get$g(menus.get(), menuValue);\n      const lookupItem = itemValue => get$g(expansions.get(), itemValue);\n      const otherMenus = path => {\n        const menuValues = directory.get();\n        return difference(keys(menuValues), path);\n      };\n      const getPrimary = () => primary.get().bind(getPreparedMenu);\n      const getMenus = () => menus.get();\n      return {\n        setMenuBuilt,\n        setContents,\n        expand,\n        refresh,\n        collapse,\n        lookupMenu,\n        lookupItem,\n        otherMenus,\n        getPrimary,\n        getMenus,\n        clear,\n        isClear,\n        getTriggeringPath\n      };\n    };\n    const extractPreparedMenu = prep => prep.type === 'prepared' ? Optional.some(prep.menu) : Optional.none();\n    const LayeredState = {\n      init: init$c,\n      extractPreparedMenu\n    };\n\n    const onMenuItemHighlightedEvent = generate$6('tiered-menu-item-highlight');\n    const onMenuItemDehighlightedEvent = generate$6('tiered-menu-item-dehighlight');\n\n    var HighlightOnOpen;\n    (function (HighlightOnOpen) {\n      HighlightOnOpen[HighlightOnOpen['HighlightMenuAndItem'] = 0] = 'HighlightMenuAndItem';\n      HighlightOnOpen[HighlightOnOpen['HighlightJustMenu'] = 1] = 'HighlightJustMenu';\n      HighlightOnOpen[HighlightOnOpen['HighlightNone'] = 2] = 'HighlightNone';\n    }(HighlightOnOpen || (HighlightOnOpen = {})));\n\n    const make$6 = (detail, _rawUiSpec) => {\n      const submenuParentItems = value$2();\n      const buildMenus = (container, primaryName, menus) => map$1(menus, (spec, name) => {\n        const makeSketch = () => Menu.sketch({\n          ...spec,\n          value: name,\n          markers: detail.markers,\n          fakeFocus: detail.fakeFocus,\n          onHighlight: (menuComp, itemComp) => {\n            const highlightData = {\n              menuComp,\n              itemComp\n            };\n            emitWith(menuComp, onMenuItemHighlightedEvent, highlightData);\n          },\n          onDehighlight: (menuComp, itemComp) => {\n            const dehighlightData = {\n              menuComp,\n              itemComp\n            };\n            emitWith(menuComp, onMenuItemDehighlightedEvent, dehighlightData);\n          },\n          focusManager: detail.fakeFocus ? highlights() : dom$2()\n        });\n        return name === primaryName ? {\n          type: 'prepared',\n          menu: container.getSystem().build(makeSketch())\n        } : {\n          type: 'notbuilt',\n          nbMenu: makeSketch\n        };\n      });\n      const layeredState = LayeredState.init();\n      const setup = container => {\n        const componentMap = buildMenus(container, detail.data.primary, detail.data.menus);\n        const directory = toDirectory();\n        layeredState.setContents(detail.data.primary, componentMap, detail.data.expansions, directory);\n        return layeredState.getPrimary();\n      };\n      const getItemValue = item => Representing.getValue(item).value;\n      const getItemByValue = (_container, menus, itemValue) => findMap(menus, menu => {\n        if (!menu.getSystem().isConnected()) {\n          return Optional.none();\n        }\n        const candidates = Highlighting.getCandidates(menu);\n        return find$5(candidates, c => getItemValue(c) === itemValue);\n      });\n      const toDirectory = _container => map$1(detail.data.menus, (data, _menuName) => bind$3(data.items, item => item.type === 'separator' ? [] : [item.data.value]));\n      const setActiveMenu = Highlighting.highlight;\n      const setActiveMenuAndItem = (container, menu) => {\n        setActiveMenu(container, menu);\n        Highlighting.getHighlighted(menu).orThunk(() => Highlighting.getFirst(menu)).each(item => {\n          if (detail.fakeFocus) {\n            Highlighting.highlight(menu, item);\n          } else {\n            dispatch(container, item.element, focusItem());\n          }\n        });\n      };\n      const getMenus = (state, menuValues) => cat(map$2(menuValues, mv => state.lookupMenu(mv).bind(prep => prep.type === 'prepared' ? Optional.some(prep.menu) : Optional.none())));\n      const closeOthers = (container, state, path) => {\n        const others = getMenus(state, state.otherMenus(path));\n        each$1(others, o => {\n          remove$1(o.element, [detail.markers.backgroundMenu]);\n          if (!detail.stayInDom) {\n            Replacing.remove(container, o);\n          }\n        });\n      };\n      const getSubmenuParents = container => submenuParentItems.get().getOrThunk(() => {\n        const r = {};\n        const items = descendants(container.element, `.${ detail.markers.item }`);\n        const parentItems = filter$2(items, i => get$f(i, 'aria-haspopup') === 'true');\n        each$1(parentItems, i => {\n          container.getSystem().getByDom(i).each(itemComp => {\n            const key = getItemValue(itemComp);\n            r[key] = itemComp;\n          });\n        });\n        submenuParentItems.set(r);\n        return r;\n      });\n      const updateAriaExpansions = (container, path) => {\n        const parentItems = getSubmenuParents(container);\n        each(parentItems, (v, k) => {\n          const expanded = contains$2(path, k);\n          set$9(v.element, 'aria-expanded', expanded);\n        });\n      };\n      const updateMenuPath = (container, state, path) => Optional.from(path[0]).bind(latestMenuName => state.lookupMenu(latestMenuName).bind(menuPrep => {\n        if (menuPrep.type === 'notbuilt') {\n          return Optional.none();\n        } else {\n          const activeMenu = menuPrep.menu;\n          const rest = getMenus(state, path.slice(1));\n          each$1(rest, r => {\n            add$2(r.element, detail.markers.backgroundMenu);\n          });\n          if (!inBody(activeMenu.element)) {\n            Replacing.append(container, premade(activeMenu));\n          }\n          remove$1(activeMenu.element, [detail.markers.backgroundMenu]);\n          setActiveMenuAndItem(container, activeMenu);\n          closeOthers(container, state, path);\n          return Optional.some(activeMenu);\n        }\n      }));\n      let ExpandHighlightDecision;\n      (function (ExpandHighlightDecision) {\n        ExpandHighlightDecision[ExpandHighlightDecision['HighlightSubmenu'] = 0] = 'HighlightSubmenu';\n        ExpandHighlightDecision[ExpandHighlightDecision['HighlightParent'] = 1] = 'HighlightParent';\n      }(ExpandHighlightDecision || (ExpandHighlightDecision = {})));\n      const buildIfRequired = (container, menuName, menuPrep) => {\n        if (menuPrep.type === 'notbuilt') {\n          const menu = container.getSystem().build(menuPrep.nbMenu());\n          layeredState.setMenuBuilt(menuName, menu);\n          return menu;\n        } else {\n          return menuPrep.menu;\n        }\n      };\n      const expandRight = (container, item, decision = ExpandHighlightDecision.HighlightSubmenu) => {\n        if (item.hasConfigured(Disabling) && Disabling.isDisabled(item)) {\n          return Optional.some(item);\n        } else {\n          const value = getItemValue(item);\n          return layeredState.expand(value).bind(path => {\n            updateAriaExpansions(container, path);\n            return Optional.from(path[0]).bind(menuName => layeredState.lookupMenu(menuName).bind(activeMenuPrep => {\n              const activeMenu = buildIfRequired(container, menuName, activeMenuPrep);\n              if (!inBody(activeMenu.element)) {\n                Replacing.append(container, premade(activeMenu));\n              }\n              detail.onOpenSubmenu(container, item, activeMenu, reverse(path));\n              if (decision === ExpandHighlightDecision.HighlightSubmenu) {\n                Highlighting.highlightFirst(activeMenu);\n                return updateMenuPath(container, layeredState, path);\n              } else {\n                Highlighting.dehighlightAll(activeMenu);\n                return Optional.some(item);\n              }\n            }));\n          });\n        }\n      };\n      const collapseLeft = (container, item) => {\n        const value = getItemValue(item);\n        return layeredState.collapse(value).bind(path => {\n          updateAriaExpansions(container, path);\n          return updateMenuPath(container, layeredState, path).map(activeMenu => {\n            detail.onCollapseMenu(container, item, activeMenu);\n            return activeMenu;\n          });\n        });\n      };\n      const updateView = (container, item) => {\n        const value = getItemValue(item);\n        return layeredState.refresh(value).bind(path => {\n          updateAriaExpansions(container, path);\n          return updateMenuPath(container, layeredState, path);\n        });\n      };\n      const onRight = (container, item) => inside(item.element) ? Optional.none() : expandRight(container, item, ExpandHighlightDecision.HighlightSubmenu);\n      const onLeft = (container, item) => inside(item.element) ? Optional.none() : collapseLeft(container, item);\n      const onEscape = (container, item) => collapseLeft(container, item).orThunk(() => detail.onEscape(container, item).map(() => container));\n      const keyOnItem = f => (container, simulatedEvent) => {\n        return closest$1(simulatedEvent.getSource(), `.${ detail.markers.item }`).bind(target => container.getSystem().getByDom(target).toOptional().bind(item => f(container, item).map(always)));\n      };\n      const events = derive$2([\n        run$1(focus(), (tmenu, simulatedEvent) => {\n          const item = simulatedEvent.event.item;\n          layeredState.lookupItem(getItemValue(item)).each(() => {\n            const menu = simulatedEvent.event.menu;\n            Highlighting.highlight(tmenu, menu);\n            const value = getItemValue(simulatedEvent.event.item);\n            layeredState.refresh(value).each(path => closeOthers(tmenu, layeredState, path));\n          });\n        }),\n        runOnExecute$1((component, simulatedEvent) => {\n          const target = simulatedEvent.event.target;\n          component.getSystem().getByDom(target).each(item => {\n            const itemValue = getItemValue(item);\n            if (itemValue.indexOf('collapse-item') === 0) {\n              collapseLeft(component, item);\n            }\n            expandRight(component, item, ExpandHighlightDecision.HighlightSubmenu).fold(() => {\n              detail.onExecute(component, item);\n            }, noop);\n          });\n        }),\n        runOnAttached((container, _simulatedEvent) => {\n          setup(container).each(primary => {\n            Replacing.append(container, premade(primary));\n            detail.onOpenMenu(container, primary);\n            if (detail.highlightOnOpen === HighlightOnOpen.HighlightMenuAndItem) {\n              setActiveMenuAndItem(container, primary);\n            } else if (detail.highlightOnOpen === HighlightOnOpen.HighlightJustMenu) {\n              setActiveMenu(container, primary);\n            }\n          });\n        }),\n        run$1(onMenuItemHighlightedEvent, (tmenuComp, se) => {\n          detail.onHighlightItem(tmenuComp, se.event.menuComp, se.event.itemComp);\n        }),\n        run$1(onMenuItemDehighlightedEvent, (tmenuComp, se) => {\n          detail.onDehighlightItem(tmenuComp, se.event.menuComp, se.event.itemComp);\n        }),\n        ...detail.navigateOnHover ? [run$1(hover(), (tmenu, simulatedEvent) => {\n            const item = simulatedEvent.event.item;\n            updateView(tmenu, item);\n            expandRight(tmenu, item, ExpandHighlightDecision.HighlightParent);\n            detail.onHover(tmenu, item);\n          })] : []\n      ]);\n      const getActiveItem = container => Highlighting.getHighlighted(container).bind(Highlighting.getHighlighted);\n      const collapseMenuApi = container => {\n        getActiveItem(container).each(currentItem => {\n          collapseLeft(container, currentItem);\n        });\n      };\n      const highlightPrimary = container => {\n        layeredState.getPrimary().each(primary => {\n          setActiveMenuAndItem(container, primary);\n        });\n      };\n      const extractMenuFromContainer = container => Optional.from(container.components()[0]).filter(comp => get$f(comp.element, 'role') === 'menu');\n      const repositionMenus = container => {\n        const maybeActivePrimary = layeredState.getPrimary().bind(primary => getActiveItem(container).bind(currentItem => {\n          const itemValue = getItemValue(currentItem);\n          const allMenus = values(layeredState.getMenus());\n          const preparedMenus = cat(map$2(allMenus, LayeredState.extractPreparedMenu));\n          return layeredState.getTriggeringPath(itemValue, v => getItemByValue(container, preparedMenus, v));\n        }).map(triggeringPath => ({\n          primary,\n          triggeringPath\n        })));\n        maybeActivePrimary.fold(() => {\n          extractMenuFromContainer(container).each(primaryMenu => {\n            detail.onRepositionMenu(container, primaryMenu, []);\n          });\n        }, ({primary, triggeringPath}) => {\n          detail.onRepositionMenu(container, primary, triggeringPath);\n        });\n      };\n      const apis = {\n        collapseMenu: collapseMenuApi,\n        highlightPrimary,\n        repositionMenus\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        markers: detail.markers,\n        behaviours: augment(detail.tmenuBehaviours, [\n          Keying.config({\n            mode: 'special',\n            onRight: keyOnItem(onRight),\n            onLeft: keyOnItem(onLeft),\n            onEscape: keyOnItem(onEscape),\n            focusIn: (container, _keyInfo) => {\n              layeredState.getPrimary().each(primary => {\n                dispatch(container, primary.element, focusItem());\n              });\n            }\n          }),\n          Highlighting.config({\n            highlightClass: detail.markers.selectedMenu,\n            itemClass: detail.markers.menu\n          }),\n          Composing.config({\n            find: container => {\n              return Highlighting.getHighlighted(container);\n            }\n          }),\n          Replacing.config({})\n        ]),\n        eventOrder: detail.eventOrder,\n        apis,\n        events\n      };\n    };\n    const collapseItem$1 = constant$1('collapse-item');\n\n    const tieredData = (primary, menus, expansions) => ({\n      primary,\n      menus,\n      expansions\n    });\n    const singleData = (name, menu) => ({\n      primary: name,\n      menus: wrap$1(name, menu),\n      expansions: {}\n    });\n    const collapseItem = text => ({\n      value: generate$6(collapseItem$1()),\n      meta: { text }\n    });\n    const tieredMenu = single({\n      name: 'TieredMenu',\n      configFields: [\n        onStrictKeyboardHandler('onExecute'),\n        onStrictKeyboardHandler('onEscape'),\n        onStrictHandler('onOpenMenu'),\n        onStrictHandler('onOpenSubmenu'),\n        onHandler('onRepositionMenu'),\n        onHandler('onCollapseMenu'),\n        defaulted('highlightOnOpen', HighlightOnOpen.HighlightMenuAndItem),\n        requiredObjOf('data', [\n          required$1('primary'),\n          required$1('menus'),\n          required$1('expansions')\n        ]),\n        defaulted('fakeFocus', false),\n        onHandler('onHighlightItem'),\n        onHandler('onDehighlightItem'),\n        onHandler('onHover'),\n        tieredMenuMarkers(),\n        required$1('dom'),\n        defaulted('navigateOnHover', true),\n        defaulted('stayInDom', false),\n        field('tmenuBehaviours', [\n          Keying,\n          Highlighting,\n          Composing,\n          Replacing\n        ]),\n        defaulted('eventOrder', {})\n      ],\n      apis: {\n        collapseMenu: (apis, tmenu) => {\n          apis.collapseMenu(tmenu);\n        },\n        highlightPrimary: (apis, tmenu) => {\n          apis.highlightPrimary(tmenu);\n        },\n        repositionMenus: (apis, tmenu) => {\n          apis.repositionMenus(tmenu);\n        }\n      },\n      factory: make$6,\n      extraApis: {\n        tieredData,\n        singleData,\n        collapseItem\n      }\n    });\n\n    const makeMenu = (detail, menuSandbox, placementSpec, menuSpec, getBounds) => {\n      const lazySink = () => detail.lazySink(menuSandbox);\n      const layouts = menuSpec.type === 'horizontal' ? {\n        layouts: {\n          onLtr: () => belowOrAbove(),\n          onRtl: () => belowOrAboveRtl()\n        }\n      } : {};\n      const isFirstTierSubmenu = triggeringPaths => triggeringPaths.length === 2;\n      const getSubmenuLayouts = triggeringPaths => isFirstTierSubmenu(triggeringPaths) ? layouts : {};\n      return tieredMenu.sketch({\n        dom: { tag: 'div' },\n        data: menuSpec.data,\n        markers: menuSpec.menu.markers,\n        highlightOnOpen: menuSpec.menu.highlightOnOpen,\n        fakeFocus: menuSpec.menu.fakeFocus,\n        onEscape: () => {\n          Sandboxing.close(menuSandbox);\n          detail.onEscape.map(handler => handler(menuSandbox));\n          return Optional.some(true);\n        },\n        onExecute: () => {\n          return Optional.some(true);\n        },\n        onOpenMenu: (tmenu, menu) => {\n          Positioning.positionWithinBounds(lazySink().getOrDie(), menu, placementSpec, getBounds());\n        },\n        onOpenSubmenu: (tmenu, item, submenu, triggeringPaths) => {\n          const sink = lazySink().getOrDie();\n          Positioning.position(sink, submenu, {\n            anchor: {\n              type: 'submenu',\n              item,\n              ...getSubmenuLayouts(triggeringPaths)\n            }\n          });\n        },\n        onRepositionMenu: (tmenu, primaryMenu, submenuTriggers) => {\n          const sink = lazySink().getOrDie();\n          Positioning.positionWithinBounds(sink, primaryMenu, placementSpec, getBounds());\n          each$1(submenuTriggers, st => {\n            const submenuLayouts = getSubmenuLayouts(st.triggeringPath);\n            Positioning.position(sink, st.triggeredMenu, {\n              anchor: {\n                type: 'submenu',\n                item: st.triggeringItem,\n                ...submenuLayouts\n              }\n            });\n          });\n        }\n      });\n    };\n    const factory$o = (detail, spec) => {\n      const isPartOfRelated = (sandbox, queryElem) => {\n        const related = detail.getRelated(sandbox);\n        return related.exists(rel => isPartOf$1(rel, queryElem));\n      };\n      const setContent = (sandbox, thing) => {\n        Sandboxing.setContent(sandbox, thing);\n      };\n      const showAt = (sandbox, thing, placementSpec) => {\n        const getBounds = Optional.none;\n        showWithinBounds(sandbox, thing, placementSpec, getBounds);\n      };\n      const showWithinBounds = (sandbox, thing, placementSpec, getBounds) => {\n        const sink = detail.lazySink(sandbox).getOrDie();\n        Sandboxing.openWhileCloaked(sandbox, thing, () => Positioning.positionWithinBounds(sink, sandbox, placementSpec, getBounds()));\n        Representing.setValue(sandbox, Optional.some({\n          mode: 'position',\n          config: placementSpec,\n          getBounds\n        }));\n      };\n      const showMenuAt = (sandbox, placementSpec, menuSpec) => {\n        showMenuWithinBounds(sandbox, placementSpec, menuSpec, Optional.none);\n      };\n      const showMenuWithinBounds = (sandbox, placementSpec, menuSpec, getBounds) => {\n        const menu = makeMenu(detail, sandbox, placementSpec, menuSpec, getBounds);\n        Sandboxing.open(sandbox, menu);\n        Representing.setValue(sandbox, Optional.some({\n          mode: 'menu',\n          menu\n        }));\n      };\n      const hide = sandbox => {\n        if (Sandboxing.isOpen(sandbox)) {\n          Representing.setValue(sandbox, Optional.none());\n          Sandboxing.close(sandbox);\n        }\n      };\n      const getContent = sandbox => Sandboxing.getState(sandbox);\n      const reposition = sandbox => {\n        if (Sandboxing.isOpen(sandbox)) {\n          Representing.getValue(sandbox).each(state => {\n            switch (state.mode) {\n            case 'menu':\n              Sandboxing.getState(sandbox).each(tieredMenu.repositionMenus);\n              break;\n            case 'position':\n              const sink = detail.lazySink(sandbox).getOrDie();\n              Positioning.positionWithinBounds(sink, sandbox, state.config, state.getBounds());\n              break;\n            }\n          });\n        }\n      };\n      const apis = {\n        setContent,\n        showAt,\n        showWithinBounds,\n        showMenuAt,\n        showMenuWithinBounds,\n        hide,\n        getContent,\n        reposition,\n        isOpen: Sandboxing.isOpen\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        behaviours: augment(detail.inlineBehaviours, [\n          Sandboxing.config({\n            isPartOf: (sandbox, data, queryElem) => {\n              return isPartOf$1(data, queryElem) || isPartOfRelated(sandbox, queryElem);\n            },\n            getAttachPoint: sandbox => {\n              return detail.lazySink(sandbox).getOrDie();\n            },\n            onOpen: sandbox => {\n              detail.onShow(sandbox);\n            },\n            onClose: sandbox => {\n              detail.onHide(sandbox);\n            }\n          }),\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: Optional.none()\n            }\n          }),\n          Receiving.config({\n            channels: {\n              ...receivingChannel$1({\n                isExtraPart: spec.isExtraPart,\n                ...detail.fireDismissalEventInstead.map(fe => ({ fireEventInstead: { event: fe.event } })).getOr({})\n              }),\n              ...receivingChannel({\n                ...detail.fireRepositionEventInstead.map(fe => ({ fireEventInstead: { event: fe.event } })).getOr({}),\n                doReposition: reposition\n              })\n            }\n          })\n        ]),\n        eventOrder: detail.eventOrder,\n        apis\n      };\n    };\n    const InlineView = single({\n      name: 'InlineView',\n      configFields: [\n        required$1('lazySink'),\n        onHandler('onShow'),\n        onHandler('onHide'),\n        optionFunction('onEscape'),\n        field('inlineBehaviours', [\n          Sandboxing,\n          Representing,\n          Receiving\n        ]),\n        optionObjOf('fireDismissalEventInstead', [defaulted('event', dismissRequested())]),\n        optionObjOf('fireRepositionEventInstead', [defaulted('event', repositionRequested())]),\n        defaulted('getRelated', Optional.none),\n        defaulted('isExtraPart', never),\n        defaulted('eventOrder', Optional.none)\n      ],\n      factory: factory$o,\n      apis: {\n        showAt: (apis, component, anchor, thing) => {\n          apis.showAt(component, anchor, thing);\n        },\n        showWithinBounds: (apis, component, anchor, thing, bounds) => {\n          apis.showWithinBounds(component, anchor, thing, bounds);\n        },\n        showMenuAt: (apis, component, anchor, menuSpec) => {\n          apis.showMenuAt(component, anchor, menuSpec);\n        },\n        showMenuWithinBounds: (apis, component, anchor, menuSpec, bounds) => {\n          apis.showMenuWithinBounds(component, anchor, menuSpec, bounds);\n        },\n        hide: (apis, component) => {\n          apis.hide(component);\n        },\n        isOpen: (apis, component) => apis.isOpen(component),\n        getContent: (apis, component) => apis.getContent(component),\n        setContent: (apis, component, thing) => {\n          apis.setContent(component, thing);\n        },\n        reposition: (apis, component) => {\n          apis.reposition(component);\n        }\n      }\n    });\n\n    var global$9 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    const factory$n = detail => {\n      const events = events$a(detail.action);\n      const tag = detail.dom.tag;\n      const lookupAttr = attr => get$g(detail.dom, 'attributes').bind(attrs => get$g(attrs, attr));\n      const getModAttributes = () => {\n        if (tag === 'button') {\n          const type = lookupAttr('type').getOr('button');\n          const roleAttrs = lookupAttr('role').map(role => ({ role })).getOr({});\n          return {\n            type,\n            ...roleAttrs\n          };\n        } else {\n          const role = detail.role.getOr(lookupAttr('role').getOr('button'));\n          return { role };\n        }\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: detail.components,\n        events,\n        behaviours: SketchBehaviours.augment(detail.buttonBehaviours, [\n          Focusing.config({}),\n          Keying.config({\n            mode: 'execution',\n            useSpace: true,\n            useEnter: true\n          })\n        ]),\n        domModification: { attributes: getModAttributes() },\n        eventOrder: detail.eventOrder\n      };\n    };\n    const Button = single({\n      name: 'Button',\n      factory: factory$n,\n      configFields: [\n        defaulted('uid', undefined),\n        required$1('dom'),\n        defaulted('components', []),\n        SketchBehaviours.field('buttonBehaviours', [\n          Focusing,\n          Keying\n        ]),\n        option$3('action'),\n        option$3('role'),\n        defaulted('eventOrder', {})\n      ]\n    });\n\n    const getAttrs = elem => {\n      const attributes = elem.dom.attributes !== undefined ? elem.dom.attributes : [];\n      return foldl(attributes, (b, attr) => {\n        if (attr.name === 'class') {\n          return b;\n        } else {\n          return {\n            ...b,\n            [attr.name]: attr.value\n          };\n        }\n      }, {});\n    };\n    const getClasses = elem => Array.prototype.slice.call(elem.dom.classList, 0);\n    const fromHtml = html => {\n      const elem = SugarElement.fromHtml(html);\n      const children$1 = children(elem);\n      const attrs = getAttrs(elem);\n      const classes = getClasses(elem);\n      const contents = children$1.length === 0 ? {} : { innerHtml: get$9(elem) };\n      return {\n        tag: name$3(elem),\n        classes,\n        attributes: attrs,\n        ...contents\n      };\n    };\n\n    const record = spec => {\n      const uid = isSketchSpec(spec) && hasNonNullableKey(spec, 'uid') ? spec.uid : generate$5('memento');\n      const get = anyInSystem => anyInSystem.getSystem().getByUid(uid).getOrDie();\n      const getOpt = anyInSystem => anyInSystem.getSystem().getByUid(uid).toOptional();\n      const asSpec = () => ({\n        ...spec,\n        uid\n      });\n      return {\n        get,\n        getOpt,\n        asSpec\n      };\n    };\n\n    /*! @license DOMPurify 3.1.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.7/LICENSE */\n\n    const {\n      entries,\n      setPrototypeOf,\n      isFrozen,\n      getPrototypeOf,\n      getOwnPropertyDescriptor\n    } = Object;\n    let {\n      freeze,\n      seal,\n      create: create$1\n    } = Object; // eslint-disable-line import/no-mutable-exports\n    let {\n      apply,\n      construct\n    } = typeof Reflect !== 'undefined' && Reflect;\n    if (!freeze) {\n      freeze = function freeze(x) {\n        return x;\n      };\n    }\n    if (!seal) {\n      seal = function seal(x) {\n        return x;\n      };\n    }\n    if (!apply) {\n      apply = function apply(fun, thisValue, args) {\n        return fun.apply(thisValue, args);\n      };\n    }\n    if (!construct) {\n      construct = function construct(Func, args) {\n        return new Func(...args);\n      };\n    }\n    const arrayForEach = unapply(Array.prototype.forEach);\n    const arrayPop = unapply(Array.prototype.pop);\n    const arrayPush = unapply(Array.prototype.push);\n    const stringToLowerCase = unapply(String.prototype.toLowerCase);\n    const stringToString = unapply(String.prototype.toString);\n    const stringMatch = unapply(String.prototype.match);\n    const stringReplace = unapply(String.prototype.replace);\n    const stringIndexOf = unapply(String.prototype.indexOf);\n    const stringTrim = unapply(String.prototype.trim);\n    const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n    const regExpTest = unapply(RegExp.prototype.test);\n    const typeErrorCreate = unconstruct(TypeError);\n\n    /**\n     * Creates a new function that calls the given function with a specified thisArg and arguments.\n     *\n     * @param {Function} func - The function to be wrapped and called.\n     * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n     */\n    function unapply(func) {\n      return function (thisArg) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return apply(func, thisArg, args);\n      };\n    }\n\n    /**\n     * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n     *\n     * @param {Function} func - The constructor function to be wrapped and called.\n     * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n     */\n    function unconstruct(func) {\n      return function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        return construct(func, args);\n      };\n    }\n\n    /**\n     * Add properties to a lookup table\n     *\n     * @param {Object} set - The set to which elements will be added.\n     * @param {Array} array - The array containing elements to be added to the set.\n     * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n     * @returns {Object} The modified set with added elements.\n     */\n    function addToSet(set, array) {\n      let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n      if (setPrototypeOf) {\n        // Make 'in' and truthy checks like Boolean(set.constructor)\n        // independent of any properties defined on Object.prototype.\n        // Prevent prototype setters from intercepting set as a this value.\n        setPrototypeOf(set, null);\n      }\n      let l = array.length;\n      while (l--) {\n        let element = array[l];\n        if (typeof element === 'string') {\n          const lcElement = transformCaseFunc(element);\n          if (lcElement !== element) {\n            // Config presets (e.g. tags.js, attrs.js) are immutable.\n            if (!isFrozen(array)) {\n              array[l] = lcElement;\n            }\n            element = lcElement;\n          }\n        }\n        set[element] = true;\n      }\n      return set;\n    }\n\n    /**\n     * Clean up an array to harden against CSPP\n     *\n     * @param {Array} array - The array to be cleaned.\n     * @returns {Array} The cleaned version of the array\n     */\n    function cleanArray(array) {\n      for (let index = 0; index < array.length; index++) {\n        const isPropertyExist = objectHasOwnProperty(array, index);\n        if (!isPropertyExist) {\n          array[index] = null;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Shallow clone an object\n     *\n     * @param {Object} object - The object to be cloned.\n     * @returns {Object} A new object that copies the original.\n     */\n    function clone(object) {\n      const newObject = create$1(null);\n      for (const [property, value] of entries(object)) {\n        const isPropertyExist = objectHasOwnProperty(object, property);\n        if (isPropertyExist) {\n          if (Array.isArray(value)) {\n            newObject[property] = cleanArray(value);\n          } else if (value && typeof value === 'object' && value.constructor === Object) {\n            newObject[property] = clone(value);\n          } else {\n            newObject[property] = value;\n          }\n        }\n      }\n      return newObject;\n    }\n\n    /**\n     * This method automatically checks if the prop is function or getter and behaves accordingly.\n     *\n     * @param {Object} object - The object to look up the getter function in its prototype chain.\n     * @param {String} prop - The property name for which to find the getter function.\n     * @returns {Function} The getter function found in the prototype chain or a fallback function.\n     */\n    function lookupGetter(object, prop) {\n      while (object !== null) {\n        const desc = getOwnPropertyDescriptor(object, prop);\n        if (desc) {\n          if (desc.get) {\n            return unapply(desc.get);\n          }\n          if (typeof desc.value === 'function') {\n            return unapply(desc.value);\n          }\n        }\n        object = getPrototypeOf(object);\n      }\n      function fallbackValue() {\n        return null;\n      }\n      return fallbackValue;\n    }\n\n    const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n    // SVG\n    const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n    const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n    // List of SVG elements that are disallowed by default.\n    // We still need to know them so that we can do namespace\n    // checks properly in case one wants to add them to\n    // allow-list.\n    const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n    const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n    // Similarly to SVG, we want to know all MathML elements,\n    // even those that we disallow by default.\n    const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n    const text$1 = freeze(['#text']);\n\n    const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\n    const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n    const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n    const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n    // eslint-disable-next-line unicorn/better-regex\n    const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n    const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n    const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n    const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n    const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n    const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n    );\n    const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n    const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n    );\n    const DOCTYPE_NAME = seal(/^html$/i);\n    const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\n    var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n      __proto__: null,\n      MUSTACHE_EXPR: MUSTACHE_EXPR,\n      ERB_EXPR: ERB_EXPR,\n      TMPLIT_EXPR: TMPLIT_EXPR,\n      DATA_ATTR: DATA_ATTR,\n      ARIA_ATTR: ARIA_ATTR,\n      IS_ALLOWED_URI: IS_ALLOWED_URI,\n      IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE: ATTR_WHITESPACE,\n      DOCTYPE_NAME: DOCTYPE_NAME,\n      CUSTOM_ELEMENT: CUSTOM_ELEMENT\n    });\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n    const NODE_TYPE = {\n      element: 1,\n      attribute: 2,\n      text: 3,\n      cdataSection: 4,\n      entityReference: 5,\n      // Deprecated\n      entityNode: 6,\n      // Deprecated\n      progressingInstruction: 7,\n      comment: 8,\n      document: 9,\n      documentType: 10,\n      documentFragment: 11,\n      notation: 12 // Deprecated\n    };\n    const getGlobal = function getGlobal() {\n      return typeof window === 'undefined' ? null : window;\n    };\n\n    /**\n     * Creates a no-op policy for internal use only.\n     * Don't export this function outside this module!\n     * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n     * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n     * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n     * are not supported or creating the policy failed).\n     */\n    const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n      if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n        return null;\n      }\n\n      // Allow the callers to control the unique policy name\n      // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n      // Policy creation with duplicate names throws in Trusted Types.\n      let suffix = null;\n      const ATTR_NAME = 'data-tt-policy-suffix';\n      if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n        suffix = purifyHostElement.getAttribute(ATTR_NAME);\n      }\n      const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n      try {\n        return trustedTypes.createPolicy(policyName, {\n          createHTML(html) {\n            return html;\n          },\n          createScriptURL(scriptUrl) {\n            return scriptUrl;\n          }\n        });\n      } catch (_) {\n        // Policy creation failed (most likely another DOMPurify script has\n        // already run). Skip creating the policy, as this will only cause errors\n        // if TT are enforced.\n        console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n        return null;\n      }\n    };\n    function createDOMPurify() {\n      let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n      const DOMPurify = root => createDOMPurify(root);\n\n      /**\n       * Version label, exposed for easier checks\n       * if DOMPurify is up to date or not\n       */\n      DOMPurify.version = '3.1.7';\n\n      /**\n       * Array of elements that DOMPurify removed during sanitation.\n       * Empty if nothing was removed.\n       */\n      DOMPurify.removed = [];\n      if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n        // Not running in a browser, provide a factory function\n        // so that you can pass your own Window\n        DOMPurify.isSupported = false;\n        return DOMPurify;\n      }\n      let {\n        document\n      } = window;\n      const originalDocument = document;\n      const currentScript = originalDocument.currentScript;\n      const {\n        DocumentFragment,\n        HTMLTemplateElement,\n        Node,\n        Element,\n        NodeFilter,\n        NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n        HTMLFormElement,\n        DOMParser,\n        trustedTypes\n      } = window;\n      const ElementPrototype = Element.prototype;\n      const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n      const remove = lookupGetter(ElementPrototype, 'remove');\n      const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n      const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n      const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n      // As per issue #47, the web-components registry is inherited by a\n      // new document created via createHTMLDocument. As per the spec\n      // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n      // a new empty registry is used when creating a template contents owner\n      // document, so we use that as our parent document to ensure nothing\n      // is inherited.\n      if (typeof HTMLTemplateElement === 'function') {\n        const template = document.createElement('template');\n        if (template.content && template.content.ownerDocument) {\n          document = template.content.ownerDocument;\n        }\n      }\n      let trustedTypesPolicy;\n      let emptyHTML = '';\n      const {\n        implementation,\n        createNodeIterator,\n        createDocumentFragment,\n        getElementsByTagName\n      } = document;\n      const {\n        importNode\n      } = originalDocument;\n      let hooks = {};\n\n      /**\n       * Expose whether this browser supports running the full DOMPurify.\n       */\n      DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n      const {\n        MUSTACHE_EXPR,\n        ERB_EXPR,\n        TMPLIT_EXPR,\n        DATA_ATTR,\n        ARIA_ATTR,\n        IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE,\n        CUSTOM_ELEMENT\n      } = EXPRESSIONS;\n      let {\n        IS_ALLOWED_URI: IS_ALLOWED_URI$1\n      } = EXPRESSIONS;\n\n      /**\n       * We consider the elements and attributes below to be safe. Ideally\n       * don't add any new ones but feel free to remove unwanted ones.\n       */\n\n      /* allowed element names */\n      let ALLOWED_TAGS = null;\n      const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text$1]);\n\n      /* Allowed attribute names */\n      let ALLOWED_ATTR = null;\n      const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n      /*\n       * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n       * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n       * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n       * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n       */\n      let CUSTOM_ELEMENT_HANDLING = Object.seal(create$1(null, {\n        tagNameCheck: {\n          writable: true,\n          configurable: false,\n          enumerable: true,\n          value: null\n        },\n        attributeNameCheck: {\n          writable: true,\n          configurable: false,\n          enumerable: true,\n          value: null\n        },\n        allowCustomizedBuiltInElements: {\n          writable: true,\n          configurable: false,\n          enumerable: true,\n          value: false\n        }\n      }));\n\n      /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n      let FORBID_TAGS = null;\n\n      /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n      let FORBID_ATTR = null;\n\n      /* Decide if ARIA attributes are okay */\n      let ALLOW_ARIA_ATTR = true;\n\n      /* Decide if custom data attributes are okay */\n      let ALLOW_DATA_ATTR = true;\n\n      /* Decide if unknown protocols are okay */\n      let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n      /* Decide if self-closing tags in attributes are allowed.\n       * Usually removed due to a mXSS issue in jQuery 3.0 */\n      let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n      /* Output should be safe for common template engines.\n       * This means, DOMPurify removes data attributes, mustaches and ERB\n       */\n      let SAFE_FOR_TEMPLATES = false;\n\n      /* Output should be safe even for XML used within HTML and alike.\n       * This means, DOMPurify removes comments when containing risky content.\n       */\n      let SAFE_FOR_XML = true;\n\n      /* Decide if document with <html>... should be returned */\n      let WHOLE_DOCUMENT = false;\n\n      /* Track whether config is already set on this instance of DOMPurify. */\n      let SET_CONFIG = false;\n\n      /* Decide if all elements (e.g. style, script) must be children of\n       * document.body. By default, browsers might move them to document.head */\n      let FORCE_BODY = false;\n\n      /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n       * string (or a TrustedHTML object if Trusted Types are supported).\n       * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n       */\n      let RETURN_DOM = false;\n\n      /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n       * string  (or a TrustedHTML object if Trusted Types are supported) */\n      let RETURN_DOM_FRAGMENT = false;\n\n      /* Try to return a Trusted Type object instead of a string, return a string in\n       * case Trusted Types are not supported  */\n      let RETURN_TRUSTED_TYPE = false;\n\n      /* Output should be free from DOM clobbering attacks?\n       * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n       */\n      let SANITIZE_DOM = true;\n\n      /* Achieve full DOM Clobbering protection by isolating the namespace of named\n       * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n       *\n       * HTML/DOM spec rules that enable DOM Clobbering:\n       *   - Named Access on Window (§7.3.3)\n       *   - DOM Tree Accessors (§3.1.5)\n       *   - Form Element Parent-Child Relations (§4.10.3)\n       *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n       *   - HTMLCollection (§4.2.10.2)\n       *\n       * Namespace isolation is implemented by prefixing `id` and `name` attributes\n       * with a constant string, i.e., `user-content-`\n       */\n      let SANITIZE_NAMED_PROPS = false;\n      const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n      /* Keep element content when removing element? */\n      let KEEP_CONTENT = true;\n\n      /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n       * of importing it into a new Document and returning a sanitized copy */\n      let IN_PLACE = false;\n\n      /* Allow usage of profiles like html, svg and mathMl */\n      let USE_PROFILES = {};\n\n      /* Tags to ignore content of when KEEP_CONTENT is true */\n      let FORBID_CONTENTS = null;\n      const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n      /* Tags that are safe for data: URIs */\n      let DATA_URI_TAGS = null;\n      const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n      /* Attributes safe for values like \"javascript:\" */\n      let URI_SAFE_ATTRIBUTES = null;\n      const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n      const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n      const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n      const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n      /* Document namespace */\n      let NAMESPACE = HTML_NAMESPACE;\n      let IS_EMPTY_INPUT = false;\n\n      /* Allowed XHTML+XML namespaces */\n      let ALLOWED_NAMESPACES = null;\n      const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n      /* Parsing of strict XHTML documents */\n      let PARSER_MEDIA_TYPE = null;\n      const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n      const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n      let transformCaseFunc = null;\n\n      /* Keep a reference to config to pass to hooks */\n      let CONFIG = null;\n\n      /* Ideally, do not touch anything below this line */\n      /* ______________________________________________ */\n\n      const formElement = document.createElement('form');\n      const isRegexOrFunction = function isRegexOrFunction(testValue) {\n        return testValue instanceof RegExp || testValue instanceof Function;\n      };\n\n      /**\n       * _parseConfig\n       *\n       * @param  {Object} cfg optional config literal\n       */\n      // eslint-disable-next-line complexity\n      const _parseConfig = function _parseConfig() {\n        let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (CONFIG && CONFIG === cfg) {\n          return;\n        }\n\n        /* Shield configuration object from tampering */\n        if (!cfg || typeof cfg !== 'object') {\n          cfg = {};\n        }\n\n        /* Shield configuration object from prototype pollution */\n        cfg = clone(cfg);\n        PARSER_MEDIA_TYPE =\n        // eslint-disable-next-line unicorn/prefer-includes\n        SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n        // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n        transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n        /* Set configuration parameters */\n        ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n        ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n        ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n        URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n        // eslint-disable-line indent\n        cfg.ADD_URI_SAFE_ATTR,\n        // eslint-disable-line indent\n        transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n        DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n        // eslint-disable-line indent\n        cfg.ADD_DATA_URI_TAGS,\n        // eslint-disable-line indent\n        transformCaseFunc // eslint-disable-line indent\n        ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n        FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n        FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n        FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n        USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n        ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n        ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n        ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n        ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n        SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n        SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n        WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n        RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n        RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n        RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n        FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n        SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n        SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n        KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n        IN_PLACE = cfg.IN_PLACE || false; // Default false\n        IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n        NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n        CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n        if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n        }\n        if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n          CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n        }\n        if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n        }\n        if (SAFE_FOR_TEMPLATES) {\n          ALLOW_DATA_ATTR = false;\n        }\n        if (RETURN_DOM_FRAGMENT) {\n          RETURN_DOM = true;\n        }\n\n        /* Parse profile info */\n        if (USE_PROFILES) {\n          ALLOWED_TAGS = addToSet({}, text$1);\n          ALLOWED_ATTR = [];\n          if (USE_PROFILES.html === true) {\n            addToSet(ALLOWED_TAGS, html$1);\n            addToSet(ALLOWED_ATTR, html);\n          }\n          if (USE_PROFILES.svg === true) {\n            addToSet(ALLOWED_TAGS, svg$1);\n            addToSet(ALLOWED_ATTR, svg);\n            addToSet(ALLOWED_ATTR, xml);\n          }\n          if (USE_PROFILES.svgFilters === true) {\n            addToSet(ALLOWED_TAGS, svgFilters);\n            addToSet(ALLOWED_ATTR, svg);\n            addToSet(ALLOWED_ATTR, xml);\n          }\n          if (USE_PROFILES.mathMl === true) {\n            addToSet(ALLOWED_TAGS, mathMl$1);\n            addToSet(ALLOWED_ATTR, mathMl);\n            addToSet(ALLOWED_ATTR, xml);\n          }\n        }\n\n        /* Merge configuration parameters */\n        if (cfg.ADD_TAGS) {\n          if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n            ALLOWED_TAGS = clone(ALLOWED_TAGS);\n          }\n          addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n        }\n        if (cfg.ADD_ATTR) {\n          if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n            ALLOWED_ATTR = clone(ALLOWED_ATTR);\n          }\n          addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n        }\n        if (cfg.ADD_URI_SAFE_ATTR) {\n          addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n        }\n        if (cfg.FORBID_CONTENTS) {\n          if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n            FORBID_CONTENTS = clone(FORBID_CONTENTS);\n          }\n          addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n        }\n\n        /* Add #text in case KEEP_CONTENT is set to true */\n        if (KEEP_CONTENT) {\n          ALLOWED_TAGS['#text'] = true;\n        }\n\n        /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n        if (WHOLE_DOCUMENT) {\n          addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n        }\n\n        /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n        if (ALLOWED_TAGS.table) {\n          addToSet(ALLOWED_TAGS, ['tbody']);\n          delete FORBID_TAGS.tbody;\n        }\n        if (cfg.TRUSTED_TYPES_POLICY) {\n          if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n            throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n          }\n          if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n            throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n          }\n\n          // Overwrite existing TrustedTypes policy.\n          trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n          // Sign local variables required by `sanitize`.\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        } else {\n          // Uninitialized policy, attempt to initialize the internal dompurify policy.\n          if (trustedTypesPolicy === undefined) {\n            trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n          }\n\n          // If creating the internal policy succeeded sign internal variables.\n          if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n            emptyHTML = trustedTypesPolicy.createHTML('');\n          }\n        }\n\n        // Prevent further manipulation of configuration.\n        // Not available in IE8, Safari 5, etc.\n        if (freeze) {\n          freeze(cfg);\n        }\n        CONFIG = cfg;\n      };\n      const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n      const HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erroneously deleted from\n      // HTML namespace.\n      const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n      /* Keep track of all possible SVG and MathML tags\n       * so that we can perform the namespace checks\n       * correctly. */\n      const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n      const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n      /**\n       * @param  {Element} element a DOM element whose namespace is being checked\n       * @returns {boolean} Return false if the element has a\n       *  namespace that a spec-compliant parser would never\n       *  return. Return true otherwise.\n       */\n      const _checkValidNamespace = function _checkValidNamespace(element) {\n        let parent = getParentNode(element);\n\n        // In JSDOM, if we're inside shadow DOM, then parentNode\n        // can be null. We just simulate parent in this case.\n        if (!parent || !parent.tagName) {\n          parent = {\n            namespaceURI: NAMESPACE,\n            tagName: 'template'\n          };\n        }\n        const tagName = stringToLowerCase(element.tagName);\n        const parentTagName = stringToLowerCase(parent.tagName);\n        if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n          return false;\n        }\n        if (element.namespaceURI === SVG_NAMESPACE) {\n          // The only way to switch from HTML namespace to SVG\n          // is via <svg>. If it happens via any other tag, then\n          // it should be killed.\n          if (parent.namespaceURI === HTML_NAMESPACE) {\n            return tagName === 'svg';\n          }\n\n          // The only way to switch from MathML to SVG is via`\n          // svg if parent is either <annotation-xml> or MathML\n          // text integration points.\n          if (parent.namespaceURI === MATHML_NAMESPACE) {\n            return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n          }\n\n          // We only allow elements that are defined in SVG\n          // spec. All others are disallowed in SVG namespace.\n          return Boolean(ALL_SVG_TAGS[tagName]);\n        }\n        if (element.namespaceURI === MATHML_NAMESPACE) {\n          // The only way to switch from HTML namespace to MathML\n          // is via <math>. If it happens via any other tag, then\n          // it should be killed.\n          if (parent.namespaceURI === HTML_NAMESPACE) {\n            return tagName === 'math';\n          }\n\n          // The only way to switch from SVG to MathML is via\n          // <math> and HTML integration points\n          if (parent.namespaceURI === SVG_NAMESPACE) {\n            return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n          }\n\n          // We only allow elements that are defined in MathML\n          // spec. All others are disallowed in MathML namespace.\n          return Boolean(ALL_MATHML_TAGS[tagName]);\n        }\n        if (element.namespaceURI === HTML_NAMESPACE) {\n          // The only way to switch from SVG to HTML is via\n          // HTML integration points, and from MathML to HTML\n          // is via MathML text integration points\n          if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n            return false;\n          }\n          if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n            return false;\n          }\n\n          // We disallow tags that are specific for MathML\n          // or SVG and should never appear in HTML namespace\n          return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n        }\n\n        // For XHTML and XML documents that support custom namespaces\n        if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n          return true;\n        }\n\n        // The code should never reach this place (this means\n        // that the element somehow got namespace that is not\n        // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n        // Return false just in case.\n        return false;\n      };\n\n      /**\n       * _forceRemove\n       *\n       * @param  {Node} node a DOM node\n       */\n      const _forceRemove = function _forceRemove(node) {\n        arrayPush(DOMPurify.removed, {\n          element: node\n        });\n        try {\n          // eslint-disable-next-line unicorn/prefer-dom-node-remove\n          getParentNode(node).removeChild(node);\n        } catch (_) {\n          remove(node);\n        }\n      };\n\n      /**\n       * _removeAttribute\n       *\n       * @param  {String} name an Attribute name\n       * @param  {Node} node a DOM node\n       */\n      const _removeAttribute = function _removeAttribute(name, node) {\n        try {\n          arrayPush(DOMPurify.removed, {\n            attribute: node.getAttributeNode(name),\n            from: node\n          });\n        } catch (_) {\n          arrayPush(DOMPurify.removed, {\n            attribute: null,\n            from: node\n          });\n        }\n        node.removeAttribute(name);\n\n        // We void attribute values for unremovable \"is\"\" attributes\n        if (name === 'is' && !ALLOWED_ATTR[name]) {\n          if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n            try {\n              _forceRemove(node);\n            } catch (_) {}\n          } else {\n            try {\n              node.setAttribute(name, '');\n            } catch (_) {}\n          }\n        }\n      };\n\n      /**\n       * _initDocument\n       *\n       * @param  {String} dirty a string of dirty markup\n       * @return {Document} a DOM, filled with the dirty markup\n       */\n      const _initDocument = function _initDocument(dirty) {\n        /* Create a HTML document */\n        let doc = null;\n        let leadingWhitespace = null;\n        if (FORCE_BODY) {\n          dirty = '<remove></remove>' + dirty;\n        } else {\n          /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n          const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n          leadingWhitespace = matches && matches[0];\n        }\n        if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n          // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n          dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n        }\n        const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        /*\n         * Use the DOMParser API by default, fallback later if needs be\n         * DOMParser not work for svg when has multiple root element.\n         */\n        if (NAMESPACE === HTML_NAMESPACE) {\n          try {\n            doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n          } catch (_) {}\n        }\n\n        /* Use createHTMLDocument in case DOMParser is not available */\n        if (!doc || !doc.documentElement) {\n          doc = implementation.createDocument(NAMESPACE, 'template', null);\n          try {\n            doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n          } catch (_) {\n            // Syntax error if dirtyPayload is invalid xml\n          }\n        }\n        const body = doc.body || doc.documentElement;\n        if (dirty && leadingWhitespace) {\n          body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n        }\n\n        /* Work on whole document or just its body */\n        if (NAMESPACE === HTML_NAMESPACE) {\n          return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n        }\n        return WHOLE_DOCUMENT ? doc.documentElement : body;\n      };\n\n      /**\n       * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n       *\n       * @param  {Node} root The root element or node to start traversing on.\n       * @return {NodeIterator} The created NodeIterator\n       */\n      const _createNodeIterator = function _createNodeIterator(root) {\n        return createNodeIterator.call(root.ownerDocument || root, root,\n        // eslint-disable-next-line no-bitwise\n        NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n      };\n\n      /**\n       * _isClobbered\n       *\n       * @param  {Node} elm element to check for clobbering attacks\n       * @return {Boolean} true if clobbered, false if safe\n       */\n      const _isClobbered = function _isClobbered(elm) {\n        return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n      };\n\n      /**\n       * Checks whether the given object is a DOM node.\n       *\n       * @param  {Node} object object to check whether it's a DOM node\n       * @return {Boolean} true is object is a DOM node\n       */\n      const _isNode = function _isNode(object) {\n        return typeof Node === 'function' && object instanceof Node;\n      };\n\n      /**\n       * _executeHook\n       * Execute user configurable hooks\n       *\n       * @param  {String} entryPoint  Name of the hook's entry point\n       * @param  {Node} currentNode node to work on with the hook\n       * @param  {Object} data additional hook parameters\n       */\n      const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n        if (!hooks[entryPoint]) {\n          return;\n        }\n        arrayForEach(hooks[entryPoint], hook => {\n          hook.call(DOMPurify, currentNode, data, CONFIG);\n        });\n      };\n\n      /**\n       * _sanitizeElements\n       *\n       * @protect nodeName\n       * @protect textContent\n       * @protect removeChild\n       *\n       * @param   {Node} currentNode to check for permission to exist\n       * @return  {Boolean} true if node was killed, false if left alive\n       */\n      const _sanitizeElements = function _sanitizeElements(currentNode) {\n        let content = null;\n\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeElements', currentNode, null);\n\n        /* Check if element is clobbered or can clobber */\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n\n        /* Now let's check the element's type and name */\n        const tagName = transformCaseFunc(currentNode.nodeName);\n\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeElement', currentNode, {\n          tagName,\n          allowedTags: ALLOWED_TAGS\n        });\n\n        /* Detect mXSS attempts abusing namespace confusion */\n        if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n\n        /* Remove any occurrence of processing instructions */\n        if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n          _forceRemove(currentNode);\n          return true;\n        }\n\n        /* Remove any kind of possibly harmful comments */\n        if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n\n        /* Remove element if anything forbids its presence */\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          /* Check if we have a custom element to handle */\n          if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n            if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n              return false;\n            }\n            if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n              return false;\n            }\n          }\n\n          /* Keep content except for bad-listed elements */\n          if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n            const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n            const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n            if (childNodes && parentNode) {\n              const childCount = childNodes.length;\n              for (let i = childCount - 1; i >= 0; --i) {\n                const childClone = cloneNode(childNodes[i], true);\n                childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n                parentNode.insertBefore(childClone, getNextSibling(currentNode));\n              }\n            }\n          }\n          _forceRemove(currentNode);\n          return true;\n        }\n\n        /* Check whether element has a valid namespace */\n        if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n\n        /* Make sure that older browsers don't get fallback-tag mXSS */\n        if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n          _forceRemove(currentNode);\n          return true;\n        }\n\n        /* Sanitize element content to be template-safe */\n        if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n          /* Get the element's text content */\n          content = currentNode.textContent;\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            content = stringReplace(content, expr, ' ');\n          });\n          if (currentNode.textContent !== content) {\n            arrayPush(DOMPurify.removed, {\n              element: currentNode.cloneNode()\n            });\n            currentNode.textContent = content;\n          }\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeElements', currentNode, null);\n        return false;\n      };\n\n      /**\n       * _isValidAttribute\n       *\n       * @param  {string} lcTag Lowercase tag name of containing element.\n       * @param  {string} lcName Lowercase attribute name.\n       * @param  {string} value Attribute value.\n       * @return {Boolean} Returns true if `value` is valid, otherwise false.\n       */\n      // eslint-disable-next-line complexity\n      const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n        /* Make sure attribute cannot clobber */\n        if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n          return false;\n        }\n\n        /* Allow valid data-* attributes: At least one character after \"-\"\n            (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n            XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n            We don't need to check the value; it's always URI safe. */\n        if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n          if (\n          // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n          // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n          // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n          _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n          // Alternative, second condition checks if it's an `is`-attribute, AND\n          // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n          lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n            return false;\n          }\n          /* Check value is safe. First, is attr inert? If so, is safe */\n        } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n          return false;\n        } else ;\n        return true;\n      };\n\n      /**\n       * _isBasicCustomElement\n       * checks if at least one dash is included in tagName, and it's not the first char\n       * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n       *\n       * @param {string} tagName name of the tag of the node to sanitize\n       * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n       */\n      const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n        return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n      };\n\n      /**\n       * _sanitizeAttributes\n       *\n       * @protect attributes\n       * @protect nodeName\n       * @protect removeAttribute\n       * @protect setAttribute\n       *\n       * @param  {Node} currentNode to sanitize\n       */\n      const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeAttributes', currentNode, null);\n        const {\n          attributes\n        } = currentNode;\n\n        /* Check if we have attributes; if not we might have a text node */\n        if (!attributes) {\n          return;\n        }\n        const hookEvent = {\n          attrName: '',\n          attrValue: '',\n          keepAttr: true,\n          allowedAttributes: ALLOWED_ATTR\n        };\n        let l = attributes.length;\n\n        /* Go backwards over all attributes; safely remove bad ones */\n        while (l--) {\n          const attr = attributes[l];\n          const {\n            name,\n            namespaceURI,\n            value: attrValue\n          } = attr;\n          const lcName = transformCaseFunc(name);\n          let value = name === 'value' ? attrValue : stringTrim(attrValue);\n          const initValue = value;\n\n          /* Execute a hook if present */\n          hookEvent.attrName = lcName;\n          hookEvent.attrValue = value;\n          hookEvent.keepAttr = true;\n          hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n          _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n          value = hookEvent.attrValue;\n\n          /* Did the hooks approve of the attribute? */\n          if (hookEvent.forceKeepAttr) {\n            continue;\n          }\n\n          /* Did the hooks approve of the attribute? */\n          if (!hookEvent.keepAttr) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n\n          /* Work around a security issue in jQuery 3.0 */\n          if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n\n          /* Sanitize attribute content to be template-safe */\n          if (SAFE_FOR_TEMPLATES) {\n            arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n              value = stringReplace(value, expr, ' ');\n            });\n          }\n\n          /* Is `value` valid for this attribute? */\n          const lcTag = transformCaseFunc(currentNode.nodeName);\n          if (!_isValidAttribute(lcTag, lcName, value)) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n\n          /* Full DOM Clobbering protection via namespace isolation,\n           * Prefix id and name attributes with `user-content-`\n           */\n          if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n            // Remove the attribute with this value\n            _removeAttribute(name, currentNode);\n\n            // Prefix the value and later re-create the attribute with the sanitized value\n            value = SANITIZE_NAMED_PROPS_PREFIX + value;\n          }\n\n          /* Work around a security issue with comments inside attributes */\n          if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n            _removeAttribute(name, currentNode);\n            continue;\n          }\n\n          /* Handle attributes that require Trusted Types */\n          if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n            if (namespaceURI) ; else {\n              switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n                case 'TrustedHTML':\n                  {\n                    value = trustedTypesPolicy.createHTML(value);\n                    break;\n                  }\n                case 'TrustedScriptURL':\n                  {\n                    value = trustedTypesPolicy.createScriptURL(value);\n                    break;\n                  }\n              }\n            }\n          }\n\n          /* Handle invalid data-* attribute set by try-catching it */\n          if (value !== initValue) {\n            try {\n              if (namespaceURI) {\n                currentNode.setAttributeNS(namespaceURI, name, value);\n              } else {\n                /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n                currentNode.setAttribute(name, value);\n              }\n              if (_isClobbered(currentNode)) {\n                _forceRemove(currentNode);\n              } else {\n                arrayPop(DOMPurify.removed);\n              }\n            } catch (_) {}\n          }\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeAttributes', currentNode, null);\n      };\n\n      /**\n       * _sanitizeShadowDOM\n       *\n       * @param  {DocumentFragment} fragment to iterate over recursively\n       */\n      const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n        let shadowNode = null;\n        const shadowIterator = _createNodeIterator(fragment);\n\n        /* Execute a hook if present */\n        _executeHook('beforeSanitizeShadowDOM', fragment, null);\n        while (shadowNode = shadowIterator.nextNode()) {\n          /* Execute a hook if present */\n          _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n          /* Sanitize tags and elements */\n          if (_sanitizeElements(shadowNode)) {\n            continue;\n          }\n\n          /* Deep shadow DOM detected */\n          if (shadowNode.content instanceof DocumentFragment) {\n            _sanitizeShadowDOM(shadowNode.content);\n          }\n\n          /* Check attributes, sanitize if necessary */\n          _sanitizeAttributes(shadowNode);\n        }\n\n        /* Execute a hook if present */\n        _executeHook('afterSanitizeShadowDOM', fragment, null);\n      };\n\n      /**\n       * Sanitize\n       * Public method providing core sanitation functionality\n       *\n       * @param {String|Node} dirty string or DOM node\n       * @param {Object} cfg object\n       */\n      // eslint-disable-next-line complexity\n      DOMPurify.sanitize = function (dirty) {\n        let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        let body = null;\n        let importedNode = null;\n        let currentNode = null;\n        let returnNode = null;\n        /* Make sure we have a string to sanitize.\n          DO NOT return early, as this will return the wrong type if\n          the user has requested a DOM object rather than a string */\n        IS_EMPTY_INPUT = !dirty;\n        if (IS_EMPTY_INPUT) {\n          dirty = '<!-->';\n        }\n\n        /* Stringify, in case dirty is an object */\n        if (typeof dirty !== 'string' && !_isNode(dirty)) {\n          if (typeof dirty.toString === 'function') {\n            dirty = dirty.toString();\n            if (typeof dirty !== 'string') {\n              throw typeErrorCreate('dirty is not a string, aborting');\n            }\n          } else {\n            throw typeErrorCreate('toString is not a function');\n          }\n        }\n\n        /* Return dirty HTML if DOMPurify cannot run */\n        if (!DOMPurify.isSupported) {\n          return dirty;\n        }\n\n        /* Assign config vars */\n        if (!SET_CONFIG) {\n          _parseConfig(cfg);\n        }\n\n        /* Clean up removed elements */\n        DOMPurify.removed = [];\n\n        /* Check if dirty is correctly typed for IN_PLACE */\n        if (typeof dirty === 'string') {\n          IN_PLACE = false;\n        }\n        if (IN_PLACE) {\n          /* Do some early pre-sanitization to avoid unsafe root nodes */\n          if (dirty.nodeName) {\n            const tagName = transformCaseFunc(dirty.nodeName);\n            if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n              throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n            }\n          }\n        } else if (dirty instanceof Node) {\n          /* If dirty is a DOM element, append to an empty document to avoid\n             elements being stripped by the parser */\n          body = _initDocument('<!---->');\n          importedNode = body.ownerDocument.importNode(dirty, true);\n          if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n            /* Node is already a body, use as is */\n            body = importedNode;\n          } else if (importedNode.nodeName === 'HTML') {\n            body = importedNode;\n          } else {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            body.appendChild(importedNode);\n          }\n        } else {\n          /* Exit directly if we have nothing to do */\n          if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n          // eslint-disable-next-line unicorn/prefer-includes\n          dirty.indexOf('<') === -1) {\n            return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n          }\n\n          /* Initialize the document to work on */\n          body = _initDocument(dirty);\n\n          /* Check we have a DOM node from the data */\n          if (!body) {\n            return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n          }\n        }\n\n        /* Remove first element node (ours) if FORCE_BODY is set */\n        if (body && FORCE_BODY) {\n          _forceRemove(body.firstChild);\n        }\n\n        /* Get node iterator */\n        const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n        /* Now start iterating over the created document */\n        while (currentNode = nodeIterator.nextNode()) {\n          /* Sanitize tags and elements */\n          if (_sanitizeElements(currentNode)) {\n            continue;\n          }\n\n          /* Shadow DOM detected, sanitize it */\n          if (currentNode.content instanceof DocumentFragment) {\n            _sanitizeShadowDOM(currentNode.content);\n          }\n\n          /* Check attributes, sanitize if necessary */\n          _sanitizeAttributes(currentNode);\n        }\n\n        /* If we sanitized `dirty` in-place, return it. */\n        if (IN_PLACE) {\n          return dirty;\n        }\n\n        /* Return sanitized string or DOM */\n        if (RETURN_DOM) {\n          if (RETURN_DOM_FRAGMENT) {\n            returnNode = createDocumentFragment.call(body.ownerDocument);\n            while (body.firstChild) {\n              // eslint-disable-next-line unicorn/prefer-dom-node-append\n              returnNode.appendChild(body.firstChild);\n            }\n          } else {\n            returnNode = body;\n          }\n          if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n            /*\n              AdoptNode() is not used because internal state is not reset\n              (e.g. the past names map of a HTMLFormElement), this is safe\n              in theory but we would rather not risk another attack vector.\n              The state that is cloned by importNode() is explicitly defined\n              by the specs.\n            */\n            returnNode = importNode.call(originalDocument, returnNode, true);\n          }\n          return returnNode;\n        }\n        let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n        /* Serialize doctype if allowed */\n        if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n          serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n        }\n\n        /* Sanitize final string template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            serializedHTML = stringReplace(serializedHTML, expr, ' ');\n          });\n        }\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n      };\n\n      /**\n       * Public method to set the configuration once\n       * setConfig\n       *\n       * @param {Object} cfg configuration object\n       */\n      DOMPurify.setConfig = function () {\n        let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _parseConfig(cfg);\n        SET_CONFIG = true;\n      };\n\n      /**\n       * Public method to remove the configuration\n       * clearConfig\n       *\n       */\n      DOMPurify.clearConfig = function () {\n        CONFIG = null;\n        SET_CONFIG = false;\n      };\n\n      /**\n       * Public method to check if an attribute value is valid.\n       * Uses last set config, if any. Otherwise, uses config defaults.\n       * isValidAttribute\n       *\n       * @param  {String} tag Tag name of containing element.\n       * @param  {String} attr Attribute name.\n       * @param  {String} value Attribute value.\n       * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n       */\n      DOMPurify.isValidAttribute = function (tag, attr, value) {\n        /* Initialize shared config vars if necessary. */\n        if (!CONFIG) {\n          _parseConfig({});\n        }\n        const lcTag = transformCaseFunc(tag);\n        const lcName = transformCaseFunc(attr);\n        return _isValidAttribute(lcTag, lcName, value);\n      };\n\n      /**\n       * AddHook\n       * Public method to add DOMPurify hooks\n       *\n       * @param {String} entryPoint entry point for the hook to add\n       * @param {Function} hookFunction function to execute\n       */\n      DOMPurify.addHook = function (entryPoint, hookFunction) {\n        if (typeof hookFunction !== 'function') {\n          return;\n        }\n        hooks[entryPoint] = hooks[entryPoint] || [];\n        arrayPush(hooks[entryPoint], hookFunction);\n      };\n\n      /**\n       * RemoveHook\n       * Public method to remove a DOMPurify hook at a given entryPoint\n       * (pops it from the stack of hooks if more are present)\n       *\n       * @param {String} entryPoint entry point for the hook to remove\n       * @return {Function} removed(popped) hook\n       */\n      DOMPurify.removeHook = function (entryPoint) {\n        if (hooks[entryPoint]) {\n          return arrayPop(hooks[entryPoint]);\n        }\n      };\n\n      /**\n       * RemoveHooks\n       * Public method to remove all DOMPurify hooks at a given entryPoint\n       *\n       * @param  {String} entryPoint entry point for the hooks to remove\n       */\n      DOMPurify.removeHooks = function (entryPoint) {\n        if (hooks[entryPoint]) {\n          hooks[entryPoint] = [];\n        }\n      };\n\n      /**\n       * RemoveAllHooks\n       * Public method to remove all DOMPurify hooks\n       */\n      DOMPurify.removeAllHooks = function () {\n        hooks = {};\n      };\n      return DOMPurify;\n    }\n    var purify = createDOMPurify();\n\n    const sanitizeHtmlString = html => purify().sanitize(html);\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    const rtlTransform = {\n      'indent': true,\n      'outdent': true,\n      'table-insert-column-after': true,\n      'table-insert-column-before': true,\n      'paste-column-after': true,\n      'paste-column-before': true,\n      'unordered-list': true,\n      'list-bull-circle': true,\n      'list-bull-default': true,\n      'list-bull-square': true\n    };\n    const defaultIconName = 'temporary-placeholder';\n    const defaultIcon = icons => () => get$g(icons, defaultIconName).getOr('!not found!');\n    const getIconName = (name, icons) => {\n      const lcName = name.toLowerCase();\n      if (global$8.isRtl()) {\n        const rtlName = ensureTrailing(lcName, '-rtl');\n        return has$2(icons, rtlName) ? rtlName : lcName;\n      } else {\n        return lcName;\n      }\n    };\n    const lookupIcon = (name, icons) => get$g(icons, getIconName(name, icons));\n    const get$2 = (name, iconProvider) => {\n      const icons = iconProvider();\n      return lookupIcon(name, icons).getOrThunk(defaultIcon(icons));\n    };\n    const getOr = (name, iconProvider, fallbackIcon) => {\n      const icons = iconProvider();\n      return lookupIcon(name, icons).or(fallbackIcon).getOrThunk(defaultIcon(icons));\n    };\n    const needsRtlTransform = iconName => global$8.isRtl() ? has$2(rtlTransform, iconName) : false;\n    const addFocusableBehaviour = () => config('add-focusable', [runOnAttached(comp => {\n        child(comp.element, 'svg').each(svg => set$9(svg, 'focusable', 'false'));\n      })]);\n    const renderIcon$3 = (spec, iconName, icons, fallbackIcon) => {\n      var _a, _b;\n      const rtlIconClasses = needsRtlTransform(iconName) ? ['tox-icon--flip'] : [];\n      const iconHtml = get$g(icons, getIconName(iconName, icons)).or(fallbackIcon).getOrThunk(defaultIcon(icons));\n      return {\n        dom: {\n          tag: spec.tag,\n          attributes: (_a = spec.attributes) !== null && _a !== void 0 ? _a : {},\n          classes: spec.classes.concat(rtlIconClasses),\n          innerHtml: iconHtml\n        },\n        behaviours: derive$1([\n          ...(_b = spec.behaviours) !== null && _b !== void 0 ? _b : [],\n          addFocusableBehaviour()\n        ])\n      };\n    };\n    const render$3 = (iconName, spec, iconProvider, fallbackIcon = Optional.none()) => renderIcon$3(spec, iconName, iconProvider(), fallbackIcon);\n    const renderFirst = (iconNames, spec, iconProvider) => {\n      const icons = iconProvider();\n      const iconName = find$5(iconNames, name => has$2(icons, getIconName(name, icons)));\n      return renderIcon$3(spec, iconName.getOr(defaultIconName), icons, Optional.none());\n    };\n\n    const notificationIconMap = {\n      success: 'checkmark',\n      error: 'warning',\n      err: 'error',\n      warning: 'warning',\n      warn: 'warning',\n      info: 'info'\n    };\n    const factory$m = detail => {\n      const memBannerText = record({\n        dom: fromHtml(`<p>${ sanitizeHtmlString(detail.translationProvider(detail.text)) }</p>`),\n        behaviours: derive$1([Replacing.config({})])\n      });\n      const renderPercentBar = percent => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-bar'],\n          styles: { width: `${ percent }%` }\n        }\n      });\n      const renderPercentText = percent => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-text'],\n          innerHtml: `${ percent }%`\n        }\n      });\n      const memBannerProgress = record({\n        dom: {\n          tag: 'div',\n          classes: detail.progress ? [\n            'tox-progress-bar',\n            'tox-progress-indicator'\n          ] : ['tox-progress-bar']\n        },\n        components: [\n          {\n            dom: {\n              tag: 'div',\n              classes: ['tox-bar-container']\n            },\n            components: [renderPercentBar(0)]\n          },\n          renderPercentText(0)\n        ],\n        behaviours: derive$1([Replacing.config({})])\n      });\n      const updateProgress = (comp, percent) => {\n        if (comp.getSystem().isConnected()) {\n          memBannerProgress.getOpt(comp).each(progress => {\n            Replacing.set(progress, [\n              {\n                dom: {\n                  tag: 'div',\n                  classes: ['tox-bar-container']\n                },\n                components: [renderPercentBar(percent)]\n              },\n              renderPercentText(percent)\n            ]);\n          });\n        }\n      };\n      const updateText = (comp, text) => {\n        if (comp.getSystem().isConnected()) {\n          const banner = memBannerText.get(comp);\n          Replacing.set(banner, [text$2(text)]);\n        }\n      };\n      const apis = {\n        updateProgress,\n        updateText\n      };\n      const iconChoices = flatten([\n        detail.icon.toArray(),\n        detail.level.toArray(),\n        detail.level.bind(level => Optional.from(notificationIconMap[level])).toArray()\n      ]);\n      const memButton = record(Button.sketch({\n        dom: {\n          tag: 'button',\n          classes: [\n            'tox-notification__dismiss',\n            'tox-button',\n            'tox-button--naked',\n            'tox-button--icon'\n          ]\n        },\n        components: [render$3('close', {\n            tag: 'span',\n            classes: ['tox-icon'],\n            attributes: { 'aria-label': detail.translationProvider('Close') }\n          }, detail.iconProvider)],\n        action: comp => {\n          detail.onAction(comp);\n        }\n      }));\n      const notificationIconSpec = renderFirst(iconChoices, {\n        tag: 'div',\n        classes: ['tox-notification__icon']\n      }, detail.iconProvider);\n      const notificationBodySpec = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-notification__body']\n        },\n        components: [memBannerText.asSpec()],\n        behaviours: derive$1([Replacing.config({})])\n      };\n      const components = [\n        notificationIconSpec,\n        notificationBodySpec\n      ];\n      return {\n        uid: detail.uid,\n        dom: {\n          tag: 'div',\n          attributes: { role: 'alert' },\n          classes: detail.level.map(level => [\n            'tox-notification',\n            'tox-notification--in',\n            `tox-notification--${ level }`\n          ]).getOr([\n            'tox-notification',\n            'tox-notification--in'\n          ])\n        },\n        behaviours: derive$1([\n          Focusing.config({}),\n          config('notification-events', [run$1(focusin(), comp => {\n              memButton.getOpt(comp).each(Focusing.focus);\n            })])\n        ]),\n        components: components.concat(detail.progress ? [memBannerProgress.asSpec()] : []).concat(!detail.closeButton ? [] : [memButton.asSpec()]),\n        apis\n      };\n    };\n    const Notification = single({\n      name: 'Notification',\n      factory: factory$m,\n      configFields: [\n        option$3('level'),\n        required$1('progress'),\n        option$3('icon'),\n        required$1('onAction'),\n        required$1('text'),\n        required$1('iconProvider'),\n        required$1('translationProvider'),\n        defaultedBoolean('closeButton', true)\n      ],\n      apis: {\n        updateProgress: (apis, comp, percent) => {\n          apis.updateProgress(comp, percent);\n        },\n        updateText: (apis, comp, text) => {\n          apis.updateText(comp, text);\n        }\n      }\n    });\n\n    var NotificationManagerImpl = (editor, extras, uiMothership) => {\n      const sharedBackstage = extras.backstage.shared;\n      const getBounds = () => {\n        const contentArea = box$1(SugarElement.fromDom(editor.getContentAreaContainer()));\n        const win$1 = win();\n        const x = clamp(win$1.x, contentArea.x, contentArea.right);\n        const y = clamp(win$1.y, contentArea.y, contentArea.bottom);\n        const right = Math.max(contentArea.right, win$1.right);\n        const bottom = Math.max(contentArea.bottom, win$1.bottom);\n        return Optional.some(bounds(x, y, right - x, bottom - y));\n      };\n      const open = (settings, closeCallback) => {\n        const close = () => {\n          closeCallback();\n          InlineView.hide(notificationWrapper);\n        };\n        const notification = build$1(Notification.sketch({\n          text: settings.text,\n          level: contains$2([\n            'success',\n            'error',\n            'warning',\n            'warn',\n            'info'\n          ], settings.type) ? settings.type : undefined,\n          progress: settings.progressBar === true,\n          icon: settings.icon,\n          closeButton: settings.closeButton,\n          onAction: close,\n          iconProvider: sharedBackstage.providers.icons,\n          translationProvider: sharedBackstage.providers.translate\n        }));\n        const notificationWrapper = build$1(InlineView.sketch({\n          dom: {\n            tag: 'div',\n            classes: ['tox-notifications-container']\n          },\n          lazySink: sharedBackstage.getSink,\n          fireDismissalEventInstead: {},\n          ...sharedBackstage.header.isPositionedAtTop() ? {} : { fireRepositionEventInstead: {} }\n        }));\n        uiMothership.add(notificationWrapper);\n        if (isNumber(settings.timeout) && settings.timeout > 0) {\n          global$9.setEditorTimeout(editor, () => {\n            close();\n          }, settings.timeout);\n        }\n        const reposition = () => {\n          const notificationSpec = premade(notification);\n          const anchorOverrides = { maxHeightFunction: expandable$1() };\n          const allNotifications = editor.notificationManager.getNotifications();\n          if (allNotifications[0] === thisNotification) {\n            const anchor = {\n              ...sharedBackstage.anchors.banner(),\n              overrides: anchorOverrides\n            };\n            InlineView.showWithinBounds(notificationWrapper, notificationSpec, { anchor }, getBounds);\n          } else {\n            indexOf(allNotifications, thisNotification).each(idx => {\n              const previousNotification = allNotifications[idx - 1].getEl();\n              const nodeAnchor = {\n                type: 'node',\n                root: body(),\n                node: Optional.some(SugarElement.fromDom(previousNotification)),\n                overrides: anchorOverrides,\n                layouts: {\n                  onRtl: () => [south$2],\n                  onLtr: () => [south$2]\n                }\n              };\n              InlineView.showWithinBounds(notificationWrapper, notificationSpec, { anchor: nodeAnchor }, getBounds);\n            });\n          }\n        };\n        const thisNotification = {\n          close,\n          reposition,\n          text: nuText => {\n            Notification.updateText(notification, nuText);\n          },\n          settings,\n          getEl: () => notification.element.dom,\n          progressBar: {\n            value: percent => {\n              Notification.updateProgress(notification, percent);\n            }\n          }\n        };\n        return thisNotification;\n      };\n      const close = notification => {\n        notification.close();\n      };\n      const getArgs = notification => {\n        return notification.settings;\n      };\n      return {\n        open,\n        close,\n        getArgs\n      };\n    };\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var ToolbarMode$1;\n    (function (ToolbarMode) {\n      ToolbarMode['default'] = 'wrap';\n      ToolbarMode['floating'] = 'floating';\n      ToolbarMode['sliding'] = 'sliding';\n      ToolbarMode['scrolling'] = 'scrolling';\n    }(ToolbarMode$1 || (ToolbarMode$1 = {})));\n    var ToolbarLocation$1;\n    (function (ToolbarLocation) {\n      ToolbarLocation['auto'] = 'auto';\n      ToolbarLocation['top'] = 'top';\n      ToolbarLocation['bottom'] = 'bottom';\n    }(ToolbarLocation$1 || (ToolbarLocation$1 = {})));\n    const option$2 = name => editor => editor.options.get(name);\n    const wrapOptional = fn => editor => Optional.from(fn(editor));\n    const register$e = editor => {\n      const isPhone = global$5.deviceType.isPhone();\n      const isMobile = global$5.deviceType.isTablet() || isPhone;\n      const registerOption = editor.options.register;\n      const stringOrFalseProcessor = value => isString(value) || value === false;\n      const stringOrNumberProcessor = value => isString(value) || isNumber(value);\n      registerOption('skin', {\n        processor: value => isString(value) || value === false,\n        default: 'oxide'\n      });\n      registerOption('skin_url', { processor: 'string' });\n      registerOption('height', {\n        processor: stringOrNumberProcessor,\n        default: Math.max(editor.getElement().offsetHeight, 400)\n      });\n      registerOption('width', {\n        processor: stringOrNumberProcessor,\n        default: global$7.DOM.getStyle(editor.getElement(), 'width')\n      });\n      registerOption('min_height', {\n        processor: 'number',\n        default: 100\n      });\n      registerOption('min_width', { processor: 'number' });\n      registerOption('max_height', { processor: 'number' });\n      registerOption('max_width', { processor: 'number' });\n      registerOption('style_formats', { processor: 'object[]' });\n      registerOption('style_formats_merge', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('style_formats_autohide', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('line_height_formats', {\n        processor: 'string',\n        default: '1 1.1 1.2 1.3 1.4 1.5 2'\n      });\n      registerOption('font_family_formats', {\n        processor: 'string',\n        default: 'Andale Mono=andale mono,monospace;' + 'Arial=arial,helvetica,sans-serif;' + 'Arial Black=arial black,sans-serif;' + 'Book Antiqua=book antiqua,palatino,serif;' + 'Comic Sans MS=comic sans ms,sans-serif;' + 'Courier New=courier new,courier,monospace;' + 'Georgia=georgia,palatino,serif;' + 'Helvetica=helvetica,arial,sans-serif;' + 'Impact=impact,sans-serif;' + 'Symbol=symbol;' + 'Tahoma=tahoma,arial,helvetica,sans-serif;' + 'Terminal=terminal,monaco,monospace;' + 'Times New Roman=times new roman,times,serif;' + 'Trebuchet MS=trebuchet ms,geneva,sans-serif;' + 'Verdana=verdana,geneva,sans-serif;' + 'Webdings=webdings;' + 'Wingdings=wingdings,zapf dingbats'\n      });\n      registerOption('font_size_formats', {\n        processor: 'string',\n        default: '8pt 10pt 12pt 14pt 18pt 24pt 36pt'\n      });\n      registerOption('font_size_input_default_unit', {\n        processor: 'string',\n        default: 'pt'\n      });\n      registerOption('block_formats', {\n        processor: 'string',\n        default: 'Paragraph=p;' + 'Heading 1=h1;' + 'Heading 2=h2;' + 'Heading 3=h3;' + 'Heading 4=h4;' + 'Heading 5=h5;' + 'Heading 6=h6;' + 'Preformatted=pre'\n      });\n      registerOption('content_langs', { processor: 'object[]' });\n      registerOption('removed_menuitems', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('menubar', {\n        processor: value => isString(value) || isBoolean(value),\n        default: !isPhone\n      });\n      registerOption('menu', {\n        processor: 'object',\n        default: {}\n      });\n      registerOption('toolbar', {\n        processor: value => {\n          if (isBoolean(value) || isString(value) || isArray(value)) {\n            return {\n              value,\n              valid: true\n            };\n          } else {\n            return {\n              valid: false,\n              message: 'Must be a boolean, string or array.'\n            };\n          }\n        },\n        default: true\n      });\n      range$2(9, num => {\n        registerOption('toolbar' + (num + 1), { processor: 'string' });\n      });\n      registerOption('toolbar_mode', {\n        processor: 'string',\n        default: isMobile ? 'scrolling' : 'floating'\n      });\n      registerOption('toolbar_groups', {\n        processor: 'object',\n        default: {}\n      });\n      registerOption('toolbar_location', {\n        processor: 'string',\n        default: ToolbarLocation$1.auto\n      });\n      registerOption('toolbar_persist', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('toolbar_sticky', {\n        processor: 'boolean',\n        default: editor.inline\n      });\n      registerOption('toolbar_sticky_offset', {\n        processor: 'number',\n        default: 0\n      });\n      registerOption('fixed_toolbar_container', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('fixed_toolbar_container_target', { processor: 'object' });\n      registerOption('ui_mode', {\n        processor: 'string',\n        default: 'combined'\n      });\n      registerOption('file_picker_callback', { processor: 'function' });\n      registerOption('file_picker_validator_handler', { processor: 'function' });\n      registerOption('file_picker_types', { processor: 'string' });\n      registerOption('typeahead_urls', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('anchor_top', {\n        processor: stringOrFalseProcessor,\n        default: '#top'\n      });\n      registerOption('anchor_bottom', {\n        processor: stringOrFalseProcessor,\n        default: '#bottom'\n      });\n      registerOption('draggable_modal', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('statusbar', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('elementpath', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('branding', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('promotion', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('resize', {\n        processor: value => value === 'both' || isBoolean(value),\n        default: !global$5.deviceType.isTouch()\n      });\n      registerOption('sidebar_show', { processor: 'string' });\n      registerOption('help_accessibility', {\n        processor: 'boolean',\n        default: editor.hasPlugin('help')\n      });\n      registerOption('default_font_stack', {\n        processor: 'string[]',\n        default: []\n      });\n    };\n    const isReadOnly = option$2('readonly');\n    const getHeightOption = option$2('height');\n    const getWidthOption = option$2('width');\n    const getMinWidthOption = wrapOptional(option$2('min_width'));\n    const getMinHeightOption = wrapOptional(option$2('min_height'));\n    const getMaxWidthOption = wrapOptional(option$2('max_width'));\n    const getMaxHeightOption = wrapOptional(option$2('max_height'));\n    const getUserStyleFormats = wrapOptional(option$2('style_formats'));\n    const shouldMergeStyleFormats = option$2('style_formats_merge');\n    const shouldAutoHideStyleFormats = option$2('style_formats_autohide');\n    const getContentLanguages = option$2('content_langs');\n    const getRemovedMenuItems = option$2('removed_menuitems');\n    const getToolbarMode = option$2('toolbar_mode');\n    const getToolbarGroups = option$2('toolbar_groups');\n    const getToolbarLocation = option$2('toolbar_location');\n    const fixedContainerSelector = option$2('fixed_toolbar_container');\n    const fixedToolbarContainerTarget = option$2('fixed_toolbar_container_target');\n    const isToolbarPersist = option$2('toolbar_persist');\n    const getStickyToolbarOffset = option$2('toolbar_sticky_offset');\n    const getMenubar = option$2('menubar');\n    const getToolbar = option$2('toolbar');\n    const getFilePickerCallback = option$2('file_picker_callback');\n    const getFilePickerValidatorHandler = option$2('file_picker_validator_handler');\n    const getFontSizeInputDefaultUnit = option$2('font_size_input_default_unit');\n    const getFilePickerTypes = option$2('file_picker_types');\n    const useTypeaheadUrls = option$2('typeahead_urls');\n    const getAnchorTop = option$2('anchor_top');\n    const getAnchorBottom = option$2('anchor_bottom');\n    const isDraggableModal$1 = option$2('draggable_modal');\n    const useStatusBar = option$2('statusbar');\n    const useElementPath = option$2('elementpath');\n    const useBranding = option$2('branding');\n    const getResize = option$2('resize');\n    const getPasteAsText = option$2('paste_as_text');\n    const getSidebarShow = option$2('sidebar_show');\n    const promotionEnabled = option$2('promotion');\n    const useHelpAccessibility = option$2('help_accessibility');\n    const getDefaultFontStack = option$2('default_font_stack');\n    const isSkinDisabled = editor => editor.options.get('skin') === false;\n    const isMenubarEnabled = editor => editor.options.get('menubar') !== false;\n    const getSkinUrl = editor => {\n      const skinUrl = editor.options.get('skin_url');\n      if (isSkinDisabled(editor)) {\n        return skinUrl;\n      } else {\n        if (skinUrl) {\n          return editor.documentBaseURI.toAbsolute(skinUrl);\n        } else {\n          const skin = editor.options.get('skin');\n          return global$6.baseURL + '/skins/ui/' + skin;\n        }\n      }\n    };\n    const getSkinUrlOption = editor => Optional.from(editor.options.get('skin_url'));\n    const getLineHeightFormats = editor => editor.options.get('line_height_formats').split(' ');\n    const isToolbarEnabled = editor => {\n      const toolbar = getToolbar(editor);\n      const isToolbarString = isString(toolbar);\n      const isToolbarObjectArray = isArray(toolbar) && toolbar.length > 0;\n      return !isMultipleToolbars(editor) && (isToolbarObjectArray || isToolbarString || toolbar === true);\n    };\n    const getMultipleToolbarsOption = editor => {\n      const toolbars = range$2(9, num => editor.options.get('toolbar' + (num + 1)));\n      const toolbarArray = filter$2(toolbars, isString);\n      return someIf(toolbarArray.length > 0, toolbarArray);\n    };\n    const isMultipleToolbars = editor => getMultipleToolbarsOption(editor).fold(() => {\n      const toolbar = getToolbar(editor);\n      return isArrayOf(toolbar, isString) && toolbar.length > 0;\n    }, always);\n    const isToolbarLocationBottom = editor => getToolbarLocation(editor) === ToolbarLocation$1.bottom;\n    const fixedContainerTarget = editor => {\n      var _a;\n      if (!editor.inline) {\n        return Optional.none();\n      }\n      const selector = (_a = fixedContainerSelector(editor)) !== null && _a !== void 0 ? _a : '';\n      if (selector.length > 0) {\n        return descendant(body(), selector);\n      }\n      const element = fixedToolbarContainerTarget(editor);\n      if (isNonNullable(element)) {\n        return Optional.some(SugarElement.fromDom(element));\n      }\n      return Optional.none();\n    };\n    const useFixedContainer = editor => editor.inline && fixedContainerTarget(editor).isSome();\n    const getUiContainer = editor => {\n      const fixedContainer = fixedContainerTarget(editor);\n      return fixedContainer.getOrThunk(() => getContentContainer(getRootNode(SugarElement.fromDom(editor.getElement()))));\n    };\n    const isDistractionFree = editor => editor.inline && !isMenubarEnabled(editor) && !isToolbarEnabled(editor) && !isMultipleToolbars(editor);\n    const isStickyToolbar = editor => {\n      const isStickyToolbar = editor.options.get('toolbar_sticky');\n      return (isStickyToolbar || editor.inline) && !useFixedContainer(editor) && !isDistractionFree(editor);\n    };\n    const isSplitUiMode = editor => !useFixedContainer(editor) && editor.options.get('ui_mode') === 'split';\n    const getMenus = editor => {\n      const menu = editor.options.get('menu');\n      return map$1(menu, menu => ({\n        ...menu,\n        items: menu.items\n      }));\n    };\n\n    var Options = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        get ToolbarMode () { return ToolbarMode$1; },\n        get ToolbarLocation () { return ToolbarLocation$1; },\n        register: register$e,\n        getSkinUrl: getSkinUrl,\n        getSkinUrlOption: getSkinUrlOption,\n        isReadOnly: isReadOnly,\n        isSkinDisabled: isSkinDisabled,\n        getHeightOption: getHeightOption,\n        getWidthOption: getWidthOption,\n        getMinWidthOption: getMinWidthOption,\n        getMinHeightOption: getMinHeightOption,\n        getMaxWidthOption: getMaxWidthOption,\n        getMaxHeightOption: getMaxHeightOption,\n        getUserStyleFormats: getUserStyleFormats,\n        shouldMergeStyleFormats: shouldMergeStyleFormats,\n        shouldAutoHideStyleFormats: shouldAutoHideStyleFormats,\n        getLineHeightFormats: getLineHeightFormats,\n        getContentLanguages: getContentLanguages,\n        getRemovedMenuItems: getRemovedMenuItems,\n        isMenubarEnabled: isMenubarEnabled,\n        isMultipleToolbars: isMultipleToolbars,\n        isToolbarEnabled: isToolbarEnabled,\n        isToolbarPersist: isToolbarPersist,\n        getMultipleToolbarsOption: getMultipleToolbarsOption,\n        getUiContainer: getUiContainer,\n        useFixedContainer: useFixedContainer,\n        isSplitUiMode: isSplitUiMode,\n        getToolbarMode: getToolbarMode,\n        isDraggableModal: isDraggableModal$1,\n        isDistractionFree: isDistractionFree,\n        isStickyToolbar: isStickyToolbar,\n        getStickyToolbarOffset: getStickyToolbarOffset,\n        getToolbarLocation: getToolbarLocation,\n        isToolbarLocationBottom: isToolbarLocationBottom,\n        getToolbarGroups: getToolbarGroups,\n        getMenus: getMenus,\n        getMenubar: getMenubar,\n        getToolbar: getToolbar,\n        getFilePickerCallback: getFilePickerCallback,\n        getFilePickerTypes: getFilePickerTypes,\n        useTypeaheadUrls: useTypeaheadUrls,\n        getAnchorTop: getAnchorTop,\n        getAnchorBottom: getAnchorBottom,\n        getFilePickerValidatorHandler: getFilePickerValidatorHandler,\n        getFontSizeInputDefaultUnit: getFontSizeInputDefaultUnit,\n        useStatusBar: useStatusBar,\n        useElementPath: useElementPath,\n        promotionEnabled: promotionEnabled,\n        useBranding: useBranding,\n        getResize: getResize,\n        getPasteAsText: getPasteAsText,\n        getSidebarShow: getSidebarShow,\n        useHelpAccessibility: useHelpAccessibility,\n        getDefaultFontStack: getDefaultFontStack\n    });\n\n    const autocompleteSelector = '[data-mce-autocompleter]';\n    const detect$1 = elm => closest$1(elm, autocompleteSelector);\n    const findIn = elm => descendant(elm, autocompleteSelector);\n\n    const setup$e = (api, editor) => {\n      const redirectKeyToItem = (item, e) => {\n        emitWith(item, keydown(), { raw: e });\n      };\n      const getItem = () => api.getMenu().bind(Highlighting.getHighlighted);\n      editor.on('keydown', e => {\n        const keyCode = e.which;\n        if (!api.isActive()) {\n          return;\n        }\n        if (api.isMenuOpen()) {\n          if (keyCode === 13) {\n            getItem().each(emitExecute);\n            e.preventDefault();\n          } else if (keyCode === 40) {\n            getItem().fold(() => {\n              api.getMenu().each(Highlighting.highlightFirst);\n            }, item => {\n              redirectKeyToItem(item, e);\n            });\n            e.preventDefault();\n            e.stopImmediatePropagation();\n          } else if (keyCode === 37 || keyCode === 38 || keyCode === 39) {\n            getItem().each(item => {\n              redirectKeyToItem(item, e);\n              e.preventDefault();\n              e.stopImmediatePropagation();\n            });\n          }\n        } else {\n          if (keyCode === 13 || keyCode === 38 || keyCode === 40) {\n            api.cancelIfNecessary();\n          }\n        }\n      });\n      editor.on('NodeChange', e => {\n        if (api.isActive() && !api.isProcessingAction() && detect$1(SugarElement.fromDom(e.element)).isNone()) {\n          api.cancelIfNecessary();\n        }\n      });\n    };\n    const AutocompleterEditorEvents = { setup: setup$e };\n\n    var ItemResponse;\n    (function (ItemResponse) {\n      ItemResponse[ItemResponse['CLOSE_ON_EXECUTE'] = 0] = 'CLOSE_ON_EXECUTE';\n      ItemResponse[ItemResponse['BUBBLE_TO_SANDBOX'] = 1] = 'BUBBLE_TO_SANDBOX';\n    }(ItemResponse || (ItemResponse = {})));\n    var ItemResponse$1 = ItemResponse;\n\n    const navClass = 'tox-menu-nav__js';\n    const selectableClass = 'tox-collection__item';\n    const colorClass = 'tox-swatch';\n    const presetClasses = {\n      normal: navClass,\n      color: colorClass\n    };\n    const tickedClass = 'tox-collection__item--enabled';\n    const groupHeadingClass = 'tox-collection__group-heading';\n    const iconClass = 'tox-collection__item-icon';\n    const textClass = 'tox-collection__item-label';\n    const accessoryClass = 'tox-collection__item-accessory';\n    const caretClass = 'tox-collection__item-caret';\n    const checkmarkClass = 'tox-collection__item-checkmark';\n    const activeClass = 'tox-collection__item--active';\n    const containerClass = 'tox-collection__item-container';\n    const containerColumnClass = 'tox-collection__item-container--column';\n    const containerRowClass = 'tox-collection__item-container--row';\n    const containerAlignRightClass = 'tox-collection__item-container--align-right';\n    const containerAlignLeftClass = 'tox-collection__item-container--align-left';\n    const containerValignTopClass = 'tox-collection__item-container--valign-top';\n    const containerValignMiddleClass = 'tox-collection__item-container--valign-middle';\n    const containerValignBottomClass = 'tox-collection__item-container--valign-bottom';\n    const classForPreset = presets => get$g(presetClasses, presets).getOr(navClass);\n\n    const forMenu = presets => {\n      if (presets === 'color') {\n        return 'tox-swatches';\n      } else {\n        return 'tox-menu';\n      }\n    };\n    const classes = presets => ({\n      backgroundMenu: 'tox-background-menu',\n      selectedMenu: 'tox-selected-menu',\n      selectedItem: 'tox-collection__item--active',\n      hasIcons: 'tox-menu--has-icons',\n      menu: forMenu(presets),\n      tieredMenu: 'tox-tiered-menu'\n    });\n\n    const markers = presets => {\n      const menuClasses = classes(presets);\n      return {\n        backgroundMenu: menuClasses.backgroundMenu,\n        selectedMenu: menuClasses.selectedMenu,\n        menu: menuClasses.menu,\n        selectedItem: menuClasses.selectedItem,\n        item: classForPreset(presets)\n      };\n    };\n    const dom$1 = (hasIcons, columns, presets) => {\n      const menuClasses = classes(presets);\n      return {\n        tag: 'div',\n        classes: flatten([\n          [\n            menuClasses.menu,\n            `tox-menu-${ columns }-column`\n          ],\n          hasIcons ? [menuClasses.hasIcons] : []\n        ])\n      };\n    };\n    const components = [Menu.parts.items({})];\n    const part = (hasIcons, columns, presets) => {\n      const menuClasses = classes(presets);\n      const d = {\n        tag: 'div',\n        classes: flatten([[menuClasses.tieredMenu]])\n      };\n      return {\n        dom: d,\n        markers: markers(presets)\n      };\n    };\n\n    const schema$l = constant$1([\n      option$3('data'),\n      defaulted('inputAttributes', {}),\n      defaulted('inputStyles', {}),\n      defaulted('tag', 'input'),\n      defaulted('inputClasses', []),\n      onHandler('onSetValue'),\n      defaulted('styles', {}),\n      defaulted('eventOrder', {}),\n      field('inputBehaviours', [\n        Representing,\n        Focusing\n      ]),\n      defaulted('selectOnFocus', true)\n    ]);\n    const focusBehaviours = detail => derive$1([Focusing.config({\n        onFocus: !detail.selectOnFocus ? noop : component => {\n          const input = component.element;\n          const value = get$6(input);\n          input.dom.setSelectionRange(0, value.length);\n        }\n      })]);\n    const behaviours = detail => ({\n      ...focusBehaviours(detail),\n      ...augment(detail.inputBehaviours, [Representing.config({\n          store: {\n            mode: 'manual',\n            ...detail.data.map(data => ({ initialValue: data })).getOr({}),\n            getValue: input => {\n              return get$6(input.element);\n            },\n            setValue: (input, data) => {\n              const current = get$6(input.element);\n              if (current !== data) {\n                set$5(input.element, data);\n              }\n            }\n          },\n          onSetValue: detail.onSetValue\n        })])\n    });\n    const dom = detail => ({\n      tag: detail.tag,\n      attributes: {\n        type: 'text',\n        ...detail.inputAttributes\n      },\n      styles: detail.inputStyles,\n      classes: detail.inputClasses\n    });\n\n    const factory$l = (detail, _spec) => ({\n      uid: detail.uid,\n      dom: dom(detail),\n      components: [],\n      behaviours: behaviours(detail),\n      eventOrder: detail.eventOrder\n    });\n    const Input = single({\n      name: 'Input',\n      configFields: schema$l(),\n      factory: factory$l\n    });\n\n    const refetchTriggerEvent = generate$6('refetch-trigger-event');\n    const redirectMenuItemInteractionEvent = generate$6('redirect-menu-item-interaction');\n\n    const menuSearcherClass = 'tox-menu__searcher';\n    const findWithinSandbox = sandboxComp => {\n      return descendant(sandboxComp.element, `.${ menuSearcherClass }`).bind(inputElem => sandboxComp.getSystem().getByDom(inputElem).toOptional());\n    };\n    const findWithinMenu = findWithinSandbox;\n    const restoreState = (inputComp, searcherState) => {\n      Representing.setValue(inputComp, searcherState.fetchPattern);\n      inputComp.element.dom.selectionStart = searcherState.selectionStart;\n      inputComp.element.dom.selectionEnd = searcherState.selectionEnd;\n    };\n    const saveState = inputComp => {\n      const fetchPattern = Representing.getValue(inputComp);\n      const selectionStart = inputComp.element.dom.selectionStart;\n      const selectionEnd = inputComp.element.dom.selectionEnd;\n      return {\n        fetchPattern,\n        selectionStart,\n        selectionEnd\n      };\n    };\n    const setActiveDescendant = (inputComp, active) => {\n      getOpt(active.element, 'id').each(id => set$9(inputComp.element, 'aria-activedescendant', id));\n    };\n    const renderMenuSearcher = spec => {\n      const handleByBrowser = (comp, se) => {\n        se.cut();\n        return Optional.none();\n      };\n      const handleByHighlightedItem = (comp, se) => {\n        const eventData = {\n          interactionEvent: se.event,\n          eventType: se.event.raw.type\n        };\n        emitWith(comp, redirectMenuItemInteractionEvent, eventData);\n        return Optional.some(true);\n      };\n      const customSearcherEventsName = 'searcher-events';\n      return {\n        dom: {\n          tag: 'div',\n          classes: [selectableClass]\n        },\n        components: [Input.sketch({\n            inputClasses: [\n              menuSearcherClass,\n              'tox-textfield'\n            ],\n            inputAttributes: {\n              ...spec.placeholder.map(placeholder => ({ placeholder: spec.i18n(placeholder) })).getOr({}),\n              'type': 'search',\n              'aria-autocomplete': 'list'\n            },\n            inputBehaviours: derive$1([\n              config(customSearcherEventsName, [\n                run$1(input(), inputComp => {\n                  emit(inputComp, refetchTriggerEvent);\n                }),\n                run$1(keydown(), (inputComp, se) => {\n                  if (se.event.raw.key === 'Escape') {\n                    se.stop();\n                  }\n                })\n              ]),\n              Keying.config({\n                mode: 'special',\n                onLeft: handleByBrowser,\n                onRight: handleByBrowser,\n                onSpace: handleByBrowser,\n                onEnter: handleByHighlightedItem,\n                onEscape: handleByHighlightedItem,\n                onUp: handleByHighlightedItem,\n                onDown: handleByHighlightedItem\n              })\n            ]),\n            eventOrder: {\n              keydown: [\n                customSearcherEventsName,\n                Keying.name()\n              ]\n            }\n          })]\n      };\n    };\n\n    const searchResultsClass = 'tox-collection--results__js';\n    const augmentWithAria = item => {\n      var _a;\n      if (item.dom) {\n        return {\n          ...item,\n          dom: {\n            ...item.dom,\n            attributes: {\n              ...(_a = item.dom.attributes) !== null && _a !== void 0 ? _a : {},\n              'id': generate$6('aria-item-search-result-id'),\n              'aria-selected': 'false'\n            }\n          }\n        };\n      } else {\n        return item;\n      }\n    };\n\n    const chunk = (rowDom, numColumns) => items => {\n      const chunks = chunk$1(items, numColumns);\n      return map$2(chunks, c => ({\n        dom: rowDom,\n        components: c\n      }));\n    };\n    const forSwatch = columns => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-menu',\n          'tox-swatches-menu'\n        ]\n      },\n      components: [{\n          dom: {\n            tag: 'div',\n            classes: ['tox-swatches']\n          },\n          components: [Menu.parts.items({\n              preprocess: columns !== 'auto' ? chunk({\n                tag: 'div',\n                classes: ['tox-swatches__row']\n              }, columns) : identity\n            })]\n        }]\n    });\n    const forToolbar = columns => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-menu',\n          'tox-collection',\n          'tox-collection--toolbar',\n          'tox-collection--toolbar-lg'\n        ]\n      },\n      components: [Menu.parts.items({\n          preprocess: chunk({\n            tag: 'div',\n            classes: ['tox-collection__group']\n          }, columns)\n        })]\n    });\n    const preprocessCollection = (items, isSeparator) => {\n      const allSplits = [];\n      let currentSplit = [];\n      each$1(items, (item, i) => {\n        if (isSeparator(item, i)) {\n          if (currentSplit.length > 0) {\n            allSplits.push(currentSplit);\n          }\n          currentSplit = [];\n          if (has$2(item.dom, 'innerHtml') || item.components && item.components.length > 0) {\n            currentSplit.push(item);\n          }\n        } else {\n          currentSplit.push(item);\n        }\n      });\n      if (currentSplit.length > 0) {\n        allSplits.push(currentSplit);\n      }\n      return map$2(allSplits, s => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-collection__group']\n        },\n        components: s\n      }));\n    };\n    const insertItemsPlaceholder = (columns, initItems, onItem) => {\n      return Menu.parts.items({\n        preprocess: rawItems => {\n          const enrichedItems = map$2(rawItems, onItem);\n          if (columns !== 'auto' && columns > 1) {\n            return chunk({\n              tag: 'div',\n              classes: ['tox-collection__group']\n            }, columns)(enrichedItems);\n          } else {\n            return preprocessCollection(enrichedItems, (_item, i) => initItems[i].type === 'separator');\n          }\n        }\n      });\n    };\n    const forCollection = (columns, initItems, _hasIcons = true) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-menu',\n          'tox-collection'\n        ].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'])\n      },\n      components: [insertItemsPlaceholder(columns, initItems, identity)]\n    });\n    const forCollectionWithSearchResults = (columns, initItems, _hasIcons = true) => {\n      const ariaControlsSearchResults = generate$6('aria-controls-search-results');\n      return {\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-menu',\n            'tox-collection',\n            searchResultsClass\n          ].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid']),\n          attributes: { id: ariaControlsSearchResults }\n        },\n        components: [insertItemsPlaceholder(columns, initItems, augmentWithAria)]\n      };\n    };\n    const forCollectionWithSearchField = (columns, initItems, searchField) => {\n      const ariaControlsSearchResults = generate$6('aria-controls-search-results');\n      return {\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-menu',\n            'tox-collection'\n          ].concat(columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'])\n        },\n        components: [\n          renderMenuSearcher({\n            i18n: global$8.translate,\n            placeholder: searchField.placeholder\n          }),\n          {\n            dom: {\n              tag: 'div',\n              classes: [\n                ...columns === 1 ? ['tox-collection--list'] : ['tox-collection--grid'],\n                searchResultsClass\n              ],\n              attributes: { id: ariaControlsSearchResults }\n            },\n            components: [insertItemsPlaceholder(columns, initItems, augmentWithAria)]\n          }\n        ]\n      };\n    };\n    const forHorizontalCollection = (initItems, _hasIcons = true) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-collection',\n          'tox-collection--horizontal'\n        ]\n      },\n      components: [Menu.parts.items({ preprocess: items => preprocessCollection(items, (_item, i) => initItems[i].type === 'separator') })]\n    });\n\n    const menuHasIcons = xs => exists(xs, item => 'icon' in item && item.icon !== undefined);\n    const handleError = error => {\n      console.error(formatError(error));\n      console.log(error);\n      return Optional.none();\n    };\n    const createHorizontalPartialMenuWithAlloyItems = (value, _hasIcons, items, _columns, _menuLayout) => {\n      const structure = forHorizontalCollection(items);\n      return {\n        value,\n        dom: structure.dom,\n        components: structure.components,\n        items\n      };\n    };\n    const createPartialMenuWithAlloyItems = (value, hasIcons, items, columns, menuLayout) => {\n      const getNormalStructure = () => {\n        if (menuLayout.menuType !== 'searchable') {\n          return forCollection(columns, items);\n        } else {\n          return menuLayout.searchMode.searchMode === 'search-with-field' ? forCollectionWithSearchField(columns, items, menuLayout.searchMode) : forCollectionWithSearchResults(columns, items);\n        }\n      };\n      if (menuLayout.menuType === 'color') {\n        const structure = forSwatch(columns);\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else if (menuLayout.menuType === 'normal' && columns === 'auto') {\n        const structure = forCollection(columns, items);\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else if (menuLayout.menuType === 'normal' || menuLayout.menuType === 'searchable') {\n        const structure = getNormalStructure();\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else if (menuLayout.menuType === 'listpreview' && columns !== 'auto') {\n        const structure = forToolbar(columns);\n        return {\n          value,\n          dom: structure.dom,\n          components: structure.components,\n          items\n        };\n      } else {\n        return {\n          value,\n          dom: dom$1(hasIcons, columns, menuLayout.menuType),\n          components: components,\n          items\n        };\n      }\n    };\n\n    const type = requiredString('type');\n    const name$1 = requiredString('name');\n    const label = requiredString('label');\n    const text = requiredString('text');\n    const title = requiredString('title');\n    const icon = requiredString('icon');\n    const value$1 = requiredString('value');\n    const fetch$1 = requiredFunction('fetch');\n    const getSubmenuItems = requiredFunction('getSubmenuItems');\n    const onAction = requiredFunction('onAction');\n    const onItemAction = requiredFunction('onItemAction');\n    const onSetup = defaultedFunction('onSetup', () => noop);\n    const optionalName = optionString('name');\n    const optionalText = optionString('text');\n    const optionalIcon = optionString('icon');\n    const optionalTooltip = optionString('tooltip');\n    const optionalLabel = optionString('label');\n    const optionalShortcut = optionString('shortcut');\n    const optionalSelect = optionFunction('select');\n    const active = defaultedBoolean('active', false);\n    const borderless = defaultedBoolean('borderless', false);\n    const enabled = defaultedBoolean('enabled', true);\n    const primary = defaultedBoolean('primary', false);\n    const defaultedColumns = num => defaulted('columns', num);\n    const defaultedMeta = defaulted('meta', {});\n    const defaultedOnAction = defaultedFunction('onAction', noop);\n    const defaultedType = type => defaultedString('type', type);\n    const generatedName = namePrefix => field$1('name', 'name', defaultedThunk(() => generate$6(`${ namePrefix }-name`)), string);\n    const generatedValue = valuePrefix => field$1('value', 'value', defaultedThunk(() => generate$6(`${ valuePrefix }-value`)), anyValue());\n\n    const separatorMenuItemSchema = objOf([\n      type,\n      optionalText\n    ]);\n    const createSeparatorMenuItem = spec => asRaw('separatormenuitem', separatorMenuItemSchema, spec);\n\n    const autocompleterItemSchema = objOf([\n      defaultedType('autocompleteitem'),\n      active,\n      enabled,\n      defaultedMeta,\n      value$1,\n      optionalText,\n      optionalIcon\n    ]);\n    const createSeparatorItem = spec => asRaw('Autocompleter.Separator', separatorMenuItemSchema, spec);\n    const createAutocompleterItem = spec => asRaw('Autocompleter.Item', autocompleterItemSchema, spec);\n\n    const baseToolbarButtonFields = [\n      enabled,\n      optionalTooltip,\n      optionalIcon,\n      optionalText,\n      onSetup\n    ];\n    const toolbarButtonSchema = objOf([\n      type,\n      onAction\n    ].concat(baseToolbarButtonFields));\n    const createToolbarButton = spec => asRaw('toolbarbutton', toolbarButtonSchema, spec);\n\n    const baseToolbarToggleButtonFields = [active].concat(baseToolbarButtonFields);\n    const toggleButtonSchema = objOf(baseToolbarToggleButtonFields.concat([\n      type,\n      onAction\n    ]));\n    const createToggleButton = spec => asRaw('ToggleButton', toggleButtonSchema, spec);\n\n    const contextBarFields = [\n      defaultedFunction('predicate', never),\n      defaultedStringEnum('scope', 'node', [\n        'node',\n        'editor'\n      ]),\n      defaultedStringEnum('position', 'selection', [\n        'node',\n        'selection',\n        'line'\n      ])\n    ];\n\n    const contextButtonFields = baseToolbarButtonFields.concat([\n      defaultedType('contextformbutton'),\n      primary,\n      onAction,\n      customField('original', identity)\n    ]);\n    const contextToggleButtonFields = baseToolbarToggleButtonFields.concat([\n      defaultedType('contextformbutton'),\n      primary,\n      onAction,\n      customField('original', identity)\n    ]);\n    const launchButtonFields = baseToolbarButtonFields.concat([defaultedType('contextformbutton')]);\n    const launchToggleButtonFields = baseToolbarToggleButtonFields.concat([defaultedType('contextformtogglebutton')]);\n    const toggleOrNormal = choose$1('type', {\n      contextformbutton: contextButtonFields,\n      contextformtogglebutton: contextToggleButtonFields\n    });\n    const contextFormSchema = objOf([\n      defaultedType('contextform'),\n      defaultedFunction('initValue', constant$1('')),\n      optionalLabel,\n      requiredArrayOf('commands', toggleOrNormal),\n      optionOf('launch', choose$1('type', {\n        contextformbutton: launchButtonFields,\n        contextformtogglebutton: launchToggleButtonFields\n      }))\n    ].concat(contextBarFields));\n    const createContextForm = spec => asRaw('ContextForm', contextFormSchema, spec);\n\n    const contextToolbarSchema = objOf([\n      defaultedType('contexttoolbar'),\n      requiredString('items')\n    ].concat(contextBarFields));\n    const createContextToolbar = spec => asRaw('ContextToolbar', contextToolbarSchema, spec);\n\n    const cardImageFields = [\n      type,\n      requiredString('src'),\n      optionString('alt'),\n      defaultedArrayOf('classes', [], string)\n    ];\n    const cardImageSchema = objOf(cardImageFields);\n\n    const cardTextFields = [\n      type,\n      text,\n      optionalName,\n      defaultedArrayOf('classes', ['tox-collection__item-label'], string)\n    ];\n    const cardTextSchema = objOf(cardTextFields);\n\n    const itemSchema$1 = valueThunk(() => choose$2('type', {\n      cardimage: cardImageSchema,\n      cardtext: cardTextSchema,\n      cardcontainer: cardContainerSchema\n    }));\n    const cardContainerSchema = objOf([\n      type,\n      defaultedString('direction', 'horizontal'),\n      defaultedString('align', 'left'),\n      defaultedString('valign', 'middle'),\n      requiredArrayOf('items', itemSchema$1)\n    ]);\n\n    const commonMenuItemFields = [\n      enabled,\n      optionalText,\n      optionalShortcut,\n      generatedValue('menuitem'),\n      defaultedMeta\n    ];\n\n    const cardMenuItemSchema = objOf([\n      type,\n      optionalLabel,\n      requiredArrayOf('items', itemSchema$1),\n      onSetup,\n      defaultedOnAction\n    ].concat(commonMenuItemFields));\n    const createCardMenuItem = spec => asRaw('cardmenuitem', cardMenuItemSchema, spec);\n\n    const choiceMenuItemSchema = objOf([\n      type,\n      active,\n      optionalIcon\n    ].concat(commonMenuItemFields));\n    const createChoiceMenuItem = spec => asRaw('choicemenuitem', choiceMenuItemSchema, spec);\n\n    const baseFields = [\n      type,\n      requiredString('fancytype'),\n      defaultedOnAction\n    ];\n    const insertTableFields = [defaulted('initData', {})].concat(baseFields);\n    const colorSwatchFields = [\n      optionFunction('select'),\n      defaultedObjOf('initData', {}, [\n        defaultedBoolean('allowCustomColors', true),\n        defaultedString('storageKey', 'default'),\n        optionArrayOf('colors', anyValue())\n      ])\n    ].concat(baseFields);\n    const fancyMenuItemSchema = choose$1('fancytype', {\n      inserttable: insertTableFields,\n      colorswatch: colorSwatchFields\n    });\n    const createFancyMenuItem = spec => asRaw('fancymenuitem', fancyMenuItemSchema, spec);\n\n    const menuItemSchema = objOf([\n      type,\n      onSetup,\n      defaultedOnAction,\n      optionalIcon\n    ].concat(commonMenuItemFields));\n    const createMenuItem = spec => asRaw('menuitem', menuItemSchema, spec);\n\n    const nestedMenuItemSchema = objOf([\n      type,\n      getSubmenuItems,\n      onSetup,\n      optionalIcon\n    ].concat(commonMenuItemFields));\n    const createNestedMenuItem = spec => asRaw('nestedmenuitem', nestedMenuItemSchema, spec);\n\n    const toggleMenuItemSchema = objOf([\n      type,\n      optionalIcon,\n      active,\n      onSetup,\n      onAction\n    ].concat(commonMenuItemFields));\n    const createToggleMenuItem = spec => asRaw('togglemenuitem', toggleMenuItemSchema, spec);\n\n    const detectSize = (comp, margin, selectorClass) => {\n      const descendants$1 = descendants(comp.element, '.' + selectorClass);\n      if (descendants$1.length > 0) {\n        const columnLength = findIndex$1(descendants$1, c => {\n          const thisTop = c.dom.getBoundingClientRect().top;\n          const cTop = descendants$1[0].dom.getBoundingClientRect().top;\n          return Math.abs(thisTop - cTop) > margin;\n        }).getOr(descendants$1.length);\n        return Optional.some({\n          numColumns: columnLength,\n          numRows: Math.ceil(descendants$1.length / columnLength)\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n\n    const namedEvents = (name, handlers) => derive$1([config(name, handlers)]);\n    const unnamedEvents = handlers => namedEvents(generate$6('unnamed-events'), handlers);\n    const SimpleBehaviours = {\n      namedEvents,\n      unnamedEvents\n    };\n\n    const ExclusivityChannel = generate$6('tooltip.exclusive');\n    const ShowTooltipEvent = generate$6('tooltip.show');\n    const HideTooltipEvent = generate$6('tooltip.hide');\n\n    const hideAllExclusive = (component, _tConfig, _tState) => {\n      component.getSystem().broadcastOn([ExclusivityChannel], {});\n    };\n    const setComponents = (component, tConfig, tState, specs) => {\n      tState.getTooltip().each(tooltip => {\n        if (tooltip.getSystem().isConnected()) {\n          Replacing.set(tooltip, specs);\n        }\n      });\n    };\n\n    var TooltippingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        hideAllExclusive: hideAllExclusive,\n        setComponents: setComponents\n    });\n\n    const events$9 = (tooltipConfig, state) => {\n      const hide = comp => {\n        state.getTooltip().each(p => {\n          detach(p);\n          tooltipConfig.onHide(comp, p);\n          state.clearTooltip();\n        });\n        state.clearTimer();\n      };\n      const show = comp => {\n        if (!state.isShowing()) {\n          hideAllExclusive(comp);\n          const sink = tooltipConfig.lazySink(comp).getOrDie();\n          const popup = comp.getSystem().build({\n            dom: tooltipConfig.tooltipDom,\n            components: tooltipConfig.tooltipComponents,\n            events: derive$2(tooltipConfig.mode === 'normal' ? [\n              run$1(mouseover(), _ => {\n                emit(comp, ShowTooltipEvent);\n              }),\n              run$1(mouseout(), _ => {\n                emit(comp, HideTooltipEvent);\n              })\n            ] : []),\n            behaviours: derive$1([Replacing.config({})])\n          });\n          state.setTooltip(popup);\n          attach(sink, popup);\n          tooltipConfig.onShow(comp, popup);\n          Positioning.position(sink, popup, { anchor: tooltipConfig.anchor(comp) });\n        }\n      };\n      return derive$2(flatten([\n        [\n          run$1(ShowTooltipEvent, comp => {\n            state.resetTimer(() => {\n              show(comp);\n            }, tooltipConfig.delay);\n          }),\n          run$1(HideTooltipEvent, comp => {\n            state.resetTimer(() => {\n              hide(comp);\n            }, tooltipConfig.delay);\n          }),\n          run$1(receive(), (comp, message) => {\n            const receivingData = message;\n            if (!receivingData.universal) {\n              if (contains$2(receivingData.channels, ExclusivityChannel)) {\n                hide(comp);\n              }\n            }\n          }),\n          runOnDetached(comp => {\n            hide(comp);\n          })\n        ],\n        tooltipConfig.mode === 'normal' ? [\n          run$1(focusin(), comp => {\n            emit(comp, ShowTooltipEvent);\n          }),\n          run$1(postBlur(), comp => {\n            emit(comp, HideTooltipEvent);\n          }),\n          run$1(mouseover(), comp => {\n            emit(comp, ShowTooltipEvent);\n          }),\n          run$1(mouseout(), comp => {\n            emit(comp, HideTooltipEvent);\n          })\n        ] : [\n          run$1(highlight$1(), (comp, _se) => {\n            emit(comp, ShowTooltipEvent);\n          }),\n          run$1(dehighlight$1(), comp => {\n            emit(comp, HideTooltipEvent);\n          })\n        ]\n      ]));\n    };\n\n    var ActiveTooltipping = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$9\n    });\n\n    var TooltippingSchema = [\n      required$1('lazySink'),\n      required$1('tooltipDom'),\n      defaulted('exclusive', true),\n      defaulted('tooltipComponents', []),\n      defaulted('delay', 300),\n      defaultedStringEnum('mode', 'normal', [\n        'normal',\n        'follow-highlight'\n      ]),\n      defaulted('anchor', comp => ({\n        type: 'hotspot',\n        hotspot: comp,\n        layouts: {\n          onLtr: constant$1([\n            south$2,\n            north$2,\n            southeast$2,\n            northeast$2,\n            southwest$2,\n            northwest$2\n          ]),\n          onRtl: constant$1([\n            south$2,\n            north$2,\n            southeast$2,\n            northeast$2,\n            southwest$2,\n            northwest$2\n          ])\n        }\n      })),\n      onHandler('onHide'),\n      onHandler('onShow')\n    ];\n\n    const init$b = () => {\n      const timer = value$2();\n      const popup = value$2();\n      const clearTimer = () => {\n        timer.on(clearTimeout);\n      };\n      const resetTimer = (f, delay) => {\n        clearTimer();\n        timer.set(setTimeout(f, delay));\n      };\n      const readState = constant$1('not-implemented');\n      return nu$8({\n        getTooltip: popup.get,\n        isShowing: popup.isSet,\n        setTooltip: popup.set,\n        clearTooltip: popup.clear,\n        clearTimer,\n        resetTimer,\n        readState\n      });\n    };\n\n    var TooltippingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$b\n    });\n\n    const Tooltipping = create$4({\n      fields: TooltippingSchema,\n      name: 'tooltipping',\n      active: ActiveTooltipping,\n      state: TooltippingState,\n      apis: TooltippingApis\n    });\n\n    const escape = text => text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n    const ReadOnlyChannel = 'silver.readonly';\n    const ReadOnlyDataSchema = objOf([requiredBoolean('readonly')]);\n    const broadcastReadonly = (uiRefs, readonly) => {\n      const outerContainer = uiRefs.mainUi.outerContainer;\n      const target = outerContainer.element;\n      const motherships = [\n        uiRefs.mainUi.mothership,\n        ...uiRefs.uiMotherships\n      ];\n      if (readonly) {\n        each$1(motherships, m => {\n          m.broadcastOn([dismissPopups()], { target });\n        });\n      }\n      each$1(motherships, m => {\n        m.broadcastOn([ReadOnlyChannel], { readonly });\n      });\n    };\n    const setupReadonlyModeSwitch = (editor, uiRefs) => {\n      editor.on('init', () => {\n        if (editor.mode.isReadOnly()) {\n          broadcastReadonly(uiRefs, true);\n        }\n      });\n      editor.on('SwitchMode', () => broadcastReadonly(uiRefs, editor.mode.isReadOnly()));\n      if (isReadOnly(editor)) {\n        editor.mode.set('readonly');\n      }\n    };\n    const receivingConfig = () => Receiving.config({\n      channels: {\n        [ReadOnlyChannel]: {\n          schema: ReadOnlyDataSchema,\n          onReceive: (comp, data) => {\n            Disabling.set(comp, data.readonly);\n          }\n        }\n      }\n    });\n\n    const item = disabled => Disabling.config({\n      disabled,\n      disableClass: 'tox-collection__item--state-disabled'\n    });\n    const button = disabled => Disabling.config({ disabled });\n    const splitButton = disabled => Disabling.config({\n      disabled,\n      disableClass: 'tox-tbtn--disabled'\n    });\n    const toolbarButton = disabled => Disabling.config({\n      disabled,\n      disableClass: 'tox-tbtn--disabled',\n      useNative: false\n    });\n    const DisablingConfigs = {\n      item,\n      button,\n      splitButton,\n      toolbarButton\n    };\n\n    const runWithApi = (info, comp) => {\n      const api = info.getApi(comp);\n      return f => {\n        f(api);\n      };\n    };\n    const onControlAttached = (info, editorOffCell) => runOnAttached(comp => {\n      const run = runWithApi(info, comp);\n      run(api => {\n        const onDestroy = info.onSetup(api);\n        if (isFunction(onDestroy)) {\n          editorOffCell.set(onDestroy);\n        }\n      });\n    });\n    const onControlDetached = (getApi, editorOffCell) => runOnDetached(comp => runWithApi(getApi, comp)(editorOffCell.get()));\n\n    const onMenuItemExecute = (info, itemResponse) => runOnExecute$1((comp, simulatedEvent) => {\n      runWithApi(info, comp)(info.onAction);\n      if (!info.triggersSubmenu && itemResponse === ItemResponse$1.CLOSE_ON_EXECUTE) {\n        if (comp.getSystem().isConnected()) {\n          emit(comp, sandboxClose());\n        }\n        simulatedEvent.stop();\n      }\n    });\n    const menuItemEventOrder = {\n      [execute$5()]: [\n        'disabling',\n        'alloy.base.behaviour',\n        'toggling',\n        'item-events'\n      ]\n    };\n\n    const componentRenderPipeline = cat;\n    const renderCommonItem = (spec, structure, itemResponse, providersBackstage) => {\n      const editorOffCell = Cell(noop);\n      return {\n        type: 'item',\n        dom: structure.dom,\n        components: componentRenderPipeline(structure.optComponents),\n        data: spec.data,\n        eventOrder: menuItemEventOrder,\n        hasSubmenu: spec.triggersSubmenu,\n        itemBehaviours: derive$1([\n          config('item-events', [\n            onMenuItemExecute(spec, itemResponse),\n            onControlAttached(spec, editorOffCell),\n            onControlDetached(spec, editorOffCell)\n          ]),\n          DisablingConfigs.item(() => !spec.enabled || providersBackstage.isDisabled()),\n          receivingConfig(),\n          Replacing.config({})\n        ].concat(spec.itemBehaviours))\n      };\n    };\n    const buildData = source => ({\n      value: source.value,\n      meta: {\n        text: source.text.getOr(''),\n        ...source.meta\n      }\n    });\n\n    const convertText = source => {\n      const isMac = global$5.os.isMacOS() || global$5.os.isiOS();\n      const mac = {\n        alt: '\\u2325',\n        ctrl: '\\u2303',\n        shift: '\\u21E7',\n        meta: '\\u2318',\n        access: '\\u2303\\u2325'\n      };\n      const other = {\n        meta: 'Ctrl',\n        access: 'Shift+Alt'\n      };\n      const replace = isMac ? mac : other;\n      const shortcut = source.split('+');\n      const updated = map$2(shortcut, segment => {\n        const search = segment.toLowerCase().trim();\n        return has$2(replace, search) ? replace[search] : segment;\n      });\n      return isMac ? updated.join('') : updated.join('+');\n    };\n\n    const renderIcon$2 = (name, icons, classes = [iconClass]) => render$3(name, {\n      tag: 'div',\n      classes\n    }, icons);\n    const renderText = text => ({\n      dom: {\n        tag: 'div',\n        classes: [textClass]\n      },\n      components: [text$2(global$8.translate(text))]\n    });\n    const renderHtml = (html, classes) => ({\n      dom: {\n        tag: 'div',\n        classes,\n        innerHtml: html\n      }\n    });\n    const renderStyledText = (style, text) => ({\n      dom: {\n        tag: 'div',\n        classes: [textClass]\n      },\n      components: [{\n          dom: {\n            tag: style.tag,\n            styles: style.styles\n          },\n          components: [text$2(global$8.translate(text))]\n        }]\n    });\n    const renderShortcut = shortcut => ({\n      dom: {\n        tag: 'div',\n        classes: [accessoryClass]\n      },\n      components: [text$2(convertText(shortcut))]\n    });\n    const renderCheckmark = icons => renderIcon$2('checkmark', icons, [checkmarkClass]);\n    const renderSubmenuCaret = icons => renderIcon$2('chevron-right', icons, [caretClass]);\n    const renderDownwardsCaret = icons => renderIcon$2('chevron-down', icons, [caretClass]);\n    const renderContainer = (container, components) => {\n      const directionClass = container.direction === 'vertical' ? containerColumnClass : containerRowClass;\n      const alignClass = container.align === 'left' ? containerAlignLeftClass : containerAlignRightClass;\n      const getValignClass = () => {\n        switch (container.valign) {\n        case 'top':\n          return containerValignTopClass;\n        case 'middle':\n          return containerValignMiddleClass;\n        case 'bottom':\n          return containerValignBottomClass;\n        }\n      };\n      return {\n        dom: {\n          tag: 'div',\n          classes: [\n            containerClass,\n            directionClass,\n            alignClass,\n            getValignClass()\n          ]\n        },\n        components\n      };\n    };\n    const renderImage = (src, classes, alt) => ({\n      dom: {\n        tag: 'img',\n        classes,\n        attributes: {\n          src,\n          alt: alt.getOr('')\n        }\n      }\n    });\n\n    const renderColorStructure = (item, providerBackstage, fallbackIcon) => {\n      const colorPickerCommand = 'custom';\n      const removeColorCommand = 'remove';\n      const itemText = item.ariaLabel;\n      const itemValue = item.value;\n      const iconSvg = item.iconContent.map(name => getOr(name, providerBackstage.icons, fallbackIcon));\n      const getDom = () => {\n        const common = colorClass;\n        const icon = iconSvg.getOr('');\n        const attributes = itemText.map(text => ({ title: providerBackstage.translate(text) })).getOr({});\n        const baseDom = {\n          tag: 'div',\n          attributes,\n          classes: [common]\n        };\n        if (itemValue === colorPickerCommand) {\n          return {\n            ...baseDom,\n            tag: 'button',\n            classes: [\n              ...baseDom.classes,\n              'tox-swatches__picker-btn'\n            ],\n            innerHtml: icon\n          };\n        } else if (itemValue === removeColorCommand) {\n          return {\n            ...baseDom,\n            classes: [\n              ...baseDom.classes,\n              'tox-swatch--remove'\n            ],\n            innerHtml: icon\n          };\n        } else if (isNonNullable(itemValue)) {\n          return {\n            ...baseDom,\n            attributes: {\n              ...baseDom.attributes,\n              'data-mce-color': itemValue\n            },\n            styles: { 'background-color': itemValue },\n            innerHtml: icon\n          };\n        } else {\n          return baseDom;\n        }\n      };\n      return {\n        dom: getDom(),\n        optComponents: []\n      };\n    };\n    const renderItemDomStructure = ariaLabel => {\n      const domTitle = ariaLabel.map(label => ({\n        attributes: {\n          title: global$8.translate(label),\n          id: generate$6('menu-item')\n        }\n      })).getOr({});\n      return {\n        tag: 'div',\n        classes: [\n          navClass,\n          selectableClass\n        ],\n        ...domTitle\n      };\n    };\n    const renderNormalItemStructure = (info, providersBackstage, renderIcons, fallbackIcon) => {\n      const iconSpec = {\n        tag: 'div',\n        classes: [iconClass]\n      };\n      const renderIcon = iconName => render$3(iconName, iconSpec, providersBackstage.icons, fallbackIcon);\n      const renderEmptyIcon = () => Optional.some({ dom: iconSpec });\n      const leftIcon = renderIcons ? info.iconContent.map(renderIcon).orThunk(renderEmptyIcon) : Optional.none();\n      const checkmark = info.checkMark;\n      const textRender = Optional.from(info.meta).fold(() => renderText, meta => has$2(meta, 'style') ? curry(renderStyledText, meta.style) : renderText);\n      const content = info.htmlContent.fold(() => info.textContent.map(textRender), html => Optional.some(renderHtml(html, [textClass])));\n      const menuItem = {\n        dom: renderItemDomStructure(info.ariaLabel),\n        optComponents: [\n          leftIcon,\n          content,\n          info.shortcutContent.map(renderShortcut),\n          checkmark,\n          info.caret\n        ]\n      };\n      return menuItem;\n    };\n    const renderItemStructure = (info, providersBackstage, renderIcons, fallbackIcon = Optional.none()) => {\n      if (info.presets === 'color') {\n        return renderColorStructure(info, providersBackstage, fallbackIcon);\n      } else {\n        return renderNormalItemStructure(info, providersBackstage, renderIcons, fallbackIcon);\n      }\n    };\n\n    const tooltipBehaviour = (meta, sharedBackstage) => get$g(meta, 'tooltipWorker').map(tooltipWorker => [Tooltipping.config({\n        lazySink: sharedBackstage.getSink,\n        tooltipDom: {\n          tag: 'div',\n          classes: ['tox-tooltip-worker-container']\n        },\n        tooltipComponents: [],\n        anchor: comp => ({\n          type: 'submenu',\n          item: comp,\n          overrides: { maxHeightFunction: expandable$1 }\n        }),\n        mode: 'follow-highlight',\n        onShow: (component, _tooltip) => {\n          tooltipWorker(elm => {\n            Tooltipping.setComponents(component, [external$1({ element: SugarElement.fromDom(elm) })]);\n          });\n        }\n      })]).getOr([]);\n    const encodeText = text => global$7.DOM.encode(text);\n    const replaceText = (text, matchText) => {\n      const translated = global$8.translate(text);\n      const encoded = encodeText(translated);\n      if (matchText.length > 0) {\n        const escapedMatchRegex = new RegExp(escape(matchText), 'gi');\n        return encoded.replace(escapedMatchRegex, match => `<span class=\"tox-autocompleter-highlight\">${ match }</span>`);\n      } else {\n        return encoded;\n      }\n    };\n    const renderAutocompleteItem = (spec, matchText, useText, presets, onItemValueHandler, itemResponse, sharedBackstage, renderIcons = true) => {\n      const structure = renderItemStructure({\n        presets,\n        textContent: Optional.none(),\n        htmlContent: useText ? spec.text.map(text => replaceText(text, matchText)) : Optional.none(),\n        ariaLabel: spec.text,\n        iconContent: spec.icon,\n        shortcutContent: Optional.none(),\n        checkMark: Optional.none(),\n        caret: Optional.none(),\n        value: spec.value\n      }, sharedBackstage.providers, renderIcons, spec.icon);\n      return renderCommonItem({\n        data: buildData(spec),\n        enabled: spec.enabled,\n        getApi: constant$1({}),\n        onAction: _api => onItemValueHandler(spec.value, spec.meta),\n        onSetup: constant$1(noop),\n        triggersSubmenu: false,\n        itemBehaviours: tooltipBehaviour(spec.meta, sharedBackstage)\n      }, structure, itemResponse, sharedBackstage.providers);\n    };\n\n    const render$2 = (items, extras) => map$2(items, item => {\n      switch (item.type) {\n      case 'cardcontainer':\n        return renderContainer(item, render$2(item.items, extras));\n      case 'cardimage':\n        return renderImage(item.src, item.classes, item.alt);\n      case 'cardtext':\n        const shouldHighlight = item.name.exists(name => contains$2(extras.cardText.highlightOn, name));\n        const matchText = shouldHighlight ? Optional.from(extras.cardText.matchText).getOr('') : '';\n        return renderHtml(replaceText(item.text, matchText), item.classes);\n      }\n    });\n    const renderCardMenuItem = (spec, itemResponse, sharedBackstage, extras) => {\n      const getApi = component => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => {\n          Disabling.set(component, !state);\n          each$1(descendants(component.element, '*'), elm => {\n            component.getSystem().getByDom(elm).each(comp => {\n              if (comp.hasConfigured(Disabling)) {\n                Disabling.set(comp, !state);\n              }\n            });\n          });\n        }\n      });\n      const structure = {\n        dom: renderItemDomStructure(spec.label),\n        optComponents: [Optional.some({\n            dom: {\n              tag: 'div',\n              classes: [\n                containerClass,\n                containerRowClass\n              ]\n            },\n            components: render$2(spec.items, extras)\n          })]\n      };\n      return renderCommonItem({\n        data: buildData({\n          text: Optional.none(),\n          ...spec\n        }),\n        enabled: spec.enabled,\n        getApi,\n        onAction: spec.onAction,\n        onSetup: spec.onSetup,\n        triggersSubmenu: false,\n        itemBehaviours: Optional.from(extras.itemBehaviours).getOr([])\n      }, structure, itemResponse, sharedBackstage.providers);\n    };\n\n    const renderChoiceItem = (spec, useText, presets, onItemValueHandler, isSelected, itemResponse, providersBackstage, renderIcons = true) => {\n      const getApi = component => ({\n        setActive: state => {\n          Toggling.set(component, state);\n        },\n        isActive: () => Toggling.isOn(component),\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state)\n      });\n      const structure = renderItemStructure({\n        presets,\n        textContent: useText ? spec.text : Optional.none(),\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        iconContent: spec.icon,\n        shortcutContent: useText ? spec.shortcut : Optional.none(),\n        checkMark: useText ? Optional.some(renderCheckmark(providersBackstage.icons)) : Optional.none(),\n        caret: Optional.none(),\n        value: spec.value\n      }, providersBackstage, renderIcons);\n      return deepMerge(renderCommonItem({\n        data: buildData(spec),\n        enabled: spec.enabled,\n        getApi,\n        onAction: _api => onItemValueHandler(spec.value),\n        onSetup: api => {\n          api.setActive(isSelected);\n          return noop;\n        },\n        triggersSubmenu: false,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage), {\n        toggling: {\n          toggleClass: tickedClass,\n          toggleOnExecute: false,\n          selected: spec.active,\n          exclusive: true\n        }\n      });\n    };\n\n    const parts$f = generate$3(owner$2(), parts$h());\n\n    const hexColour = value => ({ value: normalizeHex(value) });\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    const isHexString = hex => shorthandRegex.test(hex) || longformRegex.test(hex);\n    const normalizeHex = hex => removeLeading(hex, '#').toUpperCase();\n    const fromString$1 = hex => isHexString(hex) ? Optional.some({ value: normalizeHex(hex) }) : Optional.none();\n    const getLongForm = hex => {\n      const hexString = hex.value.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n      return { value: hexString };\n    };\n    const extractValues = hex => {\n      const longForm = getLongForm(hex);\n      const splitForm = longformRegex.exec(longForm.value);\n      return splitForm === null ? [\n        'FFFFFF',\n        'FF',\n        'FF',\n        'FF'\n      ] : splitForm;\n    };\n    const toHex = component => {\n      const hex = component.toString(16);\n      return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n    };\n    const fromRgba = rgbaColour => {\n      const value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue);\n      return hexColour(value);\n    };\n\n    const min = Math.min;\n    const max = Math.max;\n    const round$1 = Math.round;\n    const rgbRegex = /^\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i;\n    const rgbaRegex = /^\\s*rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?(?:\\.\\d+)?)\\s*\\)\\s*$/i;\n    const rgbaColour = (red, green, blue, alpha) => ({\n      red,\n      green,\n      blue,\n      alpha\n    });\n    const isRgbaComponent = value => {\n      const num = parseInt(value, 10);\n      return num.toString() === value && num >= 0 && num <= 255;\n    };\n    const fromHsv = hsv => {\n      let r;\n      let g;\n      let b;\n      const hue = (hsv.hue || 0) % 360;\n      let saturation = hsv.saturation / 100;\n      let brightness = hsv.value / 100;\n      saturation = max(0, min(saturation, 1));\n      brightness = max(0, min(brightness, 1));\n      if (saturation === 0) {\n        r = g = b = round$1(255 * brightness);\n        return rgbaColour(r, g, b, 1);\n      }\n      const side = hue / 60;\n      const chroma = brightness * saturation;\n      const x = chroma * (1 - Math.abs(side % 2 - 1));\n      const match = brightness - chroma;\n      switch (Math.floor(side)) {\n      case 0:\n        r = chroma;\n        g = x;\n        b = 0;\n        break;\n      case 1:\n        r = x;\n        g = chroma;\n        b = 0;\n        break;\n      case 2:\n        r = 0;\n        g = chroma;\n        b = x;\n        break;\n      case 3:\n        r = 0;\n        g = x;\n        b = chroma;\n        break;\n      case 4:\n        r = x;\n        g = 0;\n        b = chroma;\n        break;\n      case 5:\n        r = chroma;\n        g = 0;\n        b = x;\n        break;\n      default:\n        r = g = b = 0;\n      }\n      r = round$1(255 * (r + match));\n      g = round$1(255 * (g + match));\n      b = round$1(255 * (b + match));\n      return rgbaColour(r, g, b, 1);\n    };\n    const fromHex = hexColour => {\n      const result = extractValues(hexColour);\n      const red = parseInt(result[1], 16);\n      const green = parseInt(result[2], 16);\n      const blue = parseInt(result[3], 16);\n      return rgbaColour(red, green, blue, 1);\n    };\n    const fromStringValues = (red, green, blue, alpha) => {\n      const r = parseInt(red, 10);\n      const g = parseInt(green, 10);\n      const b = parseInt(blue, 10);\n      const a = parseFloat(alpha);\n      return rgbaColour(r, g, b, a);\n    };\n    const fromString = rgbaString => {\n      if (rgbaString === 'transparent') {\n        return Optional.some(rgbaColour(0, 0, 0, 0));\n      }\n      const rgbMatch = rgbRegex.exec(rgbaString);\n      if (rgbMatch !== null) {\n        return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n      }\n      const rgbaMatch = rgbaRegex.exec(rgbaString);\n      if (rgbaMatch !== null) {\n        return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n      }\n      return Optional.none();\n    };\n    const toString = rgba => `rgba(${ rgba.red },${ rgba.green },${ rgba.blue },${ rgba.alpha })`;\n    const red = rgbaColour(255, 0, 0, 1);\n\n    const fireSkinLoaded$1 = editor => {\n      editor.dispatch('SkinLoaded');\n    };\n    const fireSkinLoadError$1 = (editor, error) => {\n      editor.dispatch('SkinLoadError', error);\n    };\n    const fireResizeEditor = editor => {\n      editor.dispatch('ResizeEditor');\n    };\n    const fireResizeContent = (editor, e) => {\n      editor.dispatch('ResizeContent', e);\n    };\n    const fireScrollContent = (editor, e) => {\n      editor.dispatch('ScrollContent', e);\n    };\n    const fireTextColorChange = (editor, data) => {\n      editor.dispatch('TextColorChange', data);\n    };\n    const fireAfterProgressState = (editor, state) => {\n      editor.dispatch('AfterProgressState', { state });\n    };\n    const fireResolveName = (editor, node) => editor.dispatch('ResolveName', {\n      name: node.nodeName.toLowerCase(),\n      target: node\n    });\n    const fireToggleToolbarDrawer = (editor, state) => {\n      editor.dispatch('ToggleToolbarDrawer', { state });\n    };\n    const fireStylesTextUpdate = (editor, data) => {\n      editor.dispatch('StylesTextUpdate', data);\n    };\n    const fireAlignTextUpdate = (editor, data) => {\n      editor.dispatch('AlignTextUpdate', data);\n    };\n    const fireFontSizeTextUpdate = (editor, data) => {\n      editor.dispatch('FontSizeTextUpdate', data);\n    };\n    const fireFontSizeInputTextUpdate = (editor, data) => {\n      editor.dispatch('FontSizeInputTextUpdate', data);\n    };\n    const fireBlocksTextUpdate = (editor, data) => {\n      editor.dispatch('BlocksTextUpdate', data);\n    };\n    const fireFontFamilyTextUpdate = (editor, data) => {\n      editor.dispatch('FontFamilyTextUpdate', data);\n    };\n\n    const composeUnbinders = (f, g) => () => {\n      f();\n      g();\n    };\n    const onSetupEditableToggle = editor => onSetupEvent(editor, 'NodeChange', api => {\n      api.setEnabled(editor.selection.isEditable());\n    });\n    const onSetupFormatToggle = (editor, name) => api => {\n      const boundFormatChangeCallback = unbindable();\n      const init = () => {\n        api.setActive(editor.formatter.match(name));\n        const binding = editor.formatter.formatChanged(name, api.setActive);\n        boundFormatChangeCallback.set(binding);\n      };\n      editor.initialized ? init() : editor.once('init', init);\n      return () => {\n        editor.off('init', init);\n        boundFormatChangeCallback.clear();\n      };\n    };\n    const onSetupStateToggle = (editor, name) => api => {\n      const unbindEditableToogle = onSetupEditableToggle(editor)(api);\n      const unbindFormatToggle = onSetupFormatToggle(editor, name)(api);\n      return () => {\n        unbindEditableToogle();\n        unbindFormatToggle();\n      };\n    };\n    const onSetupEvent = (editor, event, f) => api => {\n      const handleEvent = () => f(api);\n      const init = () => {\n        f(api);\n        editor.on(event, handleEvent);\n      };\n      editor.initialized ? init() : editor.once('init', init);\n      return () => {\n        editor.off('init', init);\n        editor.off(event, handleEvent);\n      };\n    };\n    const onActionToggleFormat$1 = editor => rawItem => () => {\n      editor.undoManager.transact(() => {\n        editor.focus();\n        editor.execCommand('mceToggleFormat', false, rawItem.format);\n      });\n    };\n    const onActionExecCommand = (editor, command) => () => editor.execCommand(command);\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n\n    const cacheStorage = {};\n    const ColorCache = (storageId, max = 10) => {\n      const storageString = global$4.getItem(storageId);\n      const localstorage = isString(storageString) ? JSON.parse(storageString) : [];\n      const prune = list => {\n        const diff = max - list.length;\n        return diff < 0 ? list.slice(0, max) : list;\n      };\n      const cache = prune(localstorage);\n      const add = key => {\n        indexOf(cache, key).each(remove);\n        cache.unshift(key);\n        if (cache.length > max) {\n          cache.pop();\n        }\n        global$4.setItem(storageId, JSON.stringify(cache));\n      };\n      const remove = idx => {\n        cache.splice(idx, 1);\n      };\n      const state = () => cache.slice(0);\n      return {\n        add,\n        state\n      };\n    };\n    const getCacheForId = id => get$g(cacheStorage, id).getOrThunk(() => {\n      const storageId = `tinymce-custom-colors-${ id }`;\n      const currentData = global$4.getItem(storageId);\n      if (isNullable(currentData)) {\n        const legacyDefault = global$4.getItem('tinymce-custom-colors');\n        global$4.setItem(storageId, isNonNullable(legacyDefault) ? legacyDefault : '[]');\n      }\n      const storage = ColorCache(storageId, 10);\n      cacheStorage[id] = storage;\n      return storage;\n    });\n    const getCurrentColors = id => map$2(getCacheForId(id).state(), color => ({\n      type: 'choiceitem',\n      text: color,\n      icon: 'checkmark',\n      value: color\n    }));\n    const addColor = (id, color) => {\n      getCacheForId(id).add(color);\n    };\n\n    const hsvColour = (hue, saturation, value) => ({\n      hue,\n      saturation,\n      value\n    });\n    const fromRgb = rgbaColour => {\n      let h = 0;\n      let s = 0;\n      let v = 0;\n      const r = rgbaColour.red / 255;\n      const g = rgbaColour.green / 255;\n      const b = rgbaColour.blue / 255;\n      const minRGB = Math.min(r, Math.min(g, b));\n      const maxRGB = Math.max(r, Math.max(g, b));\n      if (minRGB === maxRGB) {\n        v = minRGB;\n        return hsvColour(0, 0, v * 100);\n      }\n      const d = r === minRGB ? g - b : b === minRGB ? r - g : b - r;\n      h = r === minRGB ? 3 : b === minRGB ? 1 : 5;\n      h = 60 * (h - d / (maxRGB - minRGB));\n      s = (maxRGB - minRGB) / maxRGB;\n      v = maxRGB;\n      return hsvColour(Math.round(h), Math.round(s * 100), Math.round(v * 100));\n    };\n\n    const hexToHsv = hex => fromRgb(fromHex(hex));\n    const hsvToHex = hsv => fromRgba(fromHsv(hsv));\n    const anyToHex = color => fromString$1(color).orThunk(() => fromString(color).map(fromRgba)).getOrThunk(() => {\n      const canvas = document.createElement('canvas');\n      canvas.height = 1;\n      canvas.width = 1;\n      const canvasContext = canvas.getContext('2d');\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n      canvasContext.fillStyle = '#FFFFFF';\n      canvasContext.fillStyle = color;\n      canvasContext.fillRect(0, 0, 1, 1);\n      const rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n      const r = rgba[0];\n      const g = rgba[1];\n      const b = rgba[2];\n      const a = rgba[3];\n      return fromRgba(rgbaColour(r, g, b, a));\n    });\n\n    const foregroundId = 'forecolor';\n    const backgroundId = 'hilitecolor';\n    const fallbackCols = 5;\n    const mapColors = colorMap => {\n      const colors = [];\n      for (let i = 0; i < colorMap.length; i += 2) {\n        colors.push({\n          text: colorMap[i + 1],\n          value: '#' + anyToHex(colorMap[i]).value,\n          icon: 'checkmark',\n          type: 'choiceitem'\n        });\n      }\n      return colors;\n    };\n    const option$1 = name => editor => editor.options.get(name);\n    const fallbackColor = '#000000';\n    const register$d = editor => {\n      const registerOption = editor.options.register;\n      const colorProcessor = value => {\n        if (isArrayOf(value, isString)) {\n          return {\n            value: mapColors(value),\n            valid: true\n          };\n        } else {\n          return {\n            valid: false,\n            message: 'Must be an array of strings.'\n          };\n        }\n      };\n      const colorColsProcessor = value => {\n        if (isNumber(value) && value > 0) {\n          return {\n            value,\n            valid: true\n          };\n        } else {\n          return {\n            valid: false,\n            message: 'Must be a positive number.'\n          };\n        }\n      };\n      registerOption('color_map', {\n        processor: colorProcessor,\n        default: [\n          '#BFEDD2',\n          'Light Green',\n          '#FBEEB8',\n          'Light Yellow',\n          '#F8CAC6',\n          'Light Red',\n          '#ECCAFA',\n          'Light Purple',\n          '#C2E0F4',\n          'Light Blue',\n          '#2DC26B',\n          'Green',\n          '#F1C40F',\n          'Yellow',\n          '#E03E2D',\n          'Red',\n          '#B96AD9',\n          'Purple',\n          '#3598DB',\n          'Blue',\n          '#169179',\n          'Dark Turquoise',\n          '#E67E23',\n          'Orange',\n          '#BA372A',\n          'Dark Red',\n          '#843FA1',\n          'Dark Purple',\n          '#236FA1',\n          'Dark Blue',\n          '#ECF0F1',\n          'Light Gray',\n          '#CED4D9',\n          'Medium Gray',\n          '#95A5A6',\n          'Gray',\n          '#7E8C8D',\n          'Dark Gray',\n          '#34495E',\n          'Navy Blue',\n          '#000000',\n          'Black',\n          '#ffffff',\n          'White'\n        ]\n      });\n      registerOption('color_map_background', { processor: colorProcessor });\n      registerOption('color_map_foreground', { processor: colorProcessor });\n      registerOption('color_cols', {\n        processor: colorColsProcessor,\n        default: calcCols(editor)\n      });\n      registerOption('color_cols_foreground', {\n        processor: colorColsProcessor,\n        default: defaultCols(editor, foregroundId)\n      });\n      registerOption('color_cols_background', {\n        processor: colorColsProcessor,\n        default: defaultCols(editor, backgroundId)\n      });\n      registerOption('custom_colors', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('color_default_foreground', {\n        processor: 'string',\n        default: fallbackColor\n      });\n      registerOption('color_default_background', {\n        processor: 'string',\n        default: fallbackColor\n      });\n    };\n    const getColors$2 = (editor, id) => {\n      if (id === foregroundId && editor.options.isSet('color_map_foreground')) {\n        return option$1('color_map_foreground')(editor);\n      } else if (id === backgroundId && editor.options.isSet('color_map_background')) {\n        return option$1('color_map_background')(editor);\n      } else {\n        return option$1('color_map')(editor);\n      }\n    };\n    const calcCols = (editor, id = 'default') => Math.max(fallbackCols, Math.ceil(Math.sqrt(getColors$2(editor, id).length)));\n    const defaultCols = (editor, id) => {\n      const defaultCols = option$1('color_cols')(editor);\n      const calculatedCols = calcCols(editor, id);\n      if (defaultCols === calcCols(editor)) {\n        return calculatedCols;\n      } else {\n        return defaultCols;\n      }\n    };\n    const getColorCols$1 = (editor, id = 'default') => {\n      const getCols = () => {\n        if (id === foregroundId) {\n          return option$1('color_cols_foreground')(editor);\n        } else if (id === backgroundId) {\n          return option$1('color_cols_background')(editor);\n        } else {\n          return option$1('color_cols')(editor);\n        }\n      };\n      return Math.round(getCols());\n    };\n    const hasCustomColors$1 = option$1('custom_colors');\n    const getDefaultForegroundColor = option$1('color_default_foreground');\n    const getDefaultBackgroundColor = option$1('color_default_background');\n\n    const defaultBackgroundColor = 'rgba(0, 0, 0, 0)';\n    const isValidBackgroundColor = value => fromString(value).exists(c => c.alpha !== 0);\n    const getClosestCssBackgroundColorValue = scope => {\n      return closest$4(scope, node => {\n        if (isElement$1(node)) {\n          const color = get$e(node, 'background-color');\n          return someIf(isValidBackgroundColor(color), color);\n        } else {\n          return Optional.none();\n        }\n      }).getOr(defaultBackgroundColor);\n    };\n    const getCurrentColor = (editor, format) => {\n      const node = SugarElement.fromDom(editor.selection.getStart());\n      const cssRgbValue = format === 'hilitecolor' ? getClosestCssBackgroundColorValue(node) : get$e(node, 'color');\n      return fromString(cssRgbValue).map(rgba => '#' + fromRgba(rgba).value);\n    };\n    const applyFormat = (editor, format, value) => {\n      editor.undoManager.transact(() => {\n        editor.focus();\n        editor.formatter.apply(format, { value });\n        editor.nodeChanged();\n      });\n    };\n    const removeFormat = (editor, format) => {\n      editor.undoManager.transact(() => {\n        editor.focus();\n        editor.formatter.remove(format, { value: null }, undefined, true);\n        editor.nodeChanged();\n      });\n    };\n    const registerCommands = editor => {\n      editor.addCommand('mceApplyTextcolor', (format, value) => {\n        applyFormat(editor, format, value);\n      });\n      editor.addCommand('mceRemoveTextcolor', format => {\n        removeFormat(editor, format);\n      });\n    };\n    const getAdditionalColors = hasCustom => {\n      const type = 'choiceitem';\n      const remove = {\n        type,\n        text: 'Remove color',\n        icon: 'color-swatch-remove-color',\n        value: 'remove'\n      };\n      const custom = {\n        type,\n        text: 'Custom color',\n        icon: 'color-picker',\n        value: 'custom'\n      };\n      return hasCustom ? [\n        remove,\n        custom\n      ] : [remove];\n    };\n    const applyColor = (editor, format, value, onChoice) => {\n      if (value === 'custom') {\n        const dialog = colorPickerDialog(editor);\n        dialog(colorOpt => {\n          colorOpt.each(color => {\n            addColor(format, color);\n            editor.execCommand('mceApplyTextcolor', format, color);\n            onChoice(color);\n          });\n        }, getCurrentColor(editor, format).getOr(fallbackColor));\n      } else if (value === 'remove') {\n        onChoice('');\n        editor.execCommand('mceRemoveTextcolor', format);\n      } else {\n        onChoice(value);\n        editor.execCommand('mceApplyTextcolor', format, value);\n      }\n    };\n    const getColors$1 = (colors, id, hasCustom) => colors.concat(getCurrentColors(id).concat(getAdditionalColors(hasCustom)));\n    const getFetch$1 = (colors, id, hasCustom) => callback => {\n      callback(getColors$1(colors, id, hasCustom));\n    };\n    const setIconColor = (splitButtonApi, name, newColor) => {\n      const id = name === 'forecolor' ? 'tox-icon-text-color__color' : 'tox-icon-highlight-bg-color__color';\n      splitButtonApi.setIconFill(id, newColor);\n    };\n    const setTooltip = (buttonApi, tooltip) => {\n      buttonApi.setTooltip(tooltip);\n    };\n    const select$1 = (editor, format) => value => {\n      const optCurrentHex = getCurrentColor(editor, format);\n      return is$1(optCurrentHex, value.toUpperCase());\n    };\n    const getToolTipText = (editor, format, lastColor) => {\n      if (isEmpty(lastColor)) {\n        return format === 'forecolor' ? 'Text color' : 'Background color';\n      }\n      const tooltipPrefix = format === 'forecolor' ? 'Text color {0}' : 'Background color {0}';\n      const colors = getColors$1(getColors$2(editor, format), format, false);\n      const colorText = find$5(colors, c => c.value === lastColor).getOr({ text: '' }).text;\n      return editor.translate([\n        tooltipPrefix,\n        editor.translate(colorText)\n      ]);\n    };\n    const registerTextColorButton = (editor, name, format, lastColor) => {\n      editor.ui.registry.addSplitButton(name, {\n        tooltip: getToolTipText(editor, format, lastColor.get()),\n        presets: 'color',\n        icon: name === 'forecolor' ? 'text-color' : 'highlight-bg-color',\n        select: select$1(editor, format),\n        columns: getColorCols$1(editor, format),\n        fetch: getFetch$1(getColors$2(editor, format), format, hasCustomColors$1(editor)),\n        onAction: _splitButtonApi => {\n          applyColor(editor, format, lastColor.get(), noop);\n        },\n        onItemAction: (_splitButtonApi, value) => {\n          applyColor(editor, format, value, newColor => {\n            lastColor.set(newColor);\n            fireTextColorChange(editor, {\n              name,\n              color: newColor\n            });\n          });\n        },\n        onSetup: splitButtonApi => {\n          setIconColor(splitButtonApi, name, lastColor.get());\n          const handler = e => {\n            if (e.name === name) {\n              setIconColor(splitButtonApi, e.name, e.color);\n              setTooltip(splitButtonApi, getToolTipText(editor, format, e.color));\n            }\n          };\n          editor.on('TextColorChange', handler);\n          return composeUnbinders(onSetupEditableToggle(editor)(splitButtonApi), () => {\n            editor.off('TextColorChange', handler);\n          });\n        }\n      });\n    };\n    const registerTextColorMenuItem = (editor, name, format, text, lastColor) => {\n      editor.ui.registry.addNestedMenuItem(name, {\n        text,\n        icon: name === 'forecolor' ? 'text-color' : 'highlight-bg-color',\n        onSetup: api => {\n          setTooltip(api, getToolTipText(editor, format, lastColor.get()));\n          setIconColor(api, name, lastColor.get());\n          return onSetupEditableToggle(editor)(api);\n        },\n        getSubmenuItems: () => [{\n            type: 'fancymenuitem',\n            fancytype: 'colorswatch',\n            select: select$1(editor, format),\n            initData: { storageKey: format },\n            onAction: data => {\n              applyColor(editor, format, data.value, newColor => {\n                lastColor.set(newColor);\n                fireTextColorChange(editor, {\n                  name,\n                  color: newColor\n                });\n              });\n            }\n          }]\n      });\n    };\n    const colorPickerDialog = editor => (callback, value) => {\n      let isValid = false;\n      const onSubmit = api => {\n        const data = api.getData();\n        const hex = data.colorpicker;\n        if (isValid) {\n          callback(Optional.from(hex));\n          api.close();\n        } else {\n          editor.windowManager.alert(editor.translate([\n            'Invalid hex color code: {0}',\n            hex\n          ]));\n        }\n      };\n      const onAction = (_api, details) => {\n        if (details.name === 'hex-valid') {\n          isValid = details.value;\n        }\n      };\n      const initialData = { colorpicker: value };\n      editor.windowManager.open({\n        title: 'Color Picker',\n        size: 'normal',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'colorpicker',\n              name: 'colorpicker',\n              label: 'Color'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData,\n        onAction,\n        onSubmit,\n        onClose: noop,\n        onCancel: () => {\n          callback(Optional.none());\n        }\n      });\n    };\n    const register$c = editor => {\n      registerCommands(editor);\n      const fallbackColorForeground = getDefaultForegroundColor(editor);\n      const fallbackColorBackground = getDefaultBackgroundColor(editor);\n      const lastForeColor = Cell(fallbackColorForeground);\n      const lastBackColor = Cell(fallbackColorBackground);\n      registerTextColorButton(editor, 'forecolor', 'forecolor', lastForeColor);\n      registerTextColorButton(editor, 'backcolor', 'hilitecolor', lastBackColor);\n      registerTextColorMenuItem(editor, 'forecolor', 'forecolor', 'Text color', lastForeColor);\n      registerTextColorMenuItem(editor, 'backcolor', 'hilitecolor', 'Background color', lastBackColor);\n    };\n\n    const createPartialChoiceMenu = (value, items, onItemValueHandler, columns, presets, itemResponse, select, providersBackstage) => {\n      const hasIcons = menuHasIcons(items);\n      const presetItemTypes = presets !== 'color' ? 'normal' : 'color';\n      const alloyItems = createChoiceItems(items, onItemValueHandler, columns, presetItemTypes, itemResponse, select, providersBackstage);\n      const menuLayout = { menuType: presets };\n      return createPartialMenuWithAlloyItems(value, hasIcons, alloyItems, columns, menuLayout);\n    };\n    const createChoiceItems = (items, onItemValueHandler, columns, itemPresets, itemResponse, select, providersBackstage) => cat(map$2(items, item => {\n      if (item.type === 'choiceitem') {\n        return createChoiceMenuItem(item).fold(handleError, d => Optional.some(renderChoiceItem(d, columns === 1, itemPresets, onItemValueHandler, select(d.value), itemResponse, providersBackstage, menuHasIcons(items))));\n      } else {\n        return Optional.none();\n      }\n    }));\n\n    const deriveMenuMovement = (columns, presets) => {\n      const menuMarkers = markers(presets);\n      if (columns === 1) {\n        return {\n          mode: 'menu',\n          moveOnTab: true\n        };\n      } else if (columns === 'auto') {\n        return {\n          mode: 'grid',\n          selector: '.' + menuMarkers.item,\n          initSize: {\n            numColumns: 1,\n            numRows: 1\n          }\n        };\n      } else {\n        const rowClass = presets === 'color' ? 'tox-swatches__row' : 'tox-collection__group';\n        return {\n          mode: 'matrix',\n          rowSelector: '.' + rowClass,\n          previousSelector: menu => {\n            return presets === 'color' ? descendant(menu.element, '[aria-checked=true]') : Optional.none();\n          }\n        };\n      }\n    };\n    const deriveCollectionMovement = (columns, presets) => {\n      if (columns === 1) {\n        return {\n          mode: 'menu',\n          moveOnTab: false,\n          selector: '.tox-collection__item'\n        };\n      } else if (columns === 'auto') {\n        return {\n          mode: 'flatgrid',\n          selector: '.' + 'tox-collection__item',\n          initSize: {\n            numColumns: 1,\n            numRows: 1\n          }\n        };\n      } else {\n        return {\n          mode: 'matrix',\n          selectors: {\n            row: presets === 'color' ? '.tox-swatches__row' : '.tox-collection__group',\n            cell: presets === 'color' ? `.${ colorClass }` : `.${ selectableClass }`\n          }\n        };\n      }\n    };\n\n    const renderColorSwatchItem = (spec, backstage) => {\n      const items = getColorItems(spec, backstage);\n      const columns = backstage.colorinput.getColorCols(spec.initData.storageKey);\n      const presets = 'color';\n      const menuSpec = createPartialChoiceMenu(generate$6('menu-value'), items, value => {\n        spec.onAction({ value });\n      }, columns, presets, ItemResponse$1.CLOSE_ON_EXECUTE, spec.select.getOr(never), backstage.shared.providers);\n      const widgetSpec = {\n        ...menuSpec,\n        markers: markers(presets),\n        movement: deriveMenuMovement(columns, presets)\n      };\n      return {\n        type: 'widget',\n        data: { value: generate$6('widget-id') },\n        dom: {\n          tag: 'div',\n          classes: ['tox-fancymenuitem']\n        },\n        autofocus: true,\n        components: [parts$f.widget(Menu.sketch(widgetSpec))]\n      };\n    };\n    const getColorItems = (spec, backstage) => {\n      const useCustomColors = spec.initData.allowCustomColors && backstage.colorinput.hasCustomColors();\n      return spec.initData.colors.fold(() => getColors$1(backstage.colorinput.getColors(spec.initData.storageKey), spec.initData.storageKey, useCustomColors), colors => colors.concat(getAdditionalColors(useCustomColors)));\n    };\n\n    const cellOverEvent = generate$6('cell-over');\n    const cellExecuteEvent = generate$6('cell-execute');\n    const makeAnnouncementText = backstage => (row, col) => backstage.shared.providers.translate([\n      '{0} columns, {1} rows',\n      col,\n      row\n    ]);\n    const makeCell = (row, col, label) => {\n      const emitCellOver = c => emitWith(c, cellOverEvent, {\n        row,\n        col\n      });\n      const emitExecute = c => emitWith(c, cellExecuteEvent, {\n        row,\n        col\n      });\n      const onClick = (c, se) => {\n        se.stop();\n        emitExecute(c);\n      };\n      return build$1({\n        dom: {\n          tag: 'div',\n          attributes: {\n            role: 'button',\n            ['aria-label']: label\n          }\n        },\n        behaviours: derive$1([\n          config('insert-table-picker-cell', [\n            run$1(mouseover(), Focusing.focus),\n            run$1(execute$5(), emitExecute),\n            run$1(click(), onClick),\n            run$1(tap(), onClick)\n          ]),\n          Toggling.config({\n            toggleClass: 'tox-insert-table-picker__selected',\n            toggleOnExecute: false\n          }),\n          Focusing.config({ onFocus: emitCellOver })\n        ])\n      });\n    };\n    const makeCells = (getCellLabel, numRows, numCols) => {\n      const cells = [];\n      for (let i = 0; i < numRows; i++) {\n        const row = [];\n        for (let j = 0; j < numCols; j++) {\n          const label = getCellLabel(i + 1, j + 1);\n          row.push(makeCell(i, j, label));\n        }\n        cells.push(row);\n      }\n      return cells;\n    };\n    const selectCells = (cells, selectedRow, selectedColumn, numRows, numColumns) => {\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < numColumns; j++) {\n          Toggling.set(cells[i][j], i <= selectedRow && j <= selectedColumn);\n        }\n      }\n    };\n    const makeComponents = cells => bind$3(cells, cellRow => map$2(cellRow, premade));\n    const makeLabelText = (row, col) => text$2(`${ col }x${ row }`);\n    const renderInsertTableMenuItem = (spec, backstage) => {\n      const numRows = 10;\n      const numColumns = 10;\n      const getCellLabel = makeAnnouncementText(backstage);\n      const cells = makeCells(getCellLabel, numRows, numColumns);\n      const emptyLabelText = makeLabelText(0, 0);\n      const memLabel = record({\n        dom: {\n          tag: 'span',\n          classes: ['tox-insert-table-picker__label']\n        },\n        components: [emptyLabelText],\n        behaviours: derive$1([Replacing.config({})])\n      });\n      return {\n        type: 'widget',\n        data: { value: generate$6('widget-id') },\n        dom: {\n          tag: 'div',\n          classes: ['tox-fancymenuitem']\n        },\n        autofocus: true,\n        components: [parts$f.widget({\n            dom: {\n              tag: 'div',\n              classes: ['tox-insert-table-picker']\n            },\n            components: makeComponents(cells).concat(memLabel.asSpec()),\n            behaviours: derive$1([\n              config('insert-table-picker', [\n                runOnAttached(c => {\n                  Replacing.set(memLabel.get(c), [emptyLabelText]);\n                }),\n                runWithTarget(cellOverEvent, (c, t, e) => {\n                  const {row, col} = e.event;\n                  selectCells(cells, row, col, numRows, numColumns);\n                  Replacing.set(memLabel.get(c), [makeLabelText(row + 1, col + 1)]);\n                }),\n                runWithTarget(cellExecuteEvent, (c, _, e) => {\n                  const {row, col} = e.event;\n                  spec.onAction({\n                    numRows: row + 1,\n                    numColumns: col + 1\n                  });\n                  emit(c, sandboxClose());\n                })\n              ]),\n              Keying.config({\n                initSize: {\n                  numRows,\n                  numColumns\n                },\n                mode: 'flatgrid',\n                selector: '[role=\"button\"]'\n              })\n            ])\n          })]\n      };\n    };\n\n    const fancyMenuItems = {\n      inserttable: renderInsertTableMenuItem,\n      colorswatch: renderColorSwatchItem\n    };\n    const renderFancyMenuItem = (spec, backstage) => get$g(fancyMenuItems, spec.fancytype).map(render => render(spec, backstage));\n\n    const renderNestedItem = (spec, itemResponse, providersBackstage, renderIcons = true, downwardsCaret = false) => {\n      const caret = downwardsCaret ? renderDownwardsCaret(providersBackstage.icons) : renderSubmenuCaret(providersBackstage.icons);\n      const getApi = component => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state),\n        setIconFill: (id, value) => {\n          descendant(component.element, `svg path[class=\"${ id }\"], rect[class=\"${ id }\"]`).each(underlinePath => {\n            set$9(underlinePath, 'fill', value);\n          });\n        },\n        setTooltip: tooltip => {\n          const translatedTooltip = providersBackstage.translate(tooltip);\n          setAll$1(component.element, {\n            'aria-label': translatedTooltip,\n            'title': translatedTooltip\n          });\n        }\n      });\n      const structure = renderItemStructure({\n        presets: 'normal',\n        iconContent: spec.icon,\n        textContent: spec.text,\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        caret: Optional.some(caret),\n        checkMark: Optional.none(),\n        shortcutContent: spec.shortcut\n      }, providersBackstage, renderIcons);\n      return renderCommonItem({\n        data: buildData(spec),\n        getApi,\n        enabled: spec.enabled,\n        onAction: noop,\n        onSetup: spec.onSetup,\n        triggersSubmenu: true,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage);\n    };\n\n    const renderNormalItem = (spec, itemResponse, providersBackstage, renderIcons = true) => {\n      const getApi = component => ({\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state)\n      });\n      const structure = renderItemStructure({\n        presets: 'normal',\n        iconContent: spec.icon,\n        textContent: spec.text,\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        caret: Optional.none(),\n        checkMark: Optional.none(),\n        shortcutContent: spec.shortcut\n      }, providersBackstage, renderIcons);\n      return renderCommonItem({\n        data: buildData(spec),\n        getApi,\n        enabled: spec.enabled,\n        onAction: spec.onAction,\n        onSetup: spec.onSetup,\n        triggersSubmenu: false,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage);\n    };\n\n    const renderSeparatorItem = spec => ({\n      type: 'separator',\n      dom: {\n        tag: 'div',\n        classes: [\n          selectableClass,\n          groupHeadingClass\n        ]\n      },\n      components: spec.text.map(text$2).toArray()\n    });\n\n    const renderToggleMenuItem = (spec, itemResponse, providersBackstage, renderIcons = true) => {\n      const getApi = component => ({\n        setActive: state => {\n          Toggling.set(component, state);\n        },\n        isActive: () => Toggling.isOn(component),\n        isEnabled: () => !Disabling.isDisabled(component),\n        setEnabled: state => Disabling.set(component, !state)\n      });\n      const structure = renderItemStructure({\n        iconContent: spec.icon,\n        textContent: spec.text,\n        htmlContent: Optional.none(),\n        ariaLabel: spec.text,\n        checkMark: Optional.some(renderCheckmark(providersBackstage.icons)),\n        caret: Optional.none(),\n        shortcutContent: spec.shortcut,\n        presets: 'normal',\n        meta: spec.meta\n      }, providersBackstage, renderIcons);\n      return deepMerge(renderCommonItem({\n        data: buildData(spec),\n        enabled: spec.enabled,\n        getApi,\n        onAction: spec.onAction,\n        onSetup: spec.onSetup,\n        triggersSubmenu: false,\n        itemBehaviours: []\n      }, structure, itemResponse, providersBackstage), {\n        toggling: {\n          toggleClass: tickedClass,\n          toggleOnExecute: false,\n          selected: spec.active\n        }\n      });\n    };\n\n    const autocomplete = renderAutocompleteItem;\n    const separator$3 = renderSeparatorItem;\n    const normal = renderNormalItem;\n    const nested = renderNestedItem;\n    const toggle$1 = renderToggleMenuItem;\n    const fancy = renderFancyMenuItem;\n    const card = renderCardMenuItem;\n\n    const getCoupled = (component, coupleConfig, coupleState, name) => coupleState.getOrCreate(component, coupleConfig, name);\n    const getExistingCoupled = (component, coupleConfig, coupleState, name) => coupleState.getExisting(component, coupleConfig, name);\n\n    var CouplingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getCoupled: getCoupled,\n        getExistingCoupled: getExistingCoupled\n    });\n\n    var CouplingSchema = [requiredOf('others', setOf(Result.value, anyValue()))];\n\n    const init$a = () => {\n      const coupled = {};\n      const lookupCoupled = (coupleConfig, coupledName) => {\n        const available = keys(coupleConfig.others);\n        if (available.length === 0) {\n          throw new Error('Cannot find any known coupled components');\n        } else {\n          return get$g(coupled, coupledName);\n        }\n      };\n      const getOrCreate = (component, coupleConfig, name) => {\n        return lookupCoupled(coupleConfig, name).getOrThunk(() => {\n          const builder = get$g(coupleConfig.others, name).getOrDie('No information found for coupled component: ' + name);\n          const spec = builder(component);\n          const built = component.getSystem().build(spec);\n          coupled[name] = built;\n          return built;\n        });\n      };\n      const getExisting = (component, coupleConfig, name) => {\n        return lookupCoupled(coupleConfig, name).orThunk(() => {\n          get$g(coupleConfig.others, name).getOrDie('No information found for coupled component: ' + name);\n          return Optional.none();\n        });\n      };\n      const readState = constant$1({});\n      return nu$8({\n        readState,\n        getExisting,\n        getOrCreate\n      });\n    };\n\n    var CouplingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$a\n    });\n\n    const Coupling = create$4({\n      fields: CouplingSchema,\n      name: 'coupling',\n      apis: CouplingApis,\n      state: CouplingState\n    });\n\n    const nu$3 = baseFn => {\n      let data = Optional.none();\n      let callbacks = [];\n      const map = f => nu$3(nCallback => {\n        get(data => {\n          nCallback(f(data));\n        });\n      });\n      const get = nCallback => {\n        if (isReady()) {\n          call(nCallback);\n        } else {\n          callbacks.push(nCallback);\n        }\n      };\n      const set = x => {\n        if (!isReady()) {\n          data = Optional.some(x);\n          run(callbacks);\n          callbacks = [];\n        }\n      };\n      const isReady = () => data.isSome();\n      const run = cbs => {\n        each$1(cbs, call);\n      };\n      const call = cb => {\n        data.each(x => {\n          setTimeout(() => {\n            cb(x);\n          }, 0);\n        });\n      };\n      baseFn(set);\n      return {\n        get,\n        map,\n        isReady\n      };\n    };\n    const pure$1 = a => nu$3(callback => {\n      callback(a);\n    });\n    const LazyValue = {\n      nu: nu$3,\n      pure: pure$1\n    };\n\n    const errorReporter = err => {\n      setTimeout(() => {\n        throw err;\n      }, 0);\n    };\n    const make$5 = run => {\n      const get = callback => {\n        run().then(callback, errorReporter);\n      };\n      const map = fab => {\n        return make$5(() => run().then(fab));\n      };\n      const bind = aFutureB => {\n        return make$5(() => run().then(v => aFutureB(v).toPromise()));\n      };\n      const anonBind = futureB => {\n        return make$5(() => run().then(() => futureB.toPromise()));\n      };\n      const toLazy = () => {\n        return LazyValue.nu(get);\n      };\n      const toCached = () => {\n        let cache = null;\n        return make$5(() => {\n          if (cache === null) {\n            cache = run();\n          }\n          return cache;\n        });\n      };\n      const toPromise = run;\n      return {\n        map,\n        bind,\n        anonBind,\n        toLazy,\n        toCached,\n        toPromise,\n        get\n      };\n    };\n    const nu$2 = baseFn => {\n      return make$5(() => new Promise(baseFn));\n    };\n    const pure = a => {\n      return make$5(() => Promise.resolve(a));\n    };\n    const Future = {\n      nu: nu$2,\n      pure\n    };\n\n    const suffix = constant$1('sink');\n    const partType$1 = constant$1(optional({\n      name: suffix(),\n      overrides: constant$1({\n        dom: { tag: 'div' },\n        behaviours: derive$1([Positioning.config({ useFixed: always })]),\n        events: derive$2([\n          cutter(keydown()),\n          cutter(mousedown()),\n          cutter(click())\n        ])\n      })\n    }));\n\n    const getAnchor = (detail, component) => {\n      const hotspot = detail.getHotspot(component).getOr(component);\n      const type = 'hotspot';\n      const overrides = detail.getAnchorOverrides();\n      return detail.layouts.fold(() => ({\n        type,\n        hotspot,\n        overrides\n      }), layouts => ({\n        type,\n        hotspot,\n        overrides,\n        layouts\n      }));\n    };\n    const fetch = (detail, mapFetch, component) => {\n      const fetcher = detail.fetch;\n      return fetcher(component).map(mapFetch);\n    };\n    const openF = (detail, mapFetch, anchor, component, sandbox, externals, highlightOnOpen) => {\n      const futureData = fetch(detail, mapFetch, component);\n      const getLazySink = getSink(component, detail);\n      return futureData.map(tdata => tdata.bind(data => Optional.from(tieredMenu.sketch({\n        ...externals.menu(),\n        uid: generate$5(''),\n        data,\n        highlightOnOpen,\n        onOpenMenu: (tmenu, menu) => {\n          const sink = getLazySink().getOrDie();\n          Positioning.position(sink, menu, { anchor });\n          Sandboxing.decloak(sandbox);\n        },\n        onOpenSubmenu: (tmenu, item, submenu) => {\n          const sink = getLazySink().getOrDie();\n          Positioning.position(sink, submenu, {\n            anchor: {\n              type: 'submenu',\n              item\n            }\n          });\n          Sandboxing.decloak(sandbox);\n        },\n        onRepositionMenu: (tmenu, primaryMenu, submenuTriggers) => {\n          const sink = getLazySink().getOrDie();\n          Positioning.position(sink, primaryMenu, { anchor });\n          each$1(submenuTriggers, st => {\n            Positioning.position(sink, st.triggeredMenu, {\n              anchor: {\n                type: 'submenu',\n                item: st.triggeringItem\n              }\n            });\n          });\n        },\n        onEscape: () => {\n          Focusing.focus(component);\n          Sandboxing.close(sandbox);\n          return Optional.some(true);\n        }\n      }))));\n    };\n    const open = (detail, mapFetch, hotspot, sandbox, externals, onOpenSync, highlightOnOpen) => {\n      const anchor = getAnchor(detail, hotspot);\n      const processed = openF(detail, mapFetch, anchor, hotspot, sandbox, externals, highlightOnOpen);\n      return processed.map(tdata => {\n        tdata.fold(() => {\n          if (Sandboxing.isOpen(sandbox)) {\n            Sandboxing.close(sandbox);\n          }\n        }, data => {\n          Sandboxing.cloak(sandbox);\n          Sandboxing.open(sandbox, data);\n          onOpenSync(sandbox);\n        });\n        return sandbox;\n      });\n    };\n    const close = (detail, mapFetch, component, sandbox, _externals, _onOpenSync, _highlightOnOpen) => {\n      Sandboxing.close(sandbox);\n      return Future.pure(sandbox);\n    };\n    const togglePopup = (detail, mapFetch, hotspot, externals, onOpenSync, highlightOnOpen) => {\n      const sandbox = Coupling.getCoupled(hotspot, 'sandbox');\n      const showing = Sandboxing.isOpen(sandbox);\n      const action = showing ? close : open;\n      return action(detail, mapFetch, hotspot, sandbox, externals, onOpenSync, highlightOnOpen);\n    };\n    const matchWidth = (hotspot, container, useMinWidth) => {\n      const menu = Composing.getCurrent(container).getOr(container);\n      const buttonWidth = get$c(hotspot.element);\n      if (useMinWidth) {\n        set$8(menu.element, 'min-width', buttonWidth + 'px');\n      } else {\n        set$7(menu.element, buttonWidth);\n      }\n    };\n    const getSink = (anyInSystem, sinkDetail) => anyInSystem.getSystem().getByUid(sinkDetail.uid + '-' + suffix()).map(internalSink => () => Result.value(internalSink)).getOrThunk(() => sinkDetail.lazySink.fold(() => () => Result.error(new Error('No internal sink is specified, nor could an external sink be found')), lazySinkFn => () => lazySinkFn(anyInSystem)));\n    const doRepositionMenus = sandbox => {\n      Sandboxing.getState(sandbox).each(tmenu => {\n        tieredMenu.repositionMenus(tmenu);\n      });\n    };\n    const makeSandbox$1 = (detail, hotspot, extras) => {\n      const ariaControls = manager();\n      const onOpen = (component, menu) => {\n        const anchor = getAnchor(detail, hotspot);\n        ariaControls.link(hotspot.element);\n        if (detail.matchWidth) {\n          matchWidth(anchor.hotspot, menu, detail.useMinWidth);\n        }\n        detail.onOpen(anchor, component, menu);\n        if (extras !== undefined && extras.onOpen !== undefined) {\n          extras.onOpen(component, menu);\n        }\n      };\n      const onClose = (component, menu) => {\n        ariaControls.unlink(hotspot.element);\n        if (extras !== undefined && extras.onClose !== undefined) {\n          extras.onClose(component, menu);\n        }\n      };\n      const lazySink = getSink(hotspot, detail);\n      return {\n        dom: {\n          tag: 'div',\n          classes: detail.sandboxClasses,\n          attributes: {\n            id: ariaControls.id,\n            role: 'listbox'\n          }\n        },\n        behaviours: SketchBehaviours.augment(detail.sandboxBehaviours, [\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: hotspot\n            }\n          }),\n          Sandboxing.config({\n            onOpen,\n            onClose,\n            isPartOf: (container, data, queryElem) => {\n              return isPartOf$1(data, queryElem) || isPartOf$1(hotspot, queryElem);\n            },\n            getAttachPoint: () => {\n              return lazySink().getOrDie();\n            }\n          }),\n          Composing.config({\n            find: sandbox => {\n              return Sandboxing.getState(sandbox).bind(menu => Composing.getCurrent(menu));\n            }\n          }),\n          Receiving.config({\n            channels: {\n              ...receivingChannel$1({ isExtraPart: never }),\n              ...receivingChannel({ doReposition: doRepositionMenus })\n            }\n          })\n        ])\n      };\n    };\n    const repositionMenus = comp => {\n      const sandbox = Coupling.getCoupled(comp, 'sandbox');\n      doRepositionMenus(sandbox);\n    };\n\n    const sandboxFields = () => [\n      defaulted('sandboxClasses', []),\n      SketchBehaviours.field('sandboxBehaviours', [\n        Composing,\n        Receiving,\n        Sandboxing,\n        Representing\n      ])\n    ];\n\n    const schema$k = constant$1([\n      required$1('dom'),\n      required$1('fetch'),\n      onHandler('onOpen'),\n      onKeyboardHandler('onExecute'),\n      defaulted('getHotspot', Optional.some),\n      defaulted('getAnchorOverrides', constant$1({})),\n      schema$y(),\n      field('dropdownBehaviours', [\n        Toggling,\n        Coupling,\n        Keying,\n        Focusing\n      ]),\n      required$1('toggleClass'),\n      defaulted('eventOrder', {}),\n      option$3('lazySink'),\n      defaulted('matchWidth', false),\n      defaulted('useMinWidth', false),\n      option$3('role')\n    ].concat(sandboxFields()));\n    const parts$e = constant$1([\n      external({\n        schema: [\n          tieredMenuMarkers(),\n          defaulted('fakeFocus', false)\n        ],\n        name: 'menu',\n        defaults: detail => {\n          return { onExecute: detail.onExecute };\n        }\n      }),\n      partType$1()\n    ]);\n\n    const factory$k = (detail, components, _spec, externals) => {\n      const lookupAttr = attr => get$g(detail.dom, 'attributes').bind(attrs => get$g(attrs, attr));\n      const switchToMenu = sandbox => {\n        Sandboxing.getState(sandbox).each(tmenu => {\n          tieredMenu.highlightPrimary(tmenu);\n        });\n      };\n      const togglePopup$1 = (dropdownComp, onOpenSync, highlightOnOpen) => {\n        return togglePopup(detail, identity, dropdownComp, externals, onOpenSync, highlightOnOpen);\n      };\n      const action = component => {\n        const onOpenSync = switchToMenu;\n        togglePopup$1(component, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n      };\n      const apis = {\n        expand: comp => {\n          if (!Toggling.isOn(comp)) {\n            togglePopup$1(comp, noop, HighlightOnOpen.HighlightNone).get(noop);\n          }\n        },\n        open: comp => {\n          if (!Toggling.isOn(comp)) {\n            togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n          }\n        },\n        refetch: comp => {\n          const optSandbox = Coupling.getExistingCoupled(comp, 'sandbox');\n          return optSandbox.fold(() => {\n            return togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).map(noop);\n          }, sandboxComp => {\n            return open(detail, identity, comp, sandboxComp, externals, noop, HighlightOnOpen.HighlightMenuAndItem).map(noop);\n          });\n        },\n        isOpen: Toggling.isOn,\n        close: comp => {\n          if (Toggling.isOn(comp)) {\n            togglePopup$1(comp, noop, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n          }\n        },\n        repositionMenus: comp => {\n          if (Toggling.isOn(comp)) {\n            repositionMenus(comp);\n          }\n        }\n      };\n      const triggerExecute = (comp, _se) => {\n        emitExecute(comp);\n        return Optional.some(true);\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.dropdownBehaviours, [\n          Toggling.config({\n            toggleClass: detail.toggleClass,\n            aria: { mode: 'expanded' }\n          }),\n          Coupling.config({\n            others: {\n              sandbox: hotspot => {\n                return makeSandbox$1(detail, hotspot, {\n                  onOpen: () => Toggling.on(hotspot),\n                  onClose: () => Toggling.off(hotspot)\n                });\n              }\n            }\n          }),\n          Keying.config({\n            mode: 'special',\n            onSpace: triggerExecute,\n            onEnter: triggerExecute,\n            onDown: (comp, _se) => {\n              if (Dropdown.isOpen(comp)) {\n                const sandbox = Coupling.getCoupled(comp, 'sandbox');\n                switchToMenu(sandbox);\n              } else {\n                Dropdown.open(comp);\n              }\n              return Optional.some(true);\n            },\n            onEscape: (comp, _se) => {\n              if (Dropdown.isOpen(comp)) {\n                Dropdown.close(comp);\n                return Optional.some(true);\n              } else {\n                return Optional.none();\n              }\n            }\n          }),\n          Focusing.config({})\n        ]),\n        events: events$a(Optional.some(action)),\n        eventOrder: {\n          ...detail.eventOrder,\n          [execute$5()]: [\n            'disabling',\n            'toggling',\n            'alloy.base.behaviour'\n          ]\n        },\n        apis,\n        domModification: {\n          attributes: {\n            'aria-haspopup': 'true',\n            ...detail.role.fold(() => ({}), role => ({ role })),\n            ...detail.dom.tag === 'button' ? { type: lookupAttr('type').getOr('button') } : {}\n          }\n        }\n      };\n    };\n    const Dropdown = composite({\n      name: 'Dropdown',\n      configFields: schema$k(),\n      partFields: parts$e(),\n      factory: factory$k,\n      apis: {\n        open: (apis, comp) => apis.open(comp),\n        refetch: (apis, comp) => apis.refetch(comp),\n        expand: (apis, comp) => apis.expand(comp),\n        close: (apis, comp) => apis.close(comp),\n        isOpen: (apis, comp) => apis.isOpen(comp),\n        repositionMenus: (apis, comp) => apis.repositionMenus(comp)\n      }\n    });\n\n    const identifyMenuLayout = searchMode => {\n      switch (searchMode.searchMode) {\n      case 'no-search': {\n          return { menuType: 'normal' };\n        }\n      default: {\n          return {\n            menuType: 'searchable',\n            searchMode\n          };\n        }\n      }\n    };\n    const handleRefetchTrigger = originalSandboxComp => {\n      const dropdown = Representing.getValue(originalSandboxComp);\n      const optSearcherState = findWithinSandbox(originalSandboxComp).map(saveState);\n      Dropdown.refetch(dropdown).get(() => {\n        const newSandboxComp = Coupling.getCoupled(dropdown, 'sandbox');\n        optSearcherState.each(searcherState => findWithinSandbox(newSandboxComp).each(inputComp => restoreState(inputComp, searcherState)));\n      });\n    };\n    const handleRedirectToMenuItem = (sandboxComp, se) => {\n      getActiveMenuItemFrom(sandboxComp).each(activeItem => {\n        retargetAndDispatchWith(sandboxComp, activeItem.element, se.event.eventType, se.event.interactionEvent);\n      });\n    };\n    const getActiveMenuItemFrom = sandboxComp => {\n      return Sandboxing.getState(sandboxComp).bind(Highlighting.getHighlighted).bind(Highlighting.getHighlighted);\n    };\n    const getSearchResults = activeMenuComp => {\n      return has(activeMenuComp.element, searchResultsClass) ? Optional.some(activeMenuComp.element) : descendant(activeMenuComp.element, '.' + searchResultsClass);\n    };\n    const updateAriaOnHighlight = (tmenuComp, menuComp, itemComp) => {\n      findWithinMenu(tmenuComp).each(inputComp => {\n        setActiveDescendant(inputComp, itemComp);\n        const optActiveResults = getSearchResults(menuComp);\n        optActiveResults.each(resultsElem => {\n          getOpt(resultsElem, 'id').each(controlledId => set$9(inputComp.element, 'aria-controls', controlledId));\n        });\n      });\n      set$9(itemComp.element, 'aria-selected', 'true');\n    };\n    const updateAriaOnDehighlight = (tmenuComp, menuComp, itemComp) => {\n      set$9(itemComp.element, 'aria-selected', 'false');\n    };\n    const focusSearchField = tmenuComp => {\n      findWithinMenu(tmenuComp).each(searcherComp => Focusing.focus(searcherComp));\n    };\n    const getSearchPattern = dropdownComp => {\n      const optSandboxComp = Coupling.getExistingCoupled(dropdownComp, 'sandbox');\n      return optSandboxComp.bind(findWithinSandbox).map(saveState).map(state => state.fetchPattern).getOr('');\n    };\n\n    var FocusMode;\n    (function (FocusMode) {\n      FocusMode[FocusMode['ContentFocus'] = 0] = 'ContentFocus';\n      FocusMode[FocusMode['UiFocus'] = 1] = 'UiFocus';\n    }(FocusMode || (FocusMode = {})));\n    const createMenuItemFromBridge = (item, itemResponse, backstage, menuHasIcons, isHorizontalMenu) => {\n      const providersBackstage = backstage.shared.providers;\n      const parseForHorizontalMenu = menuitem => !isHorizontalMenu ? menuitem : {\n        ...menuitem,\n        shortcut: Optional.none(),\n        icon: menuitem.text.isSome() ? Optional.none() : menuitem.icon\n      };\n      switch (item.type) {\n      case 'menuitem':\n        return createMenuItem(item).fold(handleError, d => Optional.some(normal(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons)));\n      case 'nestedmenuitem':\n        return createNestedMenuItem(item).fold(handleError, d => Optional.some(nested(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons, isHorizontalMenu)));\n      case 'togglemenuitem':\n        return createToggleMenuItem(item).fold(handleError, d => Optional.some(toggle$1(parseForHorizontalMenu(d), itemResponse, providersBackstage, menuHasIcons)));\n      case 'separator':\n        return createSeparatorMenuItem(item).fold(handleError, d => Optional.some(separator$3(d)));\n      case 'fancymenuitem':\n        return createFancyMenuItem(item).fold(handleError, d => fancy(d, backstage));\n      default: {\n          console.error('Unknown item in general menu', item);\n          return Optional.none();\n        }\n      }\n    };\n    const createAutocompleteItems = (items, matchText, onItemValueHandler, columns, itemResponse, sharedBackstage, highlightOn) => {\n      const renderText = columns === 1;\n      const renderIcons = !renderText || menuHasIcons(items);\n      return cat(map$2(items, item => {\n        switch (item.type) {\n        case 'separator':\n          return createSeparatorItem(item).fold(handleError, d => Optional.some(separator$3(d)));\n        case 'cardmenuitem':\n          return createCardMenuItem(item).fold(handleError, d => Optional.some(card({\n            ...d,\n            onAction: api => {\n              d.onAction(api);\n              onItemValueHandler(d.value, d.meta);\n            }\n          }, itemResponse, sharedBackstage, {\n            itemBehaviours: tooltipBehaviour(d.meta, sharedBackstage),\n            cardText: {\n              matchText,\n              highlightOn\n            }\n          })));\n        case 'autocompleteitem':\n        default:\n          return createAutocompleterItem(item).fold(handleError, d => Optional.some(autocomplete(d, matchText, renderText, 'normal', onItemValueHandler, itemResponse, sharedBackstage, renderIcons)));\n        }\n      }));\n    };\n    const createPartialMenu = (value, items, itemResponse, backstage, isHorizontalMenu, searchMode) => {\n      const hasIcons = menuHasIcons(items);\n      const alloyItems = cat(map$2(items, item => {\n        const itemHasIcon = i => isHorizontalMenu ? !has$2(i, 'text') : hasIcons;\n        const createItem = i => createMenuItemFromBridge(i, itemResponse, backstage, itemHasIcon(i), isHorizontalMenu);\n        if (item.type === 'nestedmenuitem' && item.getSubmenuItems().length <= 0) {\n          return createItem({\n            ...item,\n            enabled: false\n          });\n        } else {\n          return createItem(item);\n        }\n      }));\n      const menuLayout = identifyMenuLayout(searchMode);\n      const createPartial = isHorizontalMenu ? createHorizontalPartialMenuWithAlloyItems : createPartialMenuWithAlloyItems;\n      return createPartial(value, hasIcons, alloyItems, 1, menuLayout);\n    };\n    const createTieredDataFrom = partialMenu => tieredMenu.singleData(partialMenu.value, partialMenu);\n    const createInlineMenuFrom = (partialMenu, columns, focusMode, presets) => {\n      const movement = deriveMenuMovement(columns, presets);\n      const menuMarkers = markers(presets);\n      return {\n        data: createTieredDataFrom({\n          ...partialMenu,\n          movement,\n          menuBehaviours: SimpleBehaviours.unnamedEvents(columns !== 'auto' ? [] : [runOnAttached((comp, _se) => {\n              detectSize(comp, 4, menuMarkers.item).each(({numColumns, numRows}) => {\n                Keying.setGridSize(comp, numRows, numColumns);\n              });\n            })])\n        }),\n        menu: {\n          markers: markers(presets),\n          fakeFocus: focusMode === FocusMode.ContentFocus\n        }\n      };\n    };\n\n    const getAutocompleterRange = (dom, initRange) => {\n      return detect$1(SugarElement.fromDom(initRange.startContainer)).map(elm => {\n        const range = dom.createRng();\n        range.selectNode(elm.dom);\n        return range;\n      });\n    };\n    const register$b = (editor, sharedBackstage) => {\n      const autocompleterId = generate$6('autocompleter');\n      const processingAction = Cell(false);\n      const activeState = Cell(false);\n      const autocompleter = build$1(InlineView.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-autocompleter'],\n          attributes: { id: autocompleterId }\n        },\n        components: [],\n        fireDismissalEventInstead: {},\n        inlineBehaviours: derive$1([config('dismissAutocompleter', [\n            run$1(dismissRequested(), () => cancelIfNecessary()),\n            run$1(highlight$1(), (_, se) => {\n              getOpt(se.event.target, 'id').each(id => set$9(SugarElement.fromDom(editor.getBody()), 'aria-activedescendant', id));\n            })\n          ])]),\n        lazySink: sharedBackstage.getSink\n      }));\n      const isMenuOpen = () => InlineView.isOpen(autocompleter);\n      const isActive = activeState.get;\n      const hideIfNecessary = () => {\n        if (isMenuOpen()) {\n          InlineView.hide(autocompleter);\n          editor.dom.remove(autocompleterId, false);\n          const editorBody = SugarElement.fromDom(editor.getBody());\n          getOpt(editorBody, 'aria-owns').filter(ariaOwnsAttr => ariaOwnsAttr === autocompleterId).each(() => {\n            remove$7(editorBody, 'aria-owns');\n            remove$7(editorBody, 'aria-activedescendant');\n          });\n        }\n      };\n      const getMenu = () => InlineView.getContent(autocompleter).bind(tmenu => {\n        return get$h(tmenu.components(), 0);\n      });\n      const cancelIfNecessary = () => editor.execCommand('mceAutocompleterClose');\n      const getCombinedItems = matches => {\n        const columns = findMap(matches, m => Optional.from(m.columns)).getOr(1);\n        return bind$3(matches, match => {\n          const choices = match.items;\n          return createAutocompleteItems(choices, match.matchText, (itemValue, itemMeta) => {\n            const nr = editor.selection.getRng();\n            getAutocompleterRange(editor.dom, nr).each(range => {\n              const autocompleterApi = {\n                hide: () => cancelIfNecessary(),\n                reload: fetchOptions => {\n                  hideIfNecessary();\n                  editor.execCommand('mceAutocompleterReload', false, { fetchOptions });\n                }\n              };\n              processingAction.set(true);\n              match.onAction(autocompleterApi, range, itemValue, itemMeta);\n              processingAction.set(false);\n            });\n          }, columns, ItemResponse$1.BUBBLE_TO_SANDBOX, sharedBackstage, match.highlightOn);\n        });\n      };\n      const display = (lookupData, items) => {\n        findIn(SugarElement.fromDom(editor.getBody())).each(element => {\n          const columns = findMap(lookupData, ld => Optional.from(ld.columns)).getOr(1);\n          InlineView.showMenuAt(autocompleter, {\n            anchor: {\n              type: 'node',\n              root: SugarElement.fromDom(editor.getBody()),\n              node: Optional.from(element)\n            }\n          }, createInlineMenuFrom(createPartialMenuWithAlloyItems('autocompleter-value', true, items, columns, { menuType: 'normal' }), columns, FocusMode.ContentFocus, 'normal'));\n        });\n        getMenu().each(Highlighting.highlightFirst);\n      };\n      const updateDisplay = lookupData => {\n        const combinedItems = getCombinedItems(lookupData);\n        if (combinedItems.length > 0) {\n          display(lookupData, combinedItems);\n          set$9(SugarElement.fromDom(editor.getBody()), 'aria-owns', autocompleterId);\n          if (!editor.inline) {\n            cloneAutocompleterToEditorDoc();\n          }\n        } else {\n          hideIfNecessary();\n        }\n      };\n      const cloneAutocompleterToEditorDoc = () => {\n        if (editor.dom.get(autocompleterId)) {\n          editor.dom.remove(autocompleterId, false);\n        }\n        const docElm = editor.getDoc().documentElement;\n        const selection = editor.selection.getNode();\n        const newElm = deep(autocompleter.element);\n        setAll(newElm, {\n          border: '0',\n          clip: 'rect(0 0 0 0)',\n          height: '1px',\n          margin: '-1px',\n          overflow: 'hidden',\n          padding: '0',\n          position: 'absolute',\n          width: '1px',\n          top: `${ selection.offsetTop }px`,\n          left: `${ selection.offsetLeft }px`\n        });\n        editor.dom.add(docElm, newElm.dom);\n        descendant(newElm, '[role=\"menu\"]').each(child => {\n          remove$6(child, 'position');\n          remove$6(child, 'max-height');\n        });\n      };\n      editor.on('AutocompleterStart', ({lookupData}) => {\n        activeState.set(true);\n        processingAction.set(false);\n        updateDisplay(lookupData);\n      });\n      editor.on('AutocompleterUpdate', ({lookupData}) => updateDisplay(lookupData));\n      editor.on('AutocompleterEnd', () => {\n        hideIfNecessary();\n        activeState.set(false);\n        processingAction.set(false);\n      });\n      const autocompleterUiApi = {\n        cancelIfNecessary,\n        isMenuOpen,\n        isActive,\n        isProcessingAction: processingAction.get,\n        getMenu\n      };\n      AutocompleterEditorEvents.setup(autocompleterUiApi, editor);\n    };\n    const Autocompleter = { register: register$b };\n\n    const nonScrollingOverflows = [\n      'visible',\n      'hidden',\n      'clip'\n    ];\n    const isScrollingOverflowValue = value => trim$1(value).length > 0 && !contains$2(nonScrollingOverflows, value);\n    const isScroller = elem => {\n      if (isHTMLElement(elem)) {\n        const overflowX = get$e(elem, 'overflow-x');\n        const overflowY = get$e(elem, 'overflow-y');\n        return isScrollingOverflowValue(overflowX) || isScrollingOverflowValue(overflowY);\n      } else {\n        return false;\n      }\n    };\n    const detect = popupSinkElem => {\n      const ancestorsScrollers = ancestors(popupSinkElem, isScroller);\n      const scrollers = ancestorsScrollers.length === 0 ? getShadowRoot(popupSinkElem).map(getShadowHost).map(x => ancestors(x, isScroller)).getOr([]) : ancestorsScrollers;\n      return head(scrollers).map(element => ({\n        element,\n        others: scrollers.slice(1)\n      }));\n    };\n    const detectWhenSplitUiMode = (editor, popupSinkElem) => isSplitUiMode(editor) ? detect(popupSinkElem) : Optional.none();\n    const getBoundsFrom = sc => {\n      const scrollableBoxes = [\n        ...map$2(sc.others, box$1),\n        win()\n      ];\n      return constrainByMany(box$1(sc.element), scrollableBoxes);\n    };\n\n    const closest = (scope, selector, isRoot) => closest$1(scope, selector, isRoot).isSome();\n\n    const DelayedFunction = (fun, delay) => {\n      let ref = null;\n      const schedule = (...args) => {\n        ref = setTimeout(() => {\n          fun.apply(null, args);\n          ref = null;\n        }, delay);\n      };\n      const cancel = () => {\n        if (ref !== null) {\n          clearTimeout(ref);\n          ref = null;\n        }\n      };\n      return {\n        cancel,\n        schedule\n      };\n    };\n\n    const SIGNIFICANT_MOVE = 5;\n    const LONGPRESS_DELAY = 400;\n    const getTouch = event => {\n      const raw = event.raw;\n      if (raw.touches === undefined || raw.touches.length !== 1) {\n        return Optional.none();\n      }\n      return Optional.some(raw.touches[0]);\n    };\n    const isFarEnough = (touch, data) => {\n      const distX = Math.abs(touch.clientX - data.x);\n      const distY = Math.abs(touch.clientY - data.y);\n      return distX > SIGNIFICANT_MOVE || distY > SIGNIFICANT_MOVE;\n    };\n    const monitor = settings => {\n      const startData = value$2();\n      const longpressFired = Cell(false);\n      const longpress$1 = DelayedFunction(event => {\n        settings.triggerEvent(longpress(), event);\n        longpressFired.set(true);\n      }, LONGPRESS_DELAY);\n      const handleTouchstart = event => {\n        getTouch(event).each(touch => {\n          longpress$1.cancel();\n          const data = {\n            x: touch.clientX,\n            y: touch.clientY,\n            target: event.target\n          };\n          longpress$1.schedule(event);\n          longpressFired.set(false);\n          startData.set(data);\n        });\n        return Optional.none();\n      };\n      const handleTouchmove = event => {\n        longpress$1.cancel();\n        getTouch(event).each(touch => {\n          startData.on(data => {\n            if (isFarEnough(touch, data)) {\n              startData.clear();\n            }\n          });\n        });\n        return Optional.none();\n      };\n      const handleTouchend = event => {\n        longpress$1.cancel();\n        const isSame = data => eq(data.target, event.target);\n        return startData.get().filter(isSame).map(_data => {\n          if (longpressFired.get()) {\n            event.prevent();\n            return false;\n          } else {\n            return settings.triggerEvent(tap(), event);\n          }\n        });\n      };\n      const handlers = wrapAll([\n        {\n          key: touchstart(),\n          value: handleTouchstart\n        },\n        {\n          key: touchmove(),\n          value: handleTouchmove\n        },\n        {\n          key: touchend(),\n          value: handleTouchend\n        }\n      ]);\n      const fireIfReady = (event, type) => get$g(handlers, type).bind(handler => handler(event));\n      return { fireIfReady };\n    };\n\n    const isDangerous = event => {\n      const keyEv = event.raw;\n      return keyEv.which === BACKSPACE[0] && !contains$2([\n        'input',\n        'textarea'\n      ], name$3(event.target)) && !closest(event.target, '[contenteditable=\"true\"]');\n    };\n    const setup$d = (container, rawSettings) => {\n      const settings = {\n        stopBackspace: true,\n        ...rawSettings\n      };\n      const pointerEvents = [\n        'touchstart',\n        'touchmove',\n        'touchend',\n        'touchcancel',\n        'gesturestart',\n        'mousedown',\n        'mouseup',\n        'mouseover',\n        'mousemove',\n        'mouseout',\n        'click'\n      ];\n      const tapEvent = monitor(settings);\n      const simpleEvents = map$2(pointerEvents.concat([\n        'selectstart',\n        'input',\n        'contextmenu',\n        'change',\n        'transitionend',\n        'transitioncancel',\n        'drag',\n        'dragstart',\n        'dragend',\n        'dragenter',\n        'dragleave',\n        'dragover',\n        'drop',\n        'keyup'\n      ]), type => bind(container, type, event => {\n        tapEvent.fireIfReady(event, type).each(tapStopped => {\n          if (tapStopped) {\n            event.kill();\n          }\n        });\n        const stopped = settings.triggerEvent(type, event);\n        if (stopped) {\n          event.kill();\n        }\n      }));\n      const pasteTimeout = value$2();\n      const onPaste = bind(container, 'paste', event => {\n        tapEvent.fireIfReady(event, 'paste').each(tapStopped => {\n          if (tapStopped) {\n            event.kill();\n          }\n        });\n        const stopped = settings.triggerEvent('paste', event);\n        if (stopped) {\n          event.kill();\n        }\n        pasteTimeout.set(setTimeout(() => {\n          settings.triggerEvent(postPaste(), event);\n        }, 0));\n      });\n      const onKeydown = bind(container, 'keydown', event => {\n        const stopped = settings.triggerEvent('keydown', event);\n        if (stopped) {\n          event.kill();\n        } else if (settings.stopBackspace && isDangerous(event)) {\n          event.prevent();\n        }\n      });\n      const onFocusIn = bind(container, 'focusin', event => {\n        const stopped = settings.triggerEvent('focusin', event);\n        if (stopped) {\n          event.kill();\n        }\n      });\n      const focusoutTimeout = value$2();\n      const onFocusOut = bind(container, 'focusout', event => {\n        const stopped = settings.triggerEvent('focusout', event);\n        if (stopped) {\n          event.kill();\n        }\n        focusoutTimeout.set(setTimeout(() => {\n          settings.triggerEvent(postBlur(), event);\n        }, 0));\n      });\n      const unbind = () => {\n        each$1(simpleEvents, e => {\n          e.unbind();\n        });\n        onKeydown.unbind();\n        onFocusIn.unbind();\n        onFocusOut.unbind();\n        onPaste.unbind();\n        pasteTimeout.on(clearTimeout);\n        focusoutTimeout.on(clearTimeout);\n      };\n      return { unbind };\n    };\n\n    const derive = (rawEvent, rawTarget) => {\n      const source = get$g(rawEvent, 'target').getOr(rawTarget);\n      return Cell(source);\n    };\n\n    const fromSource = (event, source) => {\n      const stopper = Cell(false);\n      const cutter = Cell(false);\n      const stop = () => {\n        stopper.set(true);\n      };\n      const cut = () => {\n        cutter.set(true);\n      };\n      return {\n        stop,\n        cut,\n        isStopped: stopper.get,\n        isCut: cutter.get,\n        event,\n        setSource: source.set,\n        getSource: source.get\n      };\n    };\n    const fromExternal = event => {\n      const stopper = Cell(false);\n      const stop = () => {\n        stopper.set(true);\n      };\n      return {\n        stop,\n        cut: noop,\n        isStopped: stopper.get,\n        isCut: never,\n        event,\n        setSource: die('Cannot set source of a broadcasted event'),\n        getSource: die('Cannot get source of a broadcasted event')\n      };\n    };\n\n    const adt$1 = Adt.generate([\n      { stopped: [] },\n      { resume: ['element'] },\n      { complete: [] }\n    ]);\n    const doTriggerHandler = (lookup, eventType, rawEvent, target, source, logger) => {\n      const handler = lookup(eventType, target);\n      const simulatedEvent = fromSource(rawEvent, source);\n      return handler.fold(() => {\n        logger.logEventNoHandlers(eventType, target);\n        return adt$1.complete();\n      }, handlerInfo => {\n        const descHandler = handlerInfo.descHandler;\n        const eventHandler = getCurried(descHandler);\n        eventHandler(simulatedEvent);\n        if (simulatedEvent.isStopped()) {\n          logger.logEventStopped(eventType, handlerInfo.element, descHandler.purpose);\n          return adt$1.stopped();\n        } else if (simulatedEvent.isCut()) {\n          logger.logEventCut(eventType, handlerInfo.element, descHandler.purpose);\n          return adt$1.complete();\n        } else {\n          return parent(handlerInfo.element).fold(() => {\n            logger.logNoParent(eventType, handlerInfo.element, descHandler.purpose);\n            return adt$1.complete();\n          }, parent => {\n            logger.logEventResponse(eventType, handlerInfo.element, descHandler.purpose);\n            return adt$1.resume(parent);\n          });\n        }\n      });\n    };\n    const doTriggerOnUntilStopped = (lookup, eventType, rawEvent, rawTarget, source, logger) => doTriggerHandler(lookup, eventType, rawEvent, rawTarget, source, logger).fold(always, parent => doTriggerOnUntilStopped(lookup, eventType, rawEvent, parent, source, logger), never);\n    const triggerHandler = (lookup, eventType, rawEvent, target, logger) => {\n      const source = derive(rawEvent, target);\n      return doTriggerHandler(lookup, eventType, rawEvent, target, source, logger);\n    };\n    const broadcast = (listeners, rawEvent, _logger) => {\n      const simulatedEvent = fromExternal(rawEvent);\n      each$1(listeners, listener => {\n        const descHandler = listener.descHandler;\n        const handler = getCurried(descHandler);\n        handler(simulatedEvent);\n      });\n      return simulatedEvent.isStopped();\n    };\n    const triggerUntilStopped = (lookup, eventType, rawEvent, logger) => triggerOnUntilStopped(lookup, eventType, rawEvent, rawEvent.target, logger);\n    const triggerOnUntilStopped = (lookup, eventType, rawEvent, rawTarget, logger) => {\n      const source = derive(rawEvent, rawTarget);\n      return doTriggerOnUntilStopped(lookup, eventType, rawEvent, rawTarget, source, logger);\n    };\n\n    const eventHandler = (element, descHandler) => ({\n      element,\n      descHandler\n    });\n    const broadcastHandler = (id, handler) => ({\n      id,\n      descHandler: handler\n    });\n    const EventRegistry = () => {\n      const registry = {};\n      const registerId = (extraArgs, id, events) => {\n        each(events, (v, k) => {\n          const handlers = registry[k] !== undefined ? registry[k] : {};\n          handlers[id] = curryArgs(v, extraArgs);\n          registry[k] = handlers;\n        });\n      };\n      const findHandler = (handlers, elem) => read$1(elem).bind(id => get$g(handlers, id)).map(descHandler => eventHandler(elem, descHandler));\n      const filterByType = type => get$g(registry, type).map(handlers => mapToArray(handlers, (f, id) => broadcastHandler(id, f))).getOr([]);\n      const find = (isAboveRoot, type, target) => get$g(registry, type).bind(handlers => closest$4(target, elem => findHandler(handlers, elem), isAboveRoot));\n      const unregisterId = id => {\n        each(registry, (handlersById, _eventName) => {\n          if (has$2(handlersById, id)) {\n            delete handlersById[id];\n          }\n        });\n      };\n      return {\n        registerId,\n        unregisterId,\n        filterByType,\n        find\n      };\n    };\n\n    const Registry = () => {\n      const events = EventRegistry();\n      const components = {};\n      const readOrTag = component => {\n        const elem = component.element;\n        return read$1(elem).getOrThunk(() => write('uid-', component.element));\n      };\n      const failOnDuplicate = (component, tagId) => {\n        const conflict = components[tagId];\n        if (conflict === component) {\n          unregister(component);\n        } else {\n          throw new Error('The tagId \"' + tagId + '\" is already used by: ' + element(conflict.element) + '\\nCannot use it for: ' + element(component.element) + '\\n' + 'The conflicting element is' + (inBody(conflict.element) ? ' ' : ' not ') + 'already in the DOM');\n        }\n      };\n      const register = component => {\n        const tagId = readOrTag(component);\n        if (hasNonNullableKey(components, tagId)) {\n          failOnDuplicate(component, tagId);\n        }\n        const extraArgs = [component];\n        events.registerId(extraArgs, tagId, component.events);\n        components[tagId] = component;\n      };\n      const unregister = component => {\n        read$1(component.element).each(tagId => {\n          delete components[tagId];\n          events.unregisterId(tagId);\n        });\n      };\n      const filter = type => events.filterByType(type);\n      const find = (isAboveRoot, type, target) => events.find(isAboveRoot, type, target);\n      const getById = id => get$g(components, id);\n      return {\n        find,\n        filter,\n        register,\n        unregister,\n        getById\n      };\n    };\n\n    const factory$j = detail => {\n      const {attributes, ...domWithoutAttributes} = detail.dom;\n      return {\n        uid: detail.uid,\n        dom: {\n          tag: 'div',\n          attributes: {\n            role: 'presentation',\n            ...attributes\n          },\n          ...domWithoutAttributes\n        },\n        components: detail.components,\n        behaviours: get$3(detail.containerBehaviours),\n        events: detail.events,\n        domModification: detail.domModification,\n        eventOrder: detail.eventOrder\n      };\n    };\n    const Container = single({\n      name: 'Container',\n      factory: factory$j,\n      configFields: [\n        defaulted('components', []),\n        field('containerBehaviours', []),\n        defaulted('events', {}),\n        defaulted('domModification', {}),\n        defaulted('eventOrder', {})\n      ]\n    });\n\n    const takeover = root => {\n      const isAboveRoot = el => parent(root.element).fold(always, parent => eq(el, parent));\n      const registry = Registry();\n      const lookup = (eventName, target) => registry.find(isAboveRoot, eventName, target);\n      const domEvents = setup$d(root.element, {\n        triggerEvent: (eventName, event) => {\n          return monitorEvent(eventName, event.target, logger => triggerUntilStopped(lookup, eventName, event, logger));\n        }\n      });\n      const systemApi = {\n        debugInfo: constant$1('real'),\n        triggerEvent: (eventName, target, data) => {\n          monitorEvent(eventName, target, logger => triggerOnUntilStopped(lookup, eventName, data, target, logger));\n        },\n        triggerFocus: (target, originator) => {\n          read$1(target).fold(() => {\n            focus$3(target);\n          }, _alloyId => {\n            monitorEvent(focus$4(), target, logger => {\n              triggerHandler(lookup, focus$4(), {\n                originator,\n                kill: noop,\n                prevent: noop,\n                target\n              }, target, logger);\n              return false;\n            });\n          });\n        },\n        triggerEscape: (comp, simulatedEvent) => {\n          systemApi.triggerEvent('keydown', comp.element, simulatedEvent.event);\n        },\n        getByUid: uid => {\n          return getByUid(uid);\n        },\n        getByDom: elem => {\n          return getByDom(elem);\n        },\n        build: build$1,\n        buildOrPatch: buildOrPatch,\n        addToGui: c => {\n          add(c);\n        },\n        removeFromGui: c => {\n          remove(c);\n        },\n        addToWorld: c => {\n          addToWorld(c);\n        },\n        removeFromWorld: c => {\n          removeFromWorld(c);\n        },\n        broadcast: message => {\n          broadcast$1(message);\n        },\n        broadcastOn: (channels, message) => {\n          broadcastOn(channels, message);\n        },\n        broadcastEvent: (eventName, event) => {\n          broadcastEvent(eventName, event);\n        },\n        isConnected: always\n      };\n      const addToWorld = component => {\n        component.connect(systemApi);\n        if (!isText(component.element)) {\n          registry.register(component);\n          each$1(component.components(), addToWorld);\n          systemApi.triggerEvent(systemInit(), component.element, { target: component.element });\n        }\n      };\n      const removeFromWorld = component => {\n        if (!isText(component.element)) {\n          each$1(component.components(), removeFromWorld);\n          registry.unregister(component);\n        }\n        component.disconnect();\n      };\n      const add = component => {\n        attach(root, component);\n      };\n      const remove = component => {\n        detach(component);\n      };\n      const destroy = () => {\n        domEvents.unbind();\n        remove$5(root.element);\n      };\n      const broadcastData = data => {\n        const receivers = registry.filter(receive());\n        each$1(receivers, receiver => {\n          const descHandler = receiver.descHandler;\n          const handler = getCurried(descHandler);\n          handler(data);\n        });\n      };\n      const broadcast$1 = message => {\n        broadcastData({\n          universal: true,\n          data: message\n        });\n      };\n      const broadcastOn = (channels, message) => {\n        broadcastData({\n          universal: false,\n          channels,\n          data: message\n        });\n      };\n      const broadcastEvent = (eventName, event) => {\n        const listeners = registry.filter(eventName);\n        return broadcast(listeners, event);\n      };\n      const getByUid = uid => registry.getById(uid).fold(() => Result.error(new Error('Could not find component with uid: \"' + uid + '\" in system.')), Result.value);\n      const getByDom = elem => {\n        const uid = read$1(elem).getOr('not found');\n        return getByUid(uid);\n      };\n      addToWorld(root);\n      return {\n        root,\n        element: root.element,\n        destroy,\n        add,\n        remove,\n        getByUid,\n        getByDom,\n        addToWorld,\n        removeFromWorld,\n        broadcast: broadcast$1,\n        broadcastOn,\n        broadcastEvent\n      };\n    };\n\n    const renderBar = (spec, backstage) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-bar',\n          'tox-form__controls-h-stack'\n        ]\n      },\n      components: map$2(spec.items, backstage.interpreter)\n    });\n\n    const schema$j = constant$1([\n      defaulted('prefix', 'form-field'),\n      field('fieldBehaviours', [\n        Composing,\n        Representing\n      ])\n    ]);\n    const parts$d = constant$1([\n      optional({\n        schema: [required$1('dom')],\n        name: 'label'\n      }),\n      optional({\n        factory: {\n          sketch: spec => {\n            return {\n              uid: spec.uid,\n              dom: {\n                tag: 'span',\n                styles: { display: 'none' },\n                attributes: { 'aria-hidden': 'true' },\n                innerHtml: spec.text\n              }\n            };\n          }\n        },\n        schema: [required$1('text')],\n        name: 'aria-descriptor'\n      }),\n      required({\n        factory: {\n          sketch: spec => {\n            const excludeFactory = exclude(spec, ['factory']);\n            return spec.factory.sketch(excludeFactory);\n          }\n        },\n        schema: [required$1('factory')],\n        name: 'field'\n      })\n    ]);\n\n    const factory$i = (detail, components, _spec, _externals) => {\n      const behaviours = augment(detail.fieldBehaviours, [\n        Composing.config({\n          find: container => {\n            return getPart(container, detail, 'field');\n          }\n        }),\n        Representing.config({\n          store: {\n            mode: 'manual',\n            getValue: field => {\n              return Composing.getCurrent(field).bind(Representing.getValue);\n            },\n            setValue: (field, value) => {\n              Composing.getCurrent(field).each(current => {\n                Representing.setValue(current, value);\n              });\n            }\n          }\n        })\n      ]);\n      const events = derive$2([runOnAttached((component, _simulatedEvent) => {\n          const ps = getParts(component, detail, [\n            'label',\n            'field',\n            'aria-descriptor'\n          ]);\n          ps.field().each(field => {\n            const id = generate$6(detail.prefix);\n            ps.label().each(label => {\n              set$9(label.element, 'for', id);\n              set$9(field.element, 'id', id);\n            });\n            ps['aria-descriptor']().each(descriptor => {\n              const descriptorId = generate$6(detail.prefix);\n              set$9(descriptor.element, 'id', descriptorId);\n              set$9(field.element, 'aria-describedby', descriptorId);\n            });\n          });\n        })]);\n      const apis = {\n        getField: container => getPart(container, detail, 'field'),\n        getLabel: container => getPart(container, detail, 'label')\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours,\n        events,\n        apis\n      };\n    };\n    const FormField = composite({\n      name: 'FormField',\n      configFields: schema$j(),\n      partFields: parts$d(),\n      factory: factory$i,\n      apis: {\n        getField: (apis, comp) => apis.getField(comp),\n        getLabel: (apis, comp) => apis.getLabel(comp)\n      }\n    });\n\n    const exhibit$2 = (base, tabConfig) => nu$7({\n      attributes: wrapAll([{\n          key: tabConfig.tabAttr,\n          value: 'true'\n        }])\n    });\n\n    var ActiveTabstopping = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit$2\n    });\n\n    var TabstopSchema = [defaulted('tabAttr', 'data-alloy-tabstop')];\n\n    const Tabstopping = create$4({\n      fields: TabstopSchema,\n      name: 'tabstopping',\n      active: ActiveTabstopping\n    });\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.html.Entities');\n\n    const renderFormFieldWith = (pLabel, pField, extraClasses, extraBehaviours) => {\n      const spec = renderFormFieldSpecWith(pLabel, pField, extraClasses, extraBehaviours);\n      return FormField.sketch(spec);\n    };\n    const renderFormField = (pLabel, pField) => renderFormFieldWith(pLabel, pField, [], []);\n    const renderFormFieldSpecWith = (pLabel, pField, extraClasses, extraBehaviours) => ({\n      dom: renderFormFieldDomWith(extraClasses),\n      components: pLabel.toArray().concat([pField]),\n      fieldBehaviours: derive$1(extraBehaviours)\n    });\n    const renderFormFieldDom = () => renderFormFieldDomWith([]);\n    const renderFormFieldDomWith = extraClasses => ({\n      tag: 'div',\n      classes: ['tox-form__group'].concat(extraClasses)\n    });\n    const renderLabel$3 = (label, providersBackstage) => FormField.parts.label({\n      dom: {\n        tag: 'label',\n        classes: ['tox-label']\n      },\n      components: [text$2(providersBackstage.translate(label))]\n    });\n\n    const formChangeEvent = generate$6('form-component-change');\n    const formCloseEvent = generate$6('form-close');\n    const formCancelEvent = generate$6('form-cancel');\n    const formActionEvent = generate$6('form-action');\n    const formSubmitEvent = generate$6('form-submit');\n    const formBlockEvent = generate$6('form-block');\n    const formUnblockEvent = generate$6('form-unblock');\n    const formTabChangeEvent = generate$6('form-tabchange');\n    const formResizeEvent = generate$6('form-resize');\n\n    const renderCollection = (spec, providersBackstage, initialData) => {\n      const pLabel = spec.label.map(label => renderLabel$3(label, providersBackstage));\n      const icons = providersBackstage.icons();\n      const getIcon = icon => {\n        var _a;\n        return (_a = icons[icon]) !== null && _a !== void 0 ? _a : icon;\n      };\n      const runOnItem = f => (comp, se) => {\n        closest$1(se.event.target, '[data-collection-item-value]').each(target => {\n          f(comp, se, target, get$f(target, 'data-collection-item-value'));\n        });\n      };\n      const setContents = (comp, items) => {\n        const htmlLines = map$2(items, item => {\n          const itemText = global$8.translate(item.text);\n          const textContent = spec.columns === 1 ? `<div class=\"tox-collection__item-label\">${ itemText }</div>` : '';\n          const iconContent = `<div class=\"tox-collection__item-icon\">${ getIcon(item.icon) }</div>`;\n          const mapItemName = {\n            '_': ' ',\n            ' - ': ' ',\n            '-': ' '\n          };\n          const ariaLabel = itemText.replace(/\\_| \\- |\\-/g, match => mapItemName[match]);\n          const disabledClass = providersBackstage.isDisabled() ? ' tox-collection__item--state-disabled' : '';\n          return `<div class=\"tox-collection__item${ disabledClass }\" tabindex=\"-1\" data-collection-item-value=\"${ global$3.encodeAllRaw(item.value) }\" title=\"${ ariaLabel }\" aria-label=\"${ ariaLabel }\">${ iconContent }${ textContent }</div>`;\n        });\n        const chunks = spec.columns !== 'auto' && spec.columns > 1 ? chunk$1(htmlLines, spec.columns) : [htmlLines];\n        const html = map$2(chunks, ch => `<div class=\"tox-collection__group\">${ ch.join('') }</div>`);\n        set$6(comp.element, html.join(''));\n      };\n      const onClick = runOnItem((comp, se, tgt, itemValue) => {\n        se.stop();\n        if (!providersBackstage.isDisabled()) {\n          emitWith(comp, formActionEvent, {\n            name: spec.name,\n            value: itemValue\n          });\n        }\n      });\n      const collectionEvents = [\n        run$1(mouseover(), runOnItem((comp, se, tgt) => {\n          focus$3(tgt);\n        })),\n        run$1(click(), onClick),\n        run$1(tap(), onClick),\n        run$1(focusin(), runOnItem((comp, se, tgt) => {\n          descendant(comp.element, '.' + activeClass).each(currentActive => {\n            remove$2(currentActive, activeClass);\n          });\n          add$2(tgt, activeClass);\n        })),\n        run$1(focusout(), runOnItem(comp => {\n          descendant(comp.element, '.' + activeClass).each(currentActive => {\n            remove$2(currentActive, activeClass);\n          });\n        })),\n        runOnExecute$1(runOnItem((comp, se, tgt, itemValue) => {\n          emitWith(comp, formActionEvent, {\n            name: spec.name,\n            value: itemValue\n          });\n        }))\n      ];\n      const iterCollectionItems = (comp, applyAttributes) => map$2(descendants(comp.element, '.tox-collection__item'), applyAttributes);\n      const pField = FormField.parts.field({\n        dom: {\n          tag: 'div',\n          classes: ['tox-collection'].concat(spec.columns !== 1 ? ['tox-collection--grid'] : ['tox-collection--list'])\n        },\n        components: [],\n        factory: { sketch: identity },\n        behaviours: derive$1([\n          Disabling.config({\n            disabled: providersBackstage.isDisabled,\n            onDisabled: comp => {\n              iterCollectionItems(comp, childElm => {\n                add$2(childElm, 'tox-collection__item--state-disabled');\n                set$9(childElm, 'aria-disabled', true);\n              });\n            },\n            onEnabled: comp => {\n              iterCollectionItems(comp, childElm => {\n                remove$2(childElm, 'tox-collection__item--state-disabled');\n                remove$7(childElm, 'aria-disabled');\n              });\n            }\n          }),\n          receivingConfig(),\n          Replacing.config({}),\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: initialData.getOr([])\n            },\n            onSetValue: (comp, items) => {\n              setContents(comp, items);\n              if (spec.columns === 'auto') {\n                detectSize(comp, 5, 'tox-collection__item').each(({numRows, numColumns}) => {\n                  Keying.setGridSize(comp, numRows, numColumns);\n                });\n              }\n              emit(comp, formResizeEvent);\n            }\n          }),\n          Tabstopping.config({}),\n          Keying.config(deriveCollectionMovement(spec.columns, 'normal')),\n          config('collection-events', collectionEvents)\n        ]),\n        eventOrder: {\n          [execute$5()]: [\n            'disabling',\n            'alloy.base.behaviour',\n            'collection-events'\n          ]\n        }\n      });\n      const extraClasses = ['tox-form__group--collection'];\n      return renderFormFieldWith(pLabel, pField, extraClasses, []);\n    };\n\n    const ariaElements = [\n      'input',\n      'textarea'\n    ];\n    const isAriaElement = elem => {\n      const name = name$3(elem);\n      return contains$2(ariaElements, name);\n    };\n    const markValid = (component, invalidConfig) => {\n      const elem = invalidConfig.getRoot(component).getOr(component.element);\n      remove$2(elem, invalidConfig.invalidClass);\n      invalidConfig.notify.each(notifyInfo => {\n        if (isAriaElement(component.element)) {\n          set$9(component.element, 'aria-invalid', false);\n        }\n        notifyInfo.getContainer(component).each(container => {\n          set$6(container, notifyInfo.validHtml);\n        });\n        notifyInfo.onValid(component);\n      });\n    };\n    const markInvalid = (component, invalidConfig, invalidState, text) => {\n      const elem = invalidConfig.getRoot(component).getOr(component.element);\n      add$2(elem, invalidConfig.invalidClass);\n      invalidConfig.notify.each(notifyInfo => {\n        if (isAriaElement(component.element)) {\n          set$9(component.element, 'aria-invalid', true);\n        }\n        notifyInfo.getContainer(component).each(container => {\n          set$6(container, text);\n        });\n        notifyInfo.onInvalid(component, text);\n      });\n    };\n    const query = (component, invalidConfig, _invalidState) => invalidConfig.validator.fold(() => Future.pure(Result.value(true)), validatorInfo => validatorInfo.validate(component));\n    const run = (component, invalidConfig, invalidState) => {\n      invalidConfig.notify.each(notifyInfo => {\n        notifyInfo.onValidate(component);\n      });\n      return query(component, invalidConfig).map(valid => {\n        if (component.getSystem().isConnected()) {\n          return valid.fold(err => {\n            markInvalid(component, invalidConfig, invalidState, err);\n            return Result.error(err);\n          }, v => {\n            markValid(component, invalidConfig);\n            return Result.value(v);\n          });\n        } else {\n          return Result.error('No longer in system');\n        }\n      });\n    };\n    const isInvalid = (component, invalidConfig) => {\n      const elem = invalidConfig.getRoot(component).getOr(component.element);\n      return has(elem, invalidConfig.invalidClass);\n    };\n\n    var InvalidateApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        markValid: markValid,\n        markInvalid: markInvalid,\n        query: query,\n        run: run,\n        isInvalid: isInvalid\n    });\n\n    const events$8 = (invalidConfig, invalidState) => invalidConfig.validator.map(validatorInfo => derive$2([run$1(validatorInfo.onEvent, component => {\n        run(component, invalidConfig, invalidState).get(identity);\n      })].concat(validatorInfo.validateOnLoad ? [runOnAttached(component => {\n        run(component, invalidConfig, invalidState).get(noop);\n      })] : []))).getOr({});\n\n    var ActiveInvalidate = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$8\n    });\n\n    var InvalidateSchema = [\n      required$1('invalidClass'),\n      defaulted('getRoot', Optional.none),\n      optionObjOf('notify', [\n        defaulted('aria', 'alert'),\n        defaulted('getContainer', Optional.none),\n        defaulted('validHtml', ''),\n        onHandler('onValid'),\n        onHandler('onInvalid'),\n        onHandler('onValidate')\n      ]),\n      optionObjOf('validator', [\n        required$1('validate'),\n        defaulted('onEvent', 'input'),\n        defaulted('validateOnLoad', true)\n      ])\n    ];\n\n    const Invalidating = create$4({\n      fields: InvalidateSchema,\n      name: 'invalidating',\n      active: ActiveInvalidate,\n      apis: InvalidateApis,\n      extra: {\n        validation: validator => {\n          return component => {\n            const v = Representing.getValue(component);\n            return Future.pure(validator(v));\n          };\n        }\n      }\n    });\n\n    const exhibit$1 = () => nu$7({\n      styles: {\n        '-webkit-user-select': 'none',\n        'user-select': 'none',\n        '-ms-user-select': 'none',\n        '-moz-user-select': '-moz-none'\n      },\n      attributes: { unselectable: 'on' }\n    });\n    const events$7 = () => derive$2([abort(selectstart(), always)]);\n\n    var ActiveUnselecting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$7,\n        exhibit: exhibit$1\n    });\n\n    const Unselecting = create$4({\n      fields: [],\n      name: 'unselecting',\n      active: ActiveUnselecting\n    });\n\n    const renderPanelButton = (spec, sharedBackstage) => Dropdown.sketch({\n      dom: spec.dom,\n      components: spec.components,\n      toggleClass: 'mce-active',\n      dropdownBehaviours: derive$1([\n        DisablingConfigs.button(sharedBackstage.providers.isDisabled),\n        receivingConfig(),\n        Unselecting.config({}),\n        Tabstopping.config({})\n      ]),\n      layouts: spec.layouts,\n      sandboxClasses: ['tox-dialog__popups'],\n      lazySink: sharedBackstage.getSink,\n      fetch: comp => Future.nu(callback => spec.fetch(callback)).map(items => Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'), items, value => {\n        spec.onItemAction(comp, value);\n      }, spec.columns, spec.presets, ItemResponse$1.CLOSE_ON_EXECUTE, never, sharedBackstage.providers), { movement: deriveMenuMovement(spec.columns, spec.presets) })))),\n      parts: { menu: part(false, 1, spec.presets) }\n    });\n\n    const colorInputChangeEvent = generate$6('color-input-change');\n    const colorSwatchChangeEvent = generate$6('color-swatch-change');\n    const colorPickerCancelEvent = generate$6('color-picker-cancel');\n    const renderColorInput = (spec, sharedBackstage, colorInputBackstage, initialData) => {\n      const pField = FormField.parts.field({\n        factory: Input,\n        inputClasses: ['tox-textfield'],\n        data: initialData,\n        onSetValue: c => Invalidating.run(c).get(noop),\n        inputBehaviours: derive$1([\n          Disabling.config({ disabled: sharedBackstage.providers.isDisabled }),\n          receivingConfig(),\n          Tabstopping.config({}),\n          Invalidating.config({\n            invalidClass: 'tox-textbox-field-invalid',\n            getRoot: comp => parentElement(comp.element),\n            notify: {\n              onValid: comp => {\n                const val = Representing.getValue(comp);\n                emitWith(comp, colorInputChangeEvent, { color: val });\n              }\n            },\n            validator: {\n              validateOnLoad: false,\n              validate: input => {\n                const inputValue = Representing.getValue(input);\n                if (inputValue.length === 0) {\n                  return Future.pure(Result.value(true));\n                } else {\n                  const span = SugarElement.fromTag('span');\n                  set$8(span, 'background-color', inputValue);\n                  const res = getRaw(span, 'background-color').fold(() => Result.error('blah'), _ => Result.value(inputValue));\n                  return Future.pure(res);\n                }\n              }\n            }\n          })\n        ]),\n        selectOnFocus: false\n      });\n      const pLabel = spec.label.map(label => renderLabel$3(label, sharedBackstage.providers));\n      const emitSwatchChange = (colorBit, value) => {\n        emitWith(colorBit, colorSwatchChangeEvent, { value });\n      };\n      const onItemAction = (comp, value) => {\n        memColorButton.getOpt(comp).each(colorBit => {\n          if (value === 'custom') {\n            colorInputBackstage.colorPicker(valueOpt => {\n              valueOpt.fold(() => emit(colorBit, colorPickerCancelEvent), value => {\n                emitSwatchChange(colorBit, value);\n                addColor(spec.storageKey, value);\n              });\n            }, '#ffffff');\n          } else if (value === 'remove') {\n            emitSwatchChange(colorBit, '');\n          } else {\n            emitSwatchChange(colorBit, value);\n          }\n        });\n      };\n      const memColorButton = record(renderPanelButton({\n        dom: {\n          tag: 'span',\n          attributes: { 'aria-label': sharedBackstage.providers.translate('Color swatch') }\n        },\n        layouts: {\n          onRtl: () => [\n            southwest$2,\n            southeast$2,\n            south$2\n          ],\n          onLtr: () => [\n            southeast$2,\n            southwest$2,\n            south$2\n          ]\n        },\n        components: [],\n        fetch: getFetch$1(colorInputBackstage.getColors(spec.storageKey), spec.storageKey, colorInputBackstage.hasCustomColors()),\n        columns: colorInputBackstage.getColorCols(spec.storageKey),\n        presets: 'color',\n        onItemAction\n      }, sharedBackstage));\n      return FormField.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: pLabel.toArray().concat([{\n            dom: {\n              tag: 'div',\n              classes: ['tox-color-input']\n            },\n            components: [\n              pField,\n              memColorButton.asSpec()\n            ]\n          }]),\n        fieldBehaviours: derive$1([config('form-field-events', [\n            run$1(colorInputChangeEvent, (comp, se) => {\n              memColorButton.getOpt(comp).each(colorButton => {\n                set$8(colorButton.element, 'background-color', se.event.color);\n              });\n              emitWith(comp, formChangeEvent, { name: spec.name });\n            }),\n            run$1(colorSwatchChangeEvent, (comp, se) => {\n              FormField.getField(comp).each(field => {\n                Representing.setValue(field, se.event.value);\n                Composing.getCurrent(comp).each(Focusing.focus);\n              });\n            }),\n            run$1(colorPickerCancelEvent, (comp, _se) => {\n              FormField.getField(comp).each(_field => {\n                Composing.getCurrent(comp).each(Focusing.focus);\n              });\n            })\n          ])])\n      });\n    };\n\n    const labelPart = optional({\n      schema: [required$1('dom')],\n      name: 'label'\n    });\n    const edgePart = name => optional({\n      name: '' + name + '-edge',\n      overrides: detail => {\n        const action = detail.model.manager.edgeActions[name];\n        return action.fold(() => ({}), a => ({\n          events: derive$2([\n            runActionExtra(touchstart(), (comp, se, d) => a(comp, d), [detail]),\n            runActionExtra(mousedown(), (comp, se, d) => a(comp, d), [detail]),\n            runActionExtra(mousemove(), (comp, se, det) => {\n              if (det.mouseIsDown.get()) {\n                a(comp, det);\n              }\n            }, [detail])\n          ])\n        }));\n      }\n    });\n    const tlEdgePart = edgePart('top-left');\n    const tedgePart = edgePart('top');\n    const trEdgePart = edgePart('top-right');\n    const redgePart = edgePart('right');\n    const brEdgePart = edgePart('bottom-right');\n    const bedgePart = edgePart('bottom');\n    const blEdgePart = edgePart('bottom-left');\n    const ledgePart = edgePart('left');\n    const thumbPart = required({\n      name: 'thumb',\n      defaults: constant$1({ dom: { styles: { position: 'absolute' } } }),\n      overrides: detail => {\n        return {\n          events: derive$2([\n            redirectToPart(touchstart(), detail, 'spectrum'),\n            redirectToPart(touchmove(), detail, 'spectrum'),\n            redirectToPart(touchend(), detail, 'spectrum'),\n            redirectToPart(mousedown(), detail, 'spectrum'),\n            redirectToPart(mousemove(), detail, 'spectrum'),\n            redirectToPart(mouseup(), detail, 'spectrum')\n          ])\n        };\n      }\n    });\n    const isShift = event => isShift$1(event.event);\n    const spectrumPart = required({\n      schema: [customField('mouseIsDown', () => Cell(false))],\n      name: 'spectrum',\n      overrides: detail => {\n        const modelDetail = detail.model;\n        const model = modelDetail.manager;\n        const setValueFrom = (component, simulatedEvent) => model.getValueFromEvent(simulatedEvent).map(value => model.setValueFrom(component, detail, value));\n        return {\n          behaviours: derive$1([\n            Keying.config({\n              mode: 'special',\n              onLeft: (spectrum, event) => model.onLeft(spectrum, detail, isShift(event)),\n              onRight: (spectrum, event) => model.onRight(spectrum, detail, isShift(event)),\n              onUp: (spectrum, event) => model.onUp(spectrum, detail, isShift(event)),\n              onDown: (spectrum, event) => model.onDown(spectrum, detail, isShift(event))\n            }),\n            Tabstopping.config({}),\n            Focusing.config({})\n          ]),\n          events: derive$2([\n            run$1(touchstart(), setValueFrom),\n            run$1(touchmove(), setValueFrom),\n            run$1(mousedown(), setValueFrom),\n            run$1(mousemove(), (spectrum, se) => {\n              if (detail.mouseIsDown.get()) {\n                setValueFrom(spectrum, se);\n              }\n            })\n          ])\n        };\n      }\n    });\n    var SliderParts = [\n      labelPart,\n      ledgePart,\n      redgePart,\n      tedgePart,\n      bedgePart,\n      tlEdgePart,\n      trEdgePart,\n      blEdgePart,\n      brEdgePart,\n      thumbPart,\n      spectrumPart\n    ];\n\n    const _sliderChangeEvent = 'slider.change.value';\n    const sliderChangeEvent = constant$1(_sliderChangeEvent);\n    const isTouchEvent$2 = evt => evt.type.indexOf('touch') !== -1;\n    const getEventSource = simulatedEvent => {\n      const evt = simulatedEvent.event.raw;\n      if (isTouchEvent$2(evt)) {\n        const touchEvent = evt;\n        return touchEvent.touches !== undefined && touchEvent.touches.length === 1 ? Optional.some(touchEvent.touches[0]).map(t => SugarPosition(t.clientX, t.clientY)) : Optional.none();\n      } else {\n        const mouseEvent = evt;\n        return mouseEvent.clientX !== undefined ? Optional.some(mouseEvent).map(me => SugarPosition(me.clientX, me.clientY)) : Optional.none();\n      }\n    };\n\n    const t = 'top', r = 'right', b = 'bottom', l = 'left';\n    const minX = detail => detail.model.minX;\n    const minY = detail => detail.model.minY;\n    const min1X = detail => detail.model.minX - 1;\n    const min1Y = detail => detail.model.minY - 1;\n    const maxX = detail => detail.model.maxX;\n    const maxY = detail => detail.model.maxY;\n    const max1X = detail => detail.model.maxX + 1;\n    const max1Y = detail => detail.model.maxY + 1;\n    const range = (detail, max, min) => max(detail) - min(detail);\n    const xRange = detail => range(detail, maxX, minX);\n    const yRange = detail => range(detail, maxY, minY);\n    const halfX = detail => xRange(detail) / 2;\n    const halfY = detail => yRange(detail) / 2;\n    const step = (detail, useMultiplier) => useMultiplier ? detail.stepSize * detail.speedMultiplier : detail.stepSize;\n    const snap = detail => detail.snapToGrid;\n    const snapStart = detail => detail.snapStart;\n    const rounded = detail => detail.rounded;\n    const hasEdge = (detail, edgeName) => detail[edgeName + '-edge'] !== undefined;\n    const hasLEdge = detail => hasEdge(detail, l);\n    const hasREdge = detail => hasEdge(detail, r);\n    const hasTEdge = detail => hasEdge(detail, t);\n    const hasBEdge = detail => hasEdge(detail, b);\n    const currentValue = detail => detail.model.value.get();\n\n    const xyValue = (x, y) => ({\n      x,\n      y\n    });\n    const fireSliderChange$3 = (component, value) => {\n      emitWith(component, sliderChangeEvent(), { value });\n    };\n    const setToTLEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(min1X(detail), min1Y(detail)));\n    };\n    const setToTEdge = (edge, detail) => {\n      fireSliderChange$3(edge, min1Y(detail));\n    };\n    const setToTEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(halfX(detail), min1Y(detail)));\n    };\n    const setToTREdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(max1X(detail), min1Y(detail)));\n    };\n    const setToREdge = (edge, detail) => {\n      fireSliderChange$3(edge, max1X(detail));\n    };\n    const setToREdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(max1X(detail), halfY(detail)));\n    };\n    const setToBREdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(max1X(detail), max1Y(detail)));\n    };\n    const setToBEdge = (edge, detail) => {\n      fireSliderChange$3(edge, max1Y(detail));\n    };\n    const setToBEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(halfX(detail), max1Y(detail)));\n    };\n    const setToBLEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(min1X(detail), max1Y(detail)));\n    };\n    const setToLEdge = (edge, detail) => {\n      fireSliderChange$3(edge, min1X(detail));\n    };\n    const setToLEdgeXY = (edge, detail) => {\n      fireSliderChange$3(edge, xyValue(min1X(detail), halfY(detail)));\n    };\n\n    const reduceBy = (value, min, max, step) => {\n      if (value < min) {\n        return value;\n      } else if (value > max) {\n        return max;\n      } else if (value === min) {\n        return min - 1;\n      } else {\n        return Math.max(min, value - step);\n      }\n    };\n    const increaseBy = (value, min, max, step) => {\n      if (value > max) {\n        return value;\n      } else if (value < min) {\n        return min;\n      } else if (value === max) {\n        return max + 1;\n      } else {\n        return Math.min(max, value + step);\n      }\n    };\n    const capValue = (value, min, max) => Math.max(min, Math.min(max, value));\n    const snapValueOf = (value, min, max, step, snapStart) => snapStart.fold(() => {\n      const initValue = value - min;\n      const extraValue = Math.round(initValue / step) * step;\n      return capValue(min + extraValue, min - 1, max + 1);\n    }, start => {\n      const remainder = (value - start) % step;\n      const adjustment = Math.round(remainder / step);\n      const rawSteps = Math.floor((value - start) / step);\n      const maxSteps = Math.floor((max - start) / step);\n      const numSteps = Math.min(maxSteps, rawSteps + adjustment);\n      const r = start + numSteps * step;\n      return Math.max(start, r);\n    });\n    const findOffsetOf = (value, min, max) => Math.min(max, Math.max(value, min)) - min;\n    const findValueOf = args => {\n      const {min, max, range, value, step, snap, snapStart, rounded, hasMinEdge, hasMaxEdge, minBound, maxBound, screenRange} = args;\n      const capMin = hasMinEdge ? min - 1 : min;\n      const capMax = hasMaxEdge ? max + 1 : max;\n      if (value < minBound) {\n        return capMin;\n      } else if (value > maxBound) {\n        return capMax;\n      } else {\n        const offset = findOffsetOf(value, minBound, maxBound);\n        const newValue = capValue(offset / screenRange * range + min, capMin, capMax);\n        if (snap && newValue >= min && newValue <= max) {\n          return snapValueOf(newValue, min, max, step, snapStart);\n        } else if (rounded) {\n          return Math.round(newValue);\n        } else {\n          return newValue;\n        }\n      }\n    };\n    const findOffsetOfValue$2 = args => {\n      const {min, max, range, value, hasMinEdge, hasMaxEdge, maxBound, maxOffset, centerMinEdge, centerMaxEdge} = args;\n      if (value < min) {\n        return hasMinEdge ? 0 : centerMinEdge;\n      } else if (value > max) {\n        return hasMaxEdge ? maxBound : centerMaxEdge;\n      } else {\n        return (value - min) / range * maxOffset;\n      }\n    };\n\n    const top = 'top', right = 'right', bottom = 'bottom', left = 'left', width = 'width', height = 'height';\n    const getBounds = component => component.element.dom.getBoundingClientRect();\n    const getBoundsProperty = (bounds, property) => bounds[property];\n    const getMinXBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, left);\n    };\n    const getMaxXBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, right);\n    };\n    const getMinYBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, top);\n    };\n    const getMaxYBounds = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, bottom);\n    };\n    const getXScreenRange = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, width);\n    };\n    const getYScreenRange = component => {\n      const bounds = getBounds(component);\n      return getBoundsProperty(bounds, height);\n    };\n    const getCenterOffsetOf = (componentMinEdge, componentMaxEdge, spectrumMinEdge) => (componentMinEdge + componentMaxEdge) / 2 - spectrumMinEdge;\n    const getXCenterOffSetOf = (component, spectrum) => {\n      const componentBounds = getBounds(component);\n      const spectrumBounds = getBounds(spectrum);\n      const componentMinEdge = getBoundsProperty(componentBounds, left);\n      const componentMaxEdge = getBoundsProperty(componentBounds, right);\n      const spectrumMinEdge = getBoundsProperty(spectrumBounds, left);\n      return getCenterOffsetOf(componentMinEdge, componentMaxEdge, spectrumMinEdge);\n    };\n    const getYCenterOffSetOf = (component, spectrum) => {\n      const componentBounds = getBounds(component);\n      const spectrumBounds = getBounds(spectrum);\n      const componentMinEdge = getBoundsProperty(componentBounds, top);\n      const componentMaxEdge = getBoundsProperty(componentBounds, bottom);\n      const spectrumMinEdge = getBoundsProperty(spectrumBounds, top);\n      return getCenterOffsetOf(componentMinEdge, componentMaxEdge, spectrumMinEdge);\n    };\n\n    const fireSliderChange$2 = (spectrum, value) => {\n      emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    const findValueOfOffset$1 = (spectrum, detail, left) => {\n      const args = {\n        min: minX(detail),\n        max: maxX(detail),\n        range: xRange(detail),\n        value: left,\n        step: step(detail),\n        snap: snap(detail),\n        snapStart: snapStart(detail),\n        rounded: rounded(detail),\n        hasMinEdge: hasLEdge(detail),\n        hasMaxEdge: hasREdge(detail),\n        minBound: getMinXBounds(spectrum),\n        maxBound: getMaxXBounds(spectrum),\n        screenRange: getXScreenRange(spectrum)\n      };\n      return findValueOf(args);\n    };\n    const setValueFrom$2 = (spectrum, detail, value) => {\n      const xValue = findValueOfOffset$1(spectrum, detail, value);\n      const sliderVal = xValue;\n      fireSliderChange$2(spectrum, sliderVal);\n      return xValue;\n    };\n    const setToMin$2 = (spectrum, detail) => {\n      const min = minX(detail);\n      fireSliderChange$2(spectrum, min);\n    };\n    const setToMax$2 = (spectrum, detail) => {\n      const max = maxX(detail);\n      fireSliderChange$2(spectrum, max);\n    };\n    const moveBy$2 = (direction, spectrum, detail, useMultiplier) => {\n      const f = direction > 0 ? increaseBy : reduceBy;\n      const xValue = f(currentValue(detail), minX(detail), maxX(detail), step(detail, useMultiplier));\n      fireSliderChange$2(spectrum, xValue);\n      return Optional.some(xValue);\n    };\n    const handleMovement$2 = direction => (spectrum, detail, useMultiplier) => moveBy$2(direction, spectrum, detail, useMultiplier).map(always);\n    const getValueFromEvent$2 = simulatedEvent => {\n      const pos = getEventSource(simulatedEvent);\n      return pos.map(p => p.left);\n    };\n    const findOffsetOfValue$1 = (spectrum, detail, value, minEdge, maxEdge) => {\n      const minOffset = 0;\n      const maxOffset = getXScreenRange(spectrum);\n      const centerMinEdge = minEdge.bind(edge => Optional.some(getXCenterOffSetOf(edge, spectrum))).getOr(minOffset);\n      const centerMaxEdge = maxEdge.bind(edge => Optional.some(getXCenterOffSetOf(edge, spectrum))).getOr(maxOffset);\n      const args = {\n        min: minX(detail),\n        max: maxX(detail),\n        range: xRange(detail),\n        value,\n        hasMinEdge: hasLEdge(detail),\n        hasMaxEdge: hasREdge(detail),\n        minBound: getMinXBounds(spectrum),\n        minOffset,\n        maxBound: getMaxXBounds(spectrum),\n        maxOffset,\n        centerMinEdge,\n        centerMaxEdge\n      };\n      return findOffsetOfValue$2(args);\n    };\n    const findPositionOfValue$1 = (slider, spectrum, value, minEdge, maxEdge, detail) => {\n      const offset = findOffsetOfValue$1(spectrum, detail, value, minEdge, maxEdge);\n      return getMinXBounds(spectrum) - getMinXBounds(slider) + offset;\n    };\n    const setPositionFromValue$2 = (slider, thumb, detail, edges) => {\n      const value = currentValue(detail);\n      const pos = findPositionOfValue$1(slider, edges.getSpectrum(slider), value, edges.getLeftEdge(slider), edges.getRightEdge(slider), detail);\n      const thumbRadius = get$c(thumb.element) / 2;\n      set$8(thumb.element, 'left', pos - thumbRadius + 'px');\n    };\n    const onLeft$2 = handleMovement$2(-1);\n    const onRight$2 = handleMovement$2(1);\n    const onUp$2 = Optional.none;\n    const onDown$2 = Optional.none;\n    const edgeActions$2 = {\n      'top-left': Optional.none(),\n      'top': Optional.none(),\n      'top-right': Optional.none(),\n      'right': Optional.some(setToREdge),\n      'bottom-right': Optional.none(),\n      'bottom': Optional.none(),\n      'bottom-left': Optional.none(),\n      'left': Optional.some(setToLEdge)\n    };\n\n    var HorizontalModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom$2,\n        setToMin: setToMin$2,\n        setToMax: setToMax$2,\n        findValueOfOffset: findValueOfOffset$1,\n        getValueFromEvent: getValueFromEvent$2,\n        findPositionOfValue: findPositionOfValue$1,\n        setPositionFromValue: setPositionFromValue$2,\n        onLeft: onLeft$2,\n        onRight: onRight$2,\n        onUp: onUp$2,\n        onDown: onDown$2,\n        edgeActions: edgeActions$2\n    });\n\n    const fireSliderChange$1 = (spectrum, value) => {\n      emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    const findValueOfOffset = (spectrum, detail, top) => {\n      const args = {\n        min: minY(detail),\n        max: maxY(detail),\n        range: yRange(detail),\n        value: top,\n        step: step(detail),\n        snap: snap(detail),\n        snapStart: snapStart(detail),\n        rounded: rounded(detail),\n        hasMinEdge: hasTEdge(detail),\n        hasMaxEdge: hasBEdge(detail),\n        minBound: getMinYBounds(spectrum),\n        maxBound: getMaxYBounds(spectrum),\n        screenRange: getYScreenRange(spectrum)\n      };\n      return findValueOf(args);\n    };\n    const setValueFrom$1 = (spectrum, detail, value) => {\n      const yValue = findValueOfOffset(spectrum, detail, value);\n      const sliderVal = yValue;\n      fireSliderChange$1(spectrum, sliderVal);\n      return yValue;\n    };\n    const setToMin$1 = (spectrum, detail) => {\n      const min = minY(detail);\n      fireSliderChange$1(spectrum, min);\n    };\n    const setToMax$1 = (spectrum, detail) => {\n      const max = maxY(detail);\n      fireSliderChange$1(spectrum, max);\n    };\n    const moveBy$1 = (direction, spectrum, detail, useMultiplier) => {\n      const f = direction > 0 ? increaseBy : reduceBy;\n      const yValue = f(currentValue(detail), minY(detail), maxY(detail), step(detail, useMultiplier));\n      fireSliderChange$1(spectrum, yValue);\n      return Optional.some(yValue);\n    };\n    const handleMovement$1 = direction => (spectrum, detail, useMultiplier) => moveBy$1(direction, spectrum, detail, useMultiplier).map(always);\n    const getValueFromEvent$1 = simulatedEvent => {\n      const pos = getEventSource(simulatedEvent);\n      return pos.map(p => {\n        return p.top;\n      });\n    };\n    const findOffsetOfValue = (spectrum, detail, value, minEdge, maxEdge) => {\n      const minOffset = 0;\n      const maxOffset = getYScreenRange(spectrum);\n      const centerMinEdge = minEdge.bind(edge => Optional.some(getYCenterOffSetOf(edge, spectrum))).getOr(minOffset);\n      const centerMaxEdge = maxEdge.bind(edge => Optional.some(getYCenterOffSetOf(edge, spectrum))).getOr(maxOffset);\n      const args = {\n        min: minY(detail),\n        max: maxY(detail),\n        range: yRange(detail),\n        value,\n        hasMinEdge: hasTEdge(detail),\n        hasMaxEdge: hasBEdge(detail),\n        minBound: getMinYBounds(spectrum),\n        minOffset,\n        maxBound: getMaxYBounds(spectrum),\n        maxOffset,\n        centerMinEdge,\n        centerMaxEdge\n      };\n      return findOffsetOfValue$2(args);\n    };\n    const findPositionOfValue = (slider, spectrum, value, minEdge, maxEdge, detail) => {\n      const offset = findOffsetOfValue(spectrum, detail, value, minEdge, maxEdge);\n      return getMinYBounds(spectrum) - getMinYBounds(slider) + offset;\n    };\n    const setPositionFromValue$1 = (slider, thumb, detail, edges) => {\n      const value = currentValue(detail);\n      const pos = findPositionOfValue(slider, edges.getSpectrum(slider), value, edges.getTopEdge(slider), edges.getBottomEdge(slider), detail);\n      const thumbRadius = get$d(thumb.element) / 2;\n      set$8(thumb.element, 'top', pos - thumbRadius + 'px');\n    };\n    const onLeft$1 = Optional.none;\n    const onRight$1 = Optional.none;\n    const onUp$1 = handleMovement$1(-1);\n    const onDown$1 = handleMovement$1(1);\n    const edgeActions$1 = {\n      'top-left': Optional.none(),\n      'top': Optional.some(setToTEdge),\n      'top-right': Optional.none(),\n      'right': Optional.none(),\n      'bottom-right': Optional.none(),\n      'bottom': Optional.some(setToBEdge),\n      'bottom-left': Optional.none(),\n      'left': Optional.none()\n    };\n\n    var VerticalModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom$1,\n        setToMin: setToMin$1,\n        setToMax: setToMax$1,\n        findValueOfOffset: findValueOfOffset,\n        getValueFromEvent: getValueFromEvent$1,\n        findPositionOfValue: findPositionOfValue,\n        setPositionFromValue: setPositionFromValue$1,\n        onLeft: onLeft$1,\n        onRight: onRight$1,\n        onUp: onUp$1,\n        onDown: onDown$1,\n        edgeActions: edgeActions$1\n    });\n\n    const fireSliderChange = (spectrum, value) => {\n      emitWith(spectrum, sliderChangeEvent(), { value });\n    };\n    const sliderValue = (x, y) => ({\n      x,\n      y\n    });\n    const setValueFrom = (spectrum, detail, value) => {\n      const xValue = findValueOfOffset$1(spectrum, detail, value.left);\n      const yValue = findValueOfOffset(spectrum, detail, value.top);\n      const val = sliderValue(xValue, yValue);\n      fireSliderChange(spectrum, val);\n      return val;\n    };\n    const moveBy = (direction, isVerticalMovement, spectrum, detail, useMultiplier) => {\n      const f = direction > 0 ? increaseBy : reduceBy;\n      const xValue = isVerticalMovement ? currentValue(detail).x : f(currentValue(detail).x, minX(detail), maxX(detail), step(detail, useMultiplier));\n      const yValue = !isVerticalMovement ? currentValue(detail).y : f(currentValue(detail).y, minY(detail), maxY(detail), step(detail, useMultiplier));\n      fireSliderChange(spectrum, sliderValue(xValue, yValue));\n      return Optional.some(xValue);\n    };\n    const handleMovement = (direction, isVerticalMovement) => (spectrum, detail, useMultiplier) => moveBy(direction, isVerticalMovement, spectrum, detail, useMultiplier).map(always);\n    const setToMin = (spectrum, detail) => {\n      const mX = minX(detail);\n      const mY = minY(detail);\n      fireSliderChange(spectrum, sliderValue(mX, mY));\n    };\n    const setToMax = (spectrum, detail) => {\n      const mX = maxX(detail);\n      const mY = maxY(detail);\n      fireSliderChange(spectrum, sliderValue(mX, mY));\n    };\n    const getValueFromEvent = simulatedEvent => getEventSource(simulatedEvent);\n    const setPositionFromValue = (slider, thumb, detail, edges) => {\n      const value = currentValue(detail);\n      const xPos = findPositionOfValue$1(slider, edges.getSpectrum(slider), value.x, edges.getLeftEdge(slider), edges.getRightEdge(slider), detail);\n      const yPos = findPositionOfValue(slider, edges.getSpectrum(slider), value.y, edges.getTopEdge(slider), edges.getBottomEdge(slider), detail);\n      const thumbXRadius = get$c(thumb.element) / 2;\n      const thumbYRadius = get$d(thumb.element) / 2;\n      set$8(thumb.element, 'left', xPos - thumbXRadius + 'px');\n      set$8(thumb.element, 'top', yPos - thumbYRadius + 'px');\n    };\n    const onLeft = handleMovement(-1, false);\n    const onRight = handleMovement(1, false);\n    const onUp = handleMovement(-1, true);\n    const onDown = handleMovement(1, true);\n    const edgeActions = {\n      'top-left': Optional.some(setToTLEdgeXY),\n      'top': Optional.some(setToTEdgeXY),\n      'top-right': Optional.some(setToTREdgeXY),\n      'right': Optional.some(setToREdgeXY),\n      'bottom-right': Optional.some(setToBREdgeXY),\n      'bottom': Optional.some(setToBEdgeXY),\n      'bottom-left': Optional.some(setToBLEdgeXY),\n      'left': Optional.some(setToLEdgeXY)\n    };\n\n    var TwoDModel = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setValueFrom: setValueFrom,\n        setToMin: setToMin,\n        setToMax: setToMax,\n        getValueFromEvent: getValueFromEvent,\n        setPositionFromValue: setPositionFromValue,\n        onLeft: onLeft,\n        onRight: onRight,\n        onUp: onUp,\n        onDown: onDown,\n        edgeActions: edgeActions\n    });\n\n    const SliderSchema = [\n      defaulted('stepSize', 1),\n      defaulted('speedMultiplier', 10),\n      defaulted('onChange', noop),\n      defaulted('onChoose', noop),\n      defaulted('onInit', noop),\n      defaulted('onDragStart', noop),\n      defaulted('onDragEnd', noop),\n      defaulted('snapToGrid', false),\n      defaulted('rounded', true),\n      option$3('snapStart'),\n      requiredOf('model', choose$1('mode', {\n        x: [\n          defaulted('minX', 0),\n          defaulted('maxX', 100),\n          customField('value', spec => Cell(spec.mode.minX)),\n          required$1('getInitialValue'),\n          output$1('manager', HorizontalModel)\n        ],\n        y: [\n          defaulted('minY', 0),\n          defaulted('maxY', 100),\n          customField('value', spec => Cell(spec.mode.minY)),\n          required$1('getInitialValue'),\n          output$1('manager', VerticalModel)\n        ],\n        xy: [\n          defaulted('minX', 0),\n          defaulted('maxX', 100),\n          defaulted('minY', 0),\n          defaulted('maxY', 100),\n          customField('value', spec => Cell({\n            x: spec.mode.minX,\n            y: spec.mode.minY\n          })),\n          required$1('getInitialValue'),\n          output$1('manager', TwoDModel)\n        ]\n      })),\n      field('sliderBehaviours', [\n        Keying,\n        Representing\n      ]),\n      customField('mouseIsDown', () => Cell(false))\n    ];\n\n    const sketch$2 = (detail, components, _spec, _externals) => {\n      const getThumb = component => getPartOrDie(component, detail, 'thumb');\n      const getSpectrum = component => getPartOrDie(component, detail, 'spectrum');\n      const getLeftEdge = component => getPart(component, detail, 'left-edge');\n      const getRightEdge = component => getPart(component, detail, 'right-edge');\n      const getTopEdge = component => getPart(component, detail, 'top-edge');\n      const getBottomEdge = component => getPart(component, detail, 'bottom-edge');\n      const modelDetail = detail.model;\n      const model = modelDetail.manager;\n      const refresh = (slider, thumb) => {\n        model.setPositionFromValue(slider, thumb, detail, {\n          getLeftEdge,\n          getRightEdge,\n          getTopEdge,\n          getBottomEdge,\n          getSpectrum\n        });\n      };\n      const setValue = (slider, newValue) => {\n        modelDetail.value.set(newValue);\n        const thumb = getThumb(slider);\n        refresh(slider, thumb);\n      };\n      const changeValue = (slider, newValue) => {\n        setValue(slider, newValue);\n        const thumb = getThumb(slider);\n        detail.onChange(slider, thumb, newValue);\n        return Optional.some(true);\n      };\n      const resetToMin = slider => {\n        model.setToMin(slider, detail);\n      };\n      const resetToMax = slider => {\n        model.setToMax(slider, detail);\n      };\n      const choose = slider => {\n        const fireOnChoose = () => {\n          getPart(slider, detail, 'thumb').each(thumb => {\n            const value = modelDetail.value.get();\n            detail.onChoose(slider, thumb, value);\n          });\n        };\n        const wasDown = detail.mouseIsDown.get();\n        detail.mouseIsDown.set(false);\n        if (wasDown) {\n          fireOnChoose();\n        }\n      };\n      const onDragStart = (slider, simulatedEvent) => {\n        simulatedEvent.stop();\n        detail.mouseIsDown.set(true);\n        detail.onDragStart(slider, getThumb(slider));\n      };\n      const onDragEnd = (slider, simulatedEvent) => {\n        simulatedEvent.stop();\n        detail.onDragEnd(slider, getThumb(slider));\n        choose(slider);\n      };\n      const focusWidget = component => {\n        getPart(component, detail, 'spectrum').map(Keying.focusIn);\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.sliderBehaviours, [\n          Keying.config({\n            mode: 'special',\n            focusIn: focusWidget\n          }),\n          Representing.config({\n            store: {\n              mode: 'manual',\n              getValue: _ => {\n                return modelDetail.value.get();\n              },\n              setValue\n            }\n          }),\n          Receiving.config({ channels: { [mouseReleased()]: { onReceive: choose } } })\n        ]),\n        events: derive$2([\n          run$1(sliderChangeEvent(), (slider, simulatedEvent) => {\n            changeValue(slider, simulatedEvent.event.value);\n          }),\n          runOnAttached((slider, _simulatedEvent) => {\n            const getInitial = modelDetail.getInitialValue();\n            modelDetail.value.set(getInitial);\n            const thumb = getThumb(slider);\n            refresh(slider, thumb);\n            const spectrum = getSpectrum(slider);\n            detail.onInit(slider, thumb, spectrum, modelDetail.value.get());\n          }),\n          run$1(touchstart(), onDragStart),\n          run$1(touchend(), onDragEnd),\n          run$1(mousedown(), (component, event) => {\n            focusWidget(component);\n            onDragStart(component, event);\n          }),\n          run$1(mouseup(), onDragEnd)\n        ]),\n        apis: {\n          resetToMin,\n          resetToMax,\n          setValue,\n          refresh\n        },\n        domModification: { styles: { position: 'relative' } }\n      };\n    };\n\n    const Slider = composite({\n      name: 'Slider',\n      configFields: SliderSchema,\n      partFields: SliderParts,\n      factory: sketch$2,\n      apis: {\n        setValue: (apis, slider, value) => {\n          apis.setValue(slider, value);\n        },\n        resetToMin: (apis, slider) => {\n          apis.resetToMin(slider);\n        },\n        resetToMax: (apis, slider) => {\n          apis.resetToMax(slider);\n        },\n        refresh: (apis, slider) => {\n          apis.refresh(slider);\n        }\n      }\n    });\n\n    const fieldsUpdate = generate$6('rgb-hex-update');\n    const sliderUpdate = generate$6('slider-update');\n    const paletteUpdate = generate$6('palette-update');\n\n    const sliderFactory = (translate, getClass) => {\n      const spectrum = Slider.parts.spectrum({\n        dom: {\n          tag: 'div',\n          classes: [getClass('hue-slider-spectrum')],\n          attributes: { role: 'presentation' }\n        }\n      });\n      const thumb = Slider.parts.thumb({\n        dom: {\n          tag: 'div',\n          classes: [getClass('hue-slider-thumb')],\n          attributes: { role: 'presentation' }\n        }\n      });\n      return Slider.sketch({\n        dom: {\n          tag: 'div',\n          classes: [getClass('hue-slider')],\n          attributes: {\n            'role': 'slider',\n            'aria-valuemin': 0,\n            'aria-valuemax': 360,\n            'aria-valuenow': 120\n          }\n        },\n        rounded: false,\n        model: {\n          mode: 'y',\n          getInitialValue: constant$1(0)\n        },\n        components: [\n          spectrum,\n          thumb\n        ],\n        sliderBehaviours: derive$1([Focusing.config({})]),\n        onChange: (slider, _thumb, value) => {\n          set$9(slider.element, 'aria-valuenow', Math.floor(360 - value * 3.6));\n          emitWith(slider, sliderUpdate, { value });\n        }\n      });\n    };\n\n    const owner$1 = 'form';\n    const schema$i = [field('formBehaviours', [Representing])];\n    const getPartName$1 = name => '<alloy.field.' + name + '>';\n    const sketch$1 = fSpec => {\n      const parts = (() => {\n        const record = [];\n        const field = (name, config) => {\n          record.push(name);\n          return generateOne$1(owner$1, getPartName$1(name), config);\n        };\n        return {\n          field,\n          record: constant$1(record)\n        };\n      })();\n      const spec = fSpec(parts);\n      const partNames = parts.record();\n      const fieldParts = map$2(partNames, n => required({\n        name: n,\n        pname: getPartName$1(n)\n      }));\n      return composite$1(owner$1, schema$i, fieldParts, make$4, spec);\n    };\n    const toResult = (o, e) => o.fold(() => Result.error(e), Result.value);\n    const make$4 = (detail, components) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components,\n      behaviours: augment(detail.formBehaviours, [Representing.config({\n          store: {\n            mode: 'manual',\n            getValue: form => {\n              const resPs = getAllParts(form, detail);\n              return map$1(resPs, (resPThunk, pName) => resPThunk().bind(v => {\n                const opt = Composing.getCurrent(v);\n                return toResult(opt, new Error(`Cannot find a current component to extract the value from for form part '${ pName }': ` + element(v.element)));\n              }).map(Representing.getValue));\n            },\n            setValue: (form, values) => {\n              each(values, (newValue, key) => {\n                getPart(form, detail, key).each(wrapper => {\n                  Composing.getCurrent(wrapper).each(field => {\n                    Representing.setValue(field, newValue);\n                  });\n                });\n              });\n            }\n          }\n        })]),\n      apis: {\n        getField: (form, key) => {\n          return getPart(form, detail, key).bind(Composing.getCurrent);\n        }\n      }\n    });\n    const Form = {\n      getField: makeApi((apis, component, key) => apis.getField(component, key)),\n      sketch: sketch$1\n    };\n\n    const validInput = generate$6('valid-input');\n    const invalidInput = generate$6('invalid-input');\n    const validatingInput = generate$6('validating-input');\n    const translatePrefix = 'colorcustom.rgb.';\n    const rgbFormFactory = (translate, getClass, onValidHexx, onInvalidHexx) => {\n      const invalidation = (label, isValid) => Invalidating.config({\n        invalidClass: getClass('invalid'),\n        notify: {\n          onValidate: comp => {\n            emitWith(comp, validatingInput, { type: label });\n          },\n          onValid: comp => {\n            emitWith(comp, validInput, {\n              type: label,\n              value: Representing.getValue(comp)\n            });\n          },\n          onInvalid: comp => {\n            emitWith(comp, invalidInput, {\n              type: label,\n              value: Representing.getValue(comp)\n            });\n          }\n        },\n        validator: {\n          validate: comp => {\n            const value = Representing.getValue(comp);\n            const res = isValid(value) ? Result.value(true) : Result.error(translate('aria.input.invalid'));\n            return Future.pure(res);\n          },\n          validateOnLoad: false\n        }\n      });\n      const renderTextField = (isValid, name, label, description, data) => {\n        const helptext = translate(translatePrefix + 'range');\n        const pLabel = FormField.parts.label({\n          dom: {\n            tag: 'label',\n            attributes: { 'aria-label': description }\n          },\n          components: [text$2(label)]\n        });\n        const pField = FormField.parts.field({\n          data,\n          factory: Input,\n          inputAttributes: {\n            type: 'text',\n            ...name === 'hex' ? { 'aria-live': 'polite' } : {}\n          },\n          inputClasses: [getClass('textfield')],\n          inputBehaviours: derive$1([\n            invalidation(name, isValid),\n            Tabstopping.config({})\n          ]),\n          onSetValue: input => {\n            if (Invalidating.isInvalid(input)) {\n              const run = Invalidating.run(input);\n              run.get(noop);\n            }\n          }\n        });\n        const comps = [\n          pLabel,\n          pField\n        ];\n        const concats = name !== 'hex' ? [FormField.parts['aria-descriptor']({ text: helptext })] : [];\n        const components = comps.concat(concats);\n        return {\n          dom: {\n            tag: 'div',\n            attributes: { role: 'presentation' }\n          },\n          components\n        };\n      };\n      const copyRgbToHex = (form, rgba) => {\n        const hex = fromRgba(rgba);\n        Form.getField(form, 'hex').each(hexField => {\n          if (!Focusing.isFocused(hexField)) {\n            Representing.setValue(form, { hex: hex.value });\n          }\n        });\n        return hex;\n      };\n      const copyRgbToForm = (form, rgb) => {\n        const red = rgb.red;\n        const green = rgb.green;\n        const blue = rgb.blue;\n        Representing.setValue(form, {\n          red,\n          green,\n          blue\n        });\n      };\n      const memPreview = record({\n        dom: {\n          tag: 'div',\n          classes: [getClass('rgba-preview')],\n          styles: { 'background-color': 'white' },\n          attributes: { role: 'presentation' }\n        }\n      });\n      const updatePreview = (anyInSystem, hex) => {\n        memPreview.getOpt(anyInSystem).each(preview => {\n          set$8(preview.element, 'background-color', '#' + hex.value);\n        });\n      };\n      const factory = () => {\n        const state = {\n          red: Cell(Optional.some(255)),\n          green: Cell(Optional.some(255)),\n          blue: Cell(Optional.some(255)),\n          hex: Cell(Optional.some('ffffff'))\n        };\n        const copyHexToRgb = (form, hex) => {\n          const rgb = fromHex(hex);\n          copyRgbToForm(form, rgb);\n          setValueRgb(rgb);\n        };\n        const get = prop => state[prop].get();\n        const set = (prop, value) => {\n          state[prop].set(value);\n        };\n        const getValueRgb = () => get('red').bind(red => get('green').bind(green => get('blue').map(blue => rgbaColour(red, green, blue, 1))));\n        const setValueRgb = rgb => {\n          const red = rgb.red;\n          const green = rgb.green;\n          const blue = rgb.blue;\n          set('red', Optional.some(red));\n          set('green', Optional.some(green));\n          set('blue', Optional.some(blue));\n        };\n        const onInvalidInput = (form, simulatedEvent) => {\n          const data = simulatedEvent.event;\n          if (data.type !== 'hex') {\n            set(data.type, Optional.none());\n          } else {\n            onInvalidHexx(form);\n          }\n        };\n        const onValidHex = (form, value) => {\n          onValidHexx(form);\n          const hex = hexColour(value);\n          set('hex', Optional.some(hex.value));\n          const rgb = fromHex(hex);\n          copyRgbToForm(form, rgb);\n          setValueRgb(rgb);\n          emitWith(form, fieldsUpdate, { hex });\n          updatePreview(form, hex);\n        };\n        const onValidRgb = (form, prop, value) => {\n          const val = parseInt(value, 10);\n          set(prop, Optional.some(val));\n          getValueRgb().each(rgb => {\n            const hex = copyRgbToHex(form, rgb);\n            emitWith(form, fieldsUpdate, { hex });\n            updatePreview(form, hex);\n          });\n        };\n        const isHexInputEvent = data => data.type === 'hex';\n        const onValidInput = (form, simulatedEvent) => {\n          const data = simulatedEvent.event;\n          if (isHexInputEvent(data)) {\n            onValidHex(form, data.value);\n          } else {\n            onValidRgb(form, data.type, data.value);\n          }\n        };\n        const formPartStrings = key => ({\n          label: translate(translatePrefix + key + '.label'),\n          description: translate(translatePrefix + key + '.description')\n        });\n        const redStrings = formPartStrings('red');\n        const greenStrings = formPartStrings('green');\n        const blueStrings = formPartStrings('blue');\n        const hexStrings = formPartStrings('hex');\n        return deepMerge(Form.sketch(parts => ({\n          dom: {\n            tag: 'form',\n            classes: [getClass('rgb-form')],\n            attributes: { 'aria-label': translate('aria.color.picker') }\n          },\n          components: [\n            parts.field('red', FormField.sketch(renderTextField(isRgbaComponent, 'red', redStrings.label, redStrings.description, 255))),\n            parts.field('green', FormField.sketch(renderTextField(isRgbaComponent, 'green', greenStrings.label, greenStrings.description, 255))),\n            parts.field('blue', FormField.sketch(renderTextField(isRgbaComponent, 'blue', blueStrings.label, blueStrings.description, 255))),\n            parts.field('hex', FormField.sketch(renderTextField(isHexString, 'hex', hexStrings.label, hexStrings.description, 'ffffff'))),\n            memPreview.asSpec()\n          ],\n          formBehaviours: derive$1([\n            Invalidating.config({ invalidClass: getClass('form-invalid') }),\n            config('rgb-form-events', [\n              run$1(validInput, onValidInput),\n              run$1(invalidInput, onInvalidInput),\n              run$1(validatingInput, onInvalidInput)\n            ])\n          ])\n        })), {\n          apis: {\n            updateHex: (form, hex) => {\n              Representing.setValue(form, { hex: hex.value });\n              copyHexToRgb(form, hex);\n              updatePreview(form, hex);\n            }\n          }\n        });\n      };\n      const rgbFormSketcher = single({\n        factory,\n        name: 'RgbForm',\n        configFields: [],\n        apis: {\n          updateHex: (apis, form, hex) => {\n            apis.updateHex(form, hex);\n          }\n        },\n        extraApis: {}\n      });\n      return rgbFormSketcher;\n    };\n\n    const paletteFactory = (translate, getClass) => {\n      const spectrumPart = Slider.parts.spectrum({\n        dom: {\n          tag: 'canvas',\n          attributes: { role: 'presentation' },\n          classes: [getClass('sv-palette-spectrum')]\n        }\n      });\n      const thumbPart = Slider.parts.thumb({\n        dom: {\n          tag: 'div',\n          attributes: { role: 'presentation' },\n          classes: [getClass('sv-palette-thumb')],\n          innerHtml: `<div class=${ getClass('sv-palette-inner-thumb') } role=\"presentation\"></div>`\n        }\n      });\n      const setColour = (canvas, rgba) => {\n        const {width, height} = canvas;\n        const ctx = canvas.getContext('2d');\n        if (ctx === null) {\n          return;\n        }\n        ctx.fillStyle = rgba;\n        ctx.fillRect(0, 0, width, height);\n        const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n        grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n        grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n        ctx.fillStyle = grdWhite;\n        ctx.fillRect(0, 0, width, height);\n        const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n        grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n        grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n        ctx.fillStyle = grdBlack;\n        ctx.fillRect(0, 0, width, height);\n      };\n      const setPaletteHue = (slider, hue) => {\n        const canvas = slider.components()[0].element.dom;\n        const hsv = hsvColour(hue, 100, 100);\n        const rgba = fromHsv(hsv);\n        setColour(canvas, toString(rgba));\n      };\n      const setPaletteThumb = (slider, hex) => {\n        const hsv = fromRgb(fromHex(hex));\n        Slider.setValue(slider, {\n          x: hsv.saturation,\n          y: 100 - hsv.value\n        });\n        set$9(slider.element, 'aria-valuetext', translate([\n          'Saturation {0}%, Brightness {1}%',\n          hsv.saturation,\n          hsv.value\n        ]));\n      };\n      const factory = _detail => {\n        const getInitialValue = constant$1({\n          x: 0,\n          y: 0\n        });\n        const onChange = (slider, _thumb, value) => {\n          if (!isNumber(value)) {\n            set$9(slider.element, 'aria-valuetext', translate([\n              'Saturation {0}%, Brightness {1}%',\n              Math.floor(value.x),\n              Math.floor(100 - value.y)\n            ]));\n          }\n          emitWith(slider, paletteUpdate, { value });\n        };\n        const onInit = (_slider, _thumb, spectrum, _value) => {\n          setColour(spectrum.element.dom, toString(red));\n        };\n        const sliderBehaviours = derive$1([\n          Composing.config({ find: Optional.some }),\n          Focusing.config({})\n        ]);\n        return Slider.sketch({\n          dom: {\n            tag: 'div',\n            attributes: {\n              'role': 'slider',\n              'aria-valuetext': translate([\n                'Saturation {0}%, Brightness {1}%',\n                0,\n                0\n              ])\n            },\n            classes: [getClass('sv-palette')]\n          },\n          model: {\n            mode: 'xy',\n            getInitialValue\n          },\n          rounded: false,\n          components: [\n            spectrumPart,\n            thumbPart\n          ],\n          onChange,\n          onInit,\n          sliderBehaviours\n        });\n      };\n      const saturationBrightnessPaletteSketcher = single({\n        factory,\n        name: 'SaturationBrightnessPalette',\n        configFields: [],\n        apis: {\n          setHue: (_apis, slider, hue) => {\n            setPaletteHue(slider, hue);\n          },\n          setThumb: (_apis, slider, hex) => {\n            setPaletteThumb(slider, hex);\n          }\n        },\n        extraApis: {}\n      });\n      return saturationBrightnessPaletteSketcher;\n    };\n\n    const makeFactory = (translate, getClass) => {\n      const factory = detail => {\n        const rgbForm = rgbFormFactory(translate, getClass, detail.onValidHex, detail.onInvalidHex);\n        const sbPalette = paletteFactory(translate, getClass);\n        const hueSliderToDegrees = hue => (100 - hue) / 100 * 360;\n        const hueDegreesToSlider = hue => 100 - hue / 360 * 100;\n        const state = {\n          paletteRgba: Cell(red),\n          paletteHue: Cell(0)\n        };\n        const memSlider = record(sliderFactory(translate, getClass));\n        const memPalette = record(sbPalette.sketch({}));\n        const memRgb = record(rgbForm.sketch({}));\n        const updatePalette = (anyInSystem, _hex, hue) => {\n          memPalette.getOpt(anyInSystem).each(palette => {\n            sbPalette.setHue(palette, hue);\n          });\n        };\n        const updateFields = (anyInSystem, hex) => {\n          memRgb.getOpt(anyInSystem).each(form => {\n            rgbForm.updateHex(form, hex);\n          });\n        };\n        const updateSlider = (anyInSystem, _hex, hue) => {\n          memSlider.getOpt(anyInSystem).each(slider => {\n            Slider.setValue(slider, hueDegreesToSlider(hue));\n          });\n        };\n        const updatePaletteThumb = (anyInSystem, hex) => {\n          memPalette.getOpt(anyInSystem).each(palette => {\n            sbPalette.setThumb(palette, hex);\n          });\n        };\n        const updateState = (hex, hue) => {\n          const rgba = fromHex(hex);\n          state.paletteRgba.set(rgba);\n          state.paletteHue.set(hue);\n        };\n        const runUpdates = (anyInSystem, hex, hue, updates) => {\n          updateState(hex, hue);\n          each$1(updates, update => {\n            update(anyInSystem, hex, hue);\n          });\n        };\n        const onPaletteUpdate = () => {\n          const updates = [updateFields];\n          return (form, simulatedEvent) => {\n            const value = simulatedEvent.event.value;\n            const oldHue = state.paletteHue.get();\n            const newHsv = hsvColour(oldHue, value.x, 100 - value.y);\n            const newHex = hsvToHex(newHsv);\n            runUpdates(form, newHex, oldHue, updates);\n          };\n        };\n        const onSliderUpdate = () => {\n          const updates = [\n            updatePalette,\n            updateFields\n          ];\n          return (form, simulatedEvent) => {\n            const hue = hueSliderToDegrees(simulatedEvent.event.value);\n            const oldRgb = state.paletteRgba.get();\n            const oldHsv = fromRgb(oldRgb);\n            const newHsv = hsvColour(hue, oldHsv.saturation, oldHsv.value);\n            const newHex = hsvToHex(newHsv);\n            runUpdates(form, newHex, hue, updates);\n          };\n        };\n        const onFieldsUpdate = () => {\n          const updates = [\n            updatePalette,\n            updateSlider,\n            updatePaletteThumb\n          ];\n          return (form, simulatedEvent) => {\n            const hex = simulatedEvent.event.hex;\n            const hsv = hexToHsv(hex);\n            runUpdates(form, hex, hsv.hue, updates);\n          };\n        };\n        return {\n          uid: detail.uid,\n          dom: detail.dom,\n          components: [\n            memPalette.asSpec(),\n            memSlider.asSpec(),\n            memRgb.asSpec()\n          ],\n          behaviours: derive$1([\n            config('colour-picker-events', [\n              run$1(fieldsUpdate, onFieldsUpdate()),\n              run$1(paletteUpdate, onPaletteUpdate()),\n              run$1(sliderUpdate, onSliderUpdate())\n            ]),\n            Composing.config({ find: comp => memRgb.getOpt(comp) }),\n            Keying.config({ mode: 'acyclic' })\n          ])\n        };\n      };\n      const colourPickerSketcher = single({\n        name: 'ColourPicker',\n        configFields: [\n          required$1('dom'),\n          defaulted('onValidHex', noop),\n          defaulted('onInvalidHex', noop)\n        ],\n        factory\n      });\n      return colourPickerSketcher;\n    };\n\n    const self = () => Composing.config({ find: Optional.some });\n    const memento$1 = mem => Composing.config({ find: mem.getOpt });\n    const childAt = index => Composing.config({ find: comp => child$2(comp.element, index).bind(element => comp.getSystem().getByDom(element).toOptional()) });\n    const ComposingConfigs = {\n      self,\n      memento: memento$1,\n      childAt\n    };\n\n    const processors = objOf([\n      defaulted('preprocess', identity),\n      defaulted('postprocess', identity)\n    ]);\n    const memento = (mem, rawProcessors) => {\n      const ps = asRawOrDie$1('RepresentingConfigs.memento processors', processors, rawProcessors);\n      return Representing.config({\n        store: {\n          mode: 'manual',\n          getValue: comp => {\n            const other = mem.get(comp);\n            const rawValue = Representing.getValue(other);\n            return ps.postprocess(rawValue);\n          },\n          setValue: (comp, rawValue) => {\n            const newValue = ps.preprocess(rawValue);\n            const other = mem.get(comp);\n            Representing.setValue(other, newValue);\n          }\n        }\n      });\n    };\n    const withComp = (optInitialValue, getter, setter) => Representing.config({\n      store: {\n        mode: 'manual',\n        ...optInitialValue.map(initialValue => ({ initialValue })).getOr({}),\n        getValue: getter,\n        setValue: setter\n      }\n    });\n    const withElement = (initialValue, getter, setter) => withComp(initialValue, c => getter(c.element), (c, v) => setter(c.element, v));\n    const domHtml = optInitialValue => withElement(optInitialValue, get$9, set$6);\n    const memory = initialValue => Representing.config({\n      store: {\n        mode: 'memory',\n        initialValue\n      }\n    });\n\n    const english = {\n      'colorcustom.rgb.red.label': 'R',\n      'colorcustom.rgb.red.description': 'Red component',\n      'colorcustom.rgb.green.label': 'G',\n      'colorcustom.rgb.green.description': 'Green component',\n      'colorcustom.rgb.blue.label': 'B',\n      'colorcustom.rgb.blue.description': 'Blue component',\n      'colorcustom.rgb.hex.label': '#',\n      'colorcustom.rgb.hex.description': 'Hex color code',\n      'colorcustom.rgb.range': 'Range 0 to 255',\n      'aria.color.picker': 'Color Picker',\n      'aria.input.invalid': 'Invalid input'\n    };\n    const translate$1 = providerBackstage => key => {\n      if (isString(key)) {\n        return providerBackstage.translate(english[key]);\n      } else {\n        return providerBackstage.translate(key);\n      }\n    };\n    const renderColorPicker = (_spec, providerBackstage, initialData) => {\n      const getClass = key => 'tox-' + key;\n      const colourPickerFactory = makeFactory(translate$1(providerBackstage), getClass);\n      const onValidHex = form => {\n        emitWith(form, formActionEvent, {\n          name: 'hex-valid',\n          value: true\n        });\n      };\n      const onInvalidHex = form => {\n        emitWith(form, formActionEvent, {\n          name: 'hex-valid',\n          value: false\n        });\n      };\n      const memPicker = record(colourPickerFactory.sketch({\n        dom: {\n          tag: 'div',\n          classes: [getClass('color-picker-container')],\n          attributes: { role: 'presentation' }\n        },\n        onValidHex,\n        onInvalidHex\n      }));\n      return {\n        dom: { tag: 'div' },\n        components: [memPicker.asSpec()],\n        behaviours: derive$1([\n          withComp(initialData, comp => {\n            const picker = memPicker.get(comp);\n            const optRgbForm = Composing.getCurrent(picker);\n            const optHex = optRgbForm.bind(rgbForm => {\n              const formValues = Representing.getValue(rgbForm);\n              return formValues.hex;\n            });\n            return optHex.map(hex => '#' + removeLeading(hex, '#')).getOr('');\n          }, (comp, newValue) => {\n            const pattern = /^#([a-fA-F0-9]{3}(?:[a-fA-F0-9]{3})?)/;\n            const valOpt = Optional.from(pattern.exec(newValue)).bind(matches => get$h(matches, 1));\n            const picker = memPicker.get(comp);\n            const optRgbForm = Composing.getCurrent(picker);\n            optRgbForm.fold(() => {\n              console.log('Can not find form');\n            }, rgbForm => {\n              Representing.setValue(rgbForm, { hex: valOpt.getOr('') });\n              Form.getField(rgbForm, 'hex').each(hexField => {\n                emit(hexField, input());\n              });\n            });\n          }),\n          ComposingConfigs.self()\n        ])\n      };\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    const isOldCustomEditor = spec => has$2(spec, 'init');\n    const renderCustomEditor = spec => {\n      const editorApi = value$2();\n      const memReplaced = record({ dom: { tag: spec.tag } });\n      const initialValue = value$2();\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-custom-editor']\n        },\n        behaviours: derive$1([\n          config('custom-editor-events', [runOnAttached(component => {\n              memReplaced.getOpt(component).each(ta => {\n                (isOldCustomEditor(spec) ? spec.init(ta.element.dom) : global$2.load(spec.scriptId, spec.scriptUrl).then(init => init(ta.element.dom, spec.settings))).then(ea => {\n                  initialValue.on(cvalue => {\n                    ea.setValue(cvalue);\n                  });\n                  initialValue.clear();\n                  editorApi.set(ea);\n                });\n              });\n            })]),\n          withComp(Optional.none(), () => editorApi.get().fold(() => initialValue.get().getOr(''), ed => ed.getValue()), (component, value) => {\n            editorApi.get().fold(() => initialValue.set(value), ed => ed.setValue(value));\n          }),\n          ComposingConfigs.self()\n        ]),\n        components: [memReplaced.asSpec()]\n      };\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const filterByExtension = (files, providersBackstage) => {\n      const allowedImageFileTypes = global$1.explode(providersBackstage.getOption('images_file_types'));\n      const isFileInAllowedTypes = file => exists(allowedImageFileTypes, type => endsWith(file.name.toLowerCase(), `.${ type.toLowerCase() }`));\n      return filter$2(from(files), isFileInAllowedTypes);\n    };\n    const renderDropZone = (spec, providersBackstage, initialData) => {\n      const stopper = (_, se) => {\n        se.stop();\n      };\n      const sequence = actions => (comp, se) => {\n        each$1(actions, a => {\n          a(comp, se);\n        });\n      };\n      const onDrop = (comp, se) => {\n        var _a;\n        if (!Disabling.isDisabled(comp)) {\n          const transferEvent = se.event.raw;\n          handleFiles(comp, (_a = transferEvent.dataTransfer) === null || _a === void 0 ? void 0 : _a.files);\n        }\n      };\n      const onSelect = (component, simulatedEvent) => {\n        const input = simulatedEvent.event.raw.target;\n        handleFiles(component, input.files);\n      };\n      const handleFiles = (component, files) => {\n        if (files) {\n          Representing.setValue(component, filterByExtension(files, providersBackstage));\n          emitWith(component, formChangeEvent, { name: spec.name });\n        }\n      };\n      const memInput = record({\n        dom: {\n          tag: 'input',\n          attributes: {\n            type: 'file',\n            accept: 'image/*'\n          },\n          styles: { display: 'none' }\n        },\n        behaviours: derive$1([config('input-file-events', [\n            cutter(click()),\n            cutter(tap())\n          ])])\n      });\n      const renderField = s => ({\n        uid: s.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-dropzone-container']\n        },\n        behaviours: derive$1([\n          memory(initialData.getOr([])),\n          ComposingConfigs.self(),\n          Disabling.config({}),\n          Toggling.config({\n            toggleClass: 'dragenter',\n            toggleOnExecute: false\n          }),\n          config('dropzone-events', [\n            run$1('dragenter', sequence([\n              stopper,\n              Toggling.toggle\n            ])),\n            run$1('dragleave', sequence([\n              stopper,\n              Toggling.toggle\n            ])),\n            run$1('dragover', stopper),\n            run$1('drop', sequence([\n              stopper,\n              onDrop\n            ])),\n            run$1(change(), onSelect)\n          ])\n        ]),\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-dropzone'],\n              styles: {}\n            },\n            components: [\n              {\n                dom: { tag: 'p' },\n                components: [text$2(providersBackstage.translate('Drop an image here'))]\n              },\n              Button.sketch({\n                dom: {\n                  tag: 'button',\n                  styles: { position: 'relative' },\n                  classes: [\n                    'tox-button',\n                    'tox-button--secondary'\n                  ]\n                },\n                components: [\n                  text$2(providersBackstage.translate('Browse for an image')),\n                  memInput.asSpec()\n                ],\n                action: comp => {\n                  const inputComp = memInput.get(comp);\n                  inputComp.element.dom.click();\n                },\n                buttonBehaviours: derive$1([\n                  Tabstopping.config({}),\n                  DisablingConfigs.button(providersBackstage.isDisabled),\n                  receivingConfig()\n                ])\n              })\n            ]\n          }]\n      });\n      const pLabel = spec.label.map(label => renderLabel$3(label, providersBackstage));\n      const pField = FormField.parts.field({ factory: { sketch: renderField } });\n      return renderFormFieldWith(pLabel, pField, ['tox-form__group--stretched'], []);\n    };\n\n    const renderGrid = (spec, backstage) => ({\n      dom: {\n        tag: 'div',\n        classes: [\n          'tox-form__grid',\n          `tox-form__grid--${ spec.columns }col`\n        ]\n      },\n      components: map$2(spec.items, backstage.interpreter)\n    });\n\n    const adaptable = (fn, rate) => {\n      let timer = null;\n      let args = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n          args = null;\n        }\n      };\n      const throttle = (...newArgs) => {\n        args = newArgs;\n        if (isNull(timer)) {\n          timer = setTimeout(() => {\n            const tempArgs = args;\n            timer = null;\n            args = null;\n            fn.apply(null, tempArgs);\n          }, rate);\n        }\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n    const first = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        if (isNull(timer)) {\n          timer = setTimeout(() => {\n            timer = null;\n            fn.apply(null, args);\n          }, rate);\n        }\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n    const last = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        cancel();\n        timer = setTimeout(() => {\n          timer = null;\n          fn.apply(null, args);\n        }, rate);\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const beforeObject = generate$6('alloy-fake-before-tabstop');\n    const afterObject = generate$6('alloy-fake-after-tabstop');\n    const craftWithClasses = classes => {\n      return {\n        dom: {\n          tag: 'div',\n          styles: {\n            width: '1px',\n            height: '1px',\n            outline: 'none'\n          },\n          attributes: { tabindex: '0' },\n          classes\n        },\n        behaviours: derive$1([\n          Focusing.config({ ignore: true }),\n          Tabstopping.config({})\n        ])\n      };\n    };\n    const craft = (containerClasses, spec) => {\n      return {\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-navobj',\n            ...containerClasses.getOr([])\n          ]\n        },\n        components: [\n          craftWithClasses([beforeObject]),\n          spec,\n          craftWithClasses([afterObject])\n        ],\n        behaviours: derive$1([ComposingConfigs.childAt(1)])\n      };\n    };\n    const triggerTab = (placeholder, shiftKey) => {\n      emitWith(placeholder, keydown(), {\n        raw: {\n          which: 9,\n          shiftKey\n        }\n      });\n    };\n    const onFocus = (container, targetComp) => {\n      const target = targetComp.element;\n      if (has(target, beforeObject)) {\n        triggerTab(container, true);\n      } else if (has(target, afterObject)) {\n        triggerTab(container, false);\n      }\n    };\n    const isPseudoStop = element => {\n      return closest(element, [\n        '.' + beforeObject,\n        '.' + afterObject\n      ].join(','), never);\n    };\n\n    const dialogChannel = generate$6('update-dialog');\n    const titleChannel = generate$6('update-title');\n    const bodyChannel = generate$6('update-body');\n    const footerChannel = generate$6('update-footer');\n    const bodySendMessageChannel = generate$6('body-send-message');\n    const dialogFocusShiftedChannel = generate$6('dialog-focus-shifted');\n\n    const browser = detect$2().browser;\n    const isSafari = browser.isSafari();\n    const isFirefox = browser.isFirefox();\n    const isSafariOrFirefox = isSafari || isFirefox;\n    const isChromium = browser.isChromium();\n    const isElementScrollAtBottom = ({scrollTop, scrollHeight, clientHeight}) => Math.ceil(scrollTop) + clientHeight >= scrollHeight;\n    const scrollToY = (win, y) => win.scrollTo(0, y === 'bottom' ? 99999999 : y);\n    const getScrollingElement = (doc, html) => {\n      const body = doc.body;\n      return Optional.from(!/^<!DOCTYPE (html|HTML)/.test(html) && (!isChromium && !isSafari || isNonNullable(body) && (body.scrollTop !== 0 || Math.abs(body.scrollHeight - body.clientHeight) > 1)) ? body : doc.documentElement);\n    };\n    const writeValue = (iframeElement, html, fallbackFn) => {\n      const iframe = iframeElement.dom;\n      Optional.from(iframe.contentDocument).fold(fallbackFn, doc => {\n        let lastScrollTop = 0;\n        const isScrollAtBottom = getScrollingElement(doc, html).map(el => {\n          lastScrollTop = el.scrollTop;\n          return el;\n        }).forall(isElementScrollAtBottom);\n        const scrollAfterWrite = () => {\n          const win = iframe.contentWindow;\n          if (isNonNullable(win)) {\n            if (isScrollAtBottom) {\n              scrollToY(win, 'bottom');\n            } else if (!isScrollAtBottom && isSafariOrFirefox && lastScrollTop !== 0) {\n              scrollToY(win, lastScrollTop);\n            }\n          }\n        };\n        if (isSafari) {\n          iframe.addEventListener('load', scrollAfterWrite, { once: true });\n        }\n        doc.open();\n        doc.write(html);\n        doc.close();\n        if (!isSafari) {\n          scrollAfterWrite();\n        }\n      });\n    };\n    const throttleInterval = someIf(isSafariOrFirefox, isSafari ? 500 : 200);\n    const writeValueThrottler = throttleInterval.map(interval => adaptable(writeValue, interval));\n    const getDynamicSource = (initialData, stream) => {\n      const cachedValue = Cell(initialData.getOr(''));\n      return {\n        getValue: _frameComponent => cachedValue.get(),\n        setValue: (frameComponent, html) => {\n          if (cachedValue.get() !== html) {\n            const iframeElement = frameComponent.element;\n            const setSrcdocValue = () => set$9(iframeElement, 'srcdoc', html);\n            if (stream) {\n              writeValueThrottler.fold(constant$1(writeValue), throttler => throttler.throttle)(iframeElement, html, setSrcdocValue);\n            } else {\n              setSrcdocValue();\n            }\n          }\n          cachedValue.set(html);\n        }\n      };\n    };\n    const renderIFrame = (spec, providersBackstage, initialData) => {\n      const baseClass = 'tox-dialog__iframe';\n      const opaqueClass = spec.transparent ? [] : [`${ baseClass }--opaque`];\n      const containerBorderedClass = spec.border ? [`tox-navobj-bordered`] : [];\n      const attributes = {\n        ...spec.label.map(title => ({ title })).getOr({}),\n        ...initialData.map(html => ({ srcdoc: html })).getOr({}),\n        ...spec.sandboxed ? { sandbox: 'allow-scripts allow-same-origin' } : {}\n      };\n      const sourcing = getDynamicSource(initialData, spec.streamContent);\n      const pLabel = spec.label.map(label => renderLabel$3(label, providersBackstage));\n      const factory = newSpec => craft(Optional.from(containerBorderedClass), {\n        uid: newSpec.uid,\n        dom: {\n          tag: 'iframe',\n          attributes,\n          classes: [\n            baseClass,\n            ...opaqueClass\n          ]\n        },\n        behaviours: derive$1([\n          Tabstopping.config({}),\n          Focusing.config({}),\n          withComp(initialData, sourcing.getValue, sourcing.setValue),\n          Receiving.config({\n            channels: {\n              [dialogFocusShiftedChannel]: {\n                onReceive: (comp, message) => {\n                  message.newFocus.each(newFocus => {\n                    parentElement(comp.element).each(parent => {\n                      const f = eq(comp.element, newFocus) ? add$2 : remove$2;\n                      f(parent, 'tox-navobj-bordered-focus');\n                    });\n                  });\n                }\n              }\n            }\n          })\n        ])\n      });\n      const pField = FormField.parts.field({ factory: { sketch: factory } });\n      return renderFormFieldWith(pLabel, pField, ['tox-form__group--stretched'], []);\n    };\n\n    const image = image => new Promise((resolve, reject) => {\n      const loaded = () => {\n        destroy();\n        resolve(image);\n      };\n      const listeners = [\n        bind(image, 'load', loaded),\n        bind(image, 'error', () => {\n          destroy();\n          reject('Unable to load data from image: ' + image.dom.src);\n        })\n      ];\n      const destroy = () => each$1(listeners, l => l.unbind());\n      if (image.dom.complete) {\n        loaded();\n      }\n    });\n\n    const calculateImagePosition = (panelWidth, panelHeight, imageWidth, imageHeight, zoom) => {\n      const width = imageWidth * zoom;\n      const height = imageHeight * zoom;\n      const left = Math.max(0, panelWidth / 2 - width / 2);\n      const top = Math.max(0, panelHeight / 2 - height / 2);\n      return {\n        left: left.toString() + 'px',\n        top: top.toString() + 'px',\n        width: width.toString() + 'px',\n        height: height.toString() + 'px'\n      };\n    };\n    const zoomToFit = (panel, width, height) => {\n      const panelW = get$c(panel);\n      const panelH = get$d(panel);\n      return Math.min(panelW / width, panelH / height, 1);\n    };\n    const renderImagePreview = (spec, initialData) => {\n      const cachedData = Cell(initialData.getOr({ url: '' }));\n      const memImage = record({\n        dom: {\n          tag: 'img',\n          classes: ['tox-imagepreview__image'],\n          attributes: initialData.map(data => ({ src: data.url })).getOr({})\n        }\n      });\n      const memContainer = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-imagepreview__container'],\n          attributes: { role: 'presentation' }\n        },\n        components: [memImage.asSpec()]\n      });\n      const setValue = (frameComponent, data) => {\n        const translatedData = { url: data.url };\n        data.zoom.each(z => translatedData.zoom = z);\n        data.cachedWidth.each(z => translatedData.cachedWidth = z);\n        data.cachedHeight.each(z => translatedData.cachedHeight = z);\n        cachedData.set(translatedData);\n        const applyFramePositioning = () => {\n          const {cachedWidth, cachedHeight, zoom} = translatedData;\n          if (!isUndefined(cachedWidth) && !isUndefined(cachedHeight)) {\n            if (isUndefined(zoom)) {\n              const z = zoomToFit(frameComponent.element, cachedWidth, cachedHeight);\n              translatedData.zoom = z;\n            }\n            const position = calculateImagePosition(get$c(frameComponent.element), get$d(frameComponent.element), cachedWidth, cachedHeight, translatedData.zoom);\n            memContainer.getOpt(frameComponent).each(container => {\n              setAll(container.element, position);\n            });\n          }\n        };\n        memImage.getOpt(frameComponent).each(imageComponent => {\n          const img = imageComponent.element;\n          if (data.url !== get$f(img, 'src')) {\n            set$9(img, 'src', data.url);\n            remove$2(frameComponent.element, 'tox-imagepreview__loaded');\n          }\n          applyFramePositioning();\n          image(img).then(img => {\n            if (frameComponent.getSystem().isConnected()) {\n              add$2(frameComponent.element, 'tox-imagepreview__loaded');\n              translatedData.cachedWidth = img.dom.naturalWidth;\n              translatedData.cachedHeight = img.dom.naturalHeight;\n              applyFramePositioning();\n            }\n          });\n        });\n      };\n      const styles = {};\n      spec.height.each(h => styles.height = h);\n      const fakeValidatedData = initialData.map(d => ({\n        url: d.url,\n        zoom: Optional.from(d.zoom),\n        cachedWidth: Optional.from(d.cachedWidth),\n        cachedHeight: Optional.from(d.cachedHeight)\n      }));\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-imagepreview'],\n          styles,\n          attributes: { role: 'presentation' }\n        },\n        components: [memContainer.asSpec()],\n        behaviours: derive$1([\n          ComposingConfigs.self(),\n          withComp(fakeValidatedData, () => cachedData.get(), setValue)\n        ])\n      };\n    };\n\n    const renderLabel$2 = (spec, backstageShared) => {\n      const baseClass = 'tox-label';\n      const centerClass = spec.align === 'center' ? [`${ baseClass }--center`] : [];\n      const endClass = spec.align === 'end' ? [`${ baseClass }--end`] : [];\n      const label = {\n        dom: {\n          tag: 'label',\n          classes: [\n            baseClass,\n            ...centerClass,\n            ...endClass\n          ]\n        },\n        components: [text$2(backstageShared.providers.translate(spec.label))]\n      };\n      const comps = map$2(spec.items, backstageShared.interpreter);\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: [\n          label,\n          ...comps\n        ],\n        behaviours: derive$1([\n          ComposingConfigs.self(),\n          Replacing.config({}),\n          domHtml(Optional.none()),\n          Keying.config({ mode: 'acyclic' })\n        ])\n      };\n    };\n\n    const internalToolbarButtonExecute = generate$6('toolbar.button.execute');\n    const onToolbarButtonExecute = info => runOnExecute$1((comp, _simulatedEvent) => {\n      runWithApi(info, comp)(itemApi => {\n        emitWith(comp, internalToolbarButtonExecute, { buttonApi: itemApi });\n        info.onAction(itemApi);\n      });\n    });\n    const commonButtonDisplayEvent = generate$6('common-button-display-events');\n    const toolbarButtonEventOrder = {\n      [execute$5()]: [\n        'disabling',\n        'alloy.base.behaviour',\n        'toggling',\n        'toolbar-button-events'\n      ],\n      [attachedToDom()]: [\n        'toolbar-button-events',\n        commonButtonDisplayEvent\n      ],\n      [mousedown()]: [\n        'focusing',\n        'alloy.base.behaviour',\n        commonButtonDisplayEvent\n      ]\n    };\n\n    const forceInitialSize = comp => set$8(comp.element, 'width', get$e(comp.element, 'width'));\n\n    const renderIcon$1 = (iconName, iconsProvider, behaviours) => render$3(iconName, {\n      tag: 'span',\n      classes: [\n        'tox-icon',\n        'tox-tbtn__icon-wrap'\n      ],\n      behaviours\n    }, iconsProvider);\n    const renderIconFromPack$1 = (iconName, iconsProvider) => renderIcon$1(iconName, iconsProvider, []);\n    const renderReplaceableIconFromPack = (iconName, iconsProvider) => renderIcon$1(iconName, iconsProvider, [Replacing.config({})]);\n    const renderLabel$1 = (text, prefix, providersBackstage) => ({\n      dom: {\n        tag: 'span',\n        classes: [`${ prefix }__select-label`]\n      },\n      components: [text$2(providersBackstage.translate(text))],\n      behaviours: derive$1([Replacing.config({})])\n    });\n\n    const updateMenuText = generate$6('update-menu-text');\n    const updateMenuIcon = generate$6('update-menu-icon');\n    const renderCommonDropdown = (spec, prefix, sharedBackstage) => {\n      const editorOffCell = Cell(noop);\n      const optMemDisplayText = spec.text.map(text => record(renderLabel$1(text, prefix, sharedBackstage.providers)));\n      const optMemDisplayIcon = spec.icon.map(iconName => record(renderReplaceableIconFromPack(iconName, sharedBackstage.providers.icons)));\n      const onLeftOrRightInMenu = (comp, se) => {\n        const dropdown = Representing.getValue(comp);\n        Focusing.focus(dropdown);\n        emitWith(dropdown, 'keydown', { raw: se.event.raw });\n        Dropdown.close(dropdown);\n        return Optional.some(true);\n      };\n      const role = spec.role.fold(() => ({}), role => ({ role }));\n      const tooltipAttributes = spec.tooltip.fold(() => ({}), tooltip => {\n        const translatedTooltip = sharedBackstage.providers.translate(tooltip);\n        return {\n          'title': translatedTooltip,\n          'aria-label': translatedTooltip\n        };\n      });\n      const iconSpec = render$3('chevron-down', {\n        tag: 'div',\n        classes: [`${ prefix }__select-chevron`]\n      }, sharedBackstage.providers.icons);\n      const fixWidthBehaviourName = generate$6('common-button-display-events');\n      const memDropdown = record(Dropdown.sketch({\n        ...spec.uid ? { uid: spec.uid } : {},\n        ...role,\n        dom: {\n          tag: 'button',\n          classes: [\n            prefix,\n            `${ prefix }--select`\n          ].concat(map$2(spec.classes, c => `${ prefix }--${ c }`)),\n          attributes: { ...tooltipAttributes }\n        },\n        components: componentRenderPipeline([\n          optMemDisplayIcon.map(mem => mem.asSpec()),\n          optMemDisplayText.map(mem => mem.asSpec()),\n          Optional.some(iconSpec)\n        ]),\n        matchWidth: true,\n        useMinWidth: true,\n        onOpen: (anchor, dropdownComp, tmenuComp) => {\n          if (spec.searchable) {\n            focusSearchField(tmenuComp);\n          }\n        },\n        dropdownBehaviours: derive$1([\n          ...spec.dropdownBehaviours,\n          DisablingConfigs.button(() => spec.disabled || sharedBackstage.providers.isDisabled()),\n          receivingConfig(),\n          Unselecting.config({}),\n          Replacing.config({}),\n          config('dropdown-events', [\n            onControlAttached(spec, editorOffCell),\n            onControlDetached(spec, editorOffCell)\n          ]),\n          config(fixWidthBehaviourName, [runOnAttached((comp, _se) => forceInitialSize(comp))]),\n          config('menubutton-update-display-text', [\n            run$1(updateMenuText, (comp, se) => {\n              optMemDisplayText.bind(mem => mem.getOpt(comp)).each(displayText => {\n                Replacing.set(displayText, [text$2(sharedBackstage.providers.translate(se.event.text))]);\n              });\n            }),\n            run$1(updateMenuIcon, (comp, se) => {\n              optMemDisplayIcon.bind(mem => mem.getOpt(comp)).each(displayIcon => {\n                Replacing.set(displayIcon, [renderReplaceableIconFromPack(se.event.icon, sharedBackstage.providers.icons)]);\n              });\n            })\n          ])\n        ]),\n        eventOrder: deepMerge(toolbarButtonEventOrder, {\n          mousedown: [\n            'focusing',\n            'alloy.base.behaviour',\n            'item-type-events',\n            'normal-dropdown-events'\n          ],\n          [attachedToDom()]: [\n            'toolbar-button-events',\n            'dropdown-events',\n            fixWidthBehaviourName\n          ]\n        }),\n        sandboxBehaviours: derive$1([\n          Keying.config({\n            mode: 'special',\n            onLeft: onLeftOrRightInMenu,\n            onRight: onLeftOrRightInMenu\n          }),\n          config('dropdown-sandbox-events', [\n            run$1(refetchTriggerEvent, (originalSandboxComp, se) => {\n              handleRefetchTrigger(originalSandboxComp);\n              se.stop();\n            }),\n            run$1(redirectMenuItemInteractionEvent, (sandboxComp, se) => {\n              handleRedirectToMenuItem(sandboxComp, se);\n              se.stop();\n            })\n          ])\n        ]),\n        lazySink: sharedBackstage.getSink,\n        toggleClass: `${ prefix }--active`,\n        parts: {\n          menu: {\n            ...part(false, spec.columns, spec.presets),\n            fakeFocus: spec.searchable,\n            onHighlightItem: updateAriaOnHighlight,\n            onCollapseMenu: (tmenuComp, itemCompCausingCollapse, nowActiveMenuComp) => {\n              Highlighting.getHighlighted(nowActiveMenuComp).each(itemComp => {\n                updateAriaOnHighlight(tmenuComp, nowActiveMenuComp, itemComp);\n              });\n            },\n            onDehighlightItem: updateAriaOnDehighlight\n          }\n        },\n        getAnchorOverrides: () => {\n          return {\n            maxHeightFunction: (element, available) => {\n              anchored()(element, available - 10);\n            }\n          };\n        },\n        fetch: comp => Future.nu(curry(spec.fetch, comp))\n      }));\n      return memDropdown.asSpec();\n    };\n\n    const isMenuItemReference = item => isString(item);\n    const isSeparator$2 = item => item.type === 'separator';\n    const isExpandingMenuItem = item => has$2(item, 'getSubmenuItems');\n    const separator$2 = { type: 'separator' };\n    const unwrapReferences = (items, menuItems) => {\n      const realItems = foldl(items, (acc, item) => {\n        if (isMenuItemReference(item)) {\n          if (item === '') {\n            return acc;\n          } else if (item === '|') {\n            return acc.length > 0 && !isSeparator$2(acc[acc.length - 1]) ? acc.concat([separator$2]) : acc;\n          } else if (has$2(menuItems, item.toLowerCase())) {\n            return acc.concat([menuItems[item.toLowerCase()]]);\n          } else {\n            return acc;\n          }\n        } else {\n          return acc.concat([item]);\n        }\n      }, []);\n      if (realItems.length > 0 && isSeparator$2(realItems[realItems.length - 1])) {\n        realItems.pop();\n      }\n      return realItems;\n    };\n    const getFromExpandingItem = (item, menuItems) => {\n      const submenuItems = item.getSubmenuItems();\n      const rest = expand(submenuItems, menuItems);\n      const newMenus = deepMerge(rest.menus, { [item.value]: rest.items });\n      const newExpansions = deepMerge(rest.expansions, { [item.value]: item.value });\n      return {\n        item,\n        menus: newMenus,\n        expansions: newExpansions\n      };\n    };\n    const generateValueIfRequired = item => {\n      const itemValue = get$g(item, 'value').getOrThunk(() => generate$6('generated-menu-item'));\n      return deepMerge({ value: itemValue }, item);\n    };\n    const expand = (items, menuItems) => {\n      const realItems = unwrapReferences(isString(items) ? items.split(' ') : items, menuItems);\n      return foldr(realItems, (acc, item) => {\n        if (isExpandingMenuItem(item)) {\n          const itemWithValue = generateValueIfRequired(item);\n          const newData = getFromExpandingItem(itemWithValue, menuItems);\n          return {\n            menus: deepMerge(acc.menus, newData.menus),\n            items: [\n              newData.item,\n              ...acc.items\n            ],\n            expansions: deepMerge(acc.expansions, newData.expansions)\n          };\n        } else {\n          return {\n            ...acc,\n            items: [\n              item,\n              ...acc.items\n            ]\n          };\n        }\n      }, {\n        menus: {},\n        expansions: {},\n        items: []\n      });\n    };\n\n    const getSearchModeForField = settings => {\n      return settings.search.fold(() => ({ searchMode: 'no-search' }), searchSettings => ({\n        searchMode: 'search-with-field',\n        placeholder: searchSettings.placeholder\n      }));\n    };\n    const getSearchModeForResults = settings => {\n      return settings.search.fold(() => ({ searchMode: 'no-search' }), _ => ({ searchMode: 'search-with-results' }));\n    };\n    const build = (items, itemResponse, backstage, settings) => {\n      const primary = generate$6('primary-menu');\n      const data = expand(items, backstage.shared.providers.menuItems());\n      if (data.items.length === 0) {\n        return Optional.none();\n      }\n      const mainMenuSearchMode = getSearchModeForField(settings);\n      const mainMenu = createPartialMenu(primary, data.items, itemResponse, backstage, settings.isHorizontalMenu, mainMenuSearchMode);\n      const submenuSearchMode = getSearchModeForResults(settings);\n      const submenus = map$1(data.menus, (menuItems, menuName) => createPartialMenu(menuName, menuItems, itemResponse, backstage, false, submenuSearchMode));\n      const menus = deepMerge(submenus, wrap$1(primary, mainMenu));\n      return Optional.from(tieredMenu.tieredData(primary, menus, data.expansions));\n    };\n\n    const isSingleListItem = item => !has$2(item, 'items');\n    const dataAttribute = 'data-value';\n    const fetchItems = (dropdownComp, name, items, selectedValue) => map$2(items, item => {\n      if (!isSingleListItem(item)) {\n        return {\n          type: 'nestedmenuitem',\n          text: item.text,\n          getSubmenuItems: () => fetchItems(dropdownComp, name, item.items, selectedValue)\n        };\n      } else {\n        return {\n          type: 'togglemenuitem',\n          text: item.text,\n          value: item.value,\n          active: item.value === selectedValue,\n          onAction: () => {\n            Representing.setValue(dropdownComp, item.value);\n            emitWith(dropdownComp, formChangeEvent, { name });\n            Focusing.focus(dropdownComp);\n          }\n        };\n      }\n    });\n    const findItemByValue = (items, value) => findMap(items, item => {\n      if (!isSingleListItem(item)) {\n        return findItemByValue(item.items, value);\n      } else {\n        return someIf(item.value === value, item);\n      }\n    });\n    const renderListBox = (spec, backstage, initialData) => {\n      const providersBackstage = backstage.shared.providers;\n      const initialItem = initialData.bind(value => findItemByValue(spec.items, value)).orThunk(() => head(spec.items).filter(isSingleListItem));\n      const pLabel = spec.label.map(label => renderLabel$3(label, providersBackstage));\n      const pField = FormField.parts.field({\n        dom: {},\n        factory: {\n          sketch: sketchSpec => renderCommonDropdown({\n            uid: sketchSpec.uid,\n            text: initialItem.map(item => item.text),\n            icon: Optional.none(),\n            tooltip: spec.label,\n            role: Optional.none(),\n            fetch: (comp, callback) => {\n              const items = fetchItems(comp, spec.name, spec.items, Representing.getValue(comp));\n              callback(build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n                isHorizontalMenu: false,\n                search: Optional.none()\n              }));\n            },\n            onSetup: constant$1(noop),\n            getApi: constant$1({}),\n            columns: 1,\n            presets: 'normal',\n            classes: [],\n            dropdownBehaviours: [\n              Tabstopping.config({}),\n              withComp(initialItem.map(item => item.value), comp => get$f(comp.element, dataAttribute), (comp, data) => {\n                findItemByValue(spec.items, data).each(item => {\n                  set$9(comp.element, dataAttribute, item.value);\n                  emitWith(comp, updateMenuText, { text: item.text });\n                });\n              })\n            ]\n          }, 'tox-listbox', backstage.shared)\n        }\n      });\n      const listBoxWrap = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-listboxfield']\n        },\n        components: [pField]\n      };\n      return FormField.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: flatten([\n          pLabel.toArray(),\n          [listBoxWrap]\n        ]),\n        fieldBehaviours: derive$1([Disabling.config({\n            disabled: constant$1(!spec.enabled),\n            onDisabled: comp => {\n              FormField.getField(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormField.getField(comp).each(Disabling.enable);\n            }\n          })])\n      });\n    };\n\n    const renderPanel = (spec, backstage) => ({\n      dom: {\n        tag: 'div',\n        classes: spec.classes\n      },\n      components: map$2(spec.items, backstage.shared.interpreter)\n    });\n\n    const factory$h = (detail, _spec) => {\n      const options = map$2(detail.options, option => ({\n        dom: {\n          tag: 'option',\n          value: option.value,\n          innerHtml: option.text\n        }\n      }));\n      const initialValues = detail.data.map(v => wrap$1('initialValue', v)).getOr({});\n      return {\n        uid: detail.uid,\n        dom: {\n          tag: 'select',\n          classes: detail.selectClasses,\n          attributes: detail.selectAttributes\n        },\n        components: options,\n        behaviours: augment(detail.selectBehaviours, [\n          Focusing.config({}),\n          Representing.config({\n            store: {\n              mode: 'manual',\n              getValue: select => {\n                return get$6(select.element);\n              },\n              setValue: (select, newValue) => {\n                const firstOption = head(detail.options);\n                const found = find$5(detail.options, opt => opt.value === newValue);\n                if (found.isSome()) {\n                  set$5(select.element, newValue);\n                } else if (select.element.dom.selectedIndex === -1 && newValue === '') {\n                  firstOption.each(value => set$5(select.element, value.value));\n                }\n              },\n              ...initialValues\n            }\n          })\n        ])\n      };\n    };\n    const HtmlSelect = single({\n      name: 'HtmlSelect',\n      configFields: [\n        required$1('options'),\n        field('selectBehaviours', [\n          Focusing,\n          Representing\n        ]),\n        defaulted('selectClasses', []),\n        defaulted('selectAttributes', {}),\n        option$3('data')\n      ],\n      factory: factory$h\n    });\n\n    const renderSelectBox = (spec, providersBackstage, initialData) => {\n      const translatedOptions = map$2(spec.items, item => ({\n        text: providersBackstage.translate(item.text),\n        value: item.value\n      }));\n      const pLabel = spec.label.map(label => renderLabel$3(label, providersBackstage));\n      const pField = FormField.parts.field({\n        dom: {},\n        ...initialData.map(data => ({ data })).getOr({}),\n        selectAttributes: { size: spec.size },\n        options: translatedOptions,\n        factory: HtmlSelect,\n        selectBehaviours: derive$1([\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          Tabstopping.config({}),\n          config('selectbox-change', [run$1(change(), (component, _) => {\n              emitWith(component, formChangeEvent, { name: spec.name });\n            })])\n        ])\n      });\n      const chevron = spec.size > 1 ? Optional.none() : Optional.some(render$3('chevron-down', {\n        tag: 'div',\n        classes: ['tox-selectfield__icon-js']\n      }, providersBackstage.icons));\n      const selectWrap = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-selectfield']\n        },\n        components: flatten([\n          [pField],\n          chevron.toArray()\n        ])\n      };\n      return FormField.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: flatten([\n          pLabel.toArray(),\n          [selectWrap]\n        ]),\n        fieldBehaviours: derive$1([\n          Disabling.config({\n            disabled: () => !spec.enabled || providersBackstage.isDisabled(),\n            onDisabled: comp => {\n              FormField.getField(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormField.getField(comp).each(Disabling.enable);\n            }\n          }),\n          receivingConfig()\n        ])\n      });\n    };\n\n    const schema$h = constant$1([\n      defaulted('field1Name', 'field1'),\n      defaulted('field2Name', 'field2'),\n      onStrictHandler('onLockedChange'),\n      markers$1(['lockClass']),\n      defaulted('locked', false),\n      SketchBehaviours.field('coupledFieldBehaviours', [\n        Composing,\n        Representing\n      ])\n    ]);\n    const getField = (comp, detail, partName) => getPart(comp, detail, partName).bind(Composing.getCurrent);\n    const coupledPart = (selfName, otherName) => required({\n      factory: FormField,\n      name: selfName,\n      overrides: detail => {\n        return {\n          fieldBehaviours: derive$1([config('coupled-input-behaviour', [run$1(input(), me => {\n                getField(me, detail, otherName).each(other => {\n                  getPart(me, detail, 'lock').each(lock => {\n                    if (Toggling.isOn(lock)) {\n                      detail.onLockedChange(me, other, lock);\n                    }\n                  });\n                });\n              })])])\n        };\n      }\n    });\n    const parts$c = constant$1([\n      coupledPart('field1', 'field2'),\n      coupledPart('field2', 'field1'),\n      required({\n        factory: Button,\n        schema: [required$1('dom')],\n        name: 'lock',\n        overrides: detail => {\n          return {\n            buttonBehaviours: derive$1([Toggling.config({\n                selected: detail.locked,\n                toggleClass: detail.markers.lockClass,\n                aria: { mode: 'pressed' }\n              })])\n          };\n        }\n      })\n    ]);\n\n    const factory$g = (detail, components, _spec, _externals) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components,\n      behaviours: SketchBehaviours.augment(detail.coupledFieldBehaviours, [\n        Composing.config({ find: Optional.some }),\n        Representing.config({\n          store: {\n            mode: 'manual',\n            getValue: comp => {\n              const parts = getPartsOrDie(comp, detail, [\n                'field1',\n                'field2'\n              ]);\n              return {\n                [detail.field1Name]: Representing.getValue(parts.field1()),\n                [detail.field2Name]: Representing.getValue(parts.field2())\n              };\n            },\n            setValue: (comp, value) => {\n              const parts = getPartsOrDie(comp, detail, [\n                'field1',\n                'field2'\n              ]);\n              if (hasNonNullableKey(value, detail.field1Name)) {\n                Representing.setValue(parts.field1(), value[detail.field1Name]);\n              }\n              if (hasNonNullableKey(value, detail.field2Name)) {\n                Representing.setValue(parts.field2(), value[detail.field2Name]);\n              }\n            }\n          }\n        })\n      ]),\n      apis: {\n        getField1: component => getPart(component, detail, 'field1'),\n        getField2: component => getPart(component, detail, 'field2'),\n        getLock: component => getPart(component, detail, 'lock')\n      }\n    });\n    const FormCoupledInputs = composite({\n      name: 'FormCoupledInputs',\n      configFields: schema$h(),\n      partFields: parts$c(),\n      factory: factory$g,\n      apis: {\n        getField1: (apis, component) => apis.getField1(component),\n        getField2: (apis, component) => apis.getField2(component),\n        getLock: (apis, component) => apis.getLock(component)\n      }\n    });\n\n    const formatSize = size => {\n      const unitDec = {\n        '': 0,\n        'px': 0,\n        'pt': 1,\n        'mm': 1,\n        'pc': 2,\n        'ex': 2,\n        'em': 2,\n        'ch': 2,\n        'rem': 2,\n        'cm': 3,\n        'in': 4,\n        '%': 4\n      };\n      const maxDecimal = unit => unit in unitDec ? unitDec[unit] : 1;\n      let numText = size.value.toFixed(maxDecimal(size.unit));\n      if (numText.indexOf('.') !== -1) {\n        numText = numText.replace(/\\.?0*$/, '');\n      }\n      return numText + size.unit;\n    };\n    const parseSize = sizeText => {\n      const numPattern = /^\\s*(\\d+(?:\\.\\d+)?)\\s*(|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)\\s*$/;\n      const match = numPattern.exec(sizeText);\n      if (match !== null) {\n        const value = parseFloat(match[1]);\n        const unit = match[2];\n        return Result.value({\n          value,\n          unit\n        });\n      } else {\n        return Result.error(sizeText);\n      }\n    };\n    const convertUnit = (size, unit) => {\n      const inInch = {\n        '': 96,\n        'px': 96,\n        'pt': 72,\n        'cm': 2.54,\n        'pc': 12,\n        'mm': 25.4,\n        'in': 1\n      };\n      const supported = u => has$2(inInch, u);\n      if (size.unit === unit) {\n        return Optional.some(size.value);\n      } else if (supported(size.unit) && supported(unit)) {\n        if (inInch[size.unit] === inInch[unit]) {\n          return Optional.some(size.value);\n        } else {\n          return Optional.some(size.value / inInch[size.unit] * inInch[unit]);\n        }\n      } else {\n        return Optional.none();\n      }\n    };\n    const noSizeConversion = _input => Optional.none();\n    const ratioSizeConversion = (scale, unit) => size => convertUnit(size, unit).map(value => ({\n      value: value * scale,\n      unit\n    }));\n    const makeRatioConverter = (currentFieldText, otherFieldText) => {\n      const cValue = parseSize(currentFieldText).toOptional();\n      const oValue = parseSize(otherFieldText).toOptional();\n      return lift2(cValue, oValue, (cSize, oSize) => convertUnit(cSize, oSize.unit).map(val => oSize.value / val).map(r => ratioSizeConversion(r, oSize.unit)).getOr(noSizeConversion)).getOr(noSizeConversion);\n    };\n\n    const renderSizeInput = (spec, providersBackstage) => {\n      let converter = noSizeConversion;\n      const ratioEvent = generate$6('ratio-event');\n      const makeIcon = iconName => render$3(iconName, {\n        tag: 'span',\n        classes: [\n          'tox-icon',\n          'tox-lock-icon__' + iconName\n        ]\n      }, providersBackstage.icons);\n      const pLock = FormCoupledInputs.parts.lock({\n        dom: {\n          tag: 'button',\n          classes: [\n            'tox-lock',\n            'tox-button',\n            'tox-button--naked',\n            'tox-button--icon'\n          ],\n          attributes: { title: providersBackstage.translate(spec.label.getOr('Constrain proportions')) }\n        },\n        components: [\n          makeIcon('lock'),\n          makeIcon('unlock')\n        ],\n        buttonBehaviours: derive$1([\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          receivingConfig(),\n          Tabstopping.config({})\n        ])\n      });\n      const formGroup = components => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components\n      });\n      const getFieldPart = isField1 => FormField.parts.field({\n        factory: Input,\n        inputClasses: ['tox-textfield'],\n        inputBehaviours: derive$1([\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          receivingConfig(),\n          Tabstopping.config({}),\n          config('size-input-events', [\n            run$1(focusin(), (component, _simulatedEvent) => {\n              emitWith(component, ratioEvent, { isField1 });\n            }),\n            run$1(change(), (component, _simulatedEvent) => {\n              emitWith(component, formChangeEvent, { name: spec.name });\n            })\n          ])\n        ]),\n        selectOnFocus: false\n      });\n      const getLabel = label => ({\n        dom: {\n          tag: 'label',\n          classes: ['tox-label']\n        },\n        components: [text$2(providersBackstage.translate(label))]\n      });\n      const widthField = FormCoupledInputs.parts.field1(formGroup([\n        FormField.parts.label(getLabel('Width')),\n        getFieldPart(true)\n      ]));\n      const heightField = FormCoupledInputs.parts.field2(formGroup([\n        FormField.parts.label(getLabel('Height')),\n        getFieldPart(false)\n      ]));\n      return FormCoupledInputs.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__group']\n        },\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-form__controls-h-stack']\n            },\n            components: [\n              widthField,\n              heightField,\n              formGroup([\n                getLabel(nbsp),\n                pLock\n              ])\n            ]\n          }],\n        field1Name: 'width',\n        field2Name: 'height',\n        locked: true,\n        markers: { lockClass: 'tox-locked' },\n        onLockedChange: (current, other, _lock) => {\n          parseSize(Representing.getValue(current)).each(size => {\n            converter(size).each(newSize => {\n              Representing.setValue(other, formatSize(newSize));\n            });\n          });\n        },\n        coupledFieldBehaviours: derive$1([\n          Disabling.config({\n            disabled: () => !spec.enabled || providersBackstage.isDisabled(),\n            onDisabled: comp => {\n              FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.disable);\n              FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.disable);\n              FormCoupledInputs.getLock(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.enable);\n              FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.enable);\n              FormCoupledInputs.getLock(comp).each(Disabling.enable);\n            }\n          }),\n          receivingConfig(),\n          config('size-input-events2', [run$1(ratioEvent, (component, simulatedEvent) => {\n              const isField1 = simulatedEvent.event.isField1;\n              const optCurrent = isField1 ? FormCoupledInputs.getField1(component) : FormCoupledInputs.getField2(component);\n              const optOther = isField1 ? FormCoupledInputs.getField2(component) : FormCoupledInputs.getField1(component);\n              const value1 = optCurrent.map(Representing.getValue).getOr('');\n              const value2 = optOther.map(Representing.getValue).getOr('');\n              converter = makeRatioConverter(value1, value2);\n            })])\n        ])\n      });\n    };\n\n    const renderSlider = (spec, providerBackstage, initialData) => {\n      const labelPart = Slider.parts.label({\n        dom: {\n          tag: 'label',\n          classes: ['tox-label']\n        },\n        components: [text$2(providerBackstage.translate(spec.label))]\n      });\n      const spectrum = Slider.parts.spectrum({\n        dom: {\n          tag: 'div',\n          classes: ['tox-slider__rail'],\n          attributes: { role: 'presentation' }\n        }\n      });\n      const thumb = Slider.parts.thumb({\n        dom: {\n          tag: 'div',\n          classes: ['tox-slider__handle'],\n          attributes: { role: 'presentation' }\n        }\n      });\n      return Slider.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-slider'],\n          attributes: { role: 'presentation' }\n        },\n        model: {\n          mode: 'x',\n          minX: spec.min,\n          maxX: spec.max,\n          getInitialValue: constant$1(initialData.getOrThunk(() => (Math.abs(spec.max) - Math.abs(spec.min)) / 2))\n        },\n        components: [\n          labelPart,\n          spectrum,\n          thumb\n        ],\n        sliderBehaviours: derive$1([\n          ComposingConfigs.self(),\n          Focusing.config({})\n        ]),\n        onChoose: (component, thumb, value) => {\n          emitWith(component, formChangeEvent, {\n            name: spec.name,\n            value\n          });\n        }\n      });\n    };\n\n    const renderTable = (spec, providersBackstage) => {\n      const renderTh = text => ({\n        dom: {\n          tag: 'th',\n          innerHtml: providersBackstage.translate(text)\n        }\n      });\n      const renderHeader = header => ({\n        dom: { tag: 'thead' },\n        components: [{\n            dom: { tag: 'tr' },\n            components: map$2(header, renderTh)\n          }]\n      });\n      const renderTd = text => ({\n        dom: {\n          tag: 'td',\n          innerHtml: providersBackstage.translate(text)\n        }\n      });\n      const renderTr = row => ({\n        dom: { tag: 'tr' },\n        components: map$2(row, renderTd)\n      });\n      const renderRows = rows => ({\n        dom: { tag: 'tbody' },\n        components: map$2(rows, renderTr)\n      });\n      return {\n        dom: {\n          tag: 'table',\n          classes: ['tox-dialog__table']\n        },\n        components: [\n          renderHeader(spec.header),\n          renderRows(spec.cells)\n        ],\n        behaviours: derive$1([\n          Tabstopping.config({}),\n          Focusing.config({})\n        ])\n      };\n    };\n\n    const renderTextField = (spec, providersBackstage) => {\n      const pLabel = spec.label.map(label => renderLabel$3(label, providersBackstage));\n      const baseInputBehaviours = [\n        Disabling.config({ disabled: () => spec.disabled || providersBackstage.isDisabled() }),\n        receivingConfig(),\n        Keying.config({\n          mode: 'execution',\n          useEnter: spec.multiline !== true,\n          useControlEnter: spec.multiline === true,\n          execute: comp => {\n            emit(comp, formSubmitEvent);\n            return Optional.some(true);\n          }\n        }),\n        config('textfield-change', [\n          run$1(input(), (component, _) => {\n            emitWith(component, formChangeEvent, { name: spec.name });\n          }),\n          run$1(postPaste(), (component, _) => {\n            emitWith(component, formChangeEvent, { name: spec.name });\n          })\n        ]),\n        Tabstopping.config({})\n      ];\n      const validatingBehaviours = spec.validation.map(vl => Invalidating.config({\n        getRoot: input => {\n          return parentElement(input.element);\n        },\n        invalidClass: 'tox-invalid',\n        validator: {\n          validate: input => {\n            const v = Representing.getValue(input);\n            const result = vl.validator(v);\n            return Future.pure(result === true ? Result.value(v) : Result.error(result));\n          },\n          validateOnLoad: vl.validateOnLoad\n        }\n      })).toArray();\n      const placeholder = spec.placeholder.fold(constant$1({}), p => ({ placeholder: providersBackstage.translate(p) }));\n      const inputMode = spec.inputMode.fold(constant$1({}), mode => ({ inputmode: mode }));\n      const inputAttributes = {\n        ...placeholder,\n        ...inputMode\n      };\n      const pField = FormField.parts.field({\n        tag: spec.multiline === true ? 'textarea' : 'input',\n        ...spec.data.map(data => ({ data })).getOr({}),\n        inputAttributes,\n        inputClasses: [spec.classname],\n        inputBehaviours: derive$1(flatten([\n          baseInputBehaviours,\n          validatingBehaviours\n        ])),\n        selectOnFocus: false,\n        factory: Input\n      });\n      const pTextField = spec.multiline ? {\n        dom: {\n          tag: 'div',\n          classes: ['tox-textarea-wrap']\n        },\n        components: [pField]\n      } : pField;\n      const extraClasses = spec.flex ? ['tox-form__group--stretched'] : [];\n      const extraClasses2 = extraClasses.concat(spec.maximized ? ['tox-form-group--maximize'] : []);\n      const extraBehaviours = [\n        Disabling.config({\n          disabled: () => spec.disabled || providersBackstage.isDisabled(),\n          onDisabled: comp => {\n            FormField.getField(comp).each(Disabling.disable);\n          },\n          onEnabled: comp => {\n            FormField.getField(comp).each(Disabling.enable);\n          }\n        }),\n        receivingConfig()\n      ];\n      return renderFormFieldWith(pLabel, pTextField, extraClasses2, extraBehaviours);\n    };\n    const renderInput = (spec, providersBackstage, initialData) => renderTextField({\n      name: spec.name,\n      multiline: false,\n      label: spec.label,\n      inputMode: spec.inputMode,\n      placeholder: spec.placeholder,\n      flex: false,\n      disabled: !spec.enabled,\n      classname: 'tox-textfield',\n      validation: Optional.none(),\n      maximized: spec.maximized,\n      data: initialData\n    }, providersBackstage);\n    const renderTextarea = (spec, providersBackstage, initialData) => renderTextField({\n      name: spec.name,\n      multiline: true,\n      label: spec.label,\n      inputMode: Optional.none(),\n      placeholder: spec.placeholder,\n      flex: true,\n      disabled: !spec.enabled,\n      classname: 'tox-textarea',\n      validation: Optional.none(),\n      maximized: spec.maximized,\n      data: initialData\n    }, providersBackstage);\n\n    const getAnimationRoot = (component, slideConfig) => slideConfig.getAnimationRoot.fold(() => component.element, get => get(component));\n\n    const getDimensionProperty = slideConfig => slideConfig.dimension.property;\n    const getDimension = (slideConfig, elem) => slideConfig.dimension.getDimension(elem);\n    const disableTransitions = (component, slideConfig) => {\n      const root = getAnimationRoot(component, slideConfig);\n      remove$1(root, [\n        slideConfig.shrinkingClass,\n        slideConfig.growingClass\n      ]);\n    };\n    const setShrunk = (component, slideConfig) => {\n      remove$2(component.element, slideConfig.openClass);\n      add$2(component.element, slideConfig.closedClass);\n      set$8(component.element, getDimensionProperty(slideConfig), '0px');\n      reflow(component.element);\n    };\n    const setGrown = (component, slideConfig) => {\n      remove$2(component.element, slideConfig.closedClass);\n      add$2(component.element, slideConfig.openClass);\n      remove$6(component.element, getDimensionProperty(slideConfig));\n    };\n    const doImmediateShrink = (component, slideConfig, slideState, _calculatedSize) => {\n      slideState.setCollapsed();\n      set$8(component.element, getDimensionProperty(slideConfig), getDimension(slideConfig, component.element));\n      disableTransitions(component, slideConfig);\n      setShrunk(component, slideConfig);\n      slideConfig.onStartShrink(component);\n      slideConfig.onShrunk(component);\n    };\n    const doStartShrink = (component, slideConfig, slideState, calculatedSize) => {\n      const size = calculatedSize.getOrThunk(() => getDimension(slideConfig, component.element));\n      slideState.setCollapsed();\n      set$8(component.element, getDimensionProperty(slideConfig), size);\n      reflow(component.element);\n      const root = getAnimationRoot(component, slideConfig);\n      remove$2(root, slideConfig.growingClass);\n      add$2(root, slideConfig.shrinkingClass);\n      setShrunk(component, slideConfig);\n      slideConfig.onStartShrink(component);\n    };\n    const doStartSmartShrink = (component, slideConfig, slideState) => {\n      const size = getDimension(slideConfig, component.element);\n      const shrinker = size === '0px' ? doImmediateShrink : doStartShrink;\n      shrinker(component, slideConfig, slideState, Optional.some(size));\n    };\n    const doStartGrow = (component, slideConfig, slideState) => {\n      const root = getAnimationRoot(component, slideConfig);\n      const wasShrinking = has(root, slideConfig.shrinkingClass);\n      const beforeSize = getDimension(slideConfig, component.element);\n      setGrown(component, slideConfig);\n      const fullSize = getDimension(slideConfig, component.element);\n      const startPartialGrow = () => {\n        set$8(component.element, getDimensionProperty(slideConfig), beforeSize);\n        reflow(component.element);\n      };\n      const startCompleteGrow = () => {\n        setShrunk(component, slideConfig);\n      };\n      const setStartSize = wasShrinking ? startPartialGrow : startCompleteGrow;\n      setStartSize();\n      remove$2(root, slideConfig.shrinkingClass);\n      add$2(root, slideConfig.growingClass);\n      setGrown(component, slideConfig);\n      set$8(component.element, getDimensionProperty(slideConfig), fullSize);\n      slideState.setExpanded();\n      slideConfig.onStartGrow(component);\n    };\n    const refresh$4 = (component, slideConfig, slideState) => {\n      if (slideState.isExpanded()) {\n        remove$6(component.element, getDimensionProperty(slideConfig));\n        const fullSize = getDimension(slideConfig, component.element);\n        set$8(component.element, getDimensionProperty(slideConfig), fullSize);\n      }\n    };\n    const grow = (component, slideConfig, slideState) => {\n      if (!slideState.isExpanded()) {\n        doStartGrow(component, slideConfig, slideState);\n      }\n    };\n    const shrink = (component, slideConfig, slideState) => {\n      if (slideState.isExpanded()) {\n        doStartSmartShrink(component, slideConfig, slideState);\n      }\n    };\n    const immediateShrink = (component, slideConfig, slideState) => {\n      if (slideState.isExpanded()) {\n        doImmediateShrink(component, slideConfig, slideState);\n      }\n    };\n    const hasGrown = (component, slideConfig, slideState) => slideState.isExpanded();\n    const hasShrunk = (component, slideConfig, slideState) => slideState.isCollapsed();\n    const isGrowing = (component, slideConfig, _slideState) => {\n      const root = getAnimationRoot(component, slideConfig);\n      return has(root, slideConfig.growingClass) === true;\n    };\n    const isShrinking = (component, slideConfig, _slideState) => {\n      const root = getAnimationRoot(component, slideConfig);\n      return has(root, slideConfig.shrinkingClass) === true;\n    };\n    const isTransitioning = (component, slideConfig, slideState) => isGrowing(component, slideConfig) || isShrinking(component, slideConfig);\n    const toggleGrow = (component, slideConfig, slideState) => {\n      const f = slideState.isExpanded() ? doStartSmartShrink : doStartGrow;\n      f(component, slideConfig, slideState);\n    };\n    const immediateGrow = (component, slideConfig, slideState) => {\n      if (!slideState.isExpanded()) {\n        setGrown(component, slideConfig);\n        set$8(component.element, getDimensionProperty(slideConfig), getDimension(slideConfig, component.element));\n        disableTransitions(component, slideConfig);\n        slideState.setExpanded();\n        slideConfig.onStartGrow(component);\n        slideConfig.onGrown(component);\n      }\n    };\n\n    var SlidingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        refresh: refresh$4,\n        grow: grow,\n        shrink: shrink,\n        immediateShrink: immediateShrink,\n        hasGrown: hasGrown,\n        hasShrunk: hasShrunk,\n        isGrowing: isGrowing,\n        isShrinking: isShrinking,\n        isTransitioning: isTransitioning,\n        toggleGrow: toggleGrow,\n        disableTransitions: disableTransitions,\n        immediateGrow: immediateGrow\n    });\n\n    const exhibit = (base, slideConfig, _slideState) => {\n      const expanded = slideConfig.expanded;\n      return expanded ? nu$7({\n        classes: [slideConfig.openClass],\n        styles: {}\n      }) : nu$7({\n        classes: [slideConfig.closedClass],\n        styles: wrap$1(slideConfig.dimension.property, '0px')\n      });\n    };\n    const events$6 = (slideConfig, slideState) => derive$2([runOnSource(transitionend(), (component, simulatedEvent) => {\n        const raw = simulatedEvent.event.raw;\n        if (raw.propertyName === slideConfig.dimension.property) {\n          disableTransitions(component, slideConfig);\n          if (slideState.isExpanded()) {\n            remove$6(component.element, slideConfig.dimension.property);\n          }\n          const notify = slideState.isExpanded() ? slideConfig.onGrown : slideConfig.onShrunk;\n          notify(component);\n        }\n      })]);\n\n    var ActiveSliding = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        exhibit: exhibit,\n        events: events$6\n    });\n\n    var SlidingSchema = [\n      required$1('closedClass'),\n      required$1('openClass'),\n      required$1('shrinkingClass'),\n      required$1('growingClass'),\n      option$3('getAnimationRoot'),\n      onHandler('onShrunk'),\n      onHandler('onStartShrink'),\n      onHandler('onGrown'),\n      onHandler('onStartGrow'),\n      defaulted('expanded', false),\n      requiredOf('dimension', choose$1('property', {\n        width: [\n          output$1('property', 'width'),\n          output$1('getDimension', elem => get$c(elem) + 'px')\n        ],\n        height: [\n          output$1('property', 'height'),\n          output$1('getDimension', elem => get$d(elem) + 'px')\n        ]\n      }))\n    ];\n\n    const init$9 = spec => {\n      const state = Cell(spec.expanded);\n      const readState = () => 'expanded: ' + state.get();\n      return nu$8({\n        isExpanded: () => state.get() === true,\n        isCollapsed: () => state.get() === false,\n        setCollapsed: curry(state.set, false),\n        setExpanded: curry(state.set, true),\n        readState\n      });\n    };\n\n    var SlidingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$9\n    });\n\n    const Sliding = create$4({\n      fields: SlidingSchema,\n      name: 'sliding',\n      active: ActiveSliding,\n      apis: SlidingApis,\n      state: SlidingState\n    });\n\n    const getMenuButtonApi = component => ({\n      isEnabled: () => !Disabling.isDisabled(component),\n      setEnabled: state => Disabling.set(component, !state),\n      setActive: state => {\n        const elm = component.element;\n        if (state) {\n          add$2(elm, 'tox-tbtn--enabled');\n          set$9(elm, 'aria-pressed', true);\n        } else {\n          remove$2(elm, 'tox-tbtn--enabled');\n          remove$7(elm, 'aria-pressed');\n        }\n      },\n      isActive: () => has(component.element, 'tox-tbtn--enabled'),\n      setText: text => {\n        emitWith(component, updateMenuText, { text });\n      },\n      setIcon: icon => emitWith(component, updateMenuIcon, { icon })\n    });\n    const renderMenuButton = (spec, prefix, backstage, role, tabstopping = true) => {\n      return renderCommonDropdown({\n        text: spec.text,\n        icon: spec.icon,\n        tooltip: spec.tooltip,\n        searchable: spec.search.isSome(),\n        role,\n        fetch: (dropdownComp, callback) => {\n          const fetchContext = { pattern: spec.search.isSome() ? getSearchPattern(dropdownComp) : '' };\n          spec.fetch(items => {\n            callback(build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n              isHorizontalMenu: false,\n              search: spec.search\n            }));\n          }, fetchContext, getMenuButtonApi(dropdownComp));\n        },\n        onSetup: spec.onSetup,\n        getApi: getMenuButtonApi,\n        columns: 1,\n        presets: 'normal',\n        classes: [],\n        dropdownBehaviours: [...tabstopping ? [Tabstopping.config({})] : []]\n      }, prefix, backstage.shared);\n    };\n    const getFetch = (items, getButton, backstage) => {\n      const getMenuItemAction = item => api => {\n        const newValue = !api.isActive();\n        api.setActive(newValue);\n        item.storage.set(newValue);\n        backstage.shared.getSink().each(sink => {\n          getButton().getOpt(sink).each(orig => {\n            focus$3(orig.element);\n            emitWith(orig, formActionEvent, {\n              name: item.name,\n              value: item.storage.get()\n            });\n          });\n        });\n      };\n      const getMenuItemSetup = item => api => {\n        api.setActive(item.storage.get());\n      };\n      return success => {\n        success(map$2(items, item => {\n          const text = item.text.fold(() => ({}), text => ({ text }));\n          return {\n            type: item.type,\n            active: false,\n            ...text,\n            onAction: getMenuItemAction(item),\n            onSetup: getMenuItemSetup(item)\n          };\n        }));\n      };\n    };\n\n    const renderLabel = text => ({\n      dom: {\n        tag: 'span',\n        classes: ['tox-tree__label'],\n        attributes: {\n          'title': text,\n          'aria-label': text\n        }\n      },\n      components: [text$2(text)]\n    });\n    const leafLabelEventsId = generate$6('leaf-label-event-id');\n    const renderLeafLabel = ({leaf, onLeafAction, visible, treeId, selectedId, backstage}) => {\n      const internalMenuButton = leaf.menu.map(btn => renderMenuButton(btn, 'tox-mbtn', backstage, Optional.none(), visible));\n      const components = [renderLabel(leaf.title)];\n      internalMenuButton.each(btn => components.push(btn));\n      return Button.sketch({\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-tree--leaf__label',\n            'tox-trbtn'\n          ].concat(visible ? ['tox-tree--leaf__label--visible'] : [])\n        },\n        components,\n        role: 'treeitem',\n        action: button => {\n          onLeafAction(leaf.id);\n          button.getSystem().broadcastOn([`update-active-item-${ treeId }`], { value: leaf.id });\n        },\n        eventOrder: {\n          [keydown()]: [\n            leafLabelEventsId,\n            'keying'\n          ]\n        },\n        buttonBehaviours: derive$1([\n          ...visible ? [Tabstopping.config({})] : [],\n          Toggling.config({\n            toggleClass: 'tox-trbtn--enabled',\n            toggleOnExecute: false,\n            aria: { mode: 'selected' }\n          }),\n          Receiving.config({\n            channels: {\n              [`update-active-item-${ treeId }`]: {\n                onReceive: (comp, message) => {\n                  (message.value === leaf.id ? Toggling.on : Toggling.off)(comp);\n                }\n              }\n            }\n          }),\n          config(leafLabelEventsId, [\n            runOnAttached((comp, _se) => {\n              selectedId.each(id => {\n                const toggle = id === leaf.id ? Toggling.on : Toggling.off;\n                toggle(comp);\n              });\n            }),\n            run$1(keydown(), (comp, se) => {\n              const isLeftArrowKey = se.event.raw.code === 'ArrowLeft';\n              const isRightArrowKey = se.event.raw.code === 'ArrowRight';\n              if (isLeftArrowKey) {\n                ancestor(comp.element, '.tox-tree--directory').each(dirElement => {\n                  comp.getSystem().getByDom(dirElement).each(dirComp => {\n                    child(dirElement, '.tox-tree--directory__label').each(dirLabelElement => {\n                      dirComp.getSystem().getByDom(dirLabelElement).each(Focusing.focus);\n                    });\n                  });\n                });\n                se.stop();\n              } else if (isRightArrowKey) {\n                se.stop();\n              }\n            })\n          ])\n        ])\n      });\n    };\n    const renderIcon = (iconName, iconsProvider, behaviours) => render$3(iconName, {\n      tag: 'span',\n      classes: [\n        'tox-tree__icon-wrap',\n        'tox-icon'\n      ],\n      behaviours\n    }, iconsProvider);\n    const renderIconFromPack = (iconName, iconsProvider) => renderIcon(iconName, iconsProvider, []);\n    const directoryLabelEventsId = generate$6('directory-label-event-id');\n    const renderDirectoryLabel = ({directory, visible, noChildren, backstage}) => {\n      const internalMenuButton = directory.menu.map(btn => renderMenuButton(btn, 'tox-mbtn', backstage, Optional.none()));\n      const components = [\n        {\n          dom: {\n            tag: 'div',\n            classes: ['tox-chevron']\n          },\n          components: [renderIconFromPack('chevron-right', backstage.shared.providers.icons)]\n        },\n        renderLabel(directory.title)\n      ];\n      internalMenuButton.each(btn => {\n        components.push(btn);\n      });\n      const toggleExpandChildren = button => {\n        ancestor(button.element, '.tox-tree--directory').each(directoryEle => {\n          button.getSystem().getByDom(directoryEle).each(directoryComp => {\n            const willExpand = !Toggling.isOn(directoryComp);\n            Toggling.toggle(directoryComp);\n            emitWith(button, 'expand-tree-node', {\n              expanded: willExpand,\n              node: directory.id\n            });\n          });\n        });\n      };\n      return Button.sketch({\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-tree--directory__label',\n            'tox-trbtn'\n          ].concat(visible ? ['tox-tree--directory__label--visible'] : [])\n        },\n        components,\n        action: toggleExpandChildren,\n        eventOrder: {\n          [keydown()]: [\n            directoryLabelEventsId,\n            'keying'\n          ]\n        },\n        buttonBehaviours: derive$1([\n          ...visible ? [Tabstopping.config({})] : [],\n          config(directoryLabelEventsId, [run$1(keydown(), (comp, se) => {\n              const isRightArrowKey = se.event.raw.code === 'ArrowRight';\n              const isLeftArrowKey = se.event.raw.code === 'ArrowLeft';\n              if (isRightArrowKey && noChildren) {\n                se.stop();\n              }\n              if (isRightArrowKey || isLeftArrowKey) {\n                ancestor(comp.element, '.tox-tree--directory').each(directoryEle => {\n                  comp.getSystem().getByDom(directoryEle).each(directoryComp => {\n                    if (!Toggling.isOn(directoryComp) && isRightArrowKey || Toggling.isOn(directoryComp) && isLeftArrowKey) {\n                      toggleExpandChildren(comp);\n                      se.stop();\n                    } else if (isLeftArrowKey && !Toggling.isOn(directoryComp)) {\n                      ancestor(directoryComp.element, '.tox-tree--directory').each(parentDirElement => {\n                        child(parentDirElement, '.tox-tree--directory__label').each(parentDirLabelElement => {\n                          directoryComp.getSystem().getByDom(parentDirLabelElement).each(Focusing.focus);\n                        });\n                      });\n                      se.stop();\n                    }\n                  });\n                });\n              }\n            })])\n        ])\n      });\n    };\n    const renderDirectoryChildren = ({children, onLeafAction, visible, treeId, expandedIds, selectedId, backstage}) => {\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-tree--directory__children']\n        },\n        components: children.map(item => {\n          return item.type === 'leaf' ? renderLeafLabel({\n            leaf: item,\n            selectedId,\n            onLeafAction,\n            visible,\n            treeId,\n            backstage\n          }) : renderDirectory({\n            directory: item,\n            expandedIds,\n            selectedId,\n            onLeafAction,\n            labelTabstopping: visible,\n            treeId,\n            backstage\n          });\n        }),\n        behaviours: derive$1([\n          Sliding.config({\n            dimension: { property: 'height' },\n            closedClass: 'tox-tree--directory__children--closed',\n            openClass: 'tox-tree--directory__children--open',\n            growingClass: 'tox-tree--directory__children--growing',\n            shrinkingClass: 'tox-tree--directory__children--shrinking',\n            expanded: visible\n          }),\n          Replacing.config({})\n        ])\n      };\n    };\n    const directoryEventsId = generate$6('directory-event-id');\n    const renderDirectory = ({directory, onLeafAction, labelTabstopping, treeId, backstage, expandedIds, selectedId}) => {\n      const {children} = directory;\n      const expandedIdsCell = Cell(expandedIds);\n      const computedChildrenComponents = visible => children.map(item => {\n        return item.type === 'leaf' ? renderLeafLabel({\n          leaf: item,\n          selectedId,\n          onLeafAction,\n          visible,\n          treeId,\n          backstage\n        }) : renderDirectory({\n          directory: item,\n          expandedIds: expandedIdsCell.get(),\n          selectedId,\n          onLeafAction,\n          labelTabstopping: visible,\n          treeId,\n          backstage\n        });\n      });\n      const childrenVisible = expandedIds.includes(directory.id);\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-tree--directory'],\n          attributes: { role: 'treeitem' }\n        },\n        components: [\n          renderDirectoryLabel({\n            directory,\n            visible: labelTabstopping,\n            noChildren: directory.children.length === 0,\n            backstage\n          }),\n          renderDirectoryChildren({\n            children,\n            expandedIds,\n            selectedId,\n            onLeafAction,\n            visible: childrenVisible,\n            treeId,\n            backstage\n          })\n        ],\n        behaviours: derive$1([\n          config(directoryEventsId, [\n            runOnAttached((comp, _se) => {\n              Toggling.set(comp, childrenVisible);\n            }),\n            run$1('expand-tree-node', (_cmp, se) => {\n              const {expanded, node} = se.event;\n              expandedIdsCell.set(expanded ? [\n                ...expandedIdsCell.get(),\n                node\n              ] : expandedIdsCell.get().filter(id => id !== node));\n            })\n          ]),\n          Toggling.config({\n            ...directory.children.length > 0 ? { aria: { mode: 'expanded' } } : {},\n            toggleClass: 'tox-tree--directory--expanded',\n            onToggled: (comp, childrenVisible) => {\n              const childrenComp = comp.components()[1];\n              const newChildren = computedChildrenComponents(childrenVisible);\n              if (childrenVisible) {\n                Sliding.grow(childrenComp);\n              } else {\n                Sliding.shrink(childrenComp);\n              }\n              Replacing.set(childrenComp, newChildren);\n            }\n          })\n        ])\n      };\n    };\n    const treeEventsId = generate$6('tree-event-id');\n    const renderTree = (spec, backstage) => {\n      const onLeafAction = spec.onLeafAction.getOr(noop);\n      const onToggleExpand = spec.onToggleExpand.getOr(noop);\n      const defaultExpandedIds = spec.defaultExpandedIds;\n      const expandedIds = Cell(defaultExpandedIds);\n      const selectedIdCell = Cell(spec.defaultSelectedId);\n      const treeId = generate$6('tree-id');\n      const children = (selectedId, expandedIds) => spec.items.map(item => {\n        return item.type === 'leaf' ? renderLeafLabel({\n          leaf: item,\n          selectedId,\n          onLeafAction,\n          visible: true,\n          treeId,\n          backstage\n        }) : renderDirectory({\n          directory: item,\n          selectedId,\n          onLeafAction,\n          expandedIds,\n          labelTabstopping: true,\n          treeId,\n          backstage\n        });\n      });\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-tree'],\n          attributes: { role: 'tree' }\n        },\n        components: children(selectedIdCell.get(), expandedIds.get()),\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'flow',\n            selector: '.tox-tree--leaf__label--visible, .tox-tree--directory__label--visible',\n            cycles: false\n          }),\n          config(treeEventsId, [run$1('expand-tree-node', (_cmp, se) => {\n              const {expanded, node} = se.event;\n              expandedIds.set(expanded ? [\n                ...expandedIds.get(),\n                node\n              ] : expandedIds.get().filter(id => id !== node));\n              onToggleExpand(expandedIds.get(), {\n                expanded,\n                node\n              });\n            })]),\n          Receiving.config({\n            channels: {\n              [`update-active-item-${ treeId }`]: {\n                onReceive: (comp, message) => {\n                  selectedIdCell.set(Optional.some(message.value));\n                  Replacing.set(comp, children(Optional.some(message.value), expandedIds.get()));\n                }\n              }\n            }\n          }),\n          Replacing.config({})\n        ])\n      };\n    };\n\n    const events$5 = (streamConfig, streamState) => {\n      const streams = streamConfig.stream.streams;\n      const processor = streams.setup(streamConfig, streamState);\n      return derive$2([\n        run$1(streamConfig.event, processor),\n        runOnDetached(() => streamState.cancel())\n      ].concat(streamConfig.cancelEvent.map(e => [run$1(e, () => streamState.cancel())]).getOr([])));\n    };\n\n    var ActiveStreaming = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$5\n    });\n\n    const throttle = _config => {\n      const state = Cell(null);\n      const readState = () => ({ timer: state.get() !== null ? 'set' : 'unset' });\n      const setTimer = t => {\n        state.set(t);\n      };\n      const cancel = () => {\n        const t = state.get();\n        if (t !== null) {\n          t.cancel();\n        }\n      };\n      return nu$8({\n        readState,\n        setTimer,\n        cancel\n      });\n    };\n    const init$8 = spec => spec.stream.streams.state(spec);\n\n    var StreamingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        throttle: throttle,\n        init: init$8\n    });\n\n    const setup$c = (streamInfo, streamState) => {\n      const sInfo = streamInfo.stream;\n      const throttler = last(streamInfo.onStream, sInfo.delay);\n      streamState.setTimer(throttler);\n      return (component, simulatedEvent) => {\n        throttler.throttle(component, simulatedEvent);\n        if (sInfo.stopEvent) {\n          simulatedEvent.stop();\n        }\n      };\n    };\n    var StreamingSchema = [\n      requiredOf('stream', choose$1('mode', {\n        throttle: [\n          required$1('delay'),\n          defaulted('stopEvent', true),\n          output$1('streams', {\n            setup: setup$c,\n            state: throttle\n          })\n        ]\n      })),\n      defaulted('event', 'input'),\n      option$3('cancelEvent'),\n      onStrictHandler('onStream')\n    ];\n\n    const Streaming = create$4({\n      fields: StreamingSchema,\n      name: 'streaming',\n      active: ActiveStreaming,\n      state: StreamingState\n    });\n\n    const setValueFromItem = (model, input, item) => {\n      const itemData = Representing.getValue(item);\n      Representing.setValue(input, itemData);\n      setCursorAtEnd(input);\n    };\n    const setSelectionOn = (input, f) => {\n      const el = input.element;\n      const value = get$6(el);\n      const node = el.dom;\n      if (get$f(el, 'type') !== 'number') {\n        f(node, value);\n      }\n    };\n    const setCursorAtEnd = input => {\n      setSelectionOn(input, (node, value) => node.setSelectionRange(value.length, value.length));\n    };\n    const setSelectionToEnd = (input, startOffset) => {\n      setSelectionOn(input, (node, value) => node.setSelectionRange(startOffset, value.length));\n    };\n    const attemptSelectOver = (model, input, item) => {\n      if (!model.selectsOver) {\n        return Optional.none();\n      } else {\n        const currentValue = Representing.getValue(input);\n        const inputDisplay = model.getDisplayText(currentValue);\n        const itemValue = Representing.getValue(item);\n        const itemDisplay = model.getDisplayText(itemValue);\n        return itemDisplay.indexOf(inputDisplay) === 0 ? Optional.some(() => {\n          setValueFromItem(model, input, item);\n          setSelectionToEnd(input, inputDisplay.length);\n        }) : Optional.none();\n      }\n    };\n\n    const itemExecute = constant$1('alloy.typeahead.itemexecute');\n\n    const make$3 = (detail, components, spec, externals) => {\n      const navigateList = (comp, simulatedEvent, highlighter) => {\n        detail.previewing.set(false);\n        const sandbox = Coupling.getCoupled(comp, 'sandbox');\n        if (Sandboxing.isOpen(sandbox)) {\n          Composing.getCurrent(sandbox).each(menu => {\n            Highlighting.getHighlighted(menu).fold(() => {\n              highlighter(menu);\n            }, () => {\n              dispatchEvent(sandbox, menu.element, 'keydown', simulatedEvent);\n            });\n          });\n        } else {\n          const onOpenSync = sandbox => {\n            Composing.getCurrent(sandbox).each(highlighter);\n          };\n          open(detail, mapFetch(comp), comp, sandbox, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n        }\n      };\n      const focusBehaviours$1 = focusBehaviours(detail);\n      const mapFetch = comp => tdata => tdata.map(data => {\n        const menus = values(data.menus);\n        const items = bind$3(menus, menu => filter$2(menu.items, item => item.type === 'item'));\n        const repState = Representing.getState(comp);\n        repState.update(map$2(items, item => item.data));\n        return data;\n      });\n      const getActiveMenu = sandboxComp => Composing.getCurrent(sandboxComp);\n      const typeaheadCustomEvents = 'typeaheadevents';\n      const behaviours = [\n        Focusing.config({}),\n        Representing.config({\n          onSetValue: detail.onSetValue,\n          store: {\n            mode: 'dataset',\n            getDataKey: comp => get$6(comp.element),\n            getFallbackEntry: itemString => ({\n              value: itemString,\n              meta: {}\n            }),\n            setValue: (comp, data) => {\n              set$5(comp.element, detail.model.getDisplayText(data));\n            },\n            ...detail.initialData.map(d => wrap$1('initialValue', d)).getOr({})\n          }\n        }),\n        Streaming.config({\n          stream: {\n            mode: 'throttle',\n            delay: detail.responseTime,\n            stopEvent: false\n          },\n          onStream: (component, _simulatedEvent) => {\n            const sandbox = Coupling.getCoupled(component, 'sandbox');\n            const focusInInput = Focusing.isFocused(component);\n            if (focusInInput) {\n              if (get$6(component.element).length >= detail.minChars) {\n                const previousValue = getActiveMenu(sandbox).bind(activeMenu => Highlighting.getHighlighted(activeMenu).map(Representing.getValue));\n                detail.previewing.set(true);\n                const onOpenSync = _sandbox => {\n                  getActiveMenu(sandbox).each(activeMenu => {\n                    previousValue.fold(() => {\n                      if (detail.model.selectsOver) {\n                        Highlighting.highlightFirst(activeMenu);\n                      }\n                    }, pv => {\n                      Highlighting.highlightBy(activeMenu, item => {\n                        const itemData = Representing.getValue(item);\n                        return itemData.value === pv.value;\n                      });\n                      Highlighting.getHighlighted(activeMenu).orThunk(() => {\n                        Highlighting.highlightFirst(activeMenu);\n                        return Optional.none();\n                      });\n                    });\n                  });\n                };\n                open(detail, mapFetch(component), component, sandbox, externals, onOpenSync, HighlightOnOpen.HighlightJustMenu).get(noop);\n              }\n            }\n          },\n          cancelEvent: typeaheadCancel()\n        }),\n        Keying.config({\n          mode: 'special',\n          onDown: (comp, simulatedEvent) => {\n            navigateList(comp, simulatedEvent, Highlighting.highlightFirst);\n            return Optional.some(true);\n          },\n          onEscape: comp => {\n            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n            if (Sandboxing.isOpen(sandbox)) {\n              Sandboxing.close(sandbox);\n              return Optional.some(true);\n            }\n            return Optional.none();\n          },\n          onUp: (comp, simulatedEvent) => {\n            navigateList(comp, simulatedEvent, Highlighting.highlightLast);\n            return Optional.some(true);\n          },\n          onEnter: comp => {\n            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n            const sandboxIsOpen = Sandboxing.isOpen(sandbox);\n            if (sandboxIsOpen && !detail.previewing.get()) {\n              return getActiveMenu(sandbox).bind(activeMenu => Highlighting.getHighlighted(activeMenu)).map(item => {\n                emitWith(comp, itemExecute(), { item });\n                return true;\n              });\n            } else {\n              const currentValue = Representing.getValue(comp);\n              emit(comp, typeaheadCancel());\n              detail.onExecute(sandbox, comp, currentValue);\n              if (sandboxIsOpen) {\n                Sandboxing.close(sandbox);\n              }\n              return Optional.some(true);\n            }\n          }\n        }),\n        Toggling.config({\n          toggleClass: detail.markers.openClass,\n          aria: { mode: 'expanded' }\n        }),\n        Coupling.config({\n          others: {\n            sandbox: hotspot => {\n              return makeSandbox$1(detail, hotspot, {\n                onOpen: () => Toggling.on(hotspot),\n                onClose: () => {\n                  detail.lazyTypeaheadComp.get().each(input => remove$7(input.element, 'aria-activedescendant'));\n                  Toggling.off(hotspot);\n                }\n              });\n            }\n          }\n        }),\n        config(typeaheadCustomEvents, [\n          runOnAttached(typeaheadComp => {\n            detail.lazyTypeaheadComp.set(Optional.some(typeaheadComp));\n          }),\n          runOnDetached(_typeaheadComp => {\n            detail.lazyTypeaheadComp.set(Optional.none());\n          }),\n          runOnExecute$1(comp => {\n            const onOpenSync = noop;\n            togglePopup(detail, mapFetch(comp), comp, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n          }),\n          run$1(itemExecute(), (comp, se) => {\n            const sandbox = Coupling.getCoupled(comp, 'sandbox');\n            setValueFromItem(detail.model, comp, se.event.item);\n            emit(comp, typeaheadCancel());\n            detail.onItemExecute(comp, sandbox, se.event.item, Representing.getValue(comp));\n            Sandboxing.close(sandbox);\n            setCursorAtEnd(comp);\n          })\n        ].concat(detail.dismissOnBlur ? [run$1(postBlur(), typeahead => {\n            const sandbox = Coupling.getCoupled(typeahead, 'sandbox');\n            if (search(sandbox.element).isNone()) {\n              Sandboxing.close(sandbox);\n            }\n          })] : []))\n      ];\n      const eventOrder = {\n        [detachedFromDom()]: [\n          Representing.name(),\n          Streaming.name(),\n          typeaheadCustomEvents\n        ],\n        ...detail.eventOrder\n      };\n      return {\n        uid: detail.uid,\n        dom: dom(deepMerge(detail, {\n          inputAttributes: {\n            'role': 'combobox',\n            'aria-autocomplete': 'list',\n            'aria-haspopup': 'true'\n          }\n        })),\n        behaviours: {\n          ...focusBehaviours$1,\n          ...augment(detail.typeaheadBehaviours, behaviours)\n        },\n        eventOrder\n      };\n    };\n\n    const schema$g = constant$1([\n      option$3('lazySink'),\n      required$1('fetch'),\n      defaulted('minChars', 5),\n      defaulted('responseTime', 1000),\n      onHandler('onOpen'),\n      defaulted('getHotspot', Optional.some),\n      defaulted('getAnchorOverrides', constant$1({})),\n      defaulted('layouts', Optional.none()),\n      defaulted('eventOrder', {}),\n      defaultedObjOf('model', {}, [\n        defaulted('getDisplayText', itemData => itemData.meta !== undefined && itemData.meta.text !== undefined ? itemData.meta.text : itemData.value),\n        defaulted('selectsOver', true),\n        defaulted('populateFromBrowse', true)\n      ]),\n      onHandler('onSetValue'),\n      onKeyboardHandler('onExecute'),\n      onHandler('onItemExecute'),\n      defaulted('inputClasses', []),\n      defaulted('inputAttributes', {}),\n      defaulted('inputStyles', {}),\n      defaulted('matchWidth', true),\n      defaulted('useMinWidth', false),\n      defaulted('dismissOnBlur', true),\n      markers$1(['openClass']),\n      option$3('initialData'),\n      field('typeaheadBehaviours', [\n        Focusing,\n        Representing,\n        Streaming,\n        Keying,\n        Toggling,\n        Coupling\n      ]),\n      customField('lazyTypeaheadComp', () => Cell(Optional.none)),\n      customField('previewing', () => Cell(true))\n    ].concat(schema$l()).concat(sandboxFields()));\n    const parts$b = constant$1([external({\n        schema: [tieredMenuMarkers()],\n        name: 'menu',\n        overrides: detail => {\n          return {\n            fakeFocus: true,\n            onHighlightItem: (_tmenu, menu, item) => {\n              if (!detail.previewing.get()) {\n                detail.lazyTypeaheadComp.get().each(input => {\n                  if (detail.model.populateFromBrowse) {\n                    setValueFromItem(detail.model, input, item);\n                  }\n                  getOpt(item.element, 'id').each(id => set$9(input.element, 'aria-activedescendant', id));\n                });\n              } else {\n                detail.lazyTypeaheadComp.get().each(input => {\n                  attemptSelectOver(detail.model, input, item).fold(() => {\n                    if (detail.model.selectsOver) {\n                      Highlighting.dehighlight(menu, item);\n                      detail.previewing.set(true);\n                    } else {\n                      detail.previewing.set(false);\n                    }\n                  }, selectOverTextInInput => {\n                    selectOverTextInInput();\n                    detail.previewing.set(false);\n                  });\n                });\n              }\n            },\n            onExecute: (_menu, item) => {\n              return detail.lazyTypeaheadComp.get().map(typeahead => {\n                emitWith(typeahead, itemExecute(), { item });\n                return true;\n              });\n            },\n            onHover: (menu, item) => {\n              detail.previewing.set(false);\n              detail.lazyTypeaheadComp.get().each(input => {\n                if (detail.model.populateFromBrowse) {\n                  setValueFromItem(detail.model, input, item);\n                }\n              });\n            }\n          };\n        }\n      })]);\n\n    const Typeahead = composite({\n      name: 'Typeahead',\n      configFields: schema$g(),\n      partFields: parts$b(),\n      factory: make$3\n    });\n\n    const wrap = delegate => {\n      const toCached = () => {\n        return wrap(delegate.toCached());\n      };\n      const bindFuture = f => {\n        return wrap(delegate.bind(resA => resA.fold(err => Future.pure(Result.error(err)), a => f(a))));\n      };\n      const bindResult = f => {\n        return wrap(delegate.map(resA => resA.bind(f)));\n      };\n      const mapResult = f => {\n        return wrap(delegate.map(resA => resA.map(f)));\n      };\n      const mapError = f => {\n        return wrap(delegate.map(resA => resA.mapError(f)));\n      };\n      const foldResult = (whenError, whenValue) => {\n        return delegate.map(res => res.fold(whenError, whenValue));\n      };\n      const withTimeout = (timeout, errorThunk) => {\n        return wrap(Future.nu(callback => {\n          let timedOut = false;\n          const timer = setTimeout(() => {\n            timedOut = true;\n            callback(Result.error(errorThunk()));\n          }, timeout);\n          delegate.get(result => {\n            if (!timedOut) {\n              clearTimeout(timer);\n              callback(result);\n            }\n          });\n        }));\n      };\n      return {\n        ...delegate,\n        toCached,\n        bindFuture,\n        bindResult,\n        mapResult,\n        mapError,\n        foldResult,\n        withTimeout\n      };\n    };\n    const nu$1 = worker => {\n      return wrap(Future.nu(worker));\n    };\n    const value = value => {\n      return wrap(Future.pure(Result.value(value)));\n    };\n    const error = error => {\n      return wrap(Future.pure(Result.error(error)));\n    };\n    const fromResult = result => {\n      return wrap(Future.pure(result));\n    };\n    const fromFuture = future => {\n      return wrap(future.map(Result.value));\n    };\n    const fromPromise = promise => {\n      return nu$1(completer => {\n        promise.then(value => {\n          completer(Result.value(value));\n        }, error => {\n          completer(Result.error(error));\n        });\n      });\n    };\n    const FutureResult = {\n      nu: nu$1,\n      wrap,\n      pure: value,\n      value,\n      error,\n      fromResult,\n      fromFuture,\n      fromPromise\n    };\n\n    const renderCommonSpec = (spec, actionOpt, extraBehaviours = [], dom, components, providersBackstage) => {\n      const action = actionOpt.fold(() => ({}), action => ({ action }));\n      const common = {\n        buttonBehaviours: derive$1([\n          DisablingConfigs.button(() => !spec.enabled || providersBackstage.isDisabled()),\n          receivingConfig(),\n          Tabstopping.config({}),\n          config('button press', [\n            preventDefault('click'),\n            preventDefault('mousedown')\n          ])\n        ].concat(extraBehaviours)),\n        eventOrder: {\n          click: [\n            'button press',\n            'alloy.base.behaviour'\n          ],\n          mousedown: [\n            'button press',\n            'alloy.base.behaviour'\n          ]\n        },\n        ...action\n      };\n      const domFinal = deepMerge(common, { dom });\n      return deepMerge(domFinal, { components });\n    };\n    const renderIconButtonSpec = (spec, action, providersBackstage, extraBehaviours = []) => {\n      const tooltipAttributes = spec.tooltip.map(tooltip => ({\n        'aria-label': providersBackstage.translate(tooltip),\n        'title': providersBackstage.translate(tooltip)\n      })).getOr({});\n      const dom = {\n        tag: 'button',\n        classes: ['tox-tbtn'],\n        attributes: tooltipAttributes\n      };\n      const icon = spec.icon.map(iconName => renderIconFromPack$1(iconName, providersBackstage.icons));\n      const components = componentRenderPipeline([icon]);\n      return renderCommonSpec(spec, action, extraBehaviours, dom, components, providersBackstage);\n    };\n    const calculateClassesFromButtonType = buttonType => {\n      switch (buttonType) {\n      case 'primary':\n        return ['tox-button'];\n      case 'toolbar':\n        return ['tox-tbtn'];\n      case 'secondary':\n      default:\n        return [\n          'tox-button',\n          'tox-button--secondary'\n        ];\n      }\n    };\n    const renderButtonSpec = (spec, action, providersBackstage, extraBehaviours = [], extraClasses = []) => {\n      const translatedText = providersBackstage.translate(spec.text);\n      const icon = spec.icon.map(iconName => renderIconFromPack$1(iconName, providersBackstage.icons));\n      const components = [icon.getOrThunk(() => text$2(translatedText))];\n      const buttonType = spec.buttonType.getOr(!spec.primary && !spec.borderless ? 'secondary' : 'primary');\n      const baseClasses = calculateClassesFromButtonType(buttonType);\n      const classes = [\n        ...baseClasses,\n        ...icon.isSome() ? ['tox-button--icon'] : [],\n        ...spec.borderless ? ['tox-button--naked'] : [],\n        ...extraClasses\n      ];\n      const dom = {\n        tag: 'button',\n        classes,\n        attributes: { title: translatedText }\n      };\n      return renderCommonSpec(spec, action, extraBehaviours, dom, components, providersBackstage);\n    };\n    const renderButton$1 = (spec, action, providersBackstage, extraBehaviours = [], extraClasses = []) => {\n      const buttonSpec = renderButtonSpec(spec, Optional.some(action), providersBackstage, extraBehaviours, extraClasses);\n      return Button.sketch(buttonSpec);\n    };\n    const getAction = (name, buttonType) => comp => {\n      if (buttonType === 'custom') {\n        emitWith(comp, formActionEvent, {\n          name,\n          value: {}\n        });\n      } else if (buttonType === 'submit') {\n        emit(comp, formSubmitEvent);\n      } else if (buttonType === 'cancel') {\n        emit(comp, formCancelEvent);\n      } else {\n        console.error('Unknown button type: ', buttonType);\n      }\n    };\n    const isMenuFooterButtonSpec = (spec, buttonType) => buttonType === 'menu';\n    const isNormalFooterButtonSpec = (spec, buttonType) => buttonType === 'custom' || buttonType === 'cancel' || buttonType === 'submit';\n    const isToggleButtonSpec = (spec, buttonType) => buttonType === 'togglebutton';\n    const renderToggleButton = (spec, providers) => {\n      var _a, _b;\n      const optMemIcon = spec.icon.map(memIcon => renderReplaceableIconFromPack(memIcon, providers.icons)).map(record);\n      const action = comp => {\n        emitWith(comp, formActionEvent, {\n          name: spec.name,\n          value: {\n            setIcon: newIcon => {\n              optMemIcon.map(memIcon => memIcon.getOpt(comp).each(displayIcon => {\n                Replacing.set(displayIcon, [renderReplaceableIconFromPack(newIcon, providers.icons)]);\n              }));\n            }\n          }\n        });\n      };\n      const buttonType = spec.buttonType.getOr(!spec.primary ? 'secondary' : 'primary');\n      const buttonSpec = {\n        ...spec,\n        name: (_a = spec.name) !== null && _a !== void 0 ? _a : '',\n        primary: buttonType === 'primary',\n        tooltip: Optional.from(spec.tooltip),\n        enabled: (_b = spec.enabled) !== null && _b !== void 0 ? _b : false,\n        borderless: false\n      };\n      const tooltipAttributes = buttonSpec.tooltip.map(tooltip => ({\n        'aria-label': providers.translate(tooltip),\n        'title': providers.translate(tooltip)\n      })).getOr({});\n      const buttonTypeClasses = calculateClassesFromButtonType(buttonType !== null && buttonType !== void 0 ? buttonType : 'secondary');\n      const showIconAndText = spec.icon.isSome() && spec.text.isSome();\n      const dom = {\n        tag: 'button',\n        classes: [\n          ...buttonTypeClasses.concat(spec.icon.isSome() ? ['tox-button--icon'] : []),\n          ...spec.active ? ['tox-button--enabled'] : [],\n          ...showIconAndText ? ['tox-button--icon-and-text'] : []\n        ],\n        attributes: tooltipAttributes\n      };\n      const extraBehaviours = [];\n      const translatedText = providers.translate(spec.text.getOr(''));\n      const translatedTextComponed = text$2(translatedText);\n      const iconComp = componentRenderPipeline([optMemIcon.map(memIcon => memIcon.asSpec())]);\n      const components = [\n        ...iconComp,\n        ...spec.text.isSome() ? [translatedTextComponed] : []\n      ];\n      const iconButtonSpec = renderCommonSpec(buttonSpec, Optional.some(action), extraBehaviours, dom, components, providers);\n      return Button.sketch(iconButtonSpec);\n    };\n    const renderFooterButton = (spec, buttonType, backstage) => {\n      if (isMenuFooterButtonSpec(spec, buttonType)) {\n        const getButton = () => memButton;\n        const menuButtonSpec = spec;\n        const fixedSpec = {\n          ...spec,\n          type: 'menubutton',\n          search: Optional.none(),\n          onSetup: api => {\n            api.setEnabled(spec.enabled);\n            return noop;\n          },\n          fetch: getFetch(menuButtonSpec.items, getButton, backstage)\n        };\n        const memButton = record(renderMenuButton(fixedSpec, 'tox-tbtn', backstage, Optional.none()));\n        return memButton.asSpec();\n      } else if (isNormalFooterButtonSpec(spec, buttonType)) {\n        const action = getAction(spec.name, buttonType);\n        const buttonSpec = {\n          ...spec,\n          borderless: false\n        };\n        return renderButton$1(buttonSpec, action, backstage.shared.providers, []);\n      } else if (isToggleButtonSpec(spec, buttonType)) {\n        return renderToggleButton(spec, backstage.shared.providers);\n      } else {\n        console.error('Unknown footer button type: ', buttonType);\n        throw new Error('Unknown footer button type');\n      }\n    };\n    const renderDialogButton = (spec, providersBackstage) => {\n      const action = getAction(spec.name, 'custom');\n      return renderFormField(Optional.none(), FormField.parts.field({\n        factory: Button,\n        ...renderButtonSpec(spec, Optional.some(action), providersBackstage, [\n          memory(''),\n          ComposingConfigs.self()\n        ])\n      }));\n    };\n\n    const separator$1 = { type: 'separator' };\n    const toMenuItem = target => ({\n      type: 'menuitem',\n      value: target.url,\n      text: target.title,\n      meta: { attach: target.attach },\n      onAction: noop\n    });\n    const staticMenuItem = (title, url) => ({\n      type: 'menuitem',\n      value: url,\n      text: title,\n      meta: { attach: undefined },\n      onAction: noop\n    });\n    const toMenuItems = targets => map$2(targets, toMenuItem);\n    const filterLinkTargets = (type, targets) => filter$2(targets, target => target.type === type);\n    const filteredTargets = (type, targets) => toMenuItems(filterLinkTargets(type, targets));\n    const headerTargets = linkInfo => filteredTargets('header', linkInfo.targets);\n    const anchorTargets = linkInfo => filteredTargets('anchor', linkInfo.targets);\n    const anchorTargetTop = linkInfo => Optional.from(linkInfo.anchorTop).map(url => staticMenuItem('<top>', url)).toArray();\n    const anchorTargetBottom = linkInfo => Optional.from(linkInfo.anchorBottom).map(url => staticMenuItem('<bottom>', url)).toArray();\n    const historyTargets = history => map$2(history, url => staticMenuItem(url, url));\n    const joinMenuLists = items => {\n      return foldl(items, (a, b) => {\n        const bothEmpty = a.length === 0 || b.length === 0;\n        return bothEmpty ? a.concat(b) : a.concat(separator$1, b);\n      }, []);\n    };\n    const filterByQuery = (term, menuItems) => {\n      const lowerCaseTerm = term.toLowerCase();\n      return filter$2(menuItems, item => {\n        var _a;\n        const text = item.meta !== undefined && item.meta.text !== undefined ? item.meta.text : item.text;\n        const value = (_a = item.value) !== null && _a !== void 0 ? _a : '';\n        return contains$1(text.toLowerCase(), lowerCaseTerm) || contains$1(value.toLowerCase(), lowerCaseTerm);\n      });\n    };\n\n    const getItems = (fileType, input, urlBackstage) => {\n      var _a, _b;\n      const urlInputValue = Representing.getValue(input);\n      const term = (_b = (_a = urlInputValue === null || urlInputValue === void 0 ? void 0 : urlInputValue.meta) === null || _a === void 0 ? void 0 : _a.text) !== null && _b !== void 0 ? _b : urlInputValue.value;\n      const info = urlBackstage.getLinkInformation();\n      return info.fold(() => [], linkInfo => {\n        const history = filterByQuery(term, historyTargets(urlBackstage.getHistory(fileType)));\n        return fileType === 'file' ? joinMenuLists([\n          history,\n          filterByQuery(term, headerTargets(linkInfo)),\n          filterByQuery(term, flatten([\n            anchorTargetTop(linkInfo),\n            anchorTargets(linkInfo),\n            anchorTargetBottom(linkInfo)\n          ]))\n        ]) : history;\n      });\n    };\n    const errorId = generate$6('aria-invalid');\n    const renderUrlInput = (spec, backstage, urlBackstage, initialData) => {\n      const providersBackstage = backstage.shared.providers;\n      const updateHistory = component => {\n        const urlEntry = Representing.getValue(component);\n        urlBackstage.addToHistory(urlEntry.value, spec.filetype);\n      };\n      const typeaheadSpec = {\n        ...initialData.map(initialData => ({ initialData })).getOr({}),\n        dismissOnBlur: true,\n        inputClasses: ['tox-textfield'],\n        sandboxClasses: ['tox-dialog__popups'],\n        inputAttributes: {\n          'aria-errormessage': errorId,\n          'type': 'url'\n        },\n        minChars: 0,\n        responseTime: 0,\n        fetch: input => {\n          const items = getItems(spec.filetype, input, urlBackstage);\n          const tdata = build(items, ItemResponse$1.BUBBLE_TO_SANDBOX, backstage, {\n            isHorizontalMenu: false,\n            search: Optional.none()\n          });\n          return Future.pure(tdata);\n        },\n        getHotspot: comp => memUrlBox.getOpt(comp),\n        onSetValue: (comp, _newValue) => {\n          if (comp.hasConfigured(Invalidating)) {\n            Invalidating.run(comp).get(noop);\n          }\n        },\n        typeaheadBehaviours: derive$1([\n          ...urlBackstage.getValidationHandler().map(handler => Invalidating.config({\n            getRoot: comp => parentElement(comp.element),\n            invalidClass: 'tox-control-wrap--status-invalid',\n            notify: {\n              onInvalid: (comp, err) => {\n                memInvalidIcon.getOpt(comp).each(invalidComp => {\n                  set$9(invalidComp.element, 'title', providersBackstage.translate(err));\n                });\n              }\n            },\n            validator: {\n              validate: input => {\n                const urlEntry = Representing.getValue(input);\n                return FutureResult.nu(completer => {\n                  handler({\n                    type: spec.filetype,\n                    url: urlEntry.value\n                  }, validation => {\n                    if (validation.status === 'invalid') {\n                      const err = Result.error(validation.message);\n                      completer(err);\n                    } else {\n                      const val = Result.value(validation.message);\n                      completer(val);\n                    }\n                  });\n                });\n              },\n              validateOnLoad: false\n            }\n          })).toArray(),\n          Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() }),\n          Tabstopping.config({}),\n          config('urlinput-events', [\n            run$1(input(), comp => {\n              const currentValue = get$6(comp.element);\n              const trimmedValue = currentValue.trim();\n              if (trimmedValue !== currentValue) {\n                set$5(comp.element, trimmedValue);\n              }\n              if (spec.filetype === 'file') {\n                emitWith(comp, formChangeEvent, { name: spec.name });\n              }\n            }),\n            run$1(change(), comp => {\n              emitWith(comp, formChangeEvent, { name: spec.name });\n              updateHistory(comp);\n            }),\n            run$1(postPaste(), comp => {\n              emitWith(comp, formChangeEvent, { name: spec.name });\n              updateHistory(comp);\n            })\n          ])\n        ]),\n        eventOrder: {\n          [input()]: [\n            'streaming',\n            'urlinput-events',\n            'invalidating'\n          ]\n        },\n        model: {\n          getDisplayText: itemData => itemData.value,\n          selectsOver: false,\n          populateFromBrowse: false\n        },\n        markers: { openClass: 'tox-textfield--popup-open' },\n        lazySink: backstage.shared.getSink,\n        parts: { menu: part(false, 1, 'normal') },\n        onExecute: (_menu, component, _entry) => {\n          emitWith(component, formSubmitEvent, {});\n        },\n        onItemExecute: (typeahead, _sandbox, _item, _value) => {\n          updateHistory(typeahead);\n          emitWith(typeahead, formChangeEvent, { name: spec.name });\n        }\n      };\n      const pField = FormField.parts.field({\n        ...typeaheadSpec,\n        factory: Typeahead\n      });\n      const pLabel = spec.label.map(label => renderLabel$3(label, providersBackstage));\n      const makeIcon = (name, errId, icon = name, label = name) => render$3(icon, {\n        tag: 'div',\n        classes: [\n          'tox-icon',\n          'tox-control-wrap__status-icon-' + name\n        ],\n        attributes: {\n          'title': providersBackstage.translate(label),\n          'aria-live': 'polite',\n          ...errId.fold(() => ({}), id => ({ id }))\n        }\n      }, providersBackstage.icons);\n      const memInvalidIcon = record(makeIcon('invalid', Optional.some(errorId), 'warning'));\n      const memStatus = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-control-wrap__status-icon-wrap']\n        },\n        components: [memInvalidIcon.asSpec()]\n      });\n      const optUrlPicker = urlBackstage.getUrlPicker(spec.filetype);\n      const browseUrlEvent = generate$6('browser.url.event');\n      const memUrlBox = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-control-wrap']\n        },\n        components: [\n          pField,\n          memStatus.asSpec()\n        ],\n        behaviours: derive$1([Disabling.config({ disabled: () => !spec.enabled || providersBackstage.isDisabled() })])\n      });\n      const memUrlPickerButton = record(renderButton$1({\n        name: spec.name,\n        icon: Optional.some('browse'),\n        text: spec.picker_text.or(spec.label).getOr(''),\n        enabled: spec.enabled,\n        primary: false,\n        buttonType: Optional.none(),\n        borderless: true\n      }, component => emit(component, browseUrlEvent), providersBackstage, [], ['tox-browse-url']));\n      const controlHWrapper = () => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form__controls-h-stack']\n        },\n        components: flatten([\n          [memUrlBox.asSpec()],\n          optUrlPicker.map(() => memUrlPickerButton.asSpec()).toArray()\n        ])\n      });\n      const openUrlPicker = comp => {\n        Composing.getCurrent(comp).each(field => {\n          const componentData = Representing.getValue(field);\n          const urlData = {\n            fieldname: spec.name,\n            ...componentData\n          };\n          optUrlPicker.each(picker => {\n            picker(urlData).get(chosenData => {\n              Representing.setValue(field, chosenData);\n              emitWith(comp, formChangeEvent, { name: spec.name });\n            });\n          });\n        });\n      };\n      return FormField.sketch({\n        dom: renderFormFieldDom(),\n        components: pLabel.toArray().concat([controlHWrapper()]),\n        fieldBehaviours: derive$1([\n          Disabling.config({\n            disabled: () => !spec.enabled || providersBackstage.isDisabled(),\n            onDisabled: comp => {\n              FormField.getField(comp).each(Disabling.disable);\n              memUrlPickerButton.getOpt(comp).each(Disabling.disable);\n            },\n            onEnabled: comp => {\n              FormField.getField(comp).each(Disabling.enable);\n              memUrlPickerButton.getOpt(comp).each(Disabling.enable);\n            }\n          }),\n          receivingConfig(),\n          config('url-input-events', [run$1(browseUrlEvent, openUrlPicker)])\n        ])\n      });\n    };\n\n    const renderAlertBanner = (spec, providersBackstage) => {\n      const icon = get$2(spec.icon, providersBackstage.icons);\n      return Container.sketch({\n        dom: {\n          tag: 'div',\n          attributes: { role: 'alert' },\n          classes: [\n            'tox-notification',\n            'tox-notification--in',\n            `tox-notification--${ spec.level }`\n          ]\n        },\n        components: [\n          {\n            dom: {\n              tag: 'div',\n              classes: ['tox-notification__icon'],\n              innerHtml: !spec.url ? icon : undefined\n            },\n            components: spec.url ? [Button.sketch({\n                dom: {\n                  tag: 'button',\n                  classes: [\n                    'tox-button',\n                    'tox-button--naked',\n                    'tox-button--icon'\n                  ],\n                  innerHtml: icon,\n                  attributes: { title: providersBackstage.translate(spec.iconTooltip) }\n                },\n                action: comp => emitWith(comp, formActionEvent, {\n                  name: 'alert-banner',\n                  value: spec.url\n                }),\n                buttonBehaviours: derive$1([addFocusableBehaviour()])\n              })] : undefined\n          },\n          {\n            dom: {\n              tag: 'div',\n              classes: ['tox-notification__body'],\n              innerHtml: providersBackstage.translate(spec.text)\n            }\n          }\n        ]\n      });\n    };\n\n    const set$1 = (element, status) => {\n      element.dom.checked = status;\n    };\n    const get$1 = element => element.dom.checked;\n\n    const renderCheckbox = (spec, providerBackstage, initialData) => {\n      const toggleCheckboxHandler = comp => {\n        comp.element.dom.click();\n        return Optional.some(true);\n      };\n      const pField = FormField.parts.field({\n        factory: { sketch: identity },\n        dom: {\n          tag: 'input',\n          classes: ['tox-checkbox__input'],\n          attributes: { type: 'checkbox' }\n        },\n        behaviours: derive$1([\n          ComposingConfigs.self(),\n          Disabling.config({\n            disabled: () => !spec.enabled || providerBackstage.isDisabled(),\n            onDisabled: component => {\n              parentElement(component.element).each(element => add$2(element, 'tox-checkbox--disabled'));\n            },\n            onEnabled: component => {\n              parentElement(component.element).each(element => remove$2(element, 'tox-checkbox--disabled'));\n            }\n          }),\n          Tabstopping.config({}),\n          Focusing.config({}),\n          withElement(initialData, get$1, set$1),\n          Keying.config({\n            mode: 'special',\n            onEnter: toggleCheckboxHandler,\n            onSpace: toggleCheckboxHandler,\n            stopSpaceKeyup: true\n          }),\n          config('checkbox-events', [run$1(change(), (component, _) => {\n              emitWith(component, formChangeEvent, { name: spec.name });\n            })])\n        ])\n      });\n      const pLabel = FormField.parts.label({\n        dom: {\n          tag: 'span',\n          classes: ['tox-checkbox__label']\n        },\n        components: [text$2(providerBackstage.translate(spec.label))],\n        behaviours: derive$1([Unselecting.config({})])\n      });\n      const makeIcon = className => {\n        const iconName = className === 'checked' ? 'selected' : 'unselected';\n        return render$3(iconName, {\n          tag: 'span',\n          classes: [\n            'tox-icon',\n            'tox-checkbox-icon__' + className\n          ]\n        }, providerBackstage.icons);\n      };\n      const memIcons = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-checkbox__icons']\n        },\n        components: [\n          makeIcon('checked'),\n          makeIcon('unchecked')\n        ]\n      });\n      return FormField.sketch({\n        dom: {\n          tag: 'label',\n          classes: ['tox-checkbox']\n        },\n        components: [\n          pField,\n          memIcons.asSpec(),\n          pLabel\n        ],\n        fieldBehaviours: derive$1([\n          Disabling.config({ disabled: () => !spec.enabled || providerBackstage.isDisabled() }),\n          receivingConfig()\n        ])\n      });\n    };\n\n    const renderHtmlPanel = spec => {\n      if (spec.presets === 'presentation') {\n        return Container.sketch({\n          dom: {\n            tag: 'div',\n            classes: ['tox-form__group'],\n            innerHtml: spec.html\n          }\n        });\n      } else {\n        return Container.sketch({\n          dom: {\n            tag: 'div',\n            classes: ['tox-form__group'],\n            innerHtml: spec.html,\n            attributes: { role: 'document' }\n          },\n          containerBehaviours: derive$1([\n            Tabstopping.config({}),\n            Focusing.config({})\n          ])\n        });\n      }\n    };\n\n    const make$2 = render => {\n      return (parts, spec, dialogData, backstage) => get$g(spec, 'name').fold(() => render(spec, backstage, Optional.none()), fieldName => parts.field(fieldName, render(spec, backstage, get$g(dialogData, fieldName))));\n    };\n    const makeIframe = render => (parts, spec, dialogData, backstage) => {\n      const iframeSpec = deepMerge(spec, { source: 'dynamic' });\n      return make$2(render)(parts, iframeSpec, dialogData, backstage);\n    };\n    const factories = {\n      bar: make$2((spec, backstage) => renderBar(spec, backstage.shared)),\n      collection: make$2((spec, backstage, data) => renderCollection(spec, backstage.shared.providers, data)),\n      alertbanner: make$2((spec, backstage) => renderAlertBanner(spec, backstage.shared.providers)),\n      input: make$2((spec, backstage, data) => renderInput(spec, backstage.shared.providers, data)),\n      textarea: make$2((spec, backstage, data) => renderTextarea(spec, backstage.shared.providers, data)),\n      label: make$2((spec, backstage) => renderLabel$2(spec, backstage.shared)),\n      iframe: makeIframe((spec, backstage, data) => renderIFrame(spec, backstage.shared.providers, data)),\n      button: make$2((spec, backstage) => renderDialogButton(spec, backstage.shared.providers)),\n      checkbox: make$2((spec, backstage, data) => renderCheckbox(spec, backstage.shared.providers, data)),\n      colorinput: make$2((spec, backstage, data) => renderColorInput(spec, backstage.shared, backstage.colorinput, data)),\n      colorpicker: make$2((spec, backstage, data) => renderColorPicker(spec, backstage.shared.providers, data)),\n      dropzone: make$2((spec, backstage, data) => renderDropZone(spec, backstage.shared.providers, data)),\n      grid: make$2((spec, backstage) => renderGrid(spec, backstage.shared)),\n      listbox: make$2((spec, backstage, data) => renderListBox(spec, backstage, data)),\n      selectbox: make$2((spec, backstage, data) => renderSelectBox(spec, backstage.shared.providers, data)),\n      sizeinput: make$2((spec, backstage) => renderSizeInput(spec, backstage.shared.providers)),\n      slider: make$2((spec, backstage, data) => renderSlider(spec, backstage.shared.providers, data)),\n      urlinput: make$2((spec, backstage, data) => renderUrlInput(spec, backstage, backstage.urlinput, data)),\n      customeditor: make$2(renderCustomEditor),\n      htmlpanel: make$2(renderHtmlPanel),\n      imagepreview: make$2((spec, _, data) => renderImagePreview(spec, data)),\n      table: make$2((spec, backstage) => renderTable(spec, backstage.shared.providers)),\n      tree: make$2((spec, backstage) => renderTree(spec, backstage)),\n      panel: make$2((spec, backstage) => renderPanel(spec, backstage))\n    };\n    const noFormParts = {\n      field: (_name, spec) => spec,\n      record: constant$1([])\n    };\n    const interpretInForm = (parts, spec, dialogData, oldBackstage) => {\n      const newBackstage = deepMerge(oldBackstage, { shared: { interpreter: childSpec => interpretParts(parts, childSpec, dialogData, newBackstage) } });\n      return interpretParts(parts, spec, dialogData, newBackstage);\n    };\n    const interpretParts = (parts, spec, dialogData, backstage) => get$g(factories, spec.type).fold(() => {\n      console.error(`Unknown factory type \"${ spec.type }\", defaulting to container: `, spec);\n      return spec;\n    }, factory => factory(parts, spec, dialogData, backstage));\n    const interpretWithoutForm = (spec, dialogData, backstage) => interpretParts(noFormParts, spec, dialogData, backstage);\n\n    const labelPrefix = 'layout-inset';\n    const westEdgeX = anchor => anchor.x;\n    const middleX = (anchor, element) => anchor.x + anchor.width / 2 - element.width / 2;\n    const eastEdgeX = (anchor, element) => anchor.x + anchor.width - element.width;\n    const northY = anchor => anchor.y;\n    const southY = (anchor, element) => anchor.y + anchor.height - element.height;\n    const centreY = (anchor, element) => anchor.y + anchor.height / 2 - element.height / 2;\n    const southwest = (anchor, element, bubbles) => nu$6(eastEdgeX(anchor, element), southY(anchor, element), bubbles.insetSouthwest(), northwest$3(), 'southwest', boundsRestriction(anchor, {\n      right: 0,\n      bottom: 3\n    }), labelPrefix);\n    const southeast = (anchor, element, bubbles) => nu$6(westEdgeX(anchor), southY(anchor, element), bubbles.insetSoutheast(), northeast$3(), 'southeast', boundsRestriction(anchor, {\n      left: 1,\n      bottom: 3\n    }), labelPrefix);\n    const northwest = (anchor, element, bubbles) => nu$6(eastEdgeX(anchor, element), northY(anchor), bubbles.insetNorthwest(), southwest$3(), 'northwest', boundsRestriction(anchor, {\n      right: 0,\n      top: 2\n    }), labelPrefix);\n    const northeast = (anchor, element, bubbles) => nu$6(westEdgeX(anchor), northY(anchor), bubbles.insetNortheast(), southeast$3(), 'northeast', boundsRestriction(anchor, {\n      left: 1,\n      top: 2\n    }), labelPrefix);\n    const north = (anchor, element, bubbles) => nu$6(middleX(anchor, element), northY(anchor), bubbles.insetNorth(), south$3(), 'north', boundsRestriction(anchor, { top: 2 }), labelPrefix);\n    const south = (anchor, element, bubbles) => nu$6(middleX(anchor, element), southY(anchor, element), bubbles.insetSouth(), north$3(), 'south', boundsRestriction(anchor, { bottom: 3 }), labelPrefix);\n    const east = (anchor, element, bubbles) => nu$6(eastEdgeX(anchor, element), centreY(anchor, element), bubbles.insetEast(), west$3(), 'east', boundsRestriction(anchor, { right: 0 }), labelPrefix);\n    const west = (anchor, element, bubbles) => nu$6(westEdgeX(anchor), centreY(anchor, element), bubbles.insetWest(), east$3(), 'west', boundsRestriction(anchor, { left: 1 }), labelPrefix);\n    const lookupPreserveLayout = lastPlacement => {\n      switch (lastPlacement) {\n      case 'north':\n        return north;\n      case 'northeast':\n        return northeast;\n      case 'northwest':\n        return northwest;\n      case 'south':\n        return south;\n      case 'southeast':\n        return southeast;\n      case 'southwest':\n        return southwest;\n      case 'east':\n        return east;\n      case 'west':\n        return west;\n      }\n    };\n    const preserve = (anchor, element, bubbles, placee, bounds) => {\n      const layout = getPlacement(placee).map(lookupPreserveLayout).getOr(north);\n      return layout(anchor, element, bubbles, placee, bounds);\n    };\n    const lookupFlippedLayout = lastPlacement => {\n      switch (lastPlacement) {\n      case 'north':\n        return south;\n      case 'northeast':\n        return southeast;\n      case 'northwest':\n        return southwest;\n      case 'south':\n        return north;\n      case 'southeast':\n        return northeast;\n      case 'southwest':\n        return northwest;\n      case 'east':\n        return west;\n      case 'west':\n        return east;\n      }\n    };\n    const flip = (anchor, element, bubbles, placee, bounds) => {\n      const layout = getPlacement(placee).map(lookupFlippedLayout).getOr(north);\n      return layout(anchor, element, bubbles, placee, bounds);\n    };\n\n    const bubbleAlignments$2 = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: [],\n      alignRight: [],\n      right: [],\n      left: [],\n      bottom: [],\n      top: []\n    };\n    const getInlineDialogAnchor = (contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor) => {\n      const bubbleSize = 12;\n      const overrides = { maxHeightFunction: expandable$1() };\n      const editableAreaAnchor = () => ({\n        type: 'node',\n        root: getContentContainer(getRootNode(contentAreaElement())),\n        node: Optional.from(contentAreaElement()),\n        bubble: nu$5(bubbleSize, bubbleSize, bubbleAlignments$2),\n        layouts: {\n          onRtl: () => [northeast],\n          onLtr: () => [northwest]\n        },\n        overrides\n      });\n      const standardAnchor = () => ({\n        type: 'hotspot',\n        hotspot: lazyAnchorbar(),\n        bubble: nu$5(-bubbleSize, bubbleSize, bubbleAlignments$2),\n        layouts: {\n          onRtl: () => [\n            southeast$2,\n            southwest$2,\n            south$2\n          ],\n          onLtr: () => [\n            southwest$2,\n            southeast$2,\n            south$2\n          ]\n        },\n        overrides\n      });\n      return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getInlineBottomDialogAnchor = (inline, contentAreaElement, lazyBottomAnchorBar, lazyUseEditableAreaAnchor) => {\n      const bubbleSize = 12;\n      const overrides = { maxHeightFunction: expandable$1() };\n      const editableAreaAnchor = () => ({\n        type: 'node',\n        root: getContentContainer(getRootNode(contentAreaElement())),\n        node: Optional.from(contentAreaElement()),\n        bubble: nu$5(bubbleSize, bubbleSize, bubbleAlignments$2),\n        layouts: {\n          onRtl: () => [north],\n          onLtr: () => [north]\n        },\n        overrides\n      });\n      const standardAnchor = () => inline ? {\n        type: 'node',\n        root: getContentContainer(getRootNode(contentAreaElement())),\n        node: Optional.from(contentAreaElement()),\n        bubble: nu$5(0, -getOuter$2(contentAreaElement()), bubbleAlignments$2),\n        layouts: {\n          onRtl: () => [north$2],\n          onLtr: () => [north$2]\n        },\n        overrides\n      } : {\n        type: 'hotspot',\n        hotspot: lazyBottomAnchorBar(),\n        bubble: nu$5(0, 0, bubbleAlignments$2),\n        layouts: {\n          onRtl: () => [north$2],\n          onLtr: () => [north$2]\n        },\n        overrides\n      };\n      return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getBannerAnchor = (contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor) => {\n      const editableAreaAnchor = () => ({\n        type: 'node',\n        root: getContentContainer(getRootNode(contentAreaElement())),\n        node: Optional.from(contentAreaElement()),\n        layouts: {\n          onRtl: () => [north],\n          onLtr: () => [north]\n        }\n      });\n      const standardAnchor = () => ({\n        type: 'hotspot',\n        hotspot: lazyAnchorbar(),\n        layouts: {\n          onRtl: () => [south$2],\n          onLtr: () => [south$2]\n        }\n      });\n      return () => lazyUseEditableAreaAnchor() ? editableAreaAnchor() : standardAnchor();\n    };\n    const getCursorAnchor = (editor, bodyElement) => () => ({\n      type: 'selection',\n      root: bodyElement(),\n      getSelection: () => {\n        const rng = editor.selection.getRng();\n        const selectedCells = editor.model.table.getSelectedCells();\n        if (selectedCells.length > 1) {\n          const firstCell = selectedCells[0];\n          const lastCell = selectedCells[selectedCells.length - 1];\n          const selectionTableCellRange = {\n            firstCell: SugarElement.fromDom(firstCell),\n            lastCell: SugarElement.fromDom(lastCell)\n          };\n          return Optional.some(selectionTableCellRange);\n        }\n        return Optional.some(SimSelection.range(SugarElement.fromDom(rng.startContainer), rng.startOffset, SugarElement.fromDom(rng.endContainer), rng.endOffset));\n      }\n    });\n    const getNodeAnchor$1 = bodyElement => element => ({\n      type: 'node',\n      root: bodyElement(),\n      node: element\n    });\n    const getAnchors = (editor, lazyAnchorbar, lazyBottomAnchorBar, isToolbarTop) => {\n      const useFixedToolbarContainer = useFixedContainer(editor);\n      const bodyElement = () => SugarElement.fromDom(editor.getBody());\n      const contentAreaElement = () => SugarElement.fromDom(editor.getContentAreaContainer());\n      const lazyUseEditableAreaAnchor = () => useFixedToolbarContainer || !isToolbarTop();\n      return {\n        inlineDialog: getInlineDialogAnchor(contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor),\n        inlineBottomDialog: getInlineBottomDialogAnchor(editor.inline, contentAreaElement, lazyBottomAnchorBar, lazyUseEditableAreaAnchor),\n        banner: getBannerAnchor(contentAreaElement, lazyAnchorbar, lazyUseEditableAreaAnchor),\n        cursor: getCursorAnchor(editor, bodyElement),\n        node: getNodeAnchor$1(bodyElement)\n      };\n    };\n\n    const colorPicker = editor => (callback, value) => {\n      const dialog = colorPickerDialog(editor);\n      dialog(callback, value);\n    };\n    const hasCustomColors = editor => () => hasCustomColors$1(editor);\n    const getColors = editor => id => getColors$2(editor, id);\n    const getColorCols = editor => id => getColorCols$1(editor, id);\n    const ColorInputBackstage = editor => ({\n      colorPicker: colorPicker(editor),\n      hasCustomColors: hasCustomColors(editor),\n      getColors: getColors(editor),\n      getColorCols: getColorCols(editor)\n    });\n\n    const isDraggableModal = editor => () => isDraggableModal$1(editor);\n    const DialogBackstage = editor => ({ isDraggableModal: isDraggableModal(editor) });\n\n    const HeaderBackstage = editor => {\n      const mode = Cell(isToolbarLocationBottom(editor) ? 'bottom' : 'top');\n      return {\n        isPositionedAtTop: () => mode.get() === 'top',\n        getDockingMode: mode.get,\n        setDockingMode: mode.set\n      };\n    };\n\n    const isNestedFormat = format => hasNonNullableKey(format, 'items');\n    const isFormatReference = format => hasNonNullableKey(format, 'format');\n    const defaultStyleFormats = [\n      {\n        title: 'Headings',\n        items: [\n          {\n            title: 'Heading 1',\n            format: 'h1'\n          },\n          {\n            title: 'Heading 2',\n            format: 'h2'\n          },\n          {\n            title: 'Heading 3',\n            format: 'h3'\n          },\n          {\n            title: 'Heading 4',\n            format: 'h4'\n          },\n          {\n            title: 'Heading 5',\n            format: 'h5'\n          },\n          {\n            title: 'Heading 6',\n            format: 'h6'\n          }\n        ]\n      },\n      {\n        title: 'Inline',\n        items: [\n          {\n            title: 'Bold',\n            format: 'bold'\n          },\n          {\n            title: 'Italic',\n            format: 'italic'\n          },\n          {\n            title: 'Underline',\n            format: 'underline'\n          },\n          {\n            title: 'Strikethrough',\n            format: 'strikethrough'\n          },\n          {\n            title: 'Superscript',\n            format: 'superscript'\n          },\n          {\n            title: 'Subscript',\n            format: 'subscript'\n          },\n          {\n            title: 'Code',\n            format: 'code'\n          }\n        ]\n      },\n      {\n        title: 'Blocks',\n        items: [\n          {\n            title: 'Paragraph',\n            format: 'p'\n          },\n          {\n            title: 'Blockquote',\n            format: 'blockquote'\n          },\n          {\n            title: 'Div',\n            format: 'div'\n          },\n          {\n            title: 'Pre',\n            format: 'pre'\n          }\n        ]\n      },\n      {\n        title: 'Align',\n        items: [\n          {\n            title: 'Left',\n            format: 'alignleft'\n          },\n          {\n            title: 'Center',\n            format: 'aligncenter'\n          },\n          {\n            title: 'Right',\n            format: 'alignright'\n          },\n          {\n            title: 'Justify',\n            format: 'alignjustify'\n          }\n        ]\n      }\n    ];\n    const isNestedFormats = format => has$2(format, 'items');\n    const isBlockFormat = format => has$2(format, 'block');\n    const isInlineFormat = format => has$2(format, 'inline');\n    const isSelectorFormat = format => has$2(format, 'selector');\n    const mapFormats = userFormats => foldl(userFormats, (acc, fmt) => {\n      if (isNestedFormats(fmt)) {\n        const result = mapFormats(fmt.items);\n        return {\n          customFormats: acc.customFormats.concat(result.customFormats),\n          formats: acc.formats.concat([{\n              title: fmt.title,\n              items: result.formats\n            }])\n        };\n      } else if (isInlineFormat(fmt) || isBlockFormat(fmt) || isSelectorFormat(fmt)) {\n        const formatName = isString(fmt.name) ? fmt.name : fmt.title.toLowerCase();\n        const formatNameWithPrefix = `custom-${ formatName }`;\n        return {\n          customFormats: acc.customFormats.concat([{\n              name: formatNameWithPrefix,\n              format: fmt\n            }]),\n          formats: acc.formats.concat([{\n              title: fmt.title,\n              format: formatNameWithPrefix,\n              icon: fmt.icon\n            }])\n        };\n      } else {\n        return {\n          ...acc,\n          formats: acc.formats.concat(fmt)\n        };\n      }\n    }, {\n      customFormats: [],\n      formats: []\n    });\n    const registerCustomFormats = (editor, userFormats) => {\n      const result = mapFormats(userFormats);\n      const registerFormats = customFormats => {\n        each$1(customFormats, fmt => {\n          if (!editor.formatter.has(fmt.name)) {\n            editor.formatter.register(fmt.name, fmt.format);\n          }\n        });\n      };\n      if (editor.formatter) {\n        registerFormats(result.customFormats);\n      } else {\n        editor.on('init', () => {\n          registerFormats(result.customFormats);\n        });\n      }\n      return result.formats;\n    };\n    const getStyleFormats = editor => getUserStyleFormats(editor).map(userFormats => {\n      const registeredUserFormats = registerCustomFormats(editor, userFormats);\n      return shouldMergeStyleFormats(editor) ? defaultStyleFormats.concat(registeredUserFormats) : registeredUserFormats;\n    }).getOr(defaultStyleFormats);\n\n    const isSeparator$1 = format => {\n      const keys$1 = keys(format);\n      return keys$1.length === 1 && contains$2(keys$1, 'title');\n    };\n    const processBasic = (item, isSelectedFor, getPreviewFor) => ({\n      ...item,\n      type: 'formatter',\n      isSelected: isSelectedFor(item.format),\n      getStylePreview: getPreviewFor(item.format)\n    });\n    const register$a = (editor, formats, isSelectedFor, getPreviewFor) => {\n      const enrichSupported = item => processBasic(item, isSelectedFor, getPreviewFor);\n      const enrichMenu = item => {\n        const newItems = doEnrich(item.items);\n        return {\n          ...item,\n          type: 'submenu',\n          getStyleItems: constant$1(newItems)\n        };\n      };\n      const enrichCustom = item => {\n        const formatName = isString(item.name) ? item.name : generate$6(item.title);\n        const formatNameWithPrefix = `custom-${ formatName }`;\n        const newItem = {\n          ...item,\n          type: 'formatter',\n          format: formatNameWithPrefix,\n          isSelected: isSelectedFor(formatNameWithPrefix),\n          getStylePreview: getPreviewFor(formatNameWithPrefix)\n        };\n        editor.formatter.register(formatName, newItem);\n        return newItem;\n      };\n      const doEnrich = items => map$2(items, item => {\n        if (isNestedFormat(item)) {\n          return enrichMenu(item);\n        } else if (isFormatReference(item)) {\n          return enrichSupported(item);\n        } else if (isSeparator$1(item)) {\n          return {\n            ...item,\n            type: 'separator'\n          };\n        } else {\n          return enrichCustom(item);\n        }\n      });\n      return doEnrich(formats);\n    };\n\n    const init$7 = editor => {\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = format => () => {\n        const fmt = editor.formatter.get(format);\n        return fmt !== undefined ? Optional.some({\n          tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n          styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n        }) : Optional.none();\n      };\n      const settingsFormats = Cell([]);\n      const eventsFormats = Cell([]);\n      const replaceSettings = Cell(false);\n      editor.on('PreInit', _e => {\n        const formats = getStyleFormats(editor);\n        const enriched = register$a(editor, formats, isSelectedFor, getPreviewFor);\n        settingsFormats.set(enriched);\n      });\n      editor.on('addStyleModifications', e => {\n        const modifications = register$a(editor, e.items, isSelectedFor, getPreviewFor);\n        eventsFormats.set(modifications);\n        replaceSettings.set(e.replace);\n      });\n      const getData = () => {\n        const fromSettings = replaceSettings.get() ? [] : settingsFormats.get();\n        const fromEvents = eventsFormats.get();\n        return fromSettings.concat(fromEvents);\n      };\n      return { getData };\n    };\n\n    const isElement = node => isNonNullable(node) && node.nodeType === 1;\n    const trim = global$1.trim;\n    const hasContentEditableState = value => {\n      return node => {\n        if (isElement(node)) {\n          if (node.contentEditable === value) {\n            return true;\n          }\n          if (node.getAttribute('data-mce-contenteditable') === value) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    const isContentEditableTrue = hasContentEditableState('true');\n    const isContentEditableFalse = hasContentEditableState('false');\n    const create = (type, title, url, level, attach) => ({\n      type,\n      title,\n      url,\n      level,\n      attach\n    });\n    const isChildOfContentEditableTrue = node => {\n      let tempNode = node;\n      while (tempNode = tempNode.parentNode) {\n        const value = tempNode.contentEditable;\n        if (value && value !== 'inherit') {\n          return isContentEditableTrue(tempNode);\n        }\n      }\n      return false;\n    };\n    const select = (selector, root) => {\n      return map$2(descendants(SugarElement.fromDom(root), selector), element => {\n        return element.dom;\n      });\n    };\n    const getElementText = elm => {\n      return elm.innerText || elm.textContent;\n    };\n    const getOrGenerateId = elm => {\n      return elm.id ? elm.id : generate$6('h');\n    };\n    const isAnchor = elm => {\n      return elm && elm.nodeName === 'A' && (elm.id || elm.name) !== undefined;\n    };\n    const isValidAnchor = elm => {\n      return isAnchor(elm) && isEditable(elm);\n    };\n    const isHeader = elm => {\n      return elm && /^(H[1-6])$/.test(elm.nodeName);\n    };\n    const isEditable = elm => {\n      return isChildOfContentEditableTrue(elm) && !isContentEditableFalse(elm);\n    };\n    const isValidHeader = elm => {\n      return isHeader(elm) && isEditable(elm);\n    };\n    const getLevel = elm => {\n      return isHeader(elm) ? parseInt(elm.nodeName.substr(1), 10) : 0;\n    };\n    const headerTarget = elm => {\n      var _a;\n      const headerId = getOrGenerateId(elm);\n      const attach = () => {\n        elm.id = headerId;\n      };\n      return create('header', (_a = getElementText(elm)) !== null && _a !== void 0 ? _a : '', '#' + headerId, getLevel(elm), attach);\n    };\n    const anchorTarget = elm => {\n      const anchorId = elm.id || elm.name;\n      const anchorText = getElementText(elm);\n      return create('anchor', anchorText ? anchorText : '#' + anchorId, '#' + anchorId, 0, noop);\n    };\n    const getHeaderTargets = elms => {\n      return map$2(filter$2(elms, isValidHeader), headerTarget);\n    };\n    const getAnchorTargets = elms => {\n      return map$2(filter$2(elms, isValidAnchor), anchorTarget);\n    };\n    const getTargetElements = elm => {\n      const elms = select('h1,h2,h3,h4,h5,h6,a:not([href])', elm);\n      return elms;\n    };\n    const hasTitle = target => {\n      return trim(target.title).length > 0;\n    };\n    const find = elm => {\n      const elms = getTargetElements(elm);\n      return filter$2(getHeaderTargets(elms).concat(getAnchorTargets(elms)), hasTitle);\n    };\n    const LinkTargets = { find };\n\n    const STORAGE_KEY = 'tinymce-url-history';\n    const HISTORY_LENGTH = 5;\n    const isHttpUrl = url => isString(url) && /^https?/.test(url);\n    const isArrayOfUrl = a => isArray(a) && a.length <= HISTORY_LENGTH && forall(a, isHttpUrl);\n    const isRecordOfUrlArray = r => isObject(r) && find$4(r, value => !isArrayOfUrl(value)).isNone();\n    const getAllHistory = () => {\n      const unparsedHistory = global$4.getItem(STORAGE_KEY);\n      if (unparsedHistory === null) {\n        return {};\n      }\n      let history;\n      try {\n        history = JSON.parse(unparsedHistory);\n      } catch (e) {\n        if (e instanceof SyntaxError) {\n          console.log('Local storage ' + STORAGE_KEY + ' was not valid JSON', e);\n          return {};\n        }\n        throw e;\n      }\n      if (!isRecordOfUrlArray(history)) {\n        console.log('Local storage ' + STORAGE_KEY + ' was not valid format', history);\n        return {};\n      }\n      return history;\n    };\n    const setAllHistory = history => {\n      if (!isRecordOfUrlArray(history)) {\n        throw new Error('Bad format for history:\\n' + JSON.stringify(history));\n      }\n      global$4.setItem(STORAGE_KEY, JSON.stringify(history));\n    };\n    const getHistory = fileType => {\n      const history = getAllHistory();\n      return get$g(history, fileType).getOr([]);\n    };\n    const addToHistory = (url, fileType) => {\n      if (!isHttpUrl(url)) {\n        return;\n      }\n      const history = getAllHistory();\n      const items = get$g(history, fileType).getOr([]);\n      const itemsWithoutUrl = filter$2(items, item => item !== url);\n      history[fileType] = [url].concat(itemsWithoutUrl).slice(0, HISTORY_LENGTH);\n      setAllHistory(history);\n    };\n\n    const isTruthy = value => !!value;\n    const makeMap = value => map$1(global$1.makeMap(value, /[, ]/), isTruthy);\n    const getPicker = editor => Optional.from(getFilePickerCallback(editor));\n    const getPickerTypes = editor => {\n      const optFileTypes = Optional.from(getFilePickerTypes(editor)).filter(isTruthy).map(makeMap);\n      return getPicker(editor).fold(never, _picker => optFileTypes.fold(always, types => keys(types).length > 0 ? types : false));\n    };\n    const getPickerSetting = (editor, filetype) => {\n      const pickerTypes = getPickerTypes(editor);\n      if (isBoolean(pickerTypes)) {\n        return pickerTypes ? getPicker(editor) : Optional.none();\n      } else {\n        return pickerTypes[filetype] ? getPicker(editor) : Optional.none();\n      }\n    };\n    const getUrlPicker = (editor, filetype) => getPickerSetting(editor, filetype).map(picker => entry => Future.nu(completer => {\n      const handler = (value, meta) => {\n        if (!isString(value)) {\n          throw new Error('Expected value to be string');\n        }\n        if (meta !== undefined && !isObject(meta)) {\n          throw new Error('Expected meta to be a object');\n        }\n        const r = {\n          value,\n          meta\n        };\n        completer(r);\n      };\n      const meta = {\n        filetype,\n        fieldname: entry.fieldname,\n        ...Optional.from(entry.meta).getOr({})\n      };\n      picker.call(editor, handler, entry.value, meta);\n    }));\n    const getTextSetting = value => Optional.from(value).filter(isString).getOrUndefined();\n    const getLinkInformation = editor => {\n      if (!useTypeaheadUrls(editor)) {\n        return Optional.none();\n      }\n      return Optional.some({\n        targets: LinkTargets.find(editor.getBody()),\n        anchorTop: getTextSetting(getAnchorTop(editor)),\n        anchorBottom: getTextSetting(getAnchorBottom(editor))\n      });\n    };\n    const getValidationHandler = editor => Optional.from(getFilePickerValidatorHandler(editor));\n    const UrlInputBackstage = editor => ({\n      getHistory,\n      addToHistory,\n      getLinkInformation: () => getLinkInformation(editor),\n      getValidationHandler: () => getValidationHandler(editor),\n      getUrlPicker: filetype => getUrlPicker(editor, filetype)\n    });\n\n    const init$6 = (lazySinks, editor, lazyAnchorbar, lazyBottomAnchorBar) => {\n      const contextMenuState = Cell(false);\n      const toolbar = HeaderBackstage(editor);\n      const providers = {\n        icons: () => editor.ui.registry.getAll().icons,\n        menuItems: () => editor.ui.registry.getAll().menuItems,\n        translate: global$8.translate,\n        isDisabled: () => editor.mode.isReadOnly() || !editor.ui.isEnabled(),\n        getOption: editor.options.get\n      };\n      const urlinput = UrlInputBackstage(editor);\n      const styles = init$7(editor);\n      const colorinput = ColorInputBackstage(editor);\n      const dialogSettings = DialogBackstage(editor);\n      const isContextMenuOpen = () => contextMenuState.get();\n      const setContextMenuState = state => contextMenuState.set(state);\n      const commonBackstage = {\n        shared: {\n          providers,\n          anchors: getAnchors(editor, lazyAnchorbar, lazyBottomAnchorBar, toolbar.isPositionedAtTop),\n          header: toolbar\n        },\n        urlinput,\n        styles,\n        colorinput,\n        dialog: dialogSettings,\n        isContextMenuOpen,\n        setContextMenuState\n      };\n      const popupBackstage = {\n        ...commonBackstage,\n        shared: {\n          ...commonBackstage.shared,\n          interpreter: s => interpretWithoutForm(s, {}, popupBackstage),\n          getSink: lazySinks.popup\n        }\n      };\n      const dialogBackstage = {\n        ...commonBackstage,\n        shared: {\n          ...commonBackstage.shared,\n          interpreter: s => interpretWithoutForm(s, {}, dialogBackstage),\n          getSink: lazySinks.dialog\n        }\n      };\n      return {\n        popup: popupBackstage,\n        dialog: dialogBackstage\n      };\n    };\n\n    const setup$b = (editor, mothership, uiMotherships) => {\n      const broadcastEvent = (name, evt) => {\n        each$1([\n          mothership,\n          ...uiMotherships\n        ], m => {\n          m.broadcastEvent(name, evt);\n        });\n      };\n      const broadcastOn = (channel, message) => {\n        each$1([\n          mothership,\n          ...uiMotherships\n        ], m => {\n          m.broadcastOn([channel], message);\n        });\n      };\n      const fireDismissPopups = evt => broadcastOn(dismissPopups(), { target: evt.target });\n      const doc = getDocument();\n      const onTouchstart = bind(doc, 'touchstart', fireDismissPopups);\n      const onTouchmove = bind(doc, 'touchmove', evt => broadcastEvent(documentTouchmove(), evt));\n      const onTouchend = bind(doc, 'touchend', evt => broadcastEvent(documentTouchend(), evt));\n      const onMousedown = bind(doc, 'mousedown', fireDismissPopups);\n      const onMouseup = bind(doc, 'mouseup', evt => {\n        if (evt.raw.button === 0) {\n          broadcastOn(mouseReleased(), { target: evt.target });\n        }\n      });\n      const onContentClick = raw => broadcastOn(dismissPopups(), { target: SugarElement.fromDom(raw.target) });\n      const onContentMouseup = raw => {\n        if (raw.button === 0) {\n          broadcastOn(mouseReleased(), { target: SugarElement.fromDom(raw.target) });\n        }\n      };\n      const onContentMousedown = () => {\n        each$1(editor.editorManager.get(), loopEditor => {\n          if (editor !== loopEditor) {\n            loopEditor.dispatch('DismissPopups', { relatedTarget: editor });\n          }\n        });\n      };\n      const onWindowScroll = evt => broadcastEvent(windowScroll(), fromRawEvent(evt));\n      const onWindowResize = evt => {\n        broadcastOn(repositionPopups(), {});\n        broadcastEvent(windowResize(), fromRawEvent(evt));\n      };\n      const dos = getRootNode(SugarElement.fromDom(editor.getElement()));\n      const onElementScroll = capture(dos, 'scroll', evt => {\n        requestAnimationFrame(() => {\n          const c = editor.getContainer();\n          if (c !== undefined && c !== null) {\n            const optScrollingContext = detectWhenSplitUiMode(editor, mothership.element);\n            const scrollers = optScrollingContext.map(sc => [\n              sc.element,\n              ...sc.others\n            ]).getOr([]);\n            if (exists(scrollers, s => eq(s, evt.target))) {\n              editor.dispatch('ElementScroll', { target: evt.target.dom });\n              broadcastEvent(externalElementScroll(), evt);\n            }\n          }\n        });\n      });\n      const onEditorResize = () => broadcastOn(repositionPopups(), {});\n      const onEditorProgress = evt => {\n        if (evt.state) {\n          broadcastOn(dismissPopups(), { target: SugarElement.fromDom(editor.getContainer()) });\n        }\n      };\n      const onDismissPopups = event => {\n        broadcastOn(dismissPopups(), { target: SugarElement.fromDom(event.relatedTarget.getContainer()) });\n      };\n      editor.on('PostRender', () => {\n        editor.on('click', onContentClick);\n        editor.on('tap', onContentClick);\n        editor.on('mouseup', onContentMouseup);\n        editor.on('mousedown', onContentMousedown);\n        editor.on('ScrollWindow', onWindowScroll);\n        editor.on('ResizeWindow', onWindowResize);\n        editor.on('ResizeEditor', onEditorResize);\n        editor.on('AfterProgressState', onEditorProgress);\n        editor.on('DismissPopups', onDismissPopups);\n      });\n      editor.on('remove', () => {\n        editor.off('click', onContentClick);\n        editor.off('tap', onContentClick);\n        editor.off('mouseup', onContentMouseup);\n        editor.off('mousedown', onContentMousedown);\n        editor.off('ScrollWindow', onWindowScroll);\n        editor.off('ResizeWindow', onWindowResize);\n        editor.off('ResizeEditor', onEditorResize);\n        editor.off('AfterProgressState', onEditorProgress);\n        editor.off('DismissPopups', onDismissPopups);\n        onMousedown.unbind();\n        onTouchstart.unbind();\n        onTouchmove.unbind();\n        onTouchend.unbind();\n        onMouseup.unbind();\n        onElementScroll.unbind();\n      });\n      editor.on('detach', () => {\n        each$1([\n          mothership,\n          ...uiMotherships\n        ], detachSystem);\n        each$1([\n          mothership,\n          ...uiMotherships\n        ], m => m.destroy());\n      });\n    };\n\n    const parts$a = AlloyParts;\n    const partType = PartType;\n\n    const schema$f = constant$1([\n      defaulted('shell', false),\n      required$1('makeItem'),\n      defaulted('setupItem', noop),\n      SketchBehaviours.field('listBehaviours', [Replacing])\n    ]);\n    const customListDetail = () => ({ behaviours: derive$1([Replacing.config({})]) });\n    const itemsPart = optional({\n      name: 'items',\n      overrides: customListDetail\n    });\n    const parts$9 = constant$1([itemsPart]);\n    const name = constant$1('CustomList');\n\n    const factory$f = (detail, components, _spec, _external) => {\n      const setItems = (list, items) => {\n        getListContainer(list).fold(() => {\n          console.error('Custom List was defined to not be a shell, but no item container was specified in components');\n          throw new Error('Custom List was defined to not be a shell, but no item container was specified in components');\n        }, container => {\n          const itemComps = Replacing.contents(container);\n          const numListsRequired = items.length;\n          const numListsToAdd = numListsRequired - itemComps.length;\n          const itemsToAdd = numListsToAdd > 0 ? range$2(numListsToAdd, () => detail.makeItem()) : [];\n          const itemsToRemove = itemComps.slice(numListsRequired);\n          each$1(itemsToRemove, item => Replacing.remove(container, item));\n          each$1(itemsToAdd, item => Replacing.append(container, item));\n          const builtLists = Replacing.contents(container);\n          each$1(builtLists, (item, i) => {\n            detail.setupItem(list, item, items[i], i);\n          });\n        });\n      };\n      const extra = detail.shell ? {\n        behaviours: [Replacing.config({})],\n        components: []\n      } : {\n        behaviours: [],\n        components\n      };\n      const getListContainer = component => detail.shell ? Optional.some(component) : getPart(component, detail, 'items');\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: extra.components,\n        behaviours: augment(detail.listBehaviours, extra.behaviours),\n        apis: { setItems }\n      };\n    };\n    const CustomList = composite({\n      name: name(),\n      configFields: schema$f(),\n      partFields: parts$9(),\n      factory: factory$f,\n      apis: {\n        setItems: (apis, list, items) => {\n          apis.setItems(list, items);\n        }\n      }\n    });\n\n    const schema$e = constant$1([\n      required$1('dom'),\n      defaulted('shell', true),\n      field('toolbarBehaviours', [Replacing])\n    ]);\n    const enhanceGroups = () => ({ behaviours: derive$1([Replacing.config({})]) });\n    const parts$8 = constant$1([optional({\n        name: 'groups',\n        overrides: enhanceGroups\n      })]);\n\n    const factory$e = (detail, components, _spec, _externals) => {\n      const setGroups = (toolbar, groups) => {\n        getGroupContainer(toolbar).fold(() => {\n          console.error('Toolbar was defined to not be a shell, but no groups container was specified in components');\n          throw new Error('Toolbar was defined to not be a shell, but no groups container was specified in components');\n        }, container => {\n          Replacing.set(container, groups);\n        });\n      };\n      const getGroupContainer = component => detail.shell ? Optional.some(component) : getPart(component, detail, 'groups');\n      const extra = detail.shell ? {\n        behaviours: [Replacing.config({})],\n        components: []\n      } : {\n        behaviours: [],\n        components\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: extra.components,\n        behaviours: augment(detail.toolbarBehaviours, extra.behaviours),\n        apis: {\n          setGroups,\n          refresh: noop\n        },\n        domModification: { attributes: { role: 'group' } }\n      };\n    };\n    const Toolbar = composite({\n      name: 'Toolbar',\n      configFields: schema$e(),\n      partFields: parts$8(),\n      factory: factory$e,\n      apis: {\n        setGroups: (apis, toolbar, groups) => {\n          apis.setGroups(toolbar, groups);\n        }\n      }\n    });\n\n    const setup$a = noop;\n    const isDocked$2 = never;\n    const getBehaviours$1 = constant$1([]);\n\n    var StaticHeader = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setup: setup$a,\n        isDocked: isDocked$2,\n        getBehaviours: getBehaviours$1\n    });\n\n    const getOffsetParent = element => {\n      const isFixed = is$1(getRaw(element, 'position'), 'fixed');\n      const offsetParent$1 = isFixed ? Optional.none() : offsetParent(element);\n      return offsetParent$1.orThunk(() => {\n        const marker = SugarElement.fromTag('span');\n        return parent(element).bind(parent => {\n          append$2(parent, marker);\n          const offsetParent$1 = offsetParent(marker);\n          remove$5(marker);\n          return offsetParent$1;\n        });\n      });\n    };\n    const getOrigin = element => getOffsetParent(element).map(absolute$3).getOrThunk(() => SugarPosition(0, 0));\n\n    const appear = (component, contextualInfo) => {\n      const elem = component.element;\n      add$2(elem, contextualInfo.transitionClass);\n      remove$2(elem, contextualInfo.fadeOutClass);\n      add$2(elem, contextualInfo.fadeInClass);\n      contextualInfo.onShow(component);\n    };\n    const disappear = (component, contextualInfo) => {\n      const elem = component.element;\n      add$2(elem, contextualInfo.transitionClass);\n      remove$2(elem, contextualInfo.fadeInClass);\n      add$2(elem, contextualInfo.fadeOutClass);\n      contextualInfo.onHide(component);\n    };\n    const isPartiallyVisible = (box, bounds) => box.y < bounds.bottom && box.bottom > bounds.y;\n    const isTopCompletelyVisible = (box, bounds) => box.y >= bounds.y;\n    const isBottomCompletelyVisible = (box, bounds) => box.bottom <= bounds.bottom;\n    const forceTopPosition = (winBox, leftX, viewport) => ({\n      location: 'top',\n      leftX,\n      topY: viewport.bounds.y - winBox.y\n    });\n    const forceBottomPosition = (winBox, leftX, viewport) => ({\n      location: 'bottom',\n      leftX,\n      bottomY: winBox.bottom - viewport.bounds.bottom\n    });\n    const getDockedLeftPosition = bounds => {\n      return bounds.box.x - bounds.win.x;\n    };\n    const tryDockingPosition = (modes, bounds, viewport) => {\n      const winBox = bounds.win;\n      const box = bounds.box;\n      const leftX = getDockedLeftPosition(bounds);\n      return findMap(modes, mode => {\n        switch (mode) {\n        case 'bottom':\n          return !isBottomCompletelyVisible(box, viewport.bounds) ? Optional.some(forceBottomPosition(winBox, leftX, viewport)) : Optional.none();\n        case 'top':\n          return !isTopCompletelyVisible(box, viewport.bounds) ? Optional.some(forceTopPosition(winBox, leftX, viewport)) : Optional.none();\n        default:\n          return Optional.none();\n        }\n      }).getOr({ location: 'no-dock' });\n    };\n    const isVisibleForModes = (modes, box, viewport) => forall(modes, mode => {\n      switch (mode) {\n      case 'bottom':\n        return isBottomCompletelyVisible(box, viewport.bounds);\n      case 'top':\n        return isTopCompletelyVisible(box, viewport.bounds);\n      }\n    });\n    const getXYForRestoring = (pos, viewport) => {\n      const priorY = viewport.optScrollEnv.fold(constant$1(pos.bounds.y), scrollEnv => scrollEnv.scrollElmTop + (pos.bounds.y - scrollEnv.currentScrollTop));\n      return SugarPosition(pos.bounds.x, priorY);\n    };\n    const getXYForSaving = (box, viewport) => {\n      const priorY = viewport.optScrollEnv.fold(constant$1(box.y), scrollEnv => box.y + scrollEnv.currentScrollTop - scrollEnv.scrollElmTop);\n      return SugarPosition(box.x, priorY);\n    };\n    const getPrior = (elem, viewport, state) => state.getInitialPos().map(pos => {\n      const xy = getXYForRestoring(pos, viewport);\n      return {\n        box: bounds(xy.left, xy.top, get$c(elem), get$d(elem)),\n        location: pos.location\n      };\n    });\n    const storePrior = (elem, box, viewport, state, decision) => {\n      const xy = getXYForSaving(box, viewport);\n      const bounds$1 = bounds(xy.left, xy.top, box.width, box.height);\n      state.setInitialPos({\n        style: getAllRaw(elem),\n        position: get$e(elem, 'position') || 'static',\n        bounds: bounds$1,\n        location: decision.location\n      });\n    };\n    const storePriorIfNone = (elem, box, viewport, state, decision) => {\n      state.getInitialPos().fold(() => storePrior(elem, box, viewport, state, decision), () => noop);\n    };\n    const revertToOriginal = (elem, box, state) => state.getInitialPos().bind(position => {\n      var _a;\n      state.clearInitialPos();\n      switch (position.position) {\n      case 'static':\n        return Optional.some({ morph: 'static' });\n      case 'absolute':\n        const offsetParent = getOffsetParent(elem).getOr(body());\n        const offsetBox = box$1(offsetParent);\n        const scrollDelta = (_a = offsetParent.dom.scrollTop) !== null && _a !== void 0 ? _a : 0;\n        return Optional.some({\n          morph: 'absolute',\n          positionCss: NuPositionCss('absolute', get$g(position.style, 'left').map(_left => box.x - offsetBox.x), get$g(position.style, 'top').map(_top => box.y - offsetBox.y + scrollDelta), get$g(position.style, 'right').map(_right => offsetBox.right - box.right), get$g(position.style, 'bottom').map(_bottom => offsetBox.bottom - box.bottom))\n        });\n      default:\n        return Optional.none();\n      }\n    });\n    const tryMorphToOriginal = (elem, viewport, state) => getPrior(elem, viewport, state).filter(({box}) => isVisibleForModes(state.getModes(), box, viewport)).bind(({box}) => revertToOriginal(elem, box, state));\n    const tryDecisionToFixedMorph = decision => {\n      switch (decision.location) {\n      case 'top': {\n          return Optional.some({\n            morph: 'fixed',\n            positionCss: NuPositionCss('fixed', Optional.some(decision.leftX), Optional.some(decision.topY), Optional.none(), Optional.none())\n          });\n        }\n      case 'bottom': {\n          return Optional.some({\n            morph: 'fixed',\n            positionCss: NuPositionCss('fixed', Optional.some(decision.leftX), Optional.none(), Optional.none(), Optional.some(decision.bottomY))\n          });\n        }\n      default:\n        return Optional.none();\n      }\n    };\n    const tryMorphToFixed = (elem, viewport, state) => {\n      const box = box$1(elem);\n      const winBox = win();\n      const decision = tryDockingPosition(state.getModes(), {\n        win: winBox,\n        box\n      }, viewport);\n      if (decision.location === 'top' || decision.location === 'bottom') {\n        storePrior(elem, box, viewport, state, decision);\n        return tryDecisionToFixedMorph(decision);\n      } else {\n        return Optional.none();\n      }\n    };\n    const tryMorphToOriginalOrUpdateFixed = (elem, viewport, state) => {\n      return tryMorphToOriginal(elem, viewport, state).orThunk(() => {\n        return viewport.optScrollEnv.bind(_ => getPrior(elem, viewport, state)).bind(({box, location}) => {\n          const winBox = win();\n          const leftX = getDockedLeftPosition({\n            win: winBox,\n            box\n          });\n          const decision = location === 'top' ? forceTopPosition(winBox, leftX, viewport) : forceBottomPosition(winBox, leftX, viewport);\n          return tryDecisionToFixedMorph(decision);\n        });\n      });\n    };\n    const tryMorph = (component, viewport, state) => {\n      const elem = component.element;\n      const isDocked = is$1(getRaw(elem, 'position'), 'fixed');\n      return isDocked ? tryMorphToOriginalOrUpdateFixed(elem, viewport, state) : tryMorphToFixed(elem, viewport, state);\n    };\n    const calculateMorphToOriginal = (component, viewport, state) => {\n      const elem = component.element;\n      return getPrior(elem, viewport, state).bind(({box}) => revertToOriginal(elem, box, state));\n    };\n    const forceDockWith = (elem, viewport, state, getDecision) => {\n      const box = box$1(elem);\n      const winBox = win();\n      const leftX = getDockedLeftPosition({\n        win: winBox,\n        box\n      });\n      const decision = getDecision(winBox, leftX, viewport);\n      if (decision.location === 'bottom' || decision.location === 'top') {\n        storePriorIfNone(elem, box, viewport, state, decision);\n        return tryDecisionToFixedMorph(decision);\n      } else {\n        return Optional.none();\n      }\n    };\n\n    const morphToStatic = (component, config, state) => {\n      state.setDocked(false);\n      each$1([\n        'left',\n        'right',\n        'top',\n        'bottom',\n        'position'\n      ], prop => remove$6(component.element, prop));\n      config.onUndocked(component);\n    };\n    const morphToCoord = (component, config, state, position) => {\n      const isDocked = position.position === 'fixed';\n      state.setDocked(isDocked);\n      applyPositionCss(component.element, position);\n      const method = isDocked ? config.onDocked : config.onUndocked;\n      method(component);\n    };\n    const updateVisibility = (component, config, state, viewport, morphToDocked = false) => {\n      config.contextual.each(contextInfo => {\n        contextInfo.lazyContext(component).each(box => {\n          const isVisible = isPartiallyVisible(box, viewport.bounds);\n          if (isVisible !== state.isVisible()) {\n            state.setVisible(isVisible);\n            if (morphToDocked && !isVisible) {\n              add$1(component.element, [contextInfo.fadeOutClass]);\n              contextInfo.onHide(component);\n            } else {\n              const method = isVisible ? appear : disappear;\n              method(component, contextInfo);\n            }\n          }\n        });\n      });\n    };\n    const applyFixedMorph = (component, config, state, viewport, morph) => {\n      updateVisibility(component, config, state, viewport, true);\n      morphToCoord(component, config, state, morph.positionCss);\n    };\n    const applyMorph = (component, config, state, viewport, morph) => {\n      switch (morph.morph) {\n      case 'static': {\n          return morphToStatic(component, config, state);\n        }\n      case 'absolute': {\n          return morphToCoord(component, config, state, morph.positionCss);\n        }\n      case 'fixed': {\n          return applyFixedMorph(component, config, state, viewport, morph);\n        }\n      }\n    };\n    const refreshInternal = (component, config, state) => {\n      const viewport = config.lazyViewport(component);\n      updateVisibility(component, config, state, viewport);\n      tryMorph(component, viewport, state).each(morph => {\n        applyMorph(component, config, state, viewport, morph);\n      });\n    };\n    const resetInternal = (component, config, state) => {\n      const elem = component.element;\n      state.setDocked(false);\n      const viewport = config.lazyViewport(component);\n      calculateMorphToOriginal(component, viewport, state).each(staticOrAbsoluteMorph => {\n        switch (staticOrAbsoluteMorph.morph) {\n        case 'static': {\n            morphToStatic(component, config, state);\n            break;\n          }\n        case 'absolute': {\n            morphToCoord(component, config, state, staticOrAbsoluteMorph.positionCss);\n            break;\n          }\n        }\n      });\n      state.setVisible(true);\n      config.contextual.each(contextInfo => {\n        remove$1(elem, [\n          contextInfo.fadeInClass,\n          contextInfo.fadeOutClass,\n          contextInfo.transitionClass\n        ]);\n        contextInfo.onShow(component);\n      });\n      refresh$3(component, config, state);\n    };\n    const refresh$3 = (component, config, state) => {\n      if (component.getSystem().isConnected()) {\n        refreshInternal(component, config, state);\n      }\n    };\n    const reset = (component, config, state) => {\n      if (state.isDocked()) {\n        resetInternal(component, config, state);\n      }\n    };\n    const forceDockWithDecision = getDecision => (component, config, state) => {\n      const viewport = config.lazyViewport(component);\n      const optMorph = forceDockWith(component.element, viewport, state, getDecision);\n      optMorph.each(morph => {\n        applyFixedMorph(component, config, state, viewport, morph);\n      });\n    };\n    const forceDockToTop = forceDockWithDecision(forceTopPosition);\n    const forceDockToBottom = forceDockWithDecision(forceBottomPosition);\n    const isDocked$1 = (component, config, state) => state.isDocked();\n    const setModes = (component, config, state, modes) => state.setModes(modes);\n    const getModes = (component, config, state) => state.getModes();\n\n    var DockingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        refresh: refresh$3,\n        reset: reset,\n        isDocked: isDocked$1,\n        getModes: getModes,\n        setModes: setModes,\n        forceDockToTop: forceDockToTop,\n        forceDockToBottom: forceDockToBottom\n    });\n\n    const events$4 = (dockInfo, dockState) => derive$2([\n      runOnSource(transitionend(), (component, simulatedEvent) => {\n        dockInfo.contextual.each(contextInfo => {\n          if (has(component.element, contextInfo.transitionClass)) {\n            remove$1(component.element, [\n              contextInfo.transitionClass,\n              contextInfo.fadeInClass\n            ]);\n            const notify = dockState.isVisible() ? contextInfo.onShown : contextInfo.onHidden;\n            notify(component);\n          }\n          simulatedEvent.stop();\n        });\n      }),\n      run$1(windowScroll(), (component, _) => {\n        refresh$3(component, dockInfo, dockState);\n      }),\n      run$1(externalElementScroll(), (component, _) => {\n        refresh$3(component, dockInfo, dockState);\n      }),\n      run$1(windowResize(), (component, _) => {\n        reset(component, dockInfo, dockState);\n      })\n    ]);\n\n    var ActiveDocking = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events$4\n    });\n\n    var DockingSchema = [\n      optionObjOf('contextual', [\n        requiredString('fadeInClass'),\n        requiredString('fadeOutClass'),\n        requiredString('transitionClass'),\n        requiredFunction('lazyContext'),\n        onHandler('onShow'),\n        onHandler('onShown'),\n        onHandler('onHide'),\n        onHandler('onHidden')\n      ]),\n      defaultedFunction('lazyViewport', () => ({\n        bounds: win(),\n        optScrollEnv: Optional.none()\n      })),\n      defaultedArrayOf('modes', [\n        'top',\n        'bottom'\n      ], string),\n      onHandler('onDocked'),\n      onHandler('onUndocked')\n    ];\n\n    const init$5 = spec => {\n      const docked = Cell(false);\n      const visible = Cell(true);\n      const initialBounds = value$2();\n      const modes = Cell(spec.modes);\n      const readState = () => `docked:  ${ docked.get() }, visible: ${ visible.get() }, modes: ${ modes.get().join(',') }`;\n      return nu$8({\n        isDocked: docked.get,\n        setDocked: docked.set,\n        getInitialPos: initialBounds.get,\n        setInitialPos: initialBounds.set,\n        clearInitialPos: initialBounds.clear,\n        isVisible: visible.get,\n        setVisible: visible.set,\n        getModes: modes.get,\n        setModes: modes.set,\n        readState\n      });\n    };\n\n    var DockingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$5\n    });\n\n    const Docking = create$4({\n      fields: DockingSchema,\n      name: 'docking',\n      active: ActiveDocking,\n      apis: DockingApis,\n      state: DockingState\n    });\n\n    const toolbarHeightChange = constant$1(generate$6('toolbar-height-change'));\n\n    const visibility = {\n      fadeInClass: 'tox-editor-dock-fadein',\n      fadeOutClass: 'tox-editor-dock-fadeout',\n      transitionClass: 'tox-editor-dock-transition'\n    };\n    const editorStickyOnClass = 'tox-tinymce--toolbar-sticky-on';\n    const editorStickyOffClass = 'tox-tinymce--toolbar-sticky-off';\n    const scrollFromBehindHeader = (e, containerHeader) => {\n      const doc = owner$4(containerHeader);\n      const win = defaultView(containerHeader);\n      const viewHeight = win.dom.innerHeight;\n      const scrollPos = get$b(doc);\n      const markerElement = SugarElement.fromDom(e.elm);\n      const markerPos = absolute$2(markerElement);\n      const markerHeight = get$d(markerElement);\n      const markerTop = markerPos.y;\n      const markerBottom = markerTop + markerHeight;\n      const editorHeaderPos = absolute$3(containerHeader);\n      const editorHeaderHeight = get$d(containerHeader);\n      const editorHeaderTop = editorHeaderPos.top;\n      const editorHeaderBottom = editorHeaderTop + editorHeaderHeight;\n      const editorHeaderDockedAtTop = Math.abs(editorHeaderTop - scrollPos.top) < 2;\n      const editorHeaderDockedAtBottom = Math.abs(editorHeaderBottom - (scrollPos.top + viewHeight)) < 2;\n      if (editorHeaderDockedAtTop && markerTop < editorHeaderBottom) {\n        to(scrollPos.left, markerTop - editorHeaderHeight, doc);\n      } else if (editorHeaderDockedAtBottom && markerBottom > editorHeaderTop) {\n        const y = markerTop - viewHeight + markerHeight + editorHeaderHeight;\n        to(scrollPos.left, y, doc);\n      }\n    };\n    const isDockedMode = (header, mode) => contains$2(Docking.getModes(header), mode);\n    const updateIframeContentFlow = header => {\n      const getOccupiedHeight = elm => getOuter$2(elm) + (parseInt(get$e(elm, 'margin-top'), 10) || 0) + (parseInt(get$e(elm, 'margin-bottom'), 10) || 0);\n      const elm = header.element;\n      parentElement(elm).each(parentElem => {\n        const padding = 'padding-' + Docking.getModes(header)[0];\n        if (Docking.isDocked(header)) {\n          const parentWidth = get$c(parentElem);\n          set$8(elm, 'width', parentWidth + 'px');\n          set$8(parentElem, padding, getOccupiedHeight(elm) + 'px');\n        } else {\n          remove$6(elm, 'width');\n          remove$6(parentElem, padding);\n        }\n      });\n    };\n    const updateSinkVisibility = (sinkElem, visible) => {\n      if (visible) {\n        remove$2(sinkElem, visibility.fadeOutClass);\n        add$1(sinkElem, [\n          visibility.transitionClass,\n          visibility.fadeInClass\n        ]);\n      } else {\n        remove$2(sinkElem, visibility.fadeInClass);\n        add$1(sinkElem, [\n          visibility.fadeOutClass,\n          visibility.transitionClass\n        ]);\n      }\n    };\n    const updateEditorClasses = (editor, docked) => {\n      const editorContainer = SugarElement.fromDom(editor.getContainer());\n      if (docked) {\n        add$2(editorContainer, editorStickyOnClass);\n        remove$2(editorContainer, editorStickyOffClass);\n      } else {\n        add$2(editorContainer, editorStickyOffClass);\n        remove$2(editorContainer, editorStickyOnClass);\n      }\n    };\n    const restoreFocus = (headerElem, focusedElem) => {\n      const ownerDoc = owner$4(focusedElem);\n      active$1(ownerDoc).filter(activeElm => !eq(focusedElem, activeElm)).filter(activeElm => eq(activeElm, SugarElement.fromDom(ownerDoc.dom.body)) || contains(headerElem, activeElm)).each(() => focus$3(focusedElem));\n    };\n    const findFocusedElem = (rootElm, lazySink) => search(rootElm).orThunk(() => lazySink().toOptional().bind(sink => search(sink.element)));\n    const setup$9 = (editor, sharedBackstage, lazyHeader) => {\n      if (!editor.inline) {\n        if (!sharedBackstage.header.isPositionedAtTop()) {\n          editor.on('ResizeEditor', () => {\n            lazyHeader().each(Docking.reset);\n          });\n        }\n        editor.on('ResizeWindow ResizeEditor', () => {\n          lazyHeader().each(updateIframeContentFlow);\n        });\n        editor.on('SkinLoaded', () => {\n          lazyHeader().each(comp => {\n            Docking.isDocked(comp) ? Docking.reset(comp) : Docking.refresh(comp);\n          });\n        });\n        editor.on('FullscreenStateChanged', () => {\n          lazyHeader().each(Docking.reset);\n        });\n      }\n      editor.on('AfterScrollIntoView', e => {\n        lazyHeader().each(header => {\n          Docking.refresh(header);\n          const headerElem = header.element;\n          if (isVisible(headerElem)) {\n            scrollFromBehindHeader(e, headerElem);\n          }\n        });\n      });\n      editor.on('PostRender', () => {\n        updateEditorClasses(editor, false);\n      });\n    };\n    const isDocked = lazyHeader => lazyHeader().map(Docking.isDocked).getOr(false);\n    const getIframeBehaviours = () => [Receiving.config({ channels: { [toolbarHeightChange()]: { onReceive: updateIframeContentFlow } } })];\n    const getBehaviours = (editor, sharedBackstage) => {\n      const focusedElm = value$2();\n      const lazySink = sharedBackstage.getSink;\n      const runOnSinkElement = f => {\n        lazySink().each(sink => f(sink.element));\n      };\n      const onDockingSwitch = comp => {\n        if (!editor.inline) {\n          updateIframeContentFlow(comp);\n        }\n        updateEditorClasses(editor, Docking.isDocked(comp));\n        comp.getSystem().broadcastOn([repositionPopups()], {});\n        lazySink().each(sink => sink.getSystem().broadcastOn([repositionPopups()], {}));\n      };\n      const additionalBehaviours = editor.inline ? [] : getIframeBehaviours();\n      return [\n        Focusing.config({}),\n        Docking.config({\n          contextual: {\n            lazyContext: comp => {\n              const headerHeight = getOuter$2(comp.element);\n              const container = editor.inline ? editor.getContentAreaContainer() : editor.getContainer();\n              return Optional.from(container).map(c => {\n                const box = box$1(SugarElement.fromDom(c));\n                const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n                return optScrollingContext.fold(() => {\n                  const boxHeight = box.height - headerHeight;\n                  const topBound = box.y + (isDockedMode(comp, 'top') ? 0 : headerHeight);\n                  return bounds(box.x, topBound, box.width, boxHeight);\n                }, scrollEnv => {\n                  const constrainedBounds = constrain(box, getBoundsFrom(scrollEnv));\n                  const constrainedBoundsY = isDockedMode(comp, 'top') ? constrainedBounds.y : constrainedBounds.y + headerHeight;\n                  return bounds(constrainedBounds.x, constrainedBoundsY, constrainedBounds.width, constrainedBounds.height - headerHeight);\n                });\n              });\n            },\n            onShow: () => {\n              runOnSinkElement(elem => updateSinkVisibility(elem, true));\n            },\n            onShown: comp => {\n              runOnSinkElement(elem => remove$1(elem, [\n                visibility.transitionClass,\n                visibility.fadeInClass\n              ]));\n              focusedElm.get().each(elem => {\n                restoreFocus(comp.element, elem);\n                focusedElm.clear();\n              });\n            },\n            onHide: comp => {\n              findFocusedElem(comp.element, lazySink).fold(focusedElm.clear, focusedElm.set);\n              runOnSinkElement(elem => updateSinkVisibility(elem, false));\n            },\n            onHidden: () => {\n              runOnSinkElement(elem => remove$1(elem, [visibility.transitionClass]));\n            },\n            ...visibility\n          },\n          lazyViewport: comp => {\n            const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n            return optScrollingContext.fold(() => {\n              const boundsWithoutOffset = win();\n              const offset = getStickyToolbarOffset(editor);\n              const top = boundsWithoutOffset.y + (isDockedMode(comp, 'top') ? offset : 0);\n              const height = boundsWithoutOffset.height - (isDockedMode(comp, 'bottom') ? offset : 0);\n              return {\n                bounds: bounds(boundsWithoutOffset.x, top, boundsWithoutOffset.width, height),\n                optScrollEnv: Optional.none()\n              };\n            }, sc => {\n              const combinedBounds = getBoundsFrom(sc);\n              return {\n                bounds: combinedBounds,\n                optScrollEnv: Optional.some({\n                  currentScrollTop: sc.element.dom.scrollTop,\n                  scrollElmTop: absolute$3(sc.element).top\n                })\n              };\n            });\n          },\n          modes: [sharedBackstage.header.getDockingMode()],\n          onDocked: onDockingSwitch,\n          onUndocked: onDockingSwitch\n        }),\n        ...additionalBehaviours\n      ];\n    };\n\n    var StickyHeader = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        setup: setup$9,\n        isDocked: isDocked,\n        getBehaviours: getBehaviours\n    });\n\n    const renderHeader = spec => {\n      const editor = spec.editor;\n      const getBehaviours$2 = spec.sticky ? getBehaviours : getBehaviours$1;\n      return {\n        uid: spec.uid,\n        dom: spec.dom,\n        components: spec.components,\n        behaviours: derive$1(getBehaviours$2(editor, spec.sharedBackstage))\n      };\n    };\n\n    const groupToolbarButtonSchema = objOf([\n      type,\n      requiredOf('items', oneOf([\n        arrOfObj([\n          name$1,\n          requiredArrayOf('items', string)\n        ]),\n        string\n      ]))\n    ].concat(baseToolbarButtonFields));\n    const createGroupToolbarButton = spec => asRaw('GroupToolbarButton', groupToolbarButtonSchema, spec);\n\n    const baseMenuButtonFields = [\n      optionString('text'),\n      optionString('tooltip'),\n      optionString('icon'),\n      defaultedOf('search', false, oneOf([\n        boolean,\n        objOf([optionString('placeholder')])\n      ], x => {\n        if (isBoolean(x)) {\n          return x ? Optional.some({ placeholder: Optional.none() }) : Optional.none();\n        } else {\n          return Optional.some(x);\n        }\n      })),\n      requiredFunction('fetch'),\n      defaultedFunction('onSetup', () => noop)\n    ];\n\n    const MenuButtonSchema = objOf([\n      type,\n      ...baseMenuButtonFields\n    ]);\n    const createMenuButton = spec => asRaw('menubutton', MenuButtonSchema, spec);\n\n    const splitButtonSchema = objOf([\n      type,\n      optionalTooltip,\n      optionalIcon,\n      optionalText,\n      optionalSelect,\n      fetch$1,\n      onSetup,\n      defaultedStringEnum('presets', 'normal', [\n        'normal',\n        'color',\n        'listpreview'\n      ]),\n      defaultedColumns(1),\n      onAction,\n      onItemAction\n    ]);\n    const createSplitButton = spec => asRaw('SplitButton', splitButtonSchema, spec);\n\n    const factory$d = (detail, spec) => {\n      const setMenus = (comp, menus) => {\n        const newMenus = map$2(menus, m => {\n          const buttonSpec = {\n            type: 'menubutton',\n            text: m.text,\n            fetch: callback => {\n              callback(m.getItems());\n            }\n          };\n          const internal = createMenuButton(buttonSpec).mapError(errInfo => formatError(errInfo)).getOrDie();\n          return renderMenuButton(internal, 'tox-mbtn', spec.backstage, Optional.some('menuitem'));\n        });\n        Replacing.set(comp, newMenus);\n      };\n      const apis = {\n        focus: Keying.focusIn,\n        setMenus\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components: [],\n        behaviours: derive$1([\n          Replacing.config({}),\n          config('menubar-events', [\n            runOnAttached(component => {\n              detail.onSetup(component);\n            }),\n            run$1(mouseover(), (comp, se) => {\n              descendant(comp.element, '.' + 'tox-mbtn--active').each(activeButton => {\n                closest$1(se.event.target, '.' + 'tox-mbtn').each(hoveredButton => {\n                  if (!eq(activeButton, hoveredButton)) {\n                    comp.getSystem().getByDom(activeButton).each(activeComp => {\n                      comp.getSystem().getByDom(hoveredButton).each(hoveredComp => {\n                        Dropdown.expand(hoveredComp);\n                        Dropdown.close(activeComp);\n                        Focusing.focus(hoveredComp);\n                      });\n                    });\n                  }\n                });\n              });\n            }),\n            run$1(focusShifted(), (comp, se) => {\n              se.event.prevFocus.bind(prev => comp.getSystem().getByDom(prev).toOptional()).each(prev => {\n                se.event.newFocus.bind(nu => comp.getSystem().getByDom(nu).toOptional()).each(nu => {\n                  if (Dropdown.isOpen(prev)) {\n                    Dropdown.expand(nu);\n                    Dropdown.close(prev);\n                  }\n                });\n              });\n            })\n          ]),\n          Keying.config({\n            mode: 'flow',\n            selector: '.' + 'tox-mbtn',\n            onEscape: comp => {\n              detail.onEscape(comp);\n              return Optional.some(true);\n            }\n          }),\n          Tabstopping.config({})\n        ]),\n        apis,\n        domModification: { attributes: { role: 'menubar' } }\n      };\n    };\n    var SilverMenubar = single({\n      factory: factory$d,\n      name: 'silver.Menubar',\n      configFields: [\n        required$1('dom'),\n        required$1('uid'),\n        required$1('onEscape'),\n        required$1('backstage'),\n        defaulted('onSetup', noop)\n      ],\n      apis: {\n        focus: (apis, comp) => {\n          apis.focus(comp);\n        },\n        setMenus: (apis, comp, menus) => {\n          apis.setMenus(comp, menus);\n        }\n      }\n    });\n\n    const promotionMessage = '\\u26A1\\ufe0fUpgrade';\n    const promotionLink = 'https://www.tiny.cloud/tinymce-self-hosted-premium-features/?utm_campaign=self_hosted_upgrade_promo&utm_source=tiny&utm_medium=referral';\n    const renderPromotion = spec => {\n      return {\n        uid: spec.uid,\n        dom: spec.dom,\n        components: [{\n            dom: {\n              tag: 'a',\n              attributes: {\n                'href': promotionLink,\n                'rel': 'noopener',\n                'target': '_blank',\n                'aria-hidden': 'true'\n              },\n              classes: ['tox-promotion-link'],\n              innerHtml: promotionMessage\n            }\n          }]\n      };\n    };\n\n    const owner = 'container';\n    const schema$d = [field('slotBehaviours', [])];\n    const getPartName = name => '<alloy.field.' + name + '>';\n    const sketch = sSpec => {\n      const parts = (() => {\n        const record = [];\n        const slot = (name, config) => {\n          record.push(name);\n          return generateOne$1(owner, getPartName(name), config);\n        };\n        return {\n          slot,\n          record: constant$1(record)\n        };\n      })();\n      const spec = sSpec(parts);\n      const partNames = parts.record();\n      const fieldParts = map$2(partNames, n => required({\n        name: n,\n        pname: getPartName(n)\n      }));\n      return composite$1(owner, schema$d, fieldParts, make$1, spec);\n    };\n    const make$1 = (detail, components) => {\n      const getSlotNames = _ => getAllPartNames(detail);\n      const getSlot = (container, key) => getPart(container, detail, key);\n      const onSlot = (f, def) => (container, key) => getPart(container, detail, key).map(slot => f(slot, key)).getOr(def);\n      const onSlots = f => (container, keys) => {\n        each$1(keys, key => f(container, key));\n      };\n      const doShowing = (comp, _key) => get$f(comp.element, 'aria-hidden') !== 'true';\n      const doShow = (comp, key) => {\n        if (!doShowing(comp)) {\n          const element = comp.element;\n          remove$6(element, 'display');\n          remove$7(element, 'aria-hidden');\n          emitWith(comp, slotVisibility(), {\n            name: key,\n            visible: true\n          });\n        }\n      };\n      const doHide = (comp, key) => {\n        if (doShowing(comp)) {\n          const element = comp.element;\n          set$8(element, 'display', 'none');\n          set$9(element, 'aria-hidden', 'true');\n          emitWith(comp, slotVisibility(), {\n            name: key,\n            visible: false\n          });\n        }\n      };\n      const isShowing = onSlot(doShowing, false);\n      const hideSlot = onSlot(doHide);\n      const hideSlots = onSlots(hideSlot);\n      const hideAllSlots = container => hideSlots(container, getSlotNames());\n      const showSlot = onSlot(doShow);\n      const apis = {\n        getSlotNames,\n        getSlot,\n        isShowing,\n        hideSlot,\n        hideAllSlots,\n        showSlot\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: get$3(detail.slotBehaviours),\n        apis\n      };\n    };\n    const slotApis = map$1({\n      getSlotNames: (apis, c) => apis.getSlotNames(c),\n      getSlot: (apis, c, key) => apis.getSlot(c, key),\n      isShowing: (apis, c, key) => apis.isShowing(c, key),\n      hideSlot: (apis, c, key) => apis.hideSlot(c, key),\n      hideAllSlots: (apis, c) => apis.hideAllSlots(c),\n      showSlot: (apis, c, key) => apis.showSlot(c, key)\n    }, value => makeApi(value));\n    const SlotContainer = {\n      ...slotApis,\n      ...{ sketch }\n    };\n\n    const sidebarSchema = objOf([\n      optionalIcon,\n      optionalTooltip,\n      defaultedFunction('onShow', noop),\n      defaultedFunction('onHide', noop),\n      onSetup\n    ]);\n    const createSidebar = spec => asRaw('sidebar', sidebarSchema, spec);\n\n    const setup$8 = editor => {\n      const {sidebars} = editor.ui.registry.getAll();\n      each$1(keys(sidebars), name => {\n        const spec = sidebars[name];\n        const isActive = () => is$1(Optional.from(editor.queryCommandValue('ToggleSidebar')), name);\n        editor.ui.registry.addToggleButton(name, {\n          icon: spec.icon,\n          tooltip: spec.tooltip,\n          onAction: buttonApi => {\n            editor.execCommand('ToggleSidebar', false, name);\n            buttonApi.setActive(isActive());\n          },\n          onSetup: buttonApi => {\n            buttonApi.setActive(isActive());\n            const handleToggle = () => buttonApi.setActive(isActive());\n            editor.on('ToggleSidebar', handleToggle);\n            return () => {\n              editor.off('ToggleSidebar', handleToggle);\n            };\n          }\n        });\n      });\n    };\n    const getApi = comp => ({ element: () => comp.element.dom });\n    const makePanels = (parts, panelConfigs) => {\n      const specs = map$2(keys(panelConfigs), name => {\n        const spec = panelConfigs[name];\n        const bridged = getOrDie(createSidebar(spec));\n        return {\n          name,\n          getApi,\n          onSetup: bridged.onSetup,\n          onShow: bridged.onShow,\n          onHide: bridged.onHide\n        };\n      });\n      return map$2(specs, spec => {\n        const editorOffCell = Cell(noop);\n        return parts.slot(spec.name, {\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar__pane']\n          },\n          behaviours: SimpleBehaviours.unnamedEvents([\n            onControlAttached(spec, editorOffCell),\n            onControlDetached(spec, editorOffCell),\n            run$1(slotVisibility(), (sidepanel, se) => {\n              const data = se.event;\n              const optSidePanelSpec = find$5(specs, config => config.name === data.name);\n              optSidePanelSpec.each(sidePanelSpec => {\n                const handler = data.visible ? sidePanelSpec.onShow : sidePanelSpec.onHide;\n                handler(sidePanelSpec.getApi(sidepanel));\n              });\n            })\n          ])\n        });\n      });\n    };\n    const makeSidebar = panelConfigs => SlotContainer.sketch(parts => ({\n      dom: {\n        tag: 'div',\n        classes: ['tox-sidebar__pane-container']\n      },\n      components: makePanels(parts, panelConfigs),\n      slotBehaviours: SimpleBehaviours.unnamedEvents([runOnAttached(slotContainer => SlotContainer.hideAllSlots(slotContainer))])\n    }));\n    const setSidebar = (sidebar, panelConfigs, showSidebar) => {\n      const optSlider = Composing.getCurrent(sidebar);\n      optSlider.each(slider => {\n        Replacing.set(slider, [makeSidebar(panelConfigs)]);\n        const configKey = showSidebar === null || showSidebar === void 0 ? void 0 : showSidebar.toLowerCase();\n        if (isString(configKey) && has$2(panelConfigs, configKey)) {\n          Composing.getCurrent(slider).each(slotContainer => {\n            SlotContainer.showSlot(slotContainer, configKey);\n            Sliding.immediateGrow(slider);\n            remove$6(slider.element, 'width');\n            updateSidebarRoleOnToggle(sidebar.element, 'region');\n          });\n        }\n      });\n    };\n    const updateSidebarRoleOnToggle = (sidebar, sidebarState) => {\n      set$9(sidebar, 'role', sidebarState);\n    };\n    const toggleSidebar = (sidebar, name) => {\n      const optSlider = Composing.getCurrent(sidebar);\n      optSlider.each(slider => {\n        const optSlotContainer = Composing.getCurrent(slider);\n        optSlotContainer.each(slotContainer => {\n          if (Sliding.hasGrown(slider)) {\n            if (SlotContainer.isShowing(slotContainer, name)) {\n              Sliding.shrink(slider);\n              updateSidebarRoleOnToggle(sidebar.element, 'presentation');\n            } else {\n              SlotContainer.hideAllSlots(slotContainer);\n              SlotContainer.showSlot(slotContainer, name);\n              updateSidebarRoleOnToggle(sidebar.element, 'region');\n            }\n          } else {\n            SlotContainer.hideAllSlots(slotContainer);\n            SlotContainer.showSlot(slotContainer, name);\n            Sliding.grow(slider);\n            updateSidebarRoleOnToggle(sidebar.element, 'region');\n          }\n        });\n      });\n    };\n    const whichSidebar = sidebar => {\n      const optSlider = Composing.getCurrent(sidebar);\n      return optSlider.bind(slider => {\n        const sidebarOpen = Sliding.isGrowing(slider) || Sliding.hasGrown(slider);\n        if (sidebarOpen) {\n          const optSlotContainer = Composing.getCurrent(slider);\n          return optSlotContainer.bind(slotContainer => find$5(SlotContainer.getSlotNames(slotContainer), name => SlotContainer.isShowing(slotContainer, name)));\n        } else {\n          return Optional.none();\n        }\n      });\n    };\n    const fixSize = generate$6('FixSizeEvent');\n    const autoSize = generate$6('AutoSizeEvent');\n    const renderSidebar = spec => ({\n      uid: spec.uid,\n      dom: {\n        tag: 'div',\n        classes: ['tox-sidebar'],\n        attributes: { role: 'presentation' }\n      },\n      components: [{\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar__slider']\n          },\n          components: [],\n          behaviours: derive$1([\n            Tabstopping.config({}),\n            Focusing.config({}),\n            Sliding.config({\n              dimension: { property: 'width' },\n              closedClass: 'tox-sidebar--sliding-closed',\n              openClass: 'tox-sidebar--sliding-open',\n              shrinkingClass: 'tox-sidebar--sliding-shrinking',\n              growingClass: 'tox-sidebar--sliding-growing',\n              onShrunk: slider => {\n                const optSlotContainer = Composing.getCurrent(slider);\n                optSlotContainer.each(SlotContainer.hideAllSlots);\n                emit(slider, autoSize);\n              },\n              onGrown: slider => {\n                emit(slider, autoSize);\n              },\n              onStartGrow: slider => {\n                emitWith(slider, fixSize, { width: getRaw(slider.element, 'width').getOr('') });\n              },\n              onStartShrink: slider => {\n                emitWith(slider, fixSize, { width: get$c(slider.element) + 'px' });\n              }\n            }),\n            Replacing.config({}),\n            Composing.config({\n              find: comp => {\n                const children = Replacing.contents(comp);\n                return head(children);\n              }\n            })\n          ])\n        }],\n      behaviours: derive$1([\n        ComposingConfigs.childAt(0),\n        config('sidebar-sliding-events', [\n          run$1(fixSize, (comp, se) => {\n            set$8(comp.element, 'width', se.event.width);\n          }),\n          run$1(autoSize, (comp, _se) => {\n            remove$6(comp.element, 'width');\n          })\n        ])\n      ])\n    });\n\n    const block = (component, config, state, getBusySpec) => {\n      set$9(component.element, 'aria-busy', true);\n      const root = config.getRoot(component).getOr(component);\n      const blockerBehaviours = derive$1([\n        Keying.config({\n          mode: 'special',\n          onTab: () => Optional.some(true),\n          onShiftTab: () => Optional.some(true)\n        }),\n        Focusing.config({})\n      ]);\n      const blockSpec = getBusySpec(root, blockerBehaviours);\n      const blocker = root.getSystem().build(blockSpec);\n      Replacing.append(root, premade(blocker));\n      if (blocker.hasConfigured(Keying) && config.focus) {\n        Keying.focusIn(blocker);\n      }\n      if (!state.isBlocked()) {\n        config.onBlock(component);\n      }\n      state.blockWith(() => Replacing.remove(root, blocker));\n    };\n    const unblock = (component, config, state) => {\n      remove$7(component.element, 'aria-busy');\n      if (state.isBlocked()) {\n        config.onUnblock(component);\n      }\n      state.clear();\n    };\n    const isBlocked = (component, blockingConfig, blockingState) => blockingState.isBlocked();\n\n    var BlockingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        block: block,\n        unblock: unblock,\n        isBlocked: isBlocked\n    });\n\n    var BlockingSchema = [\n      defaultedFunction('getRoot', Optional.none),\n      defaultedBoolean('focus', true),\n      onHandler('onBlock'),\n      onHandler('onUnblock')\n    ];\n\n    const init$4 = () => {\n      const blocker = destroyable();\n      const blockWith = destroy => {\n        blocker.set({ destroy });\n      };\n      return nu$8({\n        readState: blocker.isSet,\n        blockWith,\n        clear: blocker.clear,\n        isBlocked: blocker.isSet\n      });\n    };\n\n    var BlockingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$4\n    });\n\n    const Blocking = create$4({\n      fields: BlockingSchema,\n      name: 'blocking',\n      apis: BlockingApis,\n      state: BlockingState\n    });\n\n    const getBusySpec$1 = providerBackstage => (_root, _behaviours) => ({\n      dom: {\n        tag: 'div',\n        attributes: {\n          'aria-label': providerBackstage.translate('Loading...'),\n          'tabindex': '0'\n        },\n        classes: ['tox-throbber__busy-spinner']\n      },\n      components: [{ dom: fromHtml('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>') }]\n    });\n    const focusBusyComponent = throbber => Composing.getCurrent(throbber).each(comp => focus$3(comp.element, true));\n    const toggleEditorTabIndex = (editor, state) => {\n      const tabIndexAttr = 'tabindex';\n      const dataTabIndexAttr = `data-mce-${ tabIndexAttr }`;\n      Optional.from(editor.iframeElement).map(SugarElement.fromDom).each(iframe => {\n        if (state) {\n          getOpt(iframe, tabIndexAttr).each(tabIndex => set$9(iframe, dataTabIndexAttr, tabIndex));\n          set$9(iframe, tabIndexAttr, -1);\n        } else {\n          remove$7(iframe, tabIndexAttr);\n          getOpt(iframe, dataTabIndexAttr).each(tabIndex => {\n            set$9(iframe, tabIndexAttr, tabIndex);\n            remove$7(iframe, dataTabIndexAttr);\n          });\n        }\n      });\n    };\n    const toggleThrobber = (editor, comp, state, providerBackstage) => {\n      const element = comp.element;\n      toggleEditorTabIndex(editor, state);\n      if (state) {\n        Blocking.block(comp, getBusySpec$1(providerBackstage));\n        remove$6(element, 'display');\n        remove$7(element, 'aria-hidden');\n        if (editor.hasFocus()) {\n          focusBusyComponent(comp);\n        }\n      } else {\n        const throbberFocus = Composing.getCurrent(comp).exists(busyComp => hasFocus(busyComp.element));\n        Blocking.unblock(comp);\n        set$8(element, 'display', 'none');\n        set$9(element, 'aria-hidden', 'true');\n        if (throbberFocus) {\n          editor.focus();\n        }\n      }\n    };\n    const renderThrobber = spec => ({\n      uid: spec.uid,\n      dom: {\n        tag: 'div',\n        attributes: { 'aria-hidden': 'true' },\n        classes: ['tox-throbber'],\n        styles: { display: 'none' }\n      },\n      behaviours: derive$1([\n        Replacing.config({}),\n        Blocking.config({ focus: false }),\n        Composing.config({ find: comp => head(comp.components()) })\n      ]),\n      components: []\n    });\n    const isFocusEvent = event => event.type === 'focusin';\n    const isPasteBinTarget = event => {\n      if (isFocusEvent(event)) {\n        const node = event.composed ? head(event.composedPath()) : Optional.from(event.target);\n        return node.map(SugarElement.fromDom).filter(isElement$1).exists(targetElm => has(targetElm, 'mce-pastebin'));\n      } else {\n        return false;\n      }\n    };\n    const setup$7 = (editor, lazyThrobber, sharedBackstage) => {\n      const throbberState = Cell(false);\n      const timer = value$2();\n      const stealFocus = e => {\n        if (throbberState.get() && !isPasteBinTarget(e)) {\n          e.preventDefault();\n          focusBusyComponent(lazyThrobber());\n          editor.editorManager.setActive(editor);\n        }\n      };\n      if (!editor.inline) {\n        editor.on('PreInit', () => {\n          editor.dom.bind(editor.getWin(), 'focusin', stealFocus);\n          editor.on('BeforeExecCommand', e => {\n            if (e.command.toLowerCase() === 'mcefocus' && e.value !== true) {\n              stealFocus(e);\n            }\n          });\n        });\n      }\n      const toggle = state => {\n        if (state !== throbberState.get()) {\n          throbberState.set(state);\n          toggleThrobber(editor, lazyThrobber(), state, sharedBackstage.providers);\n          fireAfterProgressState(editor, state);\n        }\n      };\n      editor.on('ProgressState', e => {\n        timer.on(clearTimeout);\n        if (isNumber(e.time)) {\n          const timerId = global$9.setEditorTimeout(editor, () => toggle(e.state), e.time);\n          timer.set(timerId);\n        } else {\n          toggle(e.state);\n          timer.clear();\n        }\n      });\n    };\n\n    const generate$1 = (xs, f) => {\n      const init = {\n        len: 0,\n        list: []\n      };\n      const r = foldl(xs, (b, a) => {\n        const value = f(a, b.len);\n        return value.fold(constant$1(b), v => ({\n          len: v.finish,\n          list: b.list.concat([v])\n        }));\n      }, init);\n      return r.list;\n    };\n\n    const output = (within, extra, withinWidth) => ({\n      within,\n      extra,\n      withinWidth\n    });\n    const apportion = (units, total, len) => {\n      const parray = generate$1(units, (unit, current) => {\n        const width = len(unit);\n        return Optional.some({\n          element: unit,\n          start: current,\n          finish: current + width,\n          width\n        });\n      });\n      const within = filter$2(parray, unit => unit.finish <= total);\n      const withinWidth = foldr(within, (acc, el) => acc + el.width, 0);\n      const extra = parray.slice(within.length);\n      return {\n        within,\n        extra,\n        withinWidth\n      };\n    };\n    const toUnit = parray => map$2(parray, unit => unit.element);\n    const fitLast = (within, extra, withinWidth) => {\n      const fits = toUnit(within.concat(extra));\n      return output(fits, [], withinWidth);\n    };\n    const overflow = (within, extra, overflower, withinWidth) => {\n      const fits = toUnit(within).concat([overflower]);\n      return output(fits, toUnit(extra), withinWidth);\n    };\n    const fitAll = (within, extra, withinWidth) => output(toUnit(within), [], withinWidth);\n    const tryFit = (total, units, len) => {\n      const divide = apportion(units, total, len);\n      return divide.extra.length === 0 ? Optional.some(divide) : Optional.none();\n    };\n    const partition = (total, units, len, overflower) => {\n      const divide = tryFit(total, units, len).getOrThunk(() => apportion(units, total - len(overflower), len));\n      const within = divide.within;\n      const extra = divide.extra;\n      const withinWidth = divide.withinWidth;\n      if (extra.length === 1 && extra[0].width <= len(overflower)) {\n        return fitLast(within, extra, withinWidth);\n      } else if (extra.length >= 1) {\n        return overflow(within, extra, overflower, withinWidth);\n      } else {\n        return fitAll(within, extra, withinWidth);\n      }\n    };\n\n    const setGroups$1 = (toolbar, storedGroups) => {\n      const bGroups = map$2(storedGroups, g => premade(g));\n      Toolbar.setGroups(toolbar, bGroups);\n    };\n    const findFocusedComp = comps => findMap(comps, comp => search(comp.element).bind(focusedElm => comp.getSystem().getByDom(focusedElm).toOptional()));\n    const refresh$2 = (toolbar, detail, setOverflow) => {\n      const builtGroups = detail.builtGroups.get();\n      if (builtGroups.length === 0) {\n        return;\n      }\n      const primary = getPartOrDie(toolbar, detail, 'primary');\n      const overflowGroup = Coupling.getCoupled(toolbar, 'overflowGroup');\n      set$8(primary.element, 'visibility', 'hidden');\n      const groups = builtGroups.concat([overflowGroup]);\n      const focusedComp = findFocusedComp(groups);\n      setOverflow([]);\n      setGroups$1(primary, groups);\n      const availableWidth = get$c(primary.element);\n      const overflows = partition(availableWidth, detail.builtGroups.get(), comp => get$c(comp.element), overflowGroup);\n      if (overflows.extra.length === 0) {\n        Replacing.remove(primary, overflowGroup);\n        setOverflow([]);\n      } else {\n        setGroups$1(primary, overflows.within);\n        setOverflow(overflows.extra);\n      }\n      remove$6(primary.element, 'visibility');\n      reflow(primary.element);\n      focusedComp.each(Focusing.focus);\n    };\n\n    const schema$c = constant$1([\n      field('splitToolbarBehaviours', [Coupling]),\n      customField('builtGroups', () => Cell([]))\n    ]);\n\n    const schema$b = constant$1([\n      markers$1(['overflowToggledClass']),\n      optionFunction('getOverflowBounds'),\n      required$1('lazySink'),\n      customField('overflowGroups', () => Cell([])),\n      onHandler('onOpened'),\n      onHandler('onClosed')\n    ].concat(schema$c()));\n    const parts$7 = constant$1([\n      required({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'primary'\n      }),\n      external({\n        schema: schema$e(),\n        name: 'overflow'\n      }),\n      external({ name: 'overflow-button' }),\n      external({ name: 'overflow-group' })\n    ]);\n\n    const expandable = constant$1((element, available) => {\n      setMax(element, Math.floor(available));\n    });\n\n    const schema$a = constant$1([\n      markers$1(['toggledClass']),\n      required$1('lazySink'),\n      requiredFunction('fetch'),\n      optionFunction('getBounds'),\n      optionObjOf('fireDismissalEventInstead', [defaulted('event', dismissRequested())]),\n      schema$y(),\n      onHandler('onToggled')\n    ]);\n    const parts$6 = constant$1([\n      external({\n        name: 'button',\n        overrides: detail => ({\n          dom: { attributes: { 'aria-haspopup': 'true' } },\n          buttonBehaviours: derive$1([Toggling.config({\n              toggleClass: detail.markers.toggledClass,\n              aria: { mode: 'expanded' },\n              toggleOnExecute: false,\n              onToggled: detail.onToggled\n            })])\n        })\n      }),\n      external({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'toolbar',\n        overrides: detail => {\n          return {\n            toolbarBehaviours: derive$1([Keying.config({\n                mode: 'cyclic',\n                onEscape: comp => {\n                  getPart(comp, detail, 'button').each(Focusing.focus);\n                  return Optional.none();\n                }\n              })])\n          };\n        }\n      })\n    ]);\n\n    const shouldSkipFocus = value$2();\n    const toggleWithoutFocusing = (button, externals) => {\n      shouldSkipFocus.set(true);\n      toggle(button, externals);\n      shouldSkipFocus.clear();\n    };\n    const toggle = (button, externals) => {\n      const toolbarSandbox = Coupling.getCoupled(button, 'toolbarSandbox');\n      if (Sandboxing.isOpen(toolbarSandbox)) {\n        Sandboxing.close(toolbarSandbox);\n      } else {\n        Sandboxing.open(toolbarSandbox, externals.toolbar());\n      }\n    };\n    const position = (button, toolbar, detail, layouts) => {\n      const bounds = detail.getBounds.map(bounder => bounder());\n      const sink = detail.lazySink(button).getOrDie();\n      Positioning.positionWithinBounds(sink, toolbar, {\n        anchor: {\n          type: 'hotspot',\n          hotspot: button,\n          layouts,\n          overrides: { maxWidthFunction: expandable() }\n        }\n      }, bounds);\n    };\n    const setGroups = (button, toolbar, detail, layouts, groups) => {\n      Toolbar.setGroups(toolbar, groups);\n      position(button, toolbar, detail, layouts);\n      Toggling.on(button);\n    };\n    const makeSandbox = (button, spec, detail) => {\n      const ariaControls = manager();\n      const onOpen = (sandbox, toolbar) => {\n        const skipFocus = shouldSkipFocus.get().getOr(false);\n        detail.fetch().get(groups => {\n          setGroups(button, toolbar, detail, spec.layouts, groups);\n          ariaControls.link(button.element);\n          if (!skipFocus) {\n            Keying.focusIn(toolbar);\n          }\n        });\n      };\n      const onClose = () => {\n        Toggling.off(button);\n        if (!shouldSkipFocus.get().getOr(false)) {\n          Focusing.focus(button);\n        }\n        ariaControls.unlink(button.element);\n      };\n      return {\n        dom: {\n          tag: 'div',\n          attributes: { id: ariaControls.id }\n        },\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'special',\n            onEscape: comp => {\n              Sandboxing.close(comp);\n              return Optional.some(true);\n            }\n          }),\n          Sandboxing.config({\n            onOpen,\n            onClose,\n            isPartOf: (container, data, queryElem) => {\n              return isPartOf$1(data, queryElem) || isPartOf$1(button, queryElem);\n            },\n            getAttachPoint: () => {\n              return detail.lazySink(button).getOrDie();\n            }\n          }),\n          Receiving.config({\n            channels: {\n              ...receivingChannel$1({\n                isExtraPart: never,\n                ...detail.fireDismissalEventInstead.map(fe => ({ fireEventInstead: { event: fe.event } })).getOr({})\n              }),\n              ...receivingChannel({\n                doReposition: () => {\n                  Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each(toolbar => {\n                    position(button, toolbar, detail, spec.layouts);\n                  });\n                }\n              })\n            }\n          })\n        ])\n      };\n    };\n    const factory$c = (detail, components, spec, externals) => ({\n      ...Button.sketch({\n        ...externals.button(),\n        action: button => {\n          toggle(button, externals);\n        },\n        buttonBehaviours: SketchBehaviours.augment({ dump: externals.button().buttonBehaviours }, [Coupling.config({\n            others: {\n              toolbarSandbox: button => {\n                return makeSandbox(button, spec, detail);\n              }\n            }\n          })])\n      }),\n      apis: {\n        setGroups: (button, groups) => {\n          Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each(toolbar => {\n            setGroups(button, toolbar, detail, spec.layouts, groups);\n          });\n        },\n        reposition: button => {\n          Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox')).each(toolbar => {\n            position(button, toolbar, detail, spec.layouts);\n          });\n        },\n        toggle: button => {\n          toggle(button, externals);\n        },\n        toggleWithoutFocusing: button => {\n          toggleWithoutFocusing(button, externals);\n        },\n        getToolbar: button => {\n          return Sandboxing.getState(Coupling.getCoupled(button, 'toolbarSandbox'));\n        },\n        isOpen: button => {\n          return Sandboxing.isOpen(Coupling.getCoupled(button, 'toolbarSandbox'));\n        }\n      }\n    });\n    const FloatingToolbarButton = composite({\n      name: 'FloatingToolbarButton',\n      factory: factory$c,\n      configFields: schema$a(),\n      partFields: parts$6(),\n      apis: {\n        setGroups: (apis, button, groups) => {\n          apis.setGroups(button, groups);\n        },\n        reposition: (apis, button) => {\n          apis.reposition(button);\n        },\n        toggle: (apis, button) => {\n          apis.toggle(button);\n        },\n        toggleWithoutFocusing: (apis, button) => {\n          apis.toggleWithoutFocusing(button);\n        },\n        getToolbar: (apis, button) => apis.getToolbar(button),\n        isOpen: (apis, button) => apis.isOpen(button)\n      }\n    });\n\n    const schema$9 = constant$1([\n      required$1('items'),\n      markers$1(['itemSelector']),\n      field('tgroupBehaviours', [Keying])\n    ]);\n    const parts$5 = constant$1([group({\n        name: 'items',\n        unit: 'item'\n      })]);\n\n    const factory$b = (detail, components, _spec, _externals) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components,\n      behaviours: augment(detail.tgroupBehaviours, [Keying.config({\n          mode: 'flow',\n          selector: detail.markers.itemSelector\n        })]),\n      domModification: { attributes: { role: 'toolbar' } }\n    });\n    const ToolbarGroup = composite({\n      name: 'ToolbarGroup',\n      configFields: schema$9(),\n      partFields: parts$5(),\n      factory: factory$b\n    });\n\n    const buildGroups = comps => map$2(comps, g => premade(g));\n    const refresh$1 = (toolbar, memFloatingToolbarButton, detail) => {\n      refresh$2(toolbar, detail, overflowGroups => {\n        detail.overflowGroups.set(overflowGroups);\n        memFloatingToolbarButton.getOpt(toolbar).each(floatingToolbarButton => {\n          FloatingToolbarButton.setGroups(floatingToolbarButton, buildGroups(overflowGroups));\n        });\n      });\n    };\n    const factory$a = (detail, components, spec, externals) => {\n      const memFloatingToolbarButton = record(FloatingToolbarButton.sketch({\n        fetch: () => Future.nu(resolve => {\n          resolve(buildGroups(detail.overflowGroups.get()));\n        }),\n        layouts: {\n          onLtr: () => [\n            southwest$2,\n            southeast$2\n          ],\n          onRtl: () => [\n            southeast$2,\n            southwest$2\n          ],\n          onBottomLtr: () => [\n            northwest$2,\n            northeast$2\n          ],\n          onBottomRtl: () => [\n            northeast$2,\n            northwest$2\n          ]\n        },\n        getBounds: spec.getOverflowBounds,\n        lazySink: detail.lazySink,\n        fireDismissalEventInstead: {},\n        markers: { toggledClass: detail.markers.overflowToggledClass },\n        parts: {\n          button: externals['overflow-button'](),\n          toolbar: externals.overflow()\n        },\n        onToggled: (comp, state) => detail[state ? 'onOpened' : 'onClosed'](comp)\n      }));\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.splitToolbarBehaviours, [Coupling.config({\n            others: {\n              overflowGroup: () => {\n                return ToolbarGroup.sketch({\n                  ...externals['overflow-group'](),\n                  items: [memFloatingToolbarButton.asSpec()]\n                });\n              }\n            }\n          })]),\n        apis: {\n          setGroups: (toolbar, groups) => {\n            detail.builtGroups.set(map$2(groups, toolbar.getSystem().build));\n            refresh$1(toolbar, memFloatingToolbarButton, detail);\n          },\n          refresh: toolbar => refresh$1(toolbar, memFloatingToolbarButton, detail),\n          toggle: toolbar => {\n            memFloatingToolbarButton.getOpt(toolbar).each(floatingToolbarButton => {\n              FloatingToolbarButton.toggle(floatingToolbarButton);\n            });\n          },\n          toggleWithoutFocusing: toolbar => {\n            memFloatingToolbarButton.getOpt(toolbar).each(FloatingToolbarButton.toggleWithoutFocusing);\n          },\n          isOpen: toolbar => memFloatingToolbarButton.getOpt(toolbar).map(FloatingToolbarButton.isOpen).getOr(false),\n          reposition: toolbar => {\n            memFloatingToolbarButton.getOpt(toolbar).each(floatingToolbarButton => {\n              FloatingToolbarButton.reposition(floatingToolbarButton);\n            });\n          },\n          getOverflow: toolbar => memFloatingToolbarButton.getOpt(toolbar).bind(FloatingToolbarButton.getToolbar)\n        },\n        domModification: { attributes: { role: 'group' } }\n      };\n    };\n    const SplitFloatingToolbar = composite({\n      name: 'SplitFloatingToolbar',\n      configFields: schema$b(),\n      partFields: parts$7(),\n      factory: factory$a,\n      apis: {\n        setGroups: (apis, toolbar, groups) => {\n          apis.setGroups(toolbar, groups);\n        },\n        refresh: (apis, toolbar) => {\n          apis.refresh(toolbar);\n        },\n        reposition: (apis, toolbar) => {\n          apis.reposition(toolbar);\n        },\n        toggle: (apis, toolbar) => {\n          apis.toggle(toolbar);\n        },\n        toggleWithoutFocusing: (apis, toolbar) => {\n          apis.toggle(toolbar);\n        },\n        isOpen: (apis, toolbar) => apis.isOpen(toolbar),\n        getOverflow: (apis, toolbar) => apis.getOverflow(toolbar)\n      }\n    });\n\n    const schema$8 = constant$1([\n      markers$1([\n        'closedClass',\n        'openClass',\n        'shrinkingClass',\n        'growingClass',\n        'overflowToggledClass'\n      ]),\n      onHandler('onOpened'),\n      onHandler('onClosed')\n    ].concat(schema$c()));\n    const parts$4 = constant$1([\n      required({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'primary'\n      }),\n      required({\n        factory: Toolbar,\n        schema: schema$e(),\n        name: 'overflow',\n        overrides: detail => {\n          return {\n            toolbarBehaviours: derive$1([\n              Sliding.config({\n                dimension: { property: 'height' },\n                closedClass: detail.markers.closedClass,\n                openClass: detail.markers.openClass,\n                shrinkingClass: detail.markers.shrinkingClass,\n                growingClass: detail.markers.growingClass,\n                onShrunk: comp => {\n                  getPart(comp, detail, 'overflow-button').each(button => {\n                    Toggling.off(button);\n                    Focusing.focus(button);\n                  });\n                  detail.onClosed(comp);\n                },\n                onGrown: comp => {\n                  Keying.focusIn(comp);\n                  detail.onOpened(comp);\n                },\n                onStartGrow: comp => {\n                  getPart(comp, detail, 'overflow-button').each(Toggling.on);\n                }\n              }),\n              Keying.config({\n                mode: 'acyclic',\n                onEscape: comp => {\n                  getPart(comp, detail, 'overflow-button').each(Focusing.focus);\n                  return Optional.some(true);\n                }\n              })\n            ])\n          };\n        }\n      }),\n      external({\n        name: 'overflow-button',\n        overrides: detail => ({\n          buttonBehaviours: derive$1([Toggling.config({\n              toggleClass: detail.markers.overflowToggledClass,\n              aria: { mode: 'pressed' },\n              toggleOnExecute: false\n            })])\n        })\n      }),\n      external({ name: 'overflow-group' })\n    ]);\n\n    const isOpen = (toolbar, detail) => getPart(toolbar, detail, 'overflow').map(Sliding.hasGrown).getOr(false);\n    const toggleToolbar = (toolbar, detail) => {\n      getPart(toolbar, detail, 'overflow-button').bind(() => getPart(toolbar, detail, 'overflow')).each(overf => {\n        refresh(toolbar, detail);\n        Sliding.toggleGrow(overf);\n      });\n    };\n    const refresh = (toolbar, detail) => {\n      getPart(toolbar, detail, 'overflow').each(overflow => {\n        refresh$2(toolbar, detail, groups => {\n          const builtGroups = map$2(groups, g => premade(g));\n          Toolbar.setGroups(overflow, builtGroups);\n        });\n        getPart(toolbar, detail, 'overflow-button').each(button => {\n          if (Sliding.hasGrown(overflow)) {\n            Toggling.on(button);\n          }\n        });\n        Sliding.refresh(overflow);\n      });\n    };\n    const factory$9 = (detail, components, spec, externals) => {\n      const toolbarToggleEvent = 'alloy.toolbar.toggle';\n      const doSetGroups = (toolbar, groups) => {\n        const built = map$2(groups, toolbar.getSystem().build);\n        detail.builtGroups.set(built);\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: augment(detail.splitToolbarBehaviours, [\n          Coupling.config({\n            others: {\n              overflowGroup: toolbar => {\n                return ToolbarGroup.sketch({\n                  ...externals['overflow-group'](),\n                  items: [Button.sketch({\n                      ...externals['overflow-button'](),\n                      action: _button => {\n                        emit(toolbar, toolbarToggleEvent);\n                      }\n                    })]\n                });\n              }\n            }\n          }),\n          config('toolbar-toggle-events', [run$1(toolbarToggleEvent, toolbar => {\n              toggleToolbar(toolbar, detail);\n            })])\n        ]),\n        apis: {\n          setGroups: (toolbar, groups) => {\n            doSetGroups(toolbar, groups);\n            refresh(toolbar, detail);\n          },\n          refresh: toolbar => refresh(toolbar, detail),\n          toggle: toolbar => toggleToolbar(toolbar, detail),\n          isOpen: toolbar => isOpen(toolbar, detail)\n        },\n        domModification: { attributes: { role: 'group' } }\n      };\n    };\n    const SplitSlidingToolbar = composite({\n      name: 'SplitSlidingToolbar',\n      configFields: schema$8(),\n      partFields: parts$4(),\n      factory: factory$9,\n      apis: {\n        setGroups: (apis, toolbar, groups) => {\n          apis.setGroups(toolbar, groups);\n        },\n        refresh: (apis, toolbar) => {\n          apis.refresh(toolbar);\n        },\n        toggle: (apis, toolbar) => {\n          apis.toggle(toolbar);\n        },\n        isOpen: (apis, toolbar) => apis.isOpen(toolbar)\n      }\n    });\n\n    const renderToolbarGroupCommon = toolbarGroup => {\n      const attributes = toolbarGroup.title.fold(() => ({}), title => ({ attributes: { title } }));\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__group'],\n          ...attributes\n        },\n        components: [ToolbarGroup.parts.items({})],\n        items: toolbarGroup.items,\n        markers: { itemSelector: '*:not(.tox-split-button) > .tox-tbtn:not([disabled]), ' + '.tox-split-button:not([disabled]), ' + '.tox-toolbar-nav-js:not([disabled]), ' + '.tox-number-input:not([disabled])' },\n        tgroupBehaviours: derive$1([\n          Tabstopping.config({}),\n          Focusing.config({})\n        ])\n      };\n    };\n    const renderToolbarGroup = toolbarGroup => ToolbarGroup.sketch(renderToolbarGroupCommon(toolbarGroup));\n    const getToolbarBehaviours = (toolbarSpec, modeName) => {\n      const onAttached = runOnAttached(component => {\n        const groups = map$2(toolbarSpec.initGroups, renderToolbarGroup);\n        Toolbar.setGroups(component, groups);\n      });\n      return derive$1([\n        DisablingConfigs.toolbarButton(toolbarSpec.providers.isDisabled),\n        receivingConfig(),\n        Keying.config({\n          mode: modeName,\n          onEscape: toolbarSpec.onEscape,\n          selector: '.tox-toolbar__group'\n        }),\n        config('toolbar-events', [onAttached])\n      ]);\n    };\n    const renderMoreToolbarCommon = toolbarSpec => {\n      const modeName = toolbarSpec.cyclicKeying ? 'cyclic' : 'acyclic';\n      return {\n        uid: toolbarSpec.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar-overlord']\n        },\n        parts: {\n          'overflow-group': renderToolbarGroupCommon({\n            title: Optional.none(),\n            items: []\n          }),\n          'overflow-button': renderIconButtonSpec({\n            name: 'more',\n            icon: Optional.some('more-drawer'),\n            enabled: true,\n            tooltip: Optional.some('Reveal or hide additional toolbar items'),\n            primary: false,\n            buttonType: Optional.none(),\n            borderless: false\n          }, Optional.none(), toolbarSpec.providers)\n        },\n        splitToolbarBehaviours: getToolbarBehaviours(toolbarSpec, modeName)\n      };\n    };\n    const renderFloatingMoreToolbar = toolbarSpec => {\n      const baseSpec = renderMoreToolbarCommon(toolbarSpec);\n      const overflowXOffset = 4;\n      const primary = SplitFloatingToolbar.parts.primary({\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__primary']\n        }\n      });\n      return SplitFloatingToolbar.sketch({\n        ...baseSpec,\n        lazySink: toolbarSpec.getSink,\n        getOverflowBounds: () => {\n          const headerElem = toolbarSpec.moreDrawerData.lazyHeader().element;\n          const headerBounds = absolute$2(headerElem);\n          const docElem = documentElement(headerElem);\n          const docBounds = absolute$2(docElem);\n          const height = Math.max(docElem.dom.scrollHeight, docBounds.height);\n          return bounds(headerBounds.x + overflowXOffset, docBounds.y, headerBounds.width - overflowXOffset * 2, height);\n        },\n        parts: {\n          ...baseSpec.parts,\n          overflow: {\n            dom: {\n              tag: 'div',\n              classes: ['tox-toolbar__overflow'],\n              attributes: toolbarSpec.attributes\n            }\n          }\n        },\n        components: [primary],\n        markers: { overflowToggledClass: 'tox-tbtn--enabled' },\n        onOpened: comp => toolbarSpec.onToggled(comp, true),\n        onClosed: comp => toolbarSpec.onToggled(comp, false)\n      });\n    };\n    const renderSlidingMoreToolbar = toolbarSpec => {\n      const primary = SplitSlidingToolbar.parts.primary({\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__primary']\n        }\n      });\n      const overflow = SplitSlidingToolbar.parts.overflow({\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar__overflow']\n        }\n      });\n      const baseSpec = renderMoreToolbarCommon(toolbarSpec);\n      return SplitSlidingToolbar.sketch({\n        ...baseSpec,\n        components: [\n          primary,\n          overflow\n        ],\n        markers: {\n          openClass: 'tox-toolbar__overflow--open',\n          closedClass: 'tox-toolbar__overflow--closed',\n          growingClass: 'tox-toolbar__overflow--growing',\n          shrinkingClass: 'tox-toolbar__overflow--shrinking',\n          overflowToggledClass: 'tox-tbtn--enabled'\n        },\n        onOpened: comp => {\n          comp.getSystem().broadcastOn([toolbarHeightChange()], { type: 'opened' });\n          toolbarSpec.onToggled(comp, true);\n        },\n        onClosed: comp => {\n          comp.getSystem().broadcastOn([toolbarHeightChange()], { type: 'closed' });\n          toolbarSpec.onToggled(comp, false);\n        }\n      });\n    };\n    const renderToolbar = toolbarSpec => {\n      const modeName = toolbarSpec.cyclicKeying ? 'cyclic' : 'acyclic';\n      return Toolbar.sketch({\n        uid: toolbarSpec.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-toolbar'].concat(toolbarSpec.type === ToolbarMode$1.scrolling ? ['tox-toolbar--scrolling'] : [])\n        },\n        components: [Toolbar.parts.groups({})],\n        toolbarBehaviours: getToolbarBehaviours(toolbarSpec, modeName)\n      });\n    };\n\n    const baseButtonFields = [\n      optionalText,\n      optionalIcon,\n      optionString('tooltip'),\n      defaultedStringEnum('buttonType', 'secondary', [\n        'primary',\n        'secondary'\n      ]),\n      defaultedBoolean('borderless', false),\n      requiredFunction('onAction')\n    ];\n    const normalButtonFields = [\n      ...baseButtonFields,\n      text,\n      requiredStringEnum('type', ['button'])\n    ];\n    const toggleButtonFields = [\n      ...baseButtonFields,\n      defaultedBoolean('active', false),\n      requiredStringEnum('type', ['togglebutton'])\n    ];\n    const schemaWithoutGroupButton = {\n      button: normalButtonFields,\n      togglebutton: toggleButtonFields\n    };\n    const groupFields = [\n      requiredStringEnum('type', ['group']),\n      defaultedArrayOf('buttons', [], choose$1('type', schemaWithoutGroupButton))\n    ];\n    const viewButtonSchema = choose$1('type', {\n      ...schemaWithoutGroupButton,\n      group: groupFields\n    });\n\n    const viewSchema = objOf([\n      defaultedArrayOf('buttons', [], viewButtonSchema),\n      requiredFunction('onShow'),\n      requiredFunction('onHide')\n    ]);\n    const createView = spec => asRaw('view', viewSchema, spec);\n\n    const renderButton = (spec, providers) => {\n      var _a, _b;\n      const isToggleButton = spec.type === 'togglebutton';\n      const optMemIcon = spec.icon.map(memIcon => renderReplaceableIconFromPack(memIcon, providers.icons)).map(record);\n      const getAction = () => comp => {\n        const setIcon = newIcon => {\n          optMemIcon.map(memIcon => memIcon.getOpt(comp).each(displayIcon => {\n            Replacing.set(displayIcon, [renderReplaceableIconFromPack(newIcon, providers.icons)]);\n          }));\n        };\n        const setActive = state => {\n          const elm = comp.element;\n          if (state) {\n            add$2(elm, 'tox-button--enabled');\n            set$9(elm, 'aria-pressed', true);\n          } else {\n            remove$2(elm, 'tox-button--enabled');\n            remove$7(elm, 'aria-pressed');\n          }\n        };\n        const isActive = () => has(comp.element, 'tox-button--enabled');\n        if (isToggleButton) {\n          return spec.onAction({\n            setIcon,\n            setActive,\n            isActive\n          });\n        }\n        if (spec.type === 'button') {\n          return spec.onAction({ setIcon });\n        }\n      };\n      const action = getAction();\n      const buttonSpec = {\n        ...spec,\n        name: isToggleButton ? spec.text.getOr(spec.icon.getOr('')) : (_a = spec.text) !== null && _a !== void 0 ? _a : spec.icon.getOr(''),\n        primary: spec.buttonType === 'primary',\n        buttonType: Optional.from(spec.buttonType),\n        tooltip: spec.tooltip,\n        icon: spec.icon,\n        enabled: true,\n        borderless: spec.borderless\n      };\n      const buttonTypeClasses = calculateClassesFromButtonType((_b = spec.buttonType) !== null && _b !== void 0 ? _b : 'secondary');\n      const optTranslatedText = isToggleButton ? spec.text.map(providers.translate) : Optional.some(providers.translate(spec.text));\n      const optTranslatedTextComponed = optTranslatedText.map(text$2);\n      const tooltipAttributes = buttonSpec.tooltip.or(optTranslatedText).map(tooltip => ({\n        'aria-label': providers.translate(tooltip),\n        'title': providers.translate(tooltip)\n      })).getOr({});\n      const optIconSpec = optMemIcon.map(memIcon => memIcon.asSpec());\n      const components = componentRenderPipeline([\n        optIconSpec,\n        optTranslatedTextComponed\n      ]);\n      const hasIconAndText = spec.icon.isSome() && optTranslatedTextComponed.isSome();\n      const dom = {\n        tag: 'button',\n        classes: buttonTypeClasses.concat(...spec.icon.isSome() && !hasIconAndText ? ['tox-button--icon'] : []).concat(...hasIconAndText ? ['tox-button--icon-and-text'] : []).concat(...spec.borderless ? ['tox-button--naked'] : []).concat(...spec.type === 'togglebutton' && spec.active ? ['tox-button--enabled'] : []),\n        attributes: tooltipAttributes\n      };\n      const extraBehaviours = [];\n      const iconButtonSpec = renderCommonSpec(buttonSpec, Optional.some(action), extraBehaviours, dom, components, providers);\n      return Button.sketch(iconButtonSpec);\n    };\n\n    const renderViewButton = (spec, providers) => renderButton(spec, providers);\n    const renderButtonsGroup = (spec, providers) => {\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-view__toolbar__group']\n        },\n        components: map$2(spec.buttons, button => renderViewButton(button, providers))\n      };\n    };\n    const deviceDetection = detect$2().deviceType;\n    const isPhone = deviceDetection.isPhone();\n    const isTablet = deviceDetection.isTablet();\n    const renderViewHeader = spec => {\n      let hasGroups = false;\n      const endButtons = map$2(spec.buttons, btnspec => {\n        if (btnspec.type === 'group') {\n          hasGroups = true;\n          return renderButtonsGroup(btnspec, spec.providers);\n        } else {\n          return renderViewButton(btnspec, spec.providers);\n        }\n      });\n      return {\n        uid: spec.uid,\n        dom: {\n          tag: 'div',\n          classes: [\n            !hasGroups ? 'tox-view__header' : 'tox-view__toolbar',\n            ...isPhone || isTablet ? [\n              'tox-view--mobile',\n              'tox-view--scrolling'\n            ] : []\n          ]\n        },\n        behaviours: derive$1([\n          Focusing.config({}),\n          Keying.config({\n            mode: 'flow',\n            selector: 'button, .tox-button',\n            focusInside: FocusInsideModes.OnEnterOrSpaceMode\n          })\n        ]),\n        components: hasGroups ? endButtons : [\n          Container.sketch({\n            dom: {\n              tag: 'div',\n              classes: ['tox-view__header-start']\n            },\n            components: []\n          }),\n          Container.sketch({\n            dom: {\n              tag: 'div',\n              classes: ['tox-view__header-end']\n            },\n            components: endButtons\n          })\n        ]\n      };\n    };\n    const renderViewPane = spec => {\n      return {\n        uid: spec.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-view__pane']\n        }\n      };\n    };\n    const factory$8 = (detail, components, _spec, _externals) => {\n      const apis = {\n        getPane: comp => parts$a.getPart(comp, detail, 'pane'),\n        getOnShow: _comp => detail.viewConfig.onShow,\n        getOnHide: _comp => detail.viewConfig.onHide\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        apis\n      };\n    };\n    var View = composite({\n      name: 'silver.View',\n      configFields: [required$1('viewConfig')],\n      partFields: [\n        optional({\n          factory: { sketch: renderViewHeader },\n          schema: [\n            required$1('buttons'),\n            required$1('providers')\n          ],\n          name: 'header'\n        }),\n        optional({\n          factory: { sketch: renderViewPane },\n          schema: [],\n          name: 'pane'\n        })\n      ],\n      factory: factory$8,\n      apis: {\n        getPane: (apis, comp) => apis.getPane(comp),\n        getOnShow: (apis, comp) => apis.getOnShow(comp),\n        getOnHide: (apis, comp) => apis.getOnHide(comp)\n      }\n    });\n\n    const makeViews = (parts, viewConfigs, providers) => {\n      return mapToArray(viewConfigs, (config, name) => {\n        const internalViewConfig = getOrDie(createView(config));\n        return parts.slot(name, View.sketch({\n          dom: {\n            tag: 'div',\n            classes: ['tox-view']\n          },\n          viewConfig: internalViewConfig,\n          components: [\n            ...internalViewConfig.buttons.length > 0 ? [View.parts.header({\n                buttons: internalViewConfig.buttons,\n                providers\n              })] : [],\n            View.parts.pane({})\n          ]\n        }));\n      });\n    };\n    const makeSlotContainer = (viewConfigs, providers) => SlotContainer.sketch(parts => ({\n      dom: {\n        tag: 'div',\n        classes: ['tox-view-wrap__slot-container']\n      },\n      components: makeViews(parts, viewConfigs, providers),\n      slotBehaviours: SimpleBehaviours.unnamedEvents([runOnAttached(slotContainer => SlotContainer.hideAllSlots(slotContainer))])\n    }));\n    const getCurrentName = slotContainer => {\n      return find$5(SlotContainer.getSlotNames(slotContainer), name => SlotContainer.isShowing(slotContainer, name));\n    };\n    const hideContainer = comp => {\n      const element = comp.element;\n      set$8(element, 'display', 'none');\n      set$9(element, 'aria-hidden', 'true');\n    };\n    const showContainer = comp => {\n      const element = comp.element;\n      remove$6(element, 'display');\n      remove$7(element, 'aria-hidden');\n    };\n    const makeViewInstanceApi = slot => ({ getContainer: constant$1(slot) });\n    const runOnPaneWithInstanceApi = (slotContainer, name, get) => {\n      SlotContainer.getSlot(slotContainer, name).each(view => {\n        View.getPane(view).each(pane => {\n          const onCallback = get(view);\n          onCallback(makeViewInstanceApi(pane.element.dom));\n        });\n      });\n    };\n    const runOnShow = (slotContainer, name) => runOnPaneWithInstanceApi(slotContainer, name, View.getOnShow);\n    const runOnHide = (slotContainer, name) => runOnPaneWithInstanceApi(slotContainer, name, View.getOnHide);\n    const factory$7 = (detail, spec) => {\n      const setViews = (comp, viewConfigs) => {\n        Replacing.set(comp, [makeSlotContainer(viewConfigs, spec.backstage.shared.providers)]);\n      };\n      const whichView = comp => {\n        return Composing.getCurrent(comp).bind(getCurrentName);\n      };\n      const toggleView = (comp, showMainView, hideMainView, name) => {\n        return Composing.getCurrent(comp).exists(slotContainer => {\n          const optCurrentSlotName = getCurrentName(slotContainer);\n          const isTogglingCurrentView = optCurrentSlotName.exists(current => name === current);\n          const exists = SlotContainer.getSlot(slotContainer, name).isSome();\n          if (exists) {\n            SlotContainer.hideAllSlots(slotContainer);\n            if (!isTogglingCurrentView) {\n              hideMainView();\n              showContainer(comp);\n              SlotContainer.showSlot(slotContainer, name);\n              runOnShow(slotContainer, name);\n            } else {\n              hideContainer(comp);\n              showMainView();\n            }\n            optCurrentSlotName.each(prevName => runOnHide(slotContainer, prevName));\n          }\n          return exists;\n        });\n      };\n      const apis = {\n        setViews,\n        whichView,\n        toggleView\n      };\n      return {\n        uid: detail.uid,\n        dom: {\n          tag: 'div',\n          classes: ['tox-view-wrap'],\n          attributes: { 'aria-hidden': 'true' },\n          styles: { display: 'none' }\n        },\n        components: [],\n        behaviours: derive$1([\n          Replacing.config({}),\n          Composing.config({\n            find: comp => {\n              const children = Replacing.contents(comp);\n              return head(children);\n            }\n          })\n        ]),\n        apis\n      };\n    };\n    var ViewWrapper = single({\n      factory: factory$7,\n      name: 'silver.ViewWrapper',\n      configFields: [required$1('backstage')],\n      apis: {\n        setViews: (apis, comp, views) => apis.setViews(comp, views),\n        toggleView: (apis, comp, outerContainer, editorCont, name) => apis.toggleView(comp, outerContainer, editorCont, name),\n        whichView: (apis, comp) => apis.whichView(comp)\n      }\n    });\n\n    const factory$6 = (detail, components, _spec) => {\n      let toolbarDrawerOpenState = false;\n      const apis = {\n        getSocket: comp => {\n          return parts$a.getPart(comp, detail, 'socket');\n        },\n        setSidebar: (comp, panelConfigs, showSidebar) => {\n          parts$a.getPart(comp, detail, 'sidebar').each(sidebar => setSidebar(sidebar, panelConfigs, showSidebar));\n        },\n        toggleSidebar: (comp, name) => {\n          parts$a.getPart(comp, detail, 'sidebar').each(sidebar => toggleSidebar(sidebar, name));\n        },\n        whichSidebar: comp => {\n          return parts$a.getPart(comp, detail, 'sidebar').bind(whichSidebar).getOrNull();\n        },\n        getHeader: comp => {\n          return parts$a.getPart(comp, detail, 'header');\n        },\n        getToolbar: comp => {\n          return parts$a.getPart(comp, detail, 'toolbar');\n        },\n        setToolbar: (comp, groups) => {\n          parts$a.getPart(comp, detail, 'toolbar').each(toolbar => {\n            const renderedGroups = map$2(groups, renderToolbarGroup);\n            toolbar.getApis().setGroups(toolbar, renderedGroups);\n          });\n        },\n        setToolbars: (comp, toolbars) => {\n          parts$a.getPart(comp, detail, 'multiple-toolbar').each(mToolbar => {\n            const renderedToolbars = map$2(toolbars, g => map$2(g, renderToolbarGroup));\n            CustomList.setItems(mToolbar, renderedToolbars);\n          });\n        },\n        refreshToolbar: comp => {\n          const toolbar = parts$a.getPart(comp, detail, 'toolbar');\n          toolbar.each(toolbar => toolbar.getApis().refresh(toolbar));\n        },\n        toggleToolbarDrawer: comp => {\n          parts$a.getPart(comp, detail, 'toolbar').each(toolbar => {\n            mapFrom(toolbar.getApis().toggle, toggle => toggle(toolbar));\n          });\n        },\n        toggleToolbarDrawerWithoutFocusing: comp => {\n          parts$a.getPart(comp, detail, 'toolbar').each(toolbar => {\n            mapFrom(toolbar.getApis().toggleWithoutFocusing, toggleWithoutFocusing => toggleWithoutFocusing(toolbar));\n          });\n        },\n        isToolbarDrawerToggled: comp => {\n          return parts$a.getPart(comp, detail, 'toolbar').bind(toolbar => Optional.from(toolbar.getApis().isOpen).map(isOpen => isOpen(toolbar))).getOr(false);\n        },\n        getThrobber: comp => {\n          return parts$a.getPart(comp, detail, 'throbber');\n        },\n        focusToolbar: comp => {\n          const optToolbar = parts$a.getPart(comp, detail, 'toolbar').orThunk(() => parts$a.getPart(comp, detail, 'multiple-toolbar'));\n          optToolbar.each(toolbar => {\n            Keying.focusIn(toolbar);\n          });\n        },\n        setMenubar: (comp, menus) => {\n          parts$a.getPart(comp, detail, 'menubar').each(menubar => {\n            SilverMenubar.setMenus(menubar, menus);\n          });\n        },\n        focusMenubar: comp => {\n          parts$a.getPart(comp, detail, 'menubar').each(menubar => {\n            SilverMenubar.focus(menubar);\n          });\n        },\n        setViews: (comp, viewConfigs) => {\n          parts$a.getPart(comp, detail, 'viewWrapper').each(wrapper => {\n            ViewWrapper.setViews(wrapper, viewConfigs);\n          });\n        },\n        toggleView: (comp, name) => {\n          return parts$a.getPart(comp, detail, 'viewWrapper').exists(wrapper => ViewWrapper.toggleView(wrapper, () => apis.showMainView(comp), () => apis.hideMainView(comp), name));\n        },\n        whichView: comp => {\n          return parts$a.getPart(comp, detail, 'viewWrapper').bind(ViewWrapper.whichView).getOrNull();\n        },\n        hideMainView: comp => {\n          toolbarDrawerOpenState = apis.isToolbarDrawerToggled(comp);\n          if (toolbarDrawerOpenState) {\n            apis.toggleToolbarDrawer(comp);\n          }\n          parts$a.getPart(comp, detail, 'editorContainer').each(editorContainer => {\n            const element = editorContainer.element;\n            set$8(element, 'display', 'none');\n            set$9(element, 'aria-hidden', 'true');\n          });\n        },\n        showMainView: comp => {\n          if (toolbarDrawerOpenState) {\n            apis.toggleToolbarDrawer(comp);\n          }\n          parts$a.getPart(comp, detail, 'editorContainer').each(editorContainer => {\n            const element = editorContainer.element;\n            remove$6(element, 'display');\n            remove$7(element, 'aria-hidden');\n          });\n        }\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        apis,\n        behaviours: detail.behaviours\n      };\n    };\n    const partMenubar = partType.optional({\n      factory: SilverMenubar,\n      name: 'menubar',\n      schema: [required$1('backstage')]\n    });\n    const toolbarFactory = spec => {\n      if (spec.type === ToolbarMode$1.sliding) {\n        return renderSlidingMoreToolbar;\n      } else if (spec.type === ToolbarMode$1.floating) {\n        return renderFloatingMoreToolbar;\n      } else {\n        return renderToolbar;\n      }\n    };\n    const partMultipleToolbar = partType.optional({\n      factory: {\n        sketch: spec => CustomList.sketch({\n          uid: spec.uid,\n          dom: spec.dom,\n          listBehaviours: derive$1([Keying.config({\n              mode: 'acyclic',\n              selector: '.tox-toolbar'\n            })]),\n          makeItem: () => renderToolbar({\n            type: spec.type,\n            uid: generate$6('multiple-toolbar-item'),\n            cyclicKeying: false,\n            initGroups: [],\n            providers: spec.providers,\n            onEscape: () => {\n              spec.onEscape();\n              return Optional.some(true);\n            }\n          }),\n          setupItem: (_mToolbar, tc, data, _index) => {\n            Toolbar.setGroups(tc, data);\n          },\n          shell: true\n        })\n      },\n      name: 'multiple-toolbar',\n      schema: [\n        required$1('dom'),\n        required$1('onEscape')\n      ]\n    });\n    const partToolbar = partType.optional({\n      factory: {\n        sketch: spec => {\n          const renderer = toolbarFactory(spec);\n          const toolbarSpec = {\n            type: spec.type,\n            uid: spec.uid,\n            onEscape: () => {\n              spec.onEscape();\n              return Optional.some(true);\n            },\n            onToggled: (_comp, state) => spec.onToolbarToggled(state),\n            cyclicKeying: false,\n            initGroups: [],\n            getSink: spec.getSink,\n            providers: spec.providers,\n            moreDrawerData: {\n              lazyToolbar: spec.lazyToolbar,\n              lazyMoreButton: spec.lazyMoreButton,\n              lazyHeader: spec.lazyHeader\n            },\n            attributes: spec.attributes\n          };\n          return renderer(toolbarSpec);\n        }\n      },\n      name: 'toolbar',\n      schema: [\n        required$1('dom'),\n        required$1('onEscape'),\n        required$1('getSink')\n      ]\n    });\n    const partHeader = partType.optional({\n      factory: { sketch: renderHeader },\n      name: 'header',\n      schema: [required$1('dom')]\n    });\n    const partPromotion = partType.optional({\n      factory: { sketch: renderPromotion },\n      name: 'promotion',\n      schema: [required$1('dom')]\n    });\n    const partSocket = partType.optional({\n      name: 'socket',\n      schema: [required$1('dom')]\n    });\n    const partSidebar = partType.optional({\n      factory: { sketch: renderSidebar },\n      name: 'sidebar',\n      schema: [required$1('dom')]\n    });\n    const partThrobber = partType.optional({\n      factory: { sketch: renderThrobber },\n      name: 'throbber',\n      schema: [required$1('dom')]\n    });\n    const partViewWrapper = partType.optional({\n      factory: ViewWrapper,\n      name: 'viewWrapper',\n      schema: [required$1('backstage')]\n    });\n    const renderEditorContainer = spec => ({\n      uid: spec.uid,\n      dom: {\n        tag: 'div',\n        classes: ['tox-editor-container']\n      },\n      components: spec.components\n    });\n    const partEditorContainer = partType.optional({\n      factory: { sketch: renderEditorContainer },\n      name: 'editorContainer',\n      schema: []\n    });\n    var OuterContainer = composite({\n      name: 'OuterContainer',\n      factory: factory$6,\n      configFields: [\n        required$1('dom'),\n        required$1('behaviours')\n      ],\n      partFields: [\n        partHeader,\n        partMenubar,\n        partToolbar,\n        partMultipleToolbar,\n        partSocket,\n        partSidebar,\n        partPromotion,\n        partThrobber,\n        partViewWrapper,\n        partEditorContainer\n      ],\n      apis: {\n        getSocket: (apis, comp) => {\n          return apis.getSocket(comp);\n        },\n        setSidebar: (apis, comp, panelConfigs, showSidebar) => {\n          apis.setSidebar(comp, panelConfigs, showSidebar);\n        },\n        toggleSidebar: (apis, comp, name) => {\n          apis.toggleSidebar(comp, name);\n        },\n        whichSidebar: (apis, comp) => {\n          return apis.whichSidebar(comp);\n        },\n        getHeader: (apis, comp) => {\n          return apis.getHeader(comp);\n        },\n        getToolbar: (apis, comp) => {\n          return apis.getToolbar(comp);\n        },\n        setToolbar: (apis, comp, groups) => {\n          apis.setToolbar(comp, groups);\n        },\n        setToolbars: (apis, comp, toolbars) => {\n          apis.setToolbars(comp, toolbars);\n        },\n        refreshToolbar: (apis, comp) => {\n          return apis.refreshToolbar(comp);\n        },\n        toggleToolbarDrawer: (apis, comp) => {\n          apis.toggleToolbarDrawer(comp);\n        },\n        toggleToolbarDrawerWithoutFocusing: (apis, comp) => {\n          apis.toggleToolbarDrawerWithoutFocusing(comp);\n        },\n        isToolbarDrawerToggled: (apis, comp) => {\n          return apis.isToolbarDrawerToggled(comp);\n        },\n        getThrobber: (apis, comp) => {\n          return apis.getThrobber(comp);\n        },\n        setMenubar: (apis, comp, menus) => {\n          apis.setMenubar(comp, menus);\n        },\n        focusMenubar: (apis, comp) => {\n          apis.focusMenubar(comp);\n        },\n        focusToolbar: (apis, comp) => {\n          apis.focusToolbar(comp);\n        },\n        setViews: (apis, comp, views) => {\n          apis.setViews(comp, views);\n        },\n        toggleView: (apis, comp, name) => {\n          return apis.toggleView(comp, name);\n        },\n        whichView: (apis, comp) => {\n          return apis.whichView(comp);\n        }\n      }\n    });\n\n    const defaultMenubar = 'file edit view insert format tools table help';\n    const defaultMenus = {\n      file: {\n        title: 'File',\n        items: 'newdocument restoredraft | preview | export print | deleteallconversations'\n      },\n      edit: {\n        title: 'Edit',\n        items: 'undo redo | cut copy paste pastetext | selectall | searchreplace'\n      },\n      view: {\n        title: 'View',\n        items: 'code | visualaid visualchars visualblocks | spellchecker | preview fullscreen | showcomments'\n      },\n      insert: {\n        title: 'Insert',\n        items: 'image link media addcomment pageembed template inserttemplate codesample inserttable accordion | charmap emoticons hr | pagebreak nonbreaking anchor tableofcontents footnotes | mergetags | insertdatetime'\n      },\n      format: {\n        title: 'Format',\n        items: 'bold italic underline strikethrough superscript subscript codeformat | styles blocks fontfamily fontsize align lineheight | forecolor backcolor | language | removeformat'\n      },\n      tools: {\n        title: 'Tools',\n        items: 'aidialog aishortcuts | spellchecker spellcheckerlanguage | autocorrect capitalization | a11ycheck code typography wordcount addtemplate'\n      },\n      table: {\n        title: 'Table',\n        items: 'inserttable | cell row column | advtablesort | tableprops deletetable'\n      },\n      help: {\n        title: 'Help',\n        items: 'help'\n      }\n    };\n    const make = (menu, registry, editor) => {\n      const removedMenuItems = getRemovedMenuItems(editor).split(/[ ,]/);\n      return {\n        text: menu.title,\n        getItems: () => bind$3(menu.items, i => {\n          const itemName = i.toLowerCase();\n          if (itemName.trim().length === 0) {\n            return [];\n          } else if (exists(removedMenuItems, removedMenuItem => removedMenuItem === itemName)) {\n            return [];\n          } else if (itemName === 'separator' || itemName === '|') {\n            return [{ type: 'separator' }];\n          } else if (registry.menuItems[itemName]) {\n            return [registry.menuItems[itemName]];\n          } else {\n            return [];\n          }\n        })\n      };\n    };\n    const parseItemsString = items => {\n      return items.split(' ');\n    };\n    const identifyMenus = (editor, registry) => {\n      const rawMenuData = {\n        ...defaultMenus,\n        ...registry.menus\n      };\n      const userDefinedMenus = keys(registry.menus).length > 0;\n      const menubar = registry.menubar === undefined || registry.menubar === true ? parseItemsString(defaultMenubar) : parseItemsString(registry.menubar === false ? '' : registry.menubar);\n      const validMenus = filter$2(menubar, menuName => {\n        const isDefaultMenu = has$2(defaultMenus, menuName);\n        if (userDefinedMenus) {\n          return isDefaultMenu || get$g(registry.menus, menuName).exists(menu => has$2(menu, 'items'));\n        } else {\n          return isDefaultMenu;\n        }\n      });\n      const menus = map$2(validMenus, menuName => {\n        const menuData = rawMenuData[menuName];\n        return make({\n          title: menuData.title,\n          items: parseItemsString(menuData.items)\n        }, registry, editor);\n      });\n      return filter$2(menus, menu => {\n        const isNotSeparator = item => isString(item) || item.type !== 'separator';\n        return menu.getItems().length > 0 && exists(menu.getItems(), isNotSeparator);\n      });\n    };\n\n    const fireSkinLoaded = editor => {\n      const done = () => {\n        editor._skinLoaded = true;\n        fireSkinLoaded$1(editor);\n      };\n      return () => {\n        if (editor.initialized) {\n          done();\n        } else {\n          editor.on('init', done);\n        }\n      };\n    };\n    const fireSkinLoadError = (editor, err) => () => fireSkinLoadError$1(editor, { message: err });\n\n    const loadStylesheet = (editor, stylesheetUrl, styleSheetLoader) => {\n      editor.on('remove', () => styleSheetLoader.unload(stylesheetUrl));\n      return styleSheetLoader.load(stylesheetUrl);\n    };\n    const loadRawCss = (editor, key, css, styleSheetLoader) => {\n      editor.on('remove', () => styleSheetLoader.unloadRawCss(key));\n      return styleSheetLoader.loadRawCss(key, css);\n    };\n    const loadUiSkins = async (editor, skinUrl) => {\n      const skinResourceIdentifier = getSkinUrlOption(editor).getOr('default');\n      const skinUiCss = 'ui/' + skinResourceIdentifier + '/skin.css';\n      const css = tinymce.Resource.get(skinUiCss);\n      if (isString(css)) {\n        return Promise.resolve(loadRawCss(editor, skinUiCss, css, editor.ui.styleSheetLoader));\n      } else {\n        const skinUiCss = skinUrl + '/skin.min.css';\n        return loadStylesheet(editor, skinUiCss, editor.ui.styleSheetLoader);\n      }\n    };\n    const loadShadowDomUiSkins = async (editor, skinUrl) => {\n      const isInShadowRoot$1 = isInShadowRoot(SugarElement.fromDom(editor.getElement()));\n      if (isInShadowRoot$1) {\n        const skinResourceIdentifier = getSkinUrlOption(editor).getOr('default');\n        const shadowDomSkinCss = 'ui/' + skinResourceIdentifier + '/skin.shadowdom.css';\n        const css = tinymce.Resource.get(shadowDomSkinCss);\n        if (isString(css)) {\n          loadRawCss(editor, shadowDomSkinCss, css, global$7.DOM.styleSheetLoader);\n          return Promise.resolve();\n        } else {\n          const shadowDomSkinCss = skinUrl + '/skin.shadowdom.min.css';\n          return loadStylesheet(editor, shadowDomSkinCss, global$7.DOM.styleSheetLoader);\n        }\n      }\n    };\n    const loadUrlSkin = async (isInline, editor) => {\n      getSkinUrlOption(editor).fold(() => {\n        const skinResourceIdentifier = getSkinUrl(editor);\n        if (skinResourceIdentifier) {\n          editor.contentCSS.push(skinResourceIdentifier + (isInline ? '/content.inline' : '/content') + '.min.css');\n        }\n      }, skinUrl => {\n        const skinContentCss = 'ui/' + skinUrl + (isInline ? '/content.inline' : '/content') + '.css';\n        const css = tinymce.Resource.get(skinContentCss);\n        if (isString(css)) {\n          loadRawCss(editor, skinContentCss, css, editor.ui.styleSheetLoader);\n        } else {\n          const skinResourceIdentifier = getSkinUrl(editor);\n          if (skinResourceIdentifier) {\n            editor.contentCSS.push(skinResourceIdentifier + (isInline ? '/content.inline' : '/content') + '.min.css');\n          }\n        }\n      });\n      const skinUrl = getSkinUrl(editor);\n      if (!isSkinDisabled(editor) && isString(skinUrl)) {\n        return Promise.all([\n          loadUiSkins(editor, skinUrl),\n          loadShadowDomUiSkins(editor, skinUrl)\n        ]).then();\n      }\n    };\n    const loadSkin = (isInline, editor) => {\n      return loadUrlSkin(isInline, editor).then(fireSkinLoaded(editor), fireSkinLoadError(editor, 'Skin could not be loaded'));\n    };\n    const iframe = curry(loadSkin, false);\n    const inline = curry(loadSkin, true);\n\n    const makeTooltipText = (editor, labelWithPlaceholder, value) => editor.translate([\n      labelWithPlaceholder,\n      editor.translate(value)\n    ]);\n\n    const generateSelectItems = (backstage, spec) => {\n      const generateItem = (rawItem, response, invalid, value) => {\n        const translatedText = backstage.shared.providers.translate(rawItem.title);\n        if (rawItem.type === 'separator') {\n          return Optional.some({\n            type: 'separator',\n            text: translatedText\n          });\n        } else if (rawItem.type === 'submenu') {\n          const items = bind$3(rawItem.getStyleItems(), si => validate(si, response, value));\n          if (response === 0 && items.length <= 0) {\n            return Optional.none();\n          } else {\n            return Optional.some({\n              type: 'nestedmenuitem',\n              text: translatedText,\n              enabled: items.length > 0,\n              getSubmenuItems: () => bind$3(rawItem.getStyleItems(), si => validate(si, response, value))\n            });\n          }\n        } else {\n          return Optional.some({\n            type: 'togglemenuitem',\n            text: translatedText,\n            icon: rawItem.icon,\n            active: rawItem.isSelected(value),\n            enabled: !invalid,\n            onAction: spec.onAction(rawItem),\n            ...rawItem.getStylePreview().fold(() => ({}), preview => ({ meta: { style: preview } }))\n          });\n        }\n      };\n      const validate = (item, response, value) => {\n        const invalid = item.type === 'formatter' && spec.isInvalid(item);\n        if (response === 0) {\n          return invalid ? [] : generateItem(item, response, false, value).toArray();\n        } else {\n          return generateItem(item, response, invalid, value).toArray();\n        }\n      };\n      const validateItems = preItems => {\n        const value = spec.getCurrentValue();\n        const response = spec.shouldHide ? 0 : 1;\n        return bind$3(preItems, item => validate(item, response, value));\n      };\n      const getFetch = (backstage, getStyleItems) => (comp, callback) => {\n        const preItems = getStyleItems();\n        const items = validateItems(preItems);\n        const menu = build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n          isHorizontalMenu: false,\n          search: Optional.none()\n        });\n        callback(menu);\n      };\n      return {\n        validateItems,\n        getFetch\n      };\n    };\n    const createMenuItems = (editor, backstage, spec) => {\n      const dataset = spec.dataset;\n      const getStyleItems = dataset.type === 'basic' ? () => map$2(dataset.data, d => processBasic(d, spec.isSelectedFor, spec.getPreviewFor)) : dataset.getData;\n      return {\n        items: generateSelectItems(backstage, spec),\n        getStyleItems\n      };\n    };\n    const createSelectButton = (editor, backstage, spec, tooltipWithPlaceholder, textUpdateEventName) => {\n      const {items, getStyleItems} = createMenuItems(editor, backstage, spec);\n      const getApi = comp => ({\n        getComponent: constant$1(comp),\n        setTooltip: tooltip => {\n          const translatedTooltip = backstage.shared.providers.translate(tooltip);\n          setAll$1(comp.element, {\n            'aria-label': translatedTooltip,\n            'title': translatedTooltip\n          });\n        }\n      });\n      const onSetup = api => {\n        const handler = e => api.setTooltip(makeTooltipText(editor, tooltipWithPlaceholder, e.value));\n        editor.on(textUpdateEventName, handler);\n        return composeUnbinders(onSetupEvent(editor, 'NodeChange', api => {\n          const comp = api.getComponent();\n          spec.updateText(comp);\n          Disabling.set(api.getComponent(), !editor.selection.isEditable());\n        })(api), () => editor.off(textUpdateEventName, handler));\n      };\n      return renderCommonDropdown({\n        text: spec.icon.isSome() ? Optional.none() : spec.text,\n        icon: spec.icon,\n        tooltip: Optional.from(spec.tooltip),\n        role: Optional.none(),\n        fetch: items.getFetch(backstage, getStyleItems),\n        onSetup,\n        getApi,\n        columns: 1,\n        presets: 'normal',\n        classes: spec.icon.isSome() ? [] : ['bespoke'],\n        dropdownBehaviours: []\n      }, 'tox-tbtn', backstage.shared);\n    };\n\n    const process = rawFormats => map$2(rawFormats, item => {\n      let title = item, format = item;\n      const values = item.split('=');\n      if (values.length > 1) {\n        title = values[0];\n        format = values[1];\n      }\n      return {\n        title,\n        format\n      };\n    });\n    const buildBasicStaticDataset = data => ({\n      type: 'basic',\n      data\n    });\n    var Delimiter;\n    (function (Delimiter) {\n      Delimiter[Delimiter['SemiColon'] = 0] = 'SemiColon';\n      Delimiter[Delimiter['Space'] = 1] = 'Space';\n    }(Delimiter || (Delimiter = {})));\n    const split = (rawFormats, delimiter) => {\n      if (delimiter === Delimiter.SemiColon) {\n        return rawFormats.replace(/;$/, '').split(';');\n      } else {\n        return rawFormats.split(' ');\n      }\n    };\n    const buildBasicSettingsDataset = (editor, settingName, delimiter) => {\n      const rawFormats = editor.options.get(settingName);\n      const data = process(split(rawFormats, delimiter));\n      return {\n        type: 'basic',\n        data\n      };\n    };\n\n    const menuTitle$4 = 'Align';\n    const btnTooltip$4 = 'Alignment {0}';\n    const fallbackAlignment = 'left';\n    const alignMenuItems = [\n      {\n        title: 'Left',\n        icon: 'align-left',\n        format: 'alignleft',\n        command: 'JustifyLeft'\n      },\n      {\n        title: 'Center',\n        icon: 'align-center',\n        format: 'aligncenter',\n        command: 'JustifyCenter'\n      },\n      {\n        title: 'Right',\n        icon: 'align-right',\n        format: 'alignright',\n        command: 'JustifyRight'\n      },\n      {\n        title: 'Justify',\n        icon: 'align-justify',\n        format: 'alignjustify',\n        command: 'JustifyFull'\n      }\n    ];\n    const getSpec$4 = editor => {\n      const getMatchingValue = () => find$5(alignMenuItems, item => editor.formatter.match(item.format));\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = _format => Optional.none;\n      const updateSelectMenuIcon = comp => {\n        const match = getMatchingValue();\n        const alignment = match.fold(constant$1(fallbackAlignment), item => item.title.toLowerCase());\n        emitWith(comp, updateMenuIcon, { icon: `align-${ alignment }` });\n        fireAlignTextUpdate(editor, { value: alignment });\n      };\n      const dataset = buildBasicStaticDataset(alignMenuItems);\n      const onAction = rawItem => () => find$5(alignMenuItems, item => item.format === rawItem.format).each(item => editor.execCommand(item.command));\n      return {\n        tooltip: makeTooltipText(editor, btnTooltip$4, fallbackAlignment),\n        text: Optional.none(),\n        icon: Optional.some('align-left'),\n        isSelectedFor,\n        getCurrentValue: Optional.none,\n        getPreviewFor,\n        onAction,\n        updateText: updateSelectMenuIcon,\n        dataset,\n        shouldHide: false,\n        isInvalid: item => !editor.formatter.canApply(item.format)\n      };\n    };\n    const createAlignButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$4(editor), btnTooltip$4, 'AlignTextUpdate');\n    const createAlignMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$4(editor));\n      editor.ui.registry.addNestedMenuItem('align', {\n        text: backstage.shared.providers.translate(menuTitle$4),\n        onSetup: onSetupEditableToggle(editor),\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const findNearest = (editor, getStyles) => {\n      const styles = getStyles();\n      const formats = map$2(styles, style => style.format);\n      return Optional.from(editor.formatter.closest(formats)).bind(fmt => find$5(styles, data => data.format === fmt)).orThunk(() => someIf(editor.formatter.match('p'), {\n        title: 'Paragraph',\n        format: 'p'\n      }));\n    };\n\n    const menuTitle$3 = 'Blocks';\n    const btnTooltip$3 = 'Block {0}';\n    const fallbackFormat = 'Paragraph';\n    const getSpec$3 = editor => {\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = format => () => {\n        const fmt = editor.formatter.get(format);\n        if (fmt) {\n          return Optional.some({\n            tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n            styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n          });\n        } else {\n          return Optional.none();\n        }\n      };\n      const updateSelectMenuText = comp => {\n        const detectedFormat = findNearest(editor, () => dataset.data);\n        const text = detectedFormat.fold(constant$1(fallbackFormat), fmt => fmt.title);\n        emitWith(comp, updateMenuText, { text });\n        fireBlocksTextUpdate(editor, { value: text });\n      };\n      const dataset = buildBasicSettingsDataset(editor, 'block_formats', Delimiter.SemiColon);\n      return {\n        tooltip: makeTooltipText(editor, btnTooltip$3, fallbackFormat),\n        text: Optional.some(fallbackFormat),\n        icon: Optional.none(),\n        isSelectedFor,\n        getCurrentValue: Optional.none,\n        getPreviewFor,\n        onAction: onActionToggleFormat$1(editor),\n        updateText: updateSelectMenuText,\n        dataset,\n        shouldHide: false,\n        isInvalid: item => !editor.formatter.canApply(item.format)\n      };\n    };\n    const createBlocksButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$3(editor), btnTooltip$3, 'BlocksTextUpdate');\n    const createBlocksMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$3(editor));\n      editor.ui.registry.addNestedMenuItem('blocks', {\n        text: menuTitle$3,\n        onSetup: onSetupEditableToggle(editor),\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const menuTitle$2 = 'Fonts';\n    const btnTooltip$2 = 'Font {0}';\n    const systemFont = 'System Font';\n    const systemStackFonts = [\n      '-apple-system',\n      'Segoe UI',\n      'Roboto',\n      'Helvetica Neue',\n      'sans-serif'\n    ];\n    const splitFonts = fontFamily => {\n      const fonts = fontFamily.split(/\\s*,\\s*/);\n      return map$2(fonts, font => font.replace(/^['\"]+|['\"]+$/g, ''));\n    };\n    const matchesStack = (fonts, stack) => stack.length > 0 && forall(stack, font => fonts.indexOf(font.toLowerCase()) > -1);\n    const isSystemFontStack = (fontFamily, userStack) => {\n      if (fontFamily.indexOf('-apple-system') === 0 || userStack.length > 0) {\n        const fonts = splitFonts(fontFamily.toLowerCase());\n        return matchesStack(fonts, systemStackFonts) || matchesStack(fonts, userStack);\n      } else {\n        return false;\n      }\n    };\n    const getSpec$2 = editor => {\n      const getMatchingValue = () => {\n        const getFirstFont = fontFamily => fontFamily ? splitFonts(fontFamily)[0] : '';\n        const fontFamily = editor.queryCommandValue('FontName');\n        const items = dataset.data;\n        const font = fontFamily ? fontFamily.toLowerCase() : '';\n        const userStack = getDefaultFontStack(editor);\n        const matchOpt = find$5(items, item => {\n          const format = item.format;\n          return format.toLowerCase() === font || getFirstFont(format).toLowerCase() === getFirstFont(font).toLowerCase();\n        }).orThunk(() => {\n          return someIf(isSystemFontStack(font, userStack), {\n            title: systemFont,\n            format: font\n          });\n        });\n        return {\n          matchOpt,\n          font: fontFamily\n        };\n      };\n      const isSelectedFor = item => valueOpt => valueOpt.exists(value => value.format === item);\n      const getCurrentValue = () => {\n        const {matchOpt} = getMatchingValue();\n        return matchOpt;\n      };\n      const getPreviewFor = item => () => Optional.some({\n        tag: 'div',\n        styles: item.indexOf('dings') === -1 ? { 'font-family': item } : {}\n      });\n      const onAction = rawItem => () => {\n        editor.undoManager.transact(() => {\n          editor.focus();\n          editor.execCommand('FontName', false, rawItem.format);\n        });\n      };\n      const updateSelectMenuText = comp => {\n        const {matchOpt, font} = getMatchingValue();\n        const text = matchOpt.fold(constant$1(font), item => item.title);\n        emitWith(comp, updateMenuText, { text });\n        fireFontFamilyTextUpdate(editor, { value: text });\n      };\n      const dataset = buildBasicSettingsDataset(editor, 'font_family_formats', Delimiter.SemiColon);\n      return {\n        tooltip: makeTooltipText(editor, btnTooltip$2, systemFont),\n        text: Optional.some(systemFont),\n        icon: Optional.none(),\n        isSelectedFor,\n        getCurrentValue,\n        getPreviewFor,\n        onAction,\n        updateText: updateSelectMenuText,\n        dataset,\n        shouldHide: false,\n        isInvalid: never\n      };\n    };\n    const createFontFamilyButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$2(editor), btnTooltip$2, 'FontFamilyTextUpdate');\n    const createFontFamilyMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$2(editor));\n      editor.ui.registry.addNestedMenuItem('fontfamily', {\n        text: backstage.shared.providers.translate(menuTitle$2),\n        onSetup: onSetupEditableToggle(editor),\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const units = {\n      unsupportedLength: [\n        'em',\n        'ex',\n        'cap',\n        'ch',\n        'ic',\n        'rem',\n        'lh',\n        'rlh',\n        'vw',\n        'vh',\n        'vi',\n        'vb',\n        'vmin',\n        'vmax',\n        'cm',\n        'mm',\n        'Q',\n        'in',\n        'pc',\n        'pt',\n        'px'\n      ],\n      fixed: [\n        'px',\n        'pt'\n      ],\n      relative: ['%'],\n      empty: ['']\n    };\n    const pattern = (() => {\n      const decimalDigits = '[0-9]+';\n      const signedInteger = '[+-]?' + decimalDigits;\n      const exponentPart = '[eE]' + signedInteger;\n      const dot = '\\\\.';\n      const opt = input => `(?:${ input })?`;\n      const unsignedDecimalLiteral = [\n        'Infinity',\n        decimalDigits + dot + opt(decimalDigits) + opt(exponentPart),\n        dot + decimalDigits + opt(exponentPart),\n        decimalDigits + opt(exponentPart)\n      ].join('|');\n      const float = `[+-]?(?:${ unsignedDecimalLiteral })`;\n      return new RegExp(`^(${ float })(.*)$`);\n    })();\n    const isUnit = (unit, accepted) => exists(accepted, acc => exists(units[acc], check => unit === check));\n    const parse = (input, accepted) => {\n      const match = Optional.from(pattern.exec(input));\n      return match.bind(array => {\n        const value = Number(array[1]);\n        const unitRaw = array[2];\n        if (isUnit(unitRaw, accepted)) {\n          return Optional.some({\n            value,\n            unit: unitRaw\n          });\n        } else {\n          return Optional.none();\n        }\n      });\n    };\n    const normalise = (input, accepted) => parse(input, accepted).map(({value, unit}) => value + unit);\n\n    const Keys = {\n      tab: constant$1(9),\n      escape: constant$1(27),\n      enter: constant$1(13),\n      backspace: constant$1(8),\n      delete: constant$1(46),\n      left: constant$1(37),\n      up: constant$1(38),\n      right: constant$1(39),\n      down: constant$1(40),\n      space: constant$1(32),\n      home: constant$1(36),\n      end: constant$1(35),\n      pageUp: constant$1(33),\n      pageDown: constant$1(34)\n    };\n\n    const createBespokeNumberInput = (editor, backstage, spec) => {\n      let currentComp = Optional.none();\n      const getValueFromCurrentComp = comp => comp.map(alloyComp => Representing.getValue(alloyComp)).getOr('');\n      const onSetup = onSetupEvent(editor, 'NodeChange SwitchMode', api => {\n        const comp = api.getComponent();\n        currentComp = Optional.some(comp);\n        spec.updateInputValue(comp);\n        Disabling.set(comp, !editor.selection.isEditable());\n      });\n      const getApi = comp => ({ getComponent: constant$1(comp) });\n      const editorOffCell = Cell(noop);\n      const customEvents = generate$6('custom-number-input-events');\n      const changeValue = (f, fromInput, focusBack) => {\n        const text = getValueFromCurrentComp(currentComp);\n        const newValue = spec.getNewValue(text, f);\n        const lenghtDelta = text.length - `${ newValue }`.length;\n        const oldStart = currentComp.map(comp => comp.element.dom.selectionStart - lenghtDelta);\n        const oldEnd = currentComp.map(comp => comp.element.dom.selectionEnd - lenghtDelta);\n        spec.onAction(newValue, focusBack);\n        currentComp.each(comp => {\n          Representing.setValue(comp, newValue);\n          if (fromInput) {\n            oldStart.each(oldStart => comp.element.dom.selectionStart = oldStart);\n            oldEnd.each(oldEnd => comp.element.dom.selectionEnd = oldEnd);\n          }\n        });\n      };\n      const decrease = (fromInput, focusBack) => changeValue((n, s) => n - s, fromInput, focusBack);\n      const increase = (fromInput, focusBack) => changeValue((n, s) => n + s, fromInput, focusBack);\n      const goToParent = comp => parentElement(comp.element).fold(Optional.none, parent => {\n        focus$3(parent);\n        return Optional.some(true);\n      });\n      const focusInput = comp => {\n        if (hasFocus(comp.element)) {\n          firstChild(comp.element).each(input => focus$3(input));\n          return Optional.some(true);\n        } else {\n          return Optional.none();\n        }\n      };\n      const makeStepperButton = (action, title, tooltip, classes) => {\n        const editorOffCellStepButton = Cell(noop);\n        const translatedTooltip = backstage.shared.providers.translate(tooltip);\n        const altExecuting = generate$6('altExecuting');\n        const onSetup = onSetupEvent(editor, 'NodeChange SwitchMode', api => {\n          Disabling.set(api.getComponent(), !editor.selection.isEditable());\n        });\n        const onClick = comp => {\n          if (!Disabling.isDisabled(comp)) {\n            action(true);\n          }\n        };\n        return Button.sketch({\n          dom: {\n            tag: 'button',\n            attributes: {\n              'title': translatedTooltip,\n              'aria-label': translatedTooltip\n            },\n            classes: classes.concat(title)\n          },\n          components: [renderIconFromPack$1(title, backstage.shared.providers.icons)],\n          buttonBehaviours: derive$1([\n            Disabling.config({}),\n            config(altExecuting, [\n              onControlAttached({\n                onSetup,\n                getApi\n              }, editorOffCellStepButton),\n              onControlDetached({ getApi }, editorOffCellStepButton),\n              run$1(keydown(), (comp, se) => {\n                if (se.event.raw.keyCode === Keys.space() || se.event.raw.keyCode === Keys.enter()) {\n                  if (!Disabling.isDisabled(comp)) {\n                    action(false);\n                  }\n                }\n              }),\n              run$1(click(), onClick),\n              run$1(touchend(), onClick)\n            ])\n          ]),\n          eventOrder: {\n            [keydown()]: [\n              altExecuting,\n              'keying'\n            ],\n            [click()]: [\n              altExecuting,\n              'alloy.base.behaviour'\n            ],\n            [touchend()]: [\n              altExecuting,\n              'alloy.base.behaviour'\n            ]\n          }\n        });\n      };\n      const memMinus = record(makeStepperButton(focusBack => decrease(false, focusBack), 'minus', 'Decrease font size', []));\n      const memPlus = record(makeStepperButton(focusBack => increase(false, focusBack), 'plus', 'Increase font size', []));\n      const memInput = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-input-wrapper']\n        },\n        components: [Input.sketch({\n            inputBehaviours: derive$1([\n              Disabling.config({}),\n              config(customEvents, [\n                onControlAttached({\n                  onSetup,\n                  getApi\n                }, editorOffCell),\n                onControlDetached({ getApi }, editorOffCell)\n              ]),\n              config('input-update-display-text', [\n                run$1(updateMenuText, (comp, se) => {\n                  Representing.setValue(comp, se.event.text);\n                }),\n                run$1(focusout(), comp => {\n                  spec.onAction(Representing.getValue(comp));\n                }),\n                run$1(change(), comp => {\n                  spec.onAction(Representing.getValue(comp));\n                })\n              ]),\n              Keying.config({\n                mode: 'special',\n                onEnter: _comp => {\n                  changeValue(identity, true, true);\n                  return Optional.some(true);\n                },\n                onEscape: goToParent,\n                onUp: _comp => {\n                  increase(true, false);\n                  return Optional.some(true);\n                },\n                onDown: _comp => {\n                  decrease(true, false);\n                  return Optional.some(true);\n                },\n                onLeft: (_comp, se) => {\n                  se.cut();\n                  return Optional.none();\n                },\n                onRight: (_comp, se) => {\n                  se.cut();\n                  return Optional.none();\n                }\n              })\n            ])\n          })],\n        behaviours: derive$1([\n          Focusing.config({}),\n          Keying.config({\n            mode: 'special',\n            onEnter: focusInput,\n            onSpace: focusInput,\n            onEscape: goToParent\n          }),\n          config('input-wrapper-events', [run$1(mouseover(), comp => {\n              each$1([\n                memMinus,\n                memPlus\n              ], button => {\n                const buttonNode = SugarElement.fromDom(button.get(comp).element.dom);\n                if (hasFocus(buttonNode)) {\n                  blur$1(buttonNode);\n                }\n              });\n            })])\n        ])\n      });\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-number-input']\n        },\n        components: [\n          memMinus.asSpec(),\n          memInput.asSpec(),\n          memPlus.asSpec()\n        ],\n        behaviours: derive$1([\n          Focusing.config({}),\n          Keying.config({\n            mode: 'flow',\n            focusInside: FocusInsideModes.OnEnterOrSpaceMode,\n            cycles: false,\n            selector: 'button, .tox-input-wrapper',\n            onEscape: wrapperComp => {\n              if (hasFocus(wrapperComp.element)) {\n                return Optional.none();\n              } else {\n                focus$3(wrapperComp.element);\n                return Optional.some(true);\n              }\n            }\n          })\n        ])\n      };\n    };\n\n    const menuTitle$1 = 'Font sizes';\n    const btnTooltip$1 = 'Font size {0}';\n    const fallbackFontSize = '12pt';\n    const legacyFontSizes = {\n      '8pt': '1',\n      '10pt': '2',\n      '12pt': '3',\n      '14pt': '4',\n      '18pt': '5',\n      '24pt': '6',\n      '36pt': '7'\n    };\n    const keywordFontSizes = {\n      'xx-small': '7pt',\n      'x-small': '8pt',\n      'small': '10pt',\n      'medium': '12pt',\n      'large': '14pt',\n      'x-large': '18pt',\n      'xx-large': '24pt'\n    };\n    const round = (number, precision) => {\n      const factor = Math.pow(10, precision);\n      return Math.round(number * factor) / factor;\n    };\n    const toPt = (fontSize, precision) => {\n      if (/[0-9.]+px$/.test(fontSize)) {\n        return round(parseInt(fontSize, 10) * 72 / 96, precision || 0) + 'pt';\n      } else {\n        return get$g(keywordFontSizes, fontSize).getOr(fontSize);\n      }\n    };\n    const toLegacy = fontSize => get$g(legacyFontSizes, fontSize).getOr('');\n    const getSpec$1 = editor => {\n      const getMatchingValue = () => {\n        let matchOpt = Optional.none();\n        const items = dataset.data;\n        const fontSize = editor.queryCommandValue('FontSize');\n        if (fontSize) {\n          for (let precision = 3; matchOpt.isNone() && precision >= 0; precision--) {\n            const pt = toPt(fontSize, precision);\n            const legacy = toLegacy(pt);\n            matchOpt = find$5(items, item => item.format === fontSize || item.format === pt || item.format === legacy);\n          }\n        }\n        return {\n          matchOpt,\n          size: fontSize\n        };\n      };\n      const isSelectedFor = item => valueOpt => valueOpt.exists(value => value.format === item);\n      const getCurrentValue = () => {\n        const {matchOpt} = getMatchingValue();\n        return matchOpt;\n      };\n      const getPreviewFor = constant$1(Optional.none);\n      const onAction = rawItem => () => {\n        editor.undoManager.transact(() => {\n          editor.focus();\n          editor.execCommand('FontSize', false, rawItem.format);\n        });\n      };\n      const updateSelectMenuText = comp => {\n        const {matchOpt, size} = getMatchingValue();\n        const text = matchOpt.fold(constant$1(size), match => match.title);\n        emitWith(comp, updateMenuText, { text });\n        fireFontSizeTextUpdate(editor, { value: text });\n      };\n      const dataset = buildBasicSettingsDataset(editor, 'font_size_formats', Delimiter.Space);\n      return {\n        tooltip: makeTooltipText(editor, btnTooltip$1, fallbackFontSize),\n        text: Optional.some(fallbackFontSize),\n        icon: Optional.none(),\n        isSelectedFor,\n        getPreviewFor,\n        getCurrentValue,\n        onAction,\n        updateText: updateSelectMenuText,\n        dataset,\n        shouldHide: false,\n        isInvalid: never\n      };\n    };\n    const createFontSizeButton = (editor, backstage) => createSelectButton(editor, backstage, getSpec$1(editor), btnTooltip$1, 'FontSizeTextUpdate');\n    const getConfigFromUnit = unit => {\n      var _a;\n      const baseConfig = { step: 1 };\n      const configs = {\n        em: { step: 0.1 },\n        cm: { step: 0.1 },\n        in: { step: 0.1 },\n        pc: { step: 0.1 },\n        ch: { step: 0.1 },\n        rem: { step: 0.1 }\n      };\n      return (_a = configs[unit]) !== null && _a !== void 0 ? _a : baseConfig;\n    };\n    const defaultValue = 16;\n    const isValidValue = value => value >= 0;\n    const getNumberInputSpec = editor => {\n      const getCurrentValue = () => editor.queryCommandValue('FontSize');\n      const updateInputValue = comp => emitWith(comp, updateMenuText, { text: getCurrentValue() });\n      return {\n        updateInputValue,\n        onAction: (format, focusBack) => editor.execCommand('FontSize', false, format, { skip_focus: !focusBack }),\n        getNewValue: (text, updateFunction) => {\n          parse(text, [\n            'unsupportedLength',\n            'empty'\n          ]);\n          const currentValue = getCurrentValue();\n          const parsedText = parse(text, [\n            'unsupportedLength',\n            'empty'\n          ]).or(parse(currentValue, [\n            'unsupportedLength',\n            'empty'\n          ]));\n          const value = parsedText.map(res => res.value).getOr(defaultValue);\n          const defaultUnit = getFontSizeInputDefaultUnit(editor);\n          const unit = parsedText.map(res => res.unit).filter(u => u !== '').getOr(defaultUnit);\n          const newValue = updateFunction(value, getConfigFromUnit(unit).step);\n          const res = `${ isValidValue(newValue) ? newValue : value }${ unit }`;\n          if (res !== currentValue) {\n            fireFontSizeInputTextUpdate(editor, { value: res });\n          }\n          return res;\n        }\n      };\n    };\n    const createFontSizeInputButton = (editor, backstage) => createBespokeNumberInput(editor, backstage, getNumberInputSpec(editor));\n    const createFontSizeMenu = (editor, backstage) => {\n      const menuItems = createMenuItems(editor, backstage, getSpec$1(editor));\n      editor.ui.registry.addNestedMenuItem('fontsize', {\n        text: menuTitle$1,\n        onSetup: onSetupEditableToggle(editor),\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const menuTitle = 'Formats';\n    const btnTooltip = 'Format {0}';\n    const getSpec = (editor, dataset) => {\n      const fallbackFormat = 'Paragraph';\n      const isSelectedFor = format => () => editor.formatter.match(format);\n      const getPreviewFor = format => () => {\n        const fmt = editor.formatter.get(format);\n        return fmt !== undefined ? Optional.some({\n          tag: fmt.length > 0 ? fmt[0].inline || fmt[0].block || 'div' : 'div',\n          styles: editor.dom.parseStyle(editor.formatter.getCssText(format))\n        }) : Optional.none();\n      };\n      const updateSelectMenuText = comp => {\n        const getFormatItems = fmt => {\n          if (isNestedFormat(fmt)) {\n            return bind$3(fmt.items, getFormatItems);\n          } else if (isFormatReference(fmt)) {\n            return [{\n                title: fmt.title,\n                format: fmt.format\n              }];\n          } else {\n            return [];\n          }\n        };\n        const flattenedItems = bind$3(getStyleFormats(editor), getFormatItems);\n        const detectedFormat = findNearest(editor, constant$1(flattenedItems));\n        const text = detectedFormat.fold(constant$1(fallbackFormat), fmt => fmt.title);\n        emitWith(comp, updateMenuText, { text });\n        fireStylesTextUpdate(editor, { value: text });\n      };\n      return {\n        tooltip: makeTooltipText(editor, btnTooltip, fallbackFormat),\n        text: Optional.some(fallbackFormat),\n        icon: Optional.none(),\n        isSelectedFor,\n        getCurrentValue: Optional.none,\n        getPreviewFor,\n        onAction: onActionToggleFormat$1(editor),\n        updateText: updateSelectMenuText,\n        shouldHide: shouldAutoHideStyleFormats(editor),\n        isInvalid: item => !editor.formatter.canApply(item.format),\n        dataset\n      };\n    };\n    const createStylesButton = (editor, backstage) => {\n      const dataset = {\n        type: 'advanced',\n        ...backstage.styles\n      };\n      return createSelectButton(editor, backstage, getSpec(editor, dataset), btnTooltip, 'StylesTextUpdate');\n    };\n    const createStylesMenu = (editor, backstage) => {\n      const dataset = {\n        type: 'advanced',\n        ...backstage.styles\n      };\n      const menuItems = createMenuItems(editor, backstage, getSpec(editor, dataset));\n      editor.ui.registry.addNestedMenuItem('styles', {\n        text: menuTitle,\n        onSetup: onSetupEditableToggle(editor),\n        getSubmenuItems: () => menuItems.items.validateItems(menuItems.getStyleItems())\n      });\n    };\n\n    const schema$7 = constant$1([\n      required$1('toggleClass'),\n      required$1('fetch'),\n      onStrictHandler('onExecute'),\n      defaulted('getHotspot', Optional.some),\n      defaulted('getAnchorOverrides', constant$1({})),\n      schema$y(),\n      onStrictHandler('onItemExecute'),\n      option$3('lazySink'),\n      required$1('dom'),\n      onHandler('onOpen'),\n      field('splitDropdownBehaviours', [\n        Coupling,\n        Keying,\n        Focusing\n      ]),\n      defaulted('matchWidth', false),\n      defaulted('useMinWidth', false),\n      defaulted('eventOrder', {}),\n      option$3('role')\n    ].concat(sandboxFields()));\n    const arrowPart = required({\n      factory: Button,\n      schema: [required$1('dom')],\n      name: 'arrow',\n      defaults: () => {\n        return { buttonBehaviours: derive$1([Focusing.revoke()]) };\n      },\n      overrides: detail => {\n        return {\n          dom: {\n            tag: 'span',\n            attributes: { role: 'presentation' }\n          },\n          action: arrow => {\n            arrow.getSystem().getByUid(detail.uid).each(emitExecute);\n          },\n          buttonBehaviours: derive$1([Toggling.config({\n              toggleOnExecute: false,\n              toggleClass: detail.toggleClass\n            })])\n        };\n      }\n    });\n    const buttonPart = required({\n      factory: Button,\n      schema: [required$1('dom')],\n      name: 'button',\n      defaults: () => {\n        return { buttonBehaviours: derive$1([Focusing.revoke()]) };\n      },\n      overrides: detail => {\n        return {\n          dom: {\n            tag: 'span',\n            attributes: { role: 'presentation' }\n          },\n          action: btn => {\n            btn.getSystem().getByUid(detail.uid).each(splitDropdown => {\n              detail.onExecute(splitDropdown, btn);\n            });\n          }\n        };\n      }\n    });\n    const parts$3 = constant$1([\n      arrowPart,\n      buttonPart,\n      optional({\n        factory: {\n          sketch: spec => {\n            return {\n              uid: spec.uid,\n              dom: {\n                tag: 'span',\n                styles: { display: 'none' },\n                attributes: { 'aria-hidden': 'true' },\n                innerHtml: spec.text\n              }\n            };\n          }\n        },\n        schema: [required$1('text')],\n        name: 'aria-descriptor'\n      }),\n      external({\n        schema: [tieredMenuMarkers()],\n        name: 'menu',\n        defaults: detail => {\n          return {\n            onExecute: (tmenu, item) => {\n              tmenu.getSystem().getByUid(detail.uid).each(splitDropdown => {\n                detail.onItemExecute(splitDropdown, tmenu, item);\n              });\n            }\n          };\n        }\n      }),\n      partType$1()\n    ]);\n\n    const factory$5 = (detail, components, spec, externals) => {\n      const switchToMenu = sandbox => {\n        Composing.getCurrent(sandbox).each(current => {\n          Highlighting.highlightFirst(current);\n          Keying.focusIn(current);\n        });\n      };\n      const action = component => {\n        const onOpenSync = switchToMenu;\n        togglePopup(detail, identity, component, externals, onOpenSync, HighlightOnOpen.HighlightMenuAndItem).get(noop);\n      };\n      const openMenu = comp => {\n        action(comp);\n        return Optional.some(true);\n      };\n      const executeOnButton = comp => {\n        const button = getPartOrDie(comp, detail, 'button');\n        emitExecute(button);\n        return Optional.some(true);\n      };\n      const buttonEvents = {\n        ...derive$2([runOnAttached((component, _simulatedEvent) => {\n            const ariaDescriptor = getPart(component, detail, 'aria-descriptor');\n            ariaDescriptor.each(descriptor => {\n              const descriptorId = generate$6('aria');\n              set$9(descriptor.element, 'id', descriptorId);\n              set$9(component.element, 'aria-describedby', descriptorId);\n            });\n          })]),\n        ...events$a(Optional.some(action))\n      };\n      const apis = {\n        repositionMenus: comp => {\n          if (Toggling.isOn(comp)) {\n            repositionMenus(comp);\n          }\n        }\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        apis,\n        eventOrder: {\n          ...detail.eventOrder,\n          [execute$5()]: [\n            'disabling',\n            'toggling',\n            'alloy.base.behaviour'\n          ]\n        },\n        events: buttonEvents,\n        behaviours: augment(detail.splitDropdownBehaviours, [\n          Coupling.config({\n            others: {\n              sandbox: hotspot => {\n                const arrow = getPartOrDie(hotspot, detail, 'arrow');\n                const extras = {\n                  onOpen: () => {\n                    Toggling.on(arrow);\n                    Toggling.on(hotspot);\n                  },\n                  onClose: () => {\n                    Toggling.off(arrow);\n                    Toggling.off(hotspot);\n                  }\n                };\n                return makeSandbox$1(detail, hotspot, extras);\n              }\n            }\n          }),\n          Keying.config({\n            mode: 'special',\n            onSpace: executeOnButton,\n            onEnter: executeOnButton,\n            onDown: openMenu\n          }),\n          Focusing.config({}),\n          Toggling.config({\n            toggleOnExecute: false,\n            aria: { mode: 'expanded' }\n          })\n        ]),\n        domModification: {\n          attributes: {\n            'role': detail.role.getOr('button'),\n            'aria-haspopup': true\n          }\n        }\n      };\n    };\n    const SplitDropdown = composite({\n      name: 'SplitDropdown',\n      configFields: schema$7(),\n      partFields: parts$3(),\n      factory: factory$5,\n      apis: { repositionMenus: (apis, comp) => apis.repositionMenus(comp) }\n    });\n\n    const getButtonApi = component => ({\n      isEnabled: () => !Disabling.isDisabled(component),\n      setEnabled: state => Disabling.set(component, !state),\n      setText: text => emitWith(component, updateMenuText, { text }),\n      setIcon: icon => emitWith(component, updateMenuIcon, { icon })\n    });\n    const getToggleApi = component => ({\n      setActive: state => {\n        Toggling.set(component, state);\n      },\n      isActive: () => Toggling.isOn(component),\n      isEnabled: () => !Disabling.isDisabled(component),\n      setEnabled: state => Disabling.set(component, !state),\n      setText: text => emitWith(component, updateMenuText, { text }),\n      setIcon: icon => emitWith(component, updateMenuIcon, { icon })\n    });\n    const getTooltipAttributes = (tooltip, providersBackstage) => tooltip.map(tooltip => ({\n      'aria-label': providersBackstage.translate(tooltip),\n      'title': providersBackstage.translate(tooltip)\n    })).getOr({});\n    const focusButtonEvent = generate$6('focus-button');\n    const renderCommonStructure = (optIcon, optText, tooltip, behaviours, providersBackstage) => {\n      const optMemDisplayText = optText.map(text => record(renderLabel$1(text, 'tox-tbtn', providersBackstage)));\n      const optMemDisplayIcon = optIcon.map(icon => record(renderReplaceableIconFromPack(icon, providersBackstage.icons)));\n      return {\n        dom: {\n          tag: 'button',\n          classes: ['tox-tbtn'].concat(optText.isSome() ? ['tox-tbtn--select'] : []),\n          attributes: getTooltipAttributes(tooltip, providersBackstage)\n        },\n        components: componentRenderPipeline([\n          optMemDisplayIcon.map(mem => mem.asSpec()),\n          optMemDisplayText.map(mem => mem.asSpec())\n        ]),\n        eventOrder: {\n          [mousedown()]: [\n            'focusing',\n            'alloy.base.behaviour',\n            commonButtonDisplayEvent\n          ],\n          [attachedToDom()]: [\n            commonButtonDisplayEvent,\n            'toolbar-group-button-events'\n          ]\n        },\n        buttonBehaviours: derive$1([\n          DisablingConfigs.toolbarButton(providersBackstage.isDisabled),\n          receivingConfig(),\n          config(commonButtonDisplayEvent, [\n            runOnAttached((comp, _se) => forceInitialSize(comp)),\n            run$1(updateMenuText, (comp, se) => {\n              optMemDisplayText.bind(mem => mem.getOpt(comp)).each(displayText => {\n                Replacing.set(displayText, [text$2(providersBackstage.translate(se.event.text))]);\n              });\n            }),\n            run$1(updateMenuIcon, (comp, se) => {\n              optMemDisplayIcon.bind(mem => mem.getOpt(comp)).each(displayIcon => {\n                Replacing.set(displayIcon, [renderReplaceableIconFromPack(se.event.icon, providersBackstage.icons)]);\n              });\n            }),\n            run$1(mousedown(), (button, se) => {\n              se.event.prevent();\n              emit(button, focusButtonEvent);\n            })\n          ])\n        ].concat(behaviours.getOr([])))\n      };\n    };\n    const renderFloatingToolbarButton = (spec, backstage, identifyButtons, attributes) => {\n      const sharedBackstage = backstage.shared;\n      const editorOffCell = Cell(noop);\n      const specialisation = {\n        toolbarButtonBehaviours: [],\n        getApi: getButtonApi,\n        onSetup: spec.onSetup\n      };\n      const behaviours = [config('toolbar-group-button-events', [\n          onControlAttached(specialisation, editorOffCell),\n          onControlDetached(specialisation, editorOffCell)\n        ])];\n      return FloatingToolbarButton.sketch({\n        lazySink: sharedBackstage.getSink,\n        fetch: () => Future.nu(resolve => {\n          resolve(map$2(identifyButtons(spec.items), renderToolbarGroup));\n        }),\n        markers: { toggledClass: 'tox-tbtn--enabled' },\n        parts: {\n          button: renderCommonStructure(spec.icon, spec.text, spec.tooltip, Optional.some(behaviours), sharedBackstage.providers),\n          toolbar: {\n            dom: {\n              tag: 'div',\n              classes: ['tox-toolbar__overflow'],\n              attributes\n            }\n          }\n        }\n      });\n    };\n    const renderCommonToolbarButton = (spec, specialisation, providersBackstage) => {\n      var _d;\n      const editorOffCell = Cell(noop);\n      const structure = renderCommonStructure(spec.icon, spec.text, spec.tooltip, Optional.none(), providersBackstage);\n      return Button.sketch({\n        dom: structure.dom,\n        components: structure.components,\n        eventOrder: toolbarButtonEventOrder,\n        buttonBehaviours: {\n          ...derive$1([\n            config('toolbar-button-events', [\n              onToolbarButtonExecute({\n                onAction: spec.onAction,\n                getApi: specialisation.getApi\n              }),\n              onControlAttached(specialisation, editorOffCell),\n              onControlDetached(specialisation, editorOffCell)\n            ]),\n            DisablingConfigs.toolbarButton(() => !spec.enabled || providersBackstage.isDisabled()),\n            receivingConfig()\n          ].concat(specialisation.toolbarButtonBehaviours)),\n          [commonButtonDisplayEvent]: (_d = structure.buttonBehaviours) === null || _d === void 0 ? void 0 : _d[commonButtonDisplayEvent]\n        }\n      });\n    };\n    const renderToolbarButton = (spec, providersBackstage) => renderToolbarButtonWith(spec, providersBackstage, []);\n    const renderToolbarButtonWith = (spec, providersBackstage, bonusEvents) => renderCommonToolbarButton(spec, {\n      toolbarButtonBehaviours: bonusEvents.length > 0 ? [config('toolbarButtonWith', bonusEvents)] : [],\n      getApi: getButtonApi,\n      onSetup: spec.onSetup\n    }, providersBackstage);\n    const renderToolbarToggleButton = (spec, providersBackstage) => renderToolbarToggleButtonWith(spec, providersBackstage, []);\n    const renderToolbarToggleButtonWith = (spec, providersBackstage, bonusEvents) => renderCommonToolbarButton(spec, {\n      toolbarButtonBehaviours: [\n        Replacing.config({}),\n        Toggling.config({\n          toggleClass: 'tox-tbtn--enabled',\n          aria: { mode: 'pressed' },\n          toggleOnExecute: false\n        })\n      ].concat(bonusEvents.length > 0 ? [config('toolbarToggleButtonWith', bonusEvents)] : []),\n      getApi: getToggleApi,\n      onSetup: spec.onSetup\n    }, providersBackstage);\n    const fetchChoices = (getApi, spec, providersBackstage) => comp => Future.nu(callback => spec.fetch(callback)).map(items => Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'), items, value => {\n      spec.onItemAction(getApi(comp), value);\n    }, spec.columns, spec.presets, ItemResponse$1.CLOSE_ON_EXECUTE, spec.select.getOr(never), providersBackstage), {\n      movement: deriveMenuMovement(spec.columns, spec.presets),\n      menuBehaviours: SimpleBehaviours.unnamedEvents(spec.columns !== 'auto' ? [] : [runOnAttached((comp, _se) => {\n          detectSize(comp, 4, classForPreset(spec.presets)).each(({numRows, numColumns}) => {\n            Keying.setGridSize(comp, numRows, numColumns);\n          });\n        })])\n    }))));\n    const renderSplitButton = (spec, sharedBackstage) => {\n      const getApi = comp => ({\n        isEnabled: () => !Disabling.isDisabled(comp),\n        setEnabled: state => Disabling.set(comp, !state),\n        setIconFill: (id, value) => {\n          descendant(comp.element, `svg path[class=\"${ id }\"], rect[class=\"${ id }\"]`).each(underlinePath => {\n            set$9(underlinePath, 'fill', value);\n          });\n        },\n        setActive: state => {\n          set$9(comp.element, 'aria-pressed', state);\n          descendant(comp.element, 'span').each(button => {\n            comp.getSystem().getByDom(button).each(buttonComp => Toggling.set(buttonComp, state));\n          });\n        },\n        isActive: () => descendant(comp.element, 'span').exists(button => comp.getSystem().getByDom(button).exists(Toggling.isOn)),\n        setText: text => descendant(comp.element, 'span').each(button => comp.getSystem().getByDom(button).each(buttonComp => emitWith(buttonComp, updateMenuText, { text }))),\n        setIcon: icon => descendant(comp.element, 'span').each(button => comp.getSystem().getByDom(button).each(buttonComp => emitWith(buttonComp, updateMenuIcon, { icon }))),\n        setTooltip: tooltip => {\n          const translatedTooltip = sharedBackstage.providers.translate(tooltip);\n          setAll$1(comp.element, {\n            'aria-label': translatedTooltip,\n            'title': translatedTooltip\n          });\n        }\n      });\n      const editorOffCell = Cell(noop);\n      const specialisation = {\n        getApi,\n        onSetup: spec.onSetup\n      };\n      return SplitDropdown.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-split-button'],\n          attributes: {\n            'aria-pressed': false,\n            ...getTooltipAttributes(spec.tooltip, sharedBackstage.providers)\n          }\n        },\n        onExecute: button => {\n          const api = getApi(button);\n          if (api.isEnabled()) {\n            spec.onAction(api);\n          }\n        },\n        onItemExecute: (_a, _b, _c) => {\n        },\n        splitDropdownBehaviours: derive$1([\n          DisablingConfigs.splitButton(sharedBackstage.providers.isDisabled),\n          receivingConfig(),\n          config('split-dropdown-events', [\n            runOnAttached((comp, _se) => forceInitialSize(comp)),\n            run$1(focusButtonEvent, Focusing.focus),\n            onControlAttached(specialisation, editorOffCell),\n            onControlDetached(specialisation, editorOffCell)\n          ]),\n          Unselecting.config({})\n        ]),\n        eventOrder: {\n          [attachedToDom()]: [\n            'alloy.base.behaviour',\n            'split-dropdown-events'\n          ]\n        },\n        toggleClass: 'tox-tbtn--enabled',\n        lazySink: sharedBackstage.getSink,\n        fetch: fetchChoices(getApi, spec, sharedBackstage.providers),\n        parts: { menu: part(false, spec.columns, spec.presets) },\n        components: [\n          SplitDropdown.parts.button(renderCommonStructure(spec.icon, spec.text, Optional.none(), Optional.some([Toggling.config({\n              toggleClass: 'tox-tbtn--enabled',\n              toggleOnExecute: false\n            })]), sharedBackstage.providers)),\n          SplitDropdown.parts.arrow({\n            dom: {\n              tag: 'button',\n              classes: [\n                'tox-tbtn',\n                'tox-split-button__chevron'\n              ],\n              innerHtml: get$2('chevron-down', sharedBackstage.providers.icons)\n            },\n            buttonBehaviours: derive$1([\n              DisablingConfigs.splitButton(sharedBackstage.providers.isDisabled),\n              receivingConfig(),\n              addFocusableBehaviour()\n            ])\n          }),\n          SplitDropdown.parts['aria-descriptor']({ text: sharedBackstage.providers.translate('To open the popup, press Shift+Enter') })\n        ]\n      });\n    };\n\n    const defaultToolbar = [\n      {\n        name: 'history',\n        items: [\n          'undo',\n          'redo'\n        ]\n      },\n      {\n        name: 'ai',\n        items: [\n          'aidialog',\n          'aishortcuts'\n        ]\n      },\n      {\n        name: 'styles',\n        items: ['styles']\n      },\n      {\n        name: 'formatting',\n        items: [\n          'bold',\n          'italic'\n        ]\n      },\n      {\n        name: 'alignment',\n        items: [\n          'alignleft',\n          'aligncenter',\n          'alignright',\n          'alignjustify'\n        ]\n      },\n      {\n        name: 'indentation',\n        items: [\n          'outdent',\n          'indent'\n        ]\n      },\n      {\n        name: 'permanent pen',\n        items: ['permanentpen']\n      },\n      {\n        name: 'comments',\n        items: ['addcomment']\n      }\n    ];\n    const renderFromBridge = (bridgeBuilder, render) => (spec, backstage, editor) => {\n      const internal = bridgeBuilder(spec).mapError(errInfo => formatError(errInfo)).getOrDie();\n      return render(internal, backstage, editor);\n    };\n    const types = {\n      button: renderFromBridge(createToolbarButton, (s, backstage) => renderToolbarButton(s, backstage.shared.providers)),\n      togglebutton: renderFromBridge(createToggleButton, (s, backstage) => renderToolbarToggleButton(s, backstage.shared.providers)),\n      menubutton: renderFromBridge(createMenuButton, (s, backstage) => renderMenuButton(s, 'tox-tbtn', backstage, Optional.none(), false)),\n      splitbutton: renderFromBridge(createSplitButton, (s, backstage) => renderSplitButton(s, backstage.shared)),\n      grouptoolbarbutton: renderFromBridge(createGroupToolbarButton, (s, backstage, editor) => {\n        const buttons = editor.ui.registry.getAll().buttons;\n        const identify = toolbar => identifyButtons(editor, {\n          buttons,\n          toolbar,\n          allowToolbarGroups: false\n        }, backstage, Optional.none());\n        const attributes = { [Attribute]: backstage.shared.header.isPositionedAtTop() ? AttributeValue.TopToBottom : AttributeValue.BottomToTop };\n        switch (getToolbarMode(editor)) {\n        case ToolbarMode$1.floating:\n          return renderFloatingToolbarButton(s, backstage, identify, attributes);\n        default:\n          throw new Error('Toolbar groups are only supported when using floating toolbar mode');\n        }\n      })\n    };\n    const extractFrom = (spec, backstage, editor) => get$g(types, spec.type).fold(() => {\n      console.error('skipping button defined by', spec);\n      return Optional.none();\n    }, render => Optional.some(render(spec, backstage, editor)));\n    const bespokeButtons = {\n      styles: createStylesButton,\n      fontsize: createFontSizeButton,\n      fontsizeinput: createFontSizeInputButton,\n      fontfamily: createFontFamilyButton,\n      blocks: createBlocksButton,\n      align: createAlignButton\n    };\n    const removeUnusedDefaults = buttons => {\n      const filteredItemGroups = map$2(defaultToolbar, group => {\n        const items = filter$2(group.items, subItem => has$2(buttons, subItem) || has$2(bespokeButtons, subItem));\n        return {\n          name: group.name,\n          items\n        };\n      });\n      return filter$2(filteredItemGroups, group => group.items.length > 0);\n    };\n    const convertStringToolbar = strToolbar => {\n      const groupsStrings = strToolbar.split('|');\n      return map$2(groupsStrings, g => ({ items: g.trim().split(' ') }));\n    };\n    const isToolbarGroupSettingArray = toolbar => isArrayOf(toolbar, t => has$2(t, 'name') && has$2(t, 'items'));\n    const createToolbar = toolbarConfig => {\n      const toolbar = toolbarConfig.toolbar;\n      const buttons = toolbarConfig.buttons;\n      if (toolbar === false) {\n        return [];\n      } else if (toolbar === undefined || toolbar === true) {\n        return removeUnusedDefaults(buttons);\n      } else if (isString(toolbar)) {\n        return convertStringToolbar(toolbar);\n      } else if (isToolbarGroupSettingArray(toolbar)) {\n        return toolbar;\n      } else {\n        console.error('Toolbar type should be string, string[], boolean or ToolbarGroup[]');\n        return [];\n      }\n    };\n    const lookupButton = (editor, buttons, toolbarItem, allowToolbarGroups, backstage, prefixes) => get$g(buttons, toolbarItem.toLowerCase()).orThunk(() => prefixes.bind(ps => findMap(ps, prefix => get$g(buttons, prefix + toolbarItem.toLowerCase())))).fold(() => get$g(bespokeButtons, toolbarItem.toLowerCase()).map(r => r(editor, backstage)), spec => {\n      if (spec.type === 'grouptoolbarbutton' && !allowToolbarGroups) {\n        console.warn(`Ignoring the '${ toolbarItem }' toolbar button. Group toolbar buttons are only supported when using floating toolbar mode and cannot be nested.`);\n        return Optional.none();\n      } else {\n        return extractFrom(spec, backstage, editor);\n      }\n    });\n    const identifyButtons = (editor, toolbarConfig, backstage, prefixes) => {\n      const toolbarGroups = createToolbar(toolbarConfig);\n      const groups = map$2(toolbarGroups, group => {\n        const items = bind$3(group.items, toolbarItem => {\n          return toolbarItem.trim().length === 0 ? [] : lookupButton(editor, toolbarConfig.buttons, toolbarItem, toolbarConfig.allowToolbarGroups, backstage, prefixes).toArray();\n        });\n        return {\n          title: Optional.from(editor.translate(group.name)),\n          items\n        };\n      });\n      return filter$2(groups, group => group.items.length > 0);\n    };\n\n    const setToolbar = (editor, uiRefs, rawUiConfig, backstage) => {\n      const outerContainer = uiRefs.mainUi.outerContainer;\n      const toolbarConfig = rawUiConfig.toolbar;\n      const toolbarButtonsConfig = rawUiConfig.buttons;\n      if (isArrayOf(toolbarConfig, isString)) {\n        const toolbars = toolbarConfig.map(t => {\n          const config = {\n            toolbar: t,\n            buttons: toolbarButtonsConfig,\n            allowToolbarGroups: rawUiConfig.allowToolbarGroups\n          };\n          return identifyButtons(editor, config, backstage, Optional.none());\n        });\n        OuterContainer.setToolbars(outerContainer, toolbars);\n      } else {\n        OuterContainer.setToolbar(outerContainer, identifyButtons(editor, rawUiConfig, backstage, Optional.none()));\n      }\n    };\n\n    const detection = detect$2();\n    const isiOS12 = detection.os.isiOS() && detection.os.version.major <= 12;\n    const setupEvents$1 = (editor, uiRefs) => {\n      const {uiMotherships} = uiRefs;\n      const dom = editor.dom;\n      let contentWindow = editor.getWin();\n      const initialDocEle = editor.getDoc().documentElement;\n      const lastWindowDimensions = Cell(SugarPosition(contentWindow.innerWidth, contentWindow.innerHeight));\n      const lastDocumentDimensions = Cell(SugarPosition(initialDocEle.offsetWidth, initialDocEle.offsetHeight));\n      const resizeWindow = () => {\n        const outer = lastWindowDimensions.get();\n        if (outer.left !== contentWindow.innerWidth || outer.top !== contentWindow.innerHeight) {\n          lastWindowDimensions.set(SugarPosition(contentWindow.innerWidth, contentWindow.innerHeight));\n          fireResizeContent(editor);\n        }\n      };\n      const resizeDocument = () => {\n        const docEle = editor.getDoc().documentElement;\n        const inner = lastDocumentDimensions.get();\n        if (inner.left !== docEle.offsetWidth || inner.top !== docEle.offsetHeight) {\n          lastDocumentDimensions.set(SugarPosition(docEle.offsetWidth, docEle.offsetHeight));\n          fireResizeContent(editor);\n        }\n      };\n      const scroll = e => {\n        fireScrollContent(editor, e);\n      };\n      dom.bind(contentWindow, 'resize', resizeWindow);\n      dom.bind(contentWindow, 'scroll', scroll);\n      const elementLoad = capture(SugarElement.fromDom(editor.getBody()), 'load', resizeDocument);\n      editor.on('hide', () => {\n        each$1(uiMotherships, m => {\n          set$8(m.element, 'display', 'none');\n        });\n      });\n      editor.on('show', () => {\n        each$1(uiMotherships, m => {\n          remove$6(m.element, 'display');\n        });\n      });\n      editor.on('NodeChange', resizeDocument);\n      editor.on('remove', () => {\n        elementLoad.unbind();\n        dom.unbind(contentWindow, 'resize', resizeWindow);\n        dom.unbind(contentWindow, 'scroll', scroll);\n        contentWindow = null;\n      });\n    };\n    const attachUiMotherships = (editor, uiRoot, uiRefs) => {\n      if (isSplitUiMode(editor)) {\n        attachSystemAfter(uiRefs.mainUi.mothership.element, uiRefs.popupUi.mothership);\n      }\n      attachSystem(uiRoot, uiRefs.dialogUi.mothership);\n    };\n    const render$1 = (editor, uiRefs, rawUiConfig, backstage, args) => {\n      const {mainUi, uiMotherships} = uiRefs;\n      const lastToolbarWidth = Cell(0);\n      const outerContainer = mainUi.outerContainer;\n      iframe(editor);\n      const eTargetNode = SugarElement.fromDom(args.targetNode);\n      const uiRoot = getContentContainer(getRootNode(eTargetNode));\n      attachSystemAfter(eTargetNode, mainUi.mothership);\n      attachUiMotherships(editor, uiRoot, uiRefs);\n      editor.on('SkinLoaded', () => {\n        OuterContainer.setSidebar(outerContainer, rawUiConfig.sidebar, getSidebarShow(editor));\n        setToolbar(editor, uiRefs, rawUiConfig, backstage);\n        lastToolbarWidth.set(editor.getWin().innerWidth);\n        OuterContainer.setMenubar(outerContainer, identifyMenus(editor, rawUiConfig));\n        OuterContainer.setViews(outerContainer, rawUiConfig.views);\n        setupEvents$1(editor, uiRefs);\n      });\n      const socket = OuterContainer.getSocket(outerContainer).getOrDie('Could not find expected socket element');\n      if (isiOS12) {\n        setAll(socket.element, {\n          'overflow': 'scroll',\n          '-webkit-overflow-scrolling': 'touch'\n        });\n        const limit = first(() => {\n          editor.dispatch('ScrollContent');\n        }, 20);\n        const unbinder = bind(socket.element, 'scroll', limit.throttle);\n        editor.on('remove', unbinder.unbind);\n      }\n      setupReadonlyModeSwitch(editor, uiRefs);\n      editor.addCommand('ToggleSidebar', (_ui, value) => {\n        OuterContainer.toggleSidebar(outerContainer, value);\n        editor.dispatch('ToggleSidebar');\n      });\n      editor.addQueryValueHandler('ToggleSidebar', () => {\n        var _a;\n        return (_a = OuterContainer.whichSidebar(outerContainer)) !== null && _a !== void 0 ? _a : '';\n      });\n      editor.addCommand('ToggleView', (_ui, value) => {\n        if (OuterContainer.toggleView(outerContainer, value)) {\n          const target = outerContainer.element;\n          mainUi.mothership.broadcastOn([dismissPopups()], { target });\n          each$1(uiMotherships, m => {\n            m.broadcastOn([dismissPopups()], { target });\n          });\n          if (isNull(OuterContainer.whichView(outerContainer))) {\n            editor.focus();\n            editor.nodeChanged();\n            OuterContainer.refreshToolbar(outerContainer);\n          }\n        }\n      });\n      editor.addQueryValueHandler('ToggleView', () => {\n        var _a;\n        return (_a = OuterContainer.whichView(outerContainer)) !== null && _a !== void 0 ? _a : '';\n      });\n      const toolbarMode = getToolbarMode(editor);\n      const refreshDrawer = () => {\n        OuterContainer.refreshToolbar(uiRefs.mainUi.outerContainer);\n      };\n      if (toolbarMode === ToolbarMode$1.sliding || toolbarMode === ToolbarMode$1.floating) {\n        editor.on('ResizeWindow ResizeEditor ResizeContent', () => {\n          const width = editor.getWin().innerWidth;\n          if (width !== lastToolbarWidth.get()) {\n            refreshDrawer();\n            lastToolbarWidth.set(width);\n          }\n        });\n      }\n      const api = {\n        setEnabled: state => {\n          broadcastReadonly(uiRefs, !state);\n        },\n        isEnabled: () => !Disabling.isDisabled(outerContainer)\n      };\n      return {\n        iframeContainer: socket.element.dom,\n        editorContainer: outerContainer.element.dom,\n        api\n      };\n    };\n\n    var Iframe = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        render: render$1\n    });\n\n    const parseToInt = val => {\n      const re = /^[0-9\\.]+(|px)$/i;\n      if (re.test('' + val)) {\n        return Optional.some(parseInt('' + val, 10));\n      }\n      return Optional.none();\n    };\n    const numToPx = val => isNumber(val) ? val + 'px' : val;\n    const calcCappedSize = (size, minSize, maxSize) => {\n      const minOverride = minSize.filter(min => size < min);\n      const maxOverride = maxSize.filter(max => size > max);\n      return minOverride.or(maxOverride).getOr(size);\n    };\n\n    const getHeight = editor => {\n      const baseHeight = getHeightOption(editor);\n      const minHeight = getMinHeightOption(editor);\n      const maxHeight = getMaxHeightOption(editor);\n      return parseToInt(baseHeight).map(height => calcCappedSize(height, minHeight, maxHeight));\n    };\n    const getHeightWithFallback = editor => {\n      const height = getHeight(editor);\n      return height.getOr(getHeightOption(editor));\n    };\n    const getWidth = editor => {\n      const baseWidth = getWidthOption(editor);\n      const minWidth = getMinWidthOption(editor);\n      const maxWidth = getMaxWidthOption(editor);\n      return parseToInt(baseWidth).map(width => calcCappedSize(width, minWidth, maxWidth));\n    };\n    const getWidthWithFallback = editor => {\n      const width = getWidth(editor);\n      return width.getOr(getWidthOption(editor));\n    };\n\n    const {ToolbarLocation, ToolbarMode} = Options;\n    const maximumDistanceToEdge = 40;\n    const InlineHeader = (editor, targetElm, uiRefs, backstage, floatContainer) => {\n      const {mainUi, uiMotherships} = uiRefs;\n      const DOM = global$7.DOM;\n      const useFixedToolbarContainer = useFixedContainer(editor);\n      const isSticky = isStickyToolbar(editor);\n      const editorMaxWidthOpt = getMaxWidthOption(editor).or(getWidth(editor));\n      const headerBackstage = backstage.shared.header;\n      const isPositionedAtTop = headerBackstage.isPositionedAtTop;\n      const toolbarMode = getToolbarMode(editor);\n      const isSplitToolbar = toolbarMode === ToolbarMode.sliding || toolbarMode === ToolbarMode.floating;\n      const visible = Cell(false);\n      const isVisible = () => visible.get() && !editor.removed;\n      const calcToolbarOffset = toolbar => isSplitToolbar ? toolbar.fold(constant$1(0), tbar => tbar.components().length > 1 ? get$d(tbar.components()[1].element) : 0) : 0;\n      const calcMode = container => {\n        switch (getToolbarLocation(editor)) {\n        case ToolbarLocation.auto:\n          const toolbar = OuterContainer.getToolbar(mainUi.outerContainer);\n          const offset = calcToolbarOffset(toolbar);\n          const toolbarHeight = get$d(container.element) - offset;\n          const targetBounds = box$1(targetElm);\n          const roomAtTop = targetBounds.y > toolbarHeight;\n          if (roomAtTop) {\n            return 'top';\n          } else {\n            const doc = documentElement(targetElm);\n            const docHeight = Math.max(doc.dom.scrollHeight, get$d(doc));\n            const roomAtBottom = targetBounds.bottom < docHeight - toolbarHeight;\n            if (roomAtBottom) {\n              return 'bottom';\n            } else {\n              const winBounds = win();\n              const isRoomAtBottomViewport = winBounds.bottom < targetBounds.bottom - toolbarHeight;\n              return isRoomAtBottomViewport ? 'bottom' : 'top';\n            }\n          }\n        case ToolbarLocation.bottom:\n          return 'bottom';\n        case ToolbarLocation.top:\n        default:\n          return 'top';\n        }\n      };\n      const setupMode = mode => {\n        floatContainer.on(container => {\n          Docking.setModes(container, [mode]);\n          headerBackstage.setDockingMode(mode);\n          const verticalDir = isPositionedAtTop() ? AttributeValue.TopToBottom : AttributeValue.BottomToTop;\n          set$9(container.element, Attribute, verticalDir);\n        });\n      };\n      const updateChromeWidth = () => {\n        floatContainer.on(container => {\n          const maxWidth = editorMaxWidthOpt.getOrThunk(() => {\n            const bodyMargin = parseToInt(get$e(body(), 'margin-left')).getOr(0);\n            return get$c(body()) - absolute$3(targetElm).left + bodyMargin;\n          });\n          set$8(container.element, 'max-width', maxWidth + 'px');\n        });\n      };\n      const updateChromePosition = optToolbarWidth => {\n        floatContainer.on(container => {\n          const toolbar = OuterContainer.getToolbar(mainUi.outerContainer);\n          const offset = calcToolbarOffset(toolbar);\n          const targetBounds = box$1(targetElm);\n          const {top, left} = getOffsetParent$1(editor, mainUi.outerContainer.element).fold(() => {\n            return {\n              top: isPositionedAtTop() ? Math.max(targetBounds.y - get$d(container.element) + offset, 0) : targetBounds.bottom,\n              left: targetBounds.x\n            };\n          }, offsetParent => {\n            var _a;\n            const offsetBox = box$1(offsetParent);\n            const scrollDelta = (_a = offsetParent.dom.scrollTop) !== null && _a !== void 0 ? _a : 0;\n            const isOffsetParentBody = eq(offsetParent, body());\n            const topValue = isOffsetParentBody ? Math.max(targetBounds.y - get$d(container.element) + offset, 0) : targetBounds.y - offsetBox.y + scrollDelta - get$d(container.element) + offset;\n            return {\n              top: isPositionedAtTop() ? topValue : targetBounds.bottom,\n              left: isOffsetParentBody ? targetBounds.x : targetBounds.x - offsetBox.x\n            };\n          });\n          const baseProperties = {\n            position: 'absolute',\n            left: Math.round(left) + 'px',\n            top: Math.round(top) + 'px'\n          };\n          const widthProperties = optToolbarWidth.map(toolbarWidth => {\n            const scroll = get$b();\n            const minimumToolbarWidth = 150;\n            const availableWidth = window.innerWidth - (left - scroll.left);\n            const width = Math.max(Math.min(toolbarWidth, availableWidth), minimumToolbarWidth);\n            return { width: width + 'px' };\n          }).getOr({});\n          setAll(mainUi.outerContainer.element, {\n            ...baseProperties,\n            ...widthProperties\n          });\n        });\n      };\n      const getOffsetParent$1 = (editor, element) => isSplitUiMode(editor) ? getOffsetParent(element) : Optional.none();\n      const repositionPopups$1 = () => {\n        each$1(uiMotherships, m => {\n          m.broadcastOn([repositionPopups()], {});\n        });\n      };\n      const restoreAndGetCompleteOuterContainerWidth = () => {\n        if (!useFixedToolbarContainer) {\n          const toolbarCurrentRightsidePosition = absolute$3(mainUi.outerContainer.element).left + getOuter$1(mainUi.outerContainer.element);\n          if (toolbarCurrentRightsidePosition >= window.innerWidth - maximumDistanceToEdge || getRaw(mainUi.outerContainer.element, 'width').isSome()) {\n            set$8(mainUi.outerContainer.element, 'position', 'absolute');\n            set$8(mainUi.outerContainer.element, 'left', '0px');\n            remove$6(mainUi.outerContainer.element, 'width');\n            const w = getOuter$1(mainUi.outerContainer.element);\n            return Optional.some(w);\n          } else {\n            return Optional.none();\n          }\n        } else {\n          return Optional.none();\n        }\n      };\n      const update = stickyAction => {\n        if (!isVisible()) {\n          return;\n        }\n        if (!useFixedToolbarContainer) {\n          updateChromeWidth();\n        }\n        const optToolbarWidth = useFixedToolbarContainer ? Optional.none() : restoreAndGetCompleteOuterContainerWidth();\n        if (isSplitToolbar) {\n          OuterContainer.refreshToolbar(mainUi.outerContainer);\n        }\n        if (!useFixedToolbarContainer) {\n          updateChromePosition(optToolbarWidth);\n        }\n        if (isSticky) {\n          floatContainer.on(stickyAction);\n        }\n        repositionPopups$1();\n      };\n      const doUpdateMode = () => {\n        if (useFixedToolbarContainer || !isSticky || !isVisible()) {\n          return false;\n        }\n        return floatContainer.get().exists(fc => {\n          const currentMode = headerBackstage.getDockingMode();\n          const newMode = calcMode(fc);\n          if (newMode !== currentMode) {\n            setupMode(newMode);\n            return true;\n          } else {\n            return false;\n          }\n        });\n      };\n      const show = () => {\n        visible.set(true);\n        set$8(mainUi.outerContainer.element, 'display', 'flex');\n        DOM.addClass(editor.getBody(), 'mce-edit-focus');\n        each$1(uiMotherships, m => {\n          remove$6(m.element, 'display');\n        });\n        doUpdateMode();\n        if (isSplitUiMode(editor)) {\n          update(elem => Docking.isDocked(elem) ? Docking.reset(elem) : Docking.refresh(elem));\n        } else {\n          update(Docking.refresh);\n        }\n      };\n      const hide = () => {\n        visible.set(false);\n        set$8(mainUi.outerContainer.element, 'display', 'none');\n        DOM.removeClass(editor.getBody(), 'mce-edit-focus');\n        each$1(uiMotherships, m => {\n          set$8(m.element, 'display', 'none');\n        });\n      };\n      const updateMode = () => {\n        const changedMode = doUpdateMode();\n        if (changedMode) {\n          update(Docking.reset);\n        }\n      };\n      return {\n        isVisible,\n        isPositionedAtTop,\n        show,\n        hide,\n        update,\n        updateMode,\n        repositionPopups: repositionPopups$1\n      };\n    };\n\n    const getTargetPosAndBounds = (targetElm, isToolbarTop) => {\n      const bounds = box$1(targetElm);\n      return {\n        pos: isToolbarTop ? bounds.y : bounds.bottom,\n        bounds\n      };\n    };\n    const setupEvents = (editor, targetElm, ui, toolbarPersist) => {\n      const prevPosAndBounds = Cell(getTargetPosAndBounds(targetElm, ui.isPositionedAtTop()));\n      const resizeContent = e => {\n        const {pos, bounds} = getTargetPosAndBounds(targetElm, ui.isPositionedAtTop());\n        const {\n          pos: prevPos,\n          bounds: prevBounds\n        } = prevPosAndBounds.get();\n        const hasResized = bounds.height !== prevBounds.height || bounds.width !== prevBounds.width;\n        prevPosAndBounds.set({\n          pos,\n          bounds\n        });\n        if (hasResized) {\n          fireResizeContent(editor, e);\n        }\n        if (ui.isVisible()) {\n          if (prevPos !== pos) {\n            ui.update(Docking.reset);\n          } else if (hasResized) {\n            ui.updateMode();\n            ui.repositionPopups();\n          }\n        }\n      };\n      if (!toolbarPersist) {\n        editor.on('activate', ui.show);\n        editor.on('deactivate', ui.hide);\n      }\n      editor.on('SkinLoaded ResizeWindow', () => ui.update(Docking.reset));\n      editor.on('NodeChange keydown', e => {\n        requestAnimationFrame(() => resizeContent(e));\n      });\n      let lastScrollX = 0;\n      const updateUi = last(() => ui.update(Docking.refresh), 33);\n      editor.on('ScrollWindow', () => {\n        const newScrollX = get$b().left;\n        if (newScrollX !== lastScrollX) {\n          lastScrollX = newScrollX;\n          updateUi.throttle();\n        }\n        ui.updateMode();\n      });\n      if (isSplitUiMode(editor)) {\n        editor.on('ElementScroll', _args => {\n          ui.update(Docking.refresh);\n        });\n      }\n      const elementLoad = unbindable();\n      elementLoad.set(capture(SugarElement.fromDom(editor.getBody()), 'load', e => resizeContent(e.raw)));\n      editor.on('remove', () => {\n        elementLoad.clear();\n      });\n    };\n    const render = (editor, uiRefs, rawUiConfig, backstage, args) => {\n      const {mainUi} = uiRefs;\n      const floatContainer = value$2();\n      const targetElm = SugarElement.fromDom(args.targetNode);\n      const ui = InlineHeader(editor, targetElm, uiRefs, backstage, floatContainer);\n      const toolbarPersist = isToolbarPersist(editor);\n      inline(editor);\n      const render = () => {\n        if (floatContainer.isSet()) {\n          ui.show();\n          return;\n        }\n        floatContainer.set(OuterContainer.getHeader(mainUi.outerContainer).getOrDie());\n        const uiContainer = getUiContainer(editor);\n        if (isSplitUiMode(editor)) {\n          attachSystemAfter(targetElm, mainUi.mothership);\n          attachSystemAfter(targetElm, uiRefs.popupUi.mothership);\n        } else {\n          attachSystem(uiContainer, mainUi.mothership);\n        }\n        attachSystem(uiContainer, uiRefs.dialogUi.mothership);\n        setToolbar(editor, uiRefs, rawUiConfig, backstage);\n        OuterContainer.setMenubar(mainUi.outerContainer, identifyMenus(editor, rawUiConfig));\n        ui.show();\n        setupEvents(editor, targetElm, ui, toolbarPersist);\n        editor.nodeChanged();\n      };\n      editor.on('show', render);\n      editor.on('hide', ui.hide);\n      if (!toolbarPersist) {\n        editor.on('focus', render);\n        editor.on('blur', ui.hide);\n      }\n      editor.on('init', () => {\n        if (editor.hasFocus() || toolbarPersist) {\n          render();\n        }\n      });\n      setupReadonlyModeSwitch(editor, uiRefs);\n      const api = {\n        show: render,\n        hide: ui.hide,\n        setEnabled: state => {\n          broadcastReadonly(uiRefs, !state);\n        },\n        isEnabled: () => !Disabling.isDisabled(mainUi.outerContainer)\n      };\n      return {\n        editorContainer: mainUi.outerContainer.element.dom,\n        api\n      };\n    };\n\n    var Inline = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        render: render\n    });\n\n    const LazyUiReferences = () => {\n      const dialogUi = value$2();\n      const popupUi = value$2();\n      const mainUi = value$2();\n      const lazyGetInOuterOrDie = (label, f) => () => mainUi.get().bind(oc => f(oc.outerContainer)).getOrDie(`Could not find ${ label } element in OuterContainer`);\n      const getUiMotherships = () => {\n        const optDialogMothership = dialogUi.get().map(ui => ui.mothership);\n        const optPopupMothership = popupUi.get().map(ui => ui.mothership);\n        return optDialogMothership.fold(() => optPopupMothership.toArray(), dm => optPopupMothership.fold(() => [dm], pm => eq(dm.element, pm.element) ? [dm] : [\n          dm,\n          pm\n        ]));\n      };\n      return {\n        dialogUi,\n        popupUi,\n        mainUi,\n        getUiMotherships,\n        lazyGetInOuterOrDie\n      };\n    };\n\n    const showContextToolbarEvent = 'contexttoolbar-show';\n    const hideContextToolbarEvent = 'contexttoolbar-hide';\n\n    const getFormApi = input => ({\n      hide: () => emit(input, sandboxClose()),\n      getValue: () => Representing.getValue(input)\n    });\n    const runOnExecute = (memInput, original) => run$1(internalToolbarButtonExecute, (comp, se) => {\n      const input = memInput.get(comp);\n      const formApi = getFormApi(input);\n      original.onAction(formApi, se.event.buttonApi);\n    });\n    const renderContextButton = (memInput, button, providers) => {\n      const {primary, ...rest} = button.original;\n      const bridged = getOrDie(createToolbarButton({\n        ...rest,\n        type: 'button',\n        onAction: noop\n      }));\n      return renderToolbarButtonWith(bridged, providers, [runOnExecute(memInput, button)]);\n    };\n    const renderContextToggleButton = (memInput, button, providers) => {\n      const {primary, ...rest} = button.original;\n      const bridged = getOrDie(createToggleButton({\n        ...rest,\n        type: 'togglebutton',\n        onAction: noop\n      }));\n      return renderToolbarToggleButtonWith(bridged, providers, [runOnExecute(memInput, button)]);\n    };\n    const isToggleButton = button => button.type === 'contextformtogglebutton';\n    const generateOne = (memInput, button, providersBackstage) => {\n      if (isToggleButton(button)) {\n        return renderContextToggleButton(memInput, button, providersBackstage);\n      } else {\n        return renderContextButton(memInput, button, providersBackstage);\n      }\n    };\n    const generate = (memInput, buttons, providersBackstage) => {\n      const mementos = map$2(buttons, button => record(generateOne(memInput, button, providersBackstage)));\n      const asSpecs = () => map$2(mementos, mem => mem.asSpec());\n      const findPrimary = compInSystem => findMap(buttons, (button, i) => {\n        if (button.primary) {\n          return Optional.from(mementos[i]).bind(mem => mem.getOpt(compInSystem)).filter(not(Disabling.isDisabled));\n        } else {\n          return Optional.none();\n        }\n      });\n      return {\n        asSpecs,\n        findPrimary\n      };\n    };\n\n    const buildInitGroups = (ctx, providers) => {\n      const inputAttributes = ctx.label.fold(() => ({}), label => ({ 'aria-label': label }));\n      const memInput = record(Input.sketch({\n        inputClasses: [\n          'tox-toolbar-textfield',\n          'tox-toolbar-nav-js'\n        ],\n        data: ctx.initValue(),\n        inputAttributes,\n        selectOnFocus: true,\n        inputBehaviours: derive$1([Keying.config({\n            mode: 'special',\n            onEnter: input => commands.findPrimary(input).map(primary => {\n              emitExecute(primary);\n              return true;\n            }),\n            onLeft: (comp, se) => {\n              se.cut();\n              return Optional.none();\n            },\n            onRight: (comp, se) => {\n              se.cut();\n              return Optional.none();\n            }\n          })])\n      }));\n      const commands = generate(memInput, ctx.commands, providers);\n      return [\n        {\n          title: Optional.none(),\n          items: [memInput.asSpec()]\n        },\n        {\n          title: Optional.none(),\n          items: commands.asSpecs()\n        }\n      ];\n    };\n    const renderContextForm = (toolbarType, ctx, providers) => renderToolbar({\n      type: toolbarType,\n      uid: generate$6('context-toolbar'),\n      initGroups: buildInitGroups(ctx, providers),\n      onEscape: Optional.none,\n      cyclicKeying: true,\n      providers\n    });\n    const ContextForm = {\n      renderContextForm,\n      buildInitGroups\n    };\n\n    const isVerticalOverlap = (a, b, threshold) => b.bottom - a.y >= threshold && a.bottom - b.y >= threshold;\n    const getRangeRect = rng => {\n      const rect = rng.getBoundingClientRect();\n      if (rect.height <= 0 && rect.width <= 0) {\n        const leaf$1 = leaf(SugarElement.fromDom(rng.startContainer), rng.startOffset).element;\n        const elm = isText(leaf$1) ? parent(leaf$1) : Optional.some(leaf$1);\n        return elm.filter(isElement$1).map(e => e.dom.getBoundingClientRect()).getOr(rect);\n      } else {\n        return rect;\n      }\n    };\n    const getSelectionBounds = editor => {\n      const rng = editor.selection.getRng();\n      const rect = getRangeRect(rng);\n      if (editor.inline) {\n        const scroll = get$b();\n        return bounds(scroll.left + rect.left, scroll.top + rect.top, rect.width, rect.height);\n      } else {\n        const bodyPos = absolute$2(SugarElement.fromDom(editor.getBody()));\n        return bounds(bodyPos.x + rect.left, bodyPos.y + rect.top, rect.width, rect.height);\n      }\n    };\n    const getAnchorElementBounds = (editor, lastElement) => lastElement.filter(elem => inBody(elem) && isHTMLElement(elem)).map(absolute$2).getOrThunk(() => getSelectionBounds(editor));\n    const getHorizontalBounds = (contentAreaBox, viewportBounds, margin) => {\n      const x = Math.max(contentAreaBox.x + margin, viewportBounds.x);\n      const right = Math.min(contentAreaBox.right - margin, viewportBounds.right);\n      return {\n        x,\n        width: right - x\n      };\n    };\n    const getVerticalBounds = (editor, contentAreaBox, viewportBounds, isToolbarLocationTop, toolbarType, margin) => {\n      const container = SugarElement.fromDom(editor.getContainer());\n      const header = descendant(container, '.tox-editor-header').getOr(container);\n      const headerBox = box$1(header);\n      const isToolbarBelowContentArea = headerBox.y >= contentAreaBox.bottom;\n      const isToolbarAbove = isToolbarLocationTop && !isToolbarBelowContentArea;\n      if (editor.inline && isToolbarAbove) {\n        return {\n          y: Math.max(headerBox.bottom + margin, viewportBounds.y),\n          bottom: viewportBounds.bottom\n        };\n      }\n      if (editor.inline && !isToolbarAbove) {\n        return {\n          y: viewportBounds.y,\n          bottom: Math.min(headerBox.y - margin, viewportBounds.bottom)\n        };\n      }\n      const containerBounds = toolbarType === 'line' ? box$1(container) : contentAreaBox;\n      if (isToolbarAbove) {\n        return {\n          y: Math.max(headerBox.bottom + margin, viewportBounds.y),\n          bottom: Math.min(containerBounds.bottom - margin, viewportBounds.bottom)\n        };\n      }\n      return {\n        y: Math.max(containerBounds.y + margin, viewportBounds.y),\n        bottom: Math.min(headerBox.y - margin, viewportBounds.bottom)\n      };\n    };\n    const getContextToolbarBounds = (editor, sharedBackstage, toolbarType, margin = 0) => {\n      const viewportBounds = getBounds$3(window);\n      const contentAreaBox = box$1(SugarElement.fromDom(editor.getContentAreaContainer()));\n      const toolbarOrMenubarEnabled = isMenubarEnabled(editor) || isToolbarEnabled(editor) || isMultipleToolbars(editor);\n      const {x, width} = getHorizontalBounds(contentAreaBox, viewportBounds, margin);\n      if (editor.inline && !toolbarOrMenubarEnabled) {\n        return bounds(x, viewportBounds.y, width, viewportBounds.height);\n      } else {\n        const isToolbarTop = sharedBackstage.header.isPositionedAtTop();\n        const {y, bottom} = getVerticalBounds(editor, contentAreaBox, viewportBounds, isToolbarTop, toolbarType, margin);\n        return bounds(x, y, width, bottom - y);\n      }\n    };\n\n    const bubbleSize$1 = 12;\n    const bubbleAlignments$1 = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: ['tox-pop--align-left'],\n      alignRight: ['tox-pop--align-right'],\n      right: ['tox-pop--right'],\n      left: ['tox-pop--left'],\n      bottom: ['tox-pop--bottom'],\n      top: ['tox-pop--top'],\n      inset: ['tox-pop--inset']\n    };\n    const anchorOverrides = {\n      maxHeightFunction: expandable$1(),\n      maxWidthFunction: expandable()\n    };\n    const isEntireElementSelected = (editor, elem) => {\n      const rng = editor.selection.getRng();\n      const leaf$1 = leaf(SugarElement.fromDom(rng.startContainer), rng.startOffset);\n      return rng.startContainer === rng.endContainer && rng.startOffset === rng.endOffset - 1 && eq(leaf$1.element, elem);\n    };\n    const preservePosition = (elem, position, f) => {\n      const currentPosition = getRaw(elem, 'position');\n      set$8(elem, 'position', position);\n      const result = f(elem);\n      currentPosition.each(pos => set$8(elem, 'position', pos));\n      return result;\n    };\n    const shouldUseInsetLayouts = position => position === 'node';\n    const determineInsetLayout = (editor, contextbar, elem, data, bounds) => {\n      const selectionBounds = getSelectionBounds(editor);\n      const isSameAnchorElement = data.lastElement().exists(prev => eq(elem, prev));\n      if (isEntireElementSelected(editor, elem)) {\n        return isSameAnchorElement ? preserve : north;\n      } else if (isSameAnchorElement) {\n        return preservePosition(contextbar, data.getMode(), () => {\n          const isOverlapping = isVerticalOverlap(selectionBounds, box$1(contextbar), -20);\n          return isOverlapping && !data.isReposition() ? flip : preserve;\n        });\n      } else {\n        const yBounds = data.getMode() === 'fixed' ? bounds.y + get$b().top : bounds.y;\n        const contextbarHeight = get$d(contextbar) + bubbleSize$1;\n        return yBounds + contextbarHeight <= selectionBounds.y ? north : south;\n      }\n    };\n    const getAnchorSpec$2 = (editor, mobile, data, position) => {\n      const smartInsetLayout = elem => (anchor, element, bubbles, placee, bounds) => {\n        const layout = determineInsetLayout(editor, placee, elem, data, bounds);\n        const newAnchor = {\n          ...anchor,\n          y: bounds.y,\n          height: bounds.height\n        };\n        return {\n          ...layout(newAnchor, element, bubbles, placee, bounds),\n          alwaysFit: true\n        };\n      };\n      const getInsetLayouts = elem => shouldUseInsetLayouts(position) ? [smartInsetLayout(elem)] : [];\n      const desktopAnchorSpecLayouts = {\n        onLtr: elem => [\n          north$2,\n          south$2,\n          northeast$2,\n          southeast$2,\n          northwest$2,\n          southwest$2\n        ].concat(getInsetLayouts(elem)),\n        onRtl: elem => [\n          north$2,\n          south$2,\n          northwest$2,\n          southwest$2,\n          northeast$2,\n          southeast$2\n        ].concat(getInsetLayouts(elem))\n      };\n      const mobileAnchorSpecLayouts = {\n        onLtr: elem => [\n          south$2,\n          southeast$2,\n          southwest$2,\n          northeast$2,\n          northwest$2,\n          north$2\n        ].concat(getInsetLayouts(elem)),\n        onRtl: elem => [\n          south$2,\n          southwest$2,\n          southeast$2,\n          northwest$2,\n          northeast$2,\n          north$2\n        ].concat(getInsetLayouts(elem))\n      };\n      return mobile ? mobileAnchorSpecLayouts : desktopAnchorSpecLayouts;\n    };\n    const getAnchorLayout = (editor, position, isTouch, data) => {\n      if (position === 'line') {\n        return {\n          bubble: nu$5(bubbleSize$1, 0, bubbleAlignments$1),\n          layouts: {\n            onLtr: () => [east$2],\n            onRtl: () => [west$2]\n          },\n          overrides: anchorOverrides\n        };\n      } else {\n        return {\n          bubble: nu$5(0, bubbleSize$1, bubbleAlignments$1, 1 / bubbleSize$1),\n          layouts: getAnchorSpec$2(editor, isTouch, data, position),\n          overrides: anchorOverrides\n        };\n      }\n    };\n\n    const matchTargetWith = (elem, candidates) => {\n      const ctxs = filter$2(candidates, toolbarApi => toolbarApi.predicate(elem.dom));\n      const {pass, fail} = partition$3(ctxs, t => t.type === 'contexttoolbar');\n      return {\n        contextToolbars: pass,\n        contextForms: fail\n      };\n    };\n    const filterByPositionForStartNode = toolbars => {\n      if (toolbars.length <= 1) {\n        return toolbars;\n      } else {\n        const doesPositionExist = value => exists(toolbars, t => t.position === value);\n        const filterToolbarsByPosition = value => filter$2(toolbars, t => t.position === value);\n        const hasSelectionToolbars = doesPositionExist('selection');\n        const hasNodeToolbars = doesPositionExist('node');\n        if (hasSelectionToolbars || hasNodeToolbars) {\n          if (hasNodeToolbars && hasSelectionToolbars) {\n            const nodeToolbars = filterToolbarsByPosition('node');\n            const selectionToolbars = map$2(filterToolbarsByPosition('selection'), t => ({\n              ...t,\n              position: 'node'\n            }));\n            return nodeToolbars.concat(selectionToolbars);\n          } else {\n            return hasSelectionToolbars ? filterToolbarsByPosition('selection') : filterToolbarsByPosition('node');\n          }\n        } else {\n          return filterToolbarsByPosition('line');\n        }\n      }\n    };\n    const filterByPositionForAncestorNode = toolbars => {\n      if (toolbars.length <= 1) {\n        return toolbars;\n      } else {\n        const findPosition = value => find$5(toolbars, t => t.position === value);\n        const basePosition = findPosition('selection').orThunk(() => findPosition('node')).orThunk(() => findPosition('line')).map(t => t.position);\n        return basePosition.fold(() => [], pos => filter$2(toolbars, t => t.position === pos));\n      }\n    };\n    const matchStartNode = (elem, nodeCandidates, editorCandidates) => {\n      const nodeMatches = matchTargetWith(elem, nodeCandidates);\n      if (nodeMatches.contextForms.length > 0) {\n        return Optional.some({\n          elem,\n          toolbars: [nodeMatches.contextForms[0]]\n        });\n      } else {\n        const editorMatches = matchTargetWith(elem, editorCandidates);\n        if (editorMatches.contextForms.length > 0) {\n          return Optional.some({\n            elem,\n            toolbars: [editorMatches.contextForms[0]]\n          });\n        } else if (nodeMatches.contextToolbars.length > 0 || editorMatches.contextToolbars.length > 0) {\n          const toolbars = filterByPositionForStartNode(nodeMatches.contextToolbars.concat(editorMatches.contextToolbars));\n          return Optional.some({\n            elem,\n            toolbars\n          });\n        } else {\n          return Optional.none();\n        }\n      }\n    };\n    const matchAncestor = (isRoot, startNode, scopes) => {\n      if (isRoot(startNode)) {\n        return Optional.none();\n      } else {\n        return ancestor$2(startNode, ancestorElem => {\n          if (isElement$1(ancestorElem)) {\n            const {contextToolbars, contextForms} = matchTargetWith(ancestorElem, scopes.inNodeScope);\n            const toolbars = contextForms.length > 0 ? contextForms : filterByPositionForAncestorNode(contextToolbars);\n            return toolbars.length > 0 ? Optional.some({\n              elem: ancestorElem,\n              toolbars\n            }) : Optional.none();\n          } else {\n            return Optional.none();\n          }\n        }, isRoot);\n      }\n    };\n    const lookup$1 = (scopes, editor) => {\n      const rootElem = SugarElement.fromDom(editor.getBody());\n      const isRoot = elem => eq(elem, rootElem);\n      const isOutsideRoot = startNode => !isRoot(startNode) && !contains(rootElem, startNode);\n      const startNode = SugarElement.fromDom(editor.selection.getNode());\n      if (isOutsideRoot(startNode)) {\n        return Optional.none();\n      }\n      return matchStartNode(startNode, scopes.inNodeScope, scopes.inEditorScope).orThunk(() => matchAncestor(isRoot, startNode, scopes));\n    };\n\n    const categorise = (contextToolbars, navigate) => {\n      const forms = {};\n      const inNodeScope = [];\n      const inEditorScope = [];\n      const formNavigators = {};\n      const lookupTable = {};\n      const registerForm = (key, toolbarSpec) => {\n        const contextForm = getOrDie(createContextForm(toolbarSpec));\n        forms[key] = contextForm;\n        contextForm.launch.map(launch => {\n          formNavigators['form:' + key + ''] = {\n            ...toolbarSpec.launch,\n            type: launch.type === 'contextformtogglebutton' ? 'togglebutton' : 'button',\n            onAction: () => {\n              navigate(contextForm);\n            }\n          };\n        });\n        if (contextForm.scope === 'editor') {\n          inEditorScope.push(contextForm);\n        } else {\n          inNodeScope.push(contextForm);\n        }\n        lookupTable[key] = contextForm;\n      };\n      const registerToolbar = (key, toolbarSpec) => {\n        createContextToolbar(toolbarSpec).each(contextToolbar => {\n          if (toolbarSpec.scope === 'editor') {\n            inEditorScope.push(contextToolbar);\n          } else {\n            inNodeScope.push(contextToolbar);\n          }\n          lookupTable[key] = contextToolbar;\n        });\n      };\n      const keys$1 = keys(contextToolbars);\n      each$1(keys$1, key => {\n        const toolbarApi = contextToolbars[key];\n        if (toolbarApi.type === 'contextform') {\n          registerForm(key, toolbarApi);\n        } else if (toolbarApi.type === 'contexttoolbar') {\n          registerToolbar(key, toolbarApi);\n        }\n      });\n      return {\n        forms,\n        inNodeScope,\n        inEditorScope,\n        lookupTable,\n        formNavigators\n      };\n    };\n\n    const forwardSlideEvent = generate$6('forward-slide');\n    const backSlideEvent = generate$6('backward-slide');\n    const changeSlideEvent = generate$6('change-slide-event');\n    const resizingClass = 'tox-pop--resizing';\n    const renderContextToolbar = spec => {\n      const stack = Cell([]);\n      return InlineView.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-pop']\n        },\n        fireDismissalEventInstead: { event: 'doNotDismissYet' },\n        onShow: comp => {\n          stack.set([]);\n          InlineView.getContent(comp).each(c => {\n            remove$6(c.element, 'visibility');\n          });\n          remove$2(comp.element, resizingClass);\n          remove$6(comp.element, 'width');\n        },\n        inlineBehaviours: derive$1([\n          config('context-toolbar-events', [\n            runOnSource(transitionend(), (comp, se) => {\n              if (se.event.raw.propertyName === 'width') {\n                remove$2(comp.element, resizingClass);\n                remove$6(comp.element, 'width');\n              }\n            }),\n            run$1(changeSlideEvent, (comp, se) => {\n              const elem = comp.element;\n              remove$6(elem, 'width');\n              const currentWidth = get$c(elem);\n              InlineView.setContent(comp, se.event.contents);\n              add$2(elem, resizingClass);\n              const newWidth = get$c(elem);\n              set$8(elem, 'width', currentWidth + 'px');\n              InlineView.getContent(comp).each(newContents => {\n                se.event.focus.bind(f => {\n                  focus$3(f);\n                  return search(elem);\n                }).orThunk(() => {\n                  Keying.focusIn(newContents);\n                  return active$1(getRootNode(elem));\n                });\n              });\n              setTimeout(() => {\n                set$8(comp.element, 'width', newWidth + 'px');\n              }, 0);\n            }),\n            run$1(forwardSlideEvent, (comp, se) => {\n              InlineView.getContent(comp).each(oldContents => {\n                stack.set(stack.get().concat([{\n                    bar: oldContents,\n                    focus: active$1(getRootNode(comp.element))\n                  }]));\n              });\n              emitWith(comp, changeSlideEvent, {\n                contents: se.event.forwardContents,\n                focus: Optional.none()\n              });\n            }),\n            run$1(backSlideEvent, (comp, _se) => {\n              last$1(stack.get()).each(last => {\n                stack.set(stack.get().slice(0, stack.get().length - 1));\n                emitWith(comp, changeSlideEvent, {\n                  contents: premade(last.bar),\n                  focus: last.focus\n                });\n              });\n            })\n          ]),\n          Keying.config({\n            mode: 'special',\n            onEscape: comp => last$1(stack.get()).fold(() => spec.onEscape(), _ => {\n              emit(comp, backSlideEvent);\n              return Optional.some(true);\n            })\n          })\n        ]),\n        lazySink: () => Result.value(spec.sink)\n      });\n    };\n\n    const transitionClass = 'tox-pop--transition';\n    const register$9 = (editor, registryContextToolbars, sink, extras) => {\n      const backstage = extras.backstage;\n      const sharedBackstage = backstage.shared;\n      const isTouch = detect$2().deviceType.isTouch;\n      const lastElement = value$2();\n      const lastTrigger = value$2();\n      const lastContextPosition = value$2();\n      const contextbar = build$1(renderContextToolbar({\n        sink,\n        onEscape: () => {\n          editor.focus();\n          return Optional.some(true);\n        }\n      }));\n      const getBounds = () => {\n        const position = lastContextPosition.get().getOr('node');\n        const margin = shouldUseInsetLayouts(position) ? 1 : 0;\n        return getContextToolbarBounds(editor, sharedBackstage, position, margin);\n      };\n      const canLaunchToolbar = () => {\n        return !editor.removed && !(isTouch() && backstage.isContextMenuOpen());\n      };\n      const isSameLaunchElement = elem => is$1(lift2(elem, lastElement.get(), eq), true);\n      const shouldContextToolbarHide = () => {\n        if (!canLaunchToolbar()) {\n          return true;\n        } else {\n          const contextToolbarBounds = getBounds();\n          const anchorBounds = is$1(lastContextPosition.get(), 'node') ? getAnchorElementBounds(editor, lastElement.get()) : getSelectionBounds(editor);\n          return contextToolbarBounds.height <= 0 || !isVerticalOverlap(anchorBounds, contextToolbarBounds, 0.01);\n        }\n      };\n      const close = () => {\n        lastElement.clear();\n        lastTrigger.clear();\n        lastContextPosition.clear();\n        InlineView.hide(contextbar);\n      };\n      const hideOrRepositionIfNecessary = () => {\n        if (InlineView.isOpen(contextbar)) {\n          const contextBarEle = contextbar.element;\n          remove$6(contextBarEle, 'display');\n          if (shouldContextToolbarHide()) {\n            set$8(contextBarEle, 'display', 'none');\n          } else {\n            lastTrigger.set(0);\n            InlineView.reposition(contextbar);\n          }\n        }\n      };\n      const wrapInPopDialog = toolbarSpec => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-pop__dialog']\n        },\n        components: [toolbarSpec],\n        behaviours: derive$1([\n          Keying.config({ mode: 'acyclic' }),\n          config('pop-dialog-wrap-events', [\n            runOnAttached(comp => {\n              editor.shortcuts.add('ctrl+F9', 'focus statusbar', () => Keying.focusIn(comp));\n            }),\n            runOnDetached(_comp => {\n              editor.shortcuts.remove('ctrl+F9');\n            })\n          ])\n        ])\n      });\n      const getScopes = cached(() => categorise(registryContextToolbars, toolbarApi => {\n        const alloySpec = buildToolbar([toolbarApi]);\n        emitWith(contextbar, forwardSlideEvent, { forwardContents: wrapInPopDialog(alloySpec) });\n      }));\n      const buildContextToolbarGroups = (allButtons, ctx) => identifyButtons(editor, {\n        buttons: allButtons,\n        toolbar: ctx.items,\n        allowToolbarGroups: false\n      }, extras.backstage, Optional.some(['form:']));\n      const buildContextFormGroups = (ctx, providers) => ContextForm.buildInitGroups(ctx, providers);\n      const buildToolbar = toolbars => {\n        const {buttons} = editor.ui.registry.getAll();\n        const scopes = getScopes();\n        const allButtons = {\n          ...buttons,\n          ...scopes.formNavigators\n        };\n        const toolbarType = getToolbarMode(editor) === ToolbarMode$1.scrolling ? ToolbarMode$1.scrolling : ToolbarMode$1.default;\n        const initGroups = flatten(map$2(toolbars, ctx => ctx.type === 'contexttoolbar' ? buildContextToolbarGroups(allButtons, ctx) : buildContextFormGroups(ctx, sharedBackstage.providers)));\n        return renderToolbar({\n          type: toolbarType,\n          uid: generate$6('context-toolbar'),\n          initGroups,\n          onEscape: Optional.none,\n          cyclicKeying: true,\n          providers: sharedBackstage.providers\n        });\n      };\n      const getAnchor = (position, element) => {\n        const anchorage = position === 'node' ? sharedBackstage.anchors.node(element) : sharedBackstage.anchors.cursor();\n        const anchorLayout = getAnchorLayout(editor, position, isTouch(), {\n          lastElement: lastElement.get,\n          isReposition: () => is$1(lastTrigger.get(), 0),\n          getMode: () => Positioning.getMode(sink)\n        });\n        return deepMerge(anchorage, anchorLayout);\n      };\n      const launchContext = (toolbarApi, elem) => {\n        launchContextToolbar.cancel();\n        if (!canLaunchToolbar()) {\n          return;\n        }\n        const toolbarSpec = buildToolbar(toolbarApi);\n        const position = toolbarApi[0].position;\n        const anchor = getAnchor(position, elem);\n        lastContextPosition.set(position);\n        lastTrigger.set(1);\n        const contextBarEle = contextbar.element;\n        remove$6(contextBarEle, 'display');\n        if (!isSameLaunchElement(elem)) {\n          remove$2(contextBarEle, transitionClass);\n          Positioning.reset(sink, contextbar);\n        }\n        InlineView.showWithinBounds(contextbar, wrapInPopDialog(toolbarSpec), {\n          anchor,\n          transition: {\n            classes: [transitionClass],\n            mode: 'placement'\n          }\n        }, () => Optional.some(getBounds()));\n        elem.fold(lastElement.clear, lastElement.set);\n        if (shouldContextToolbarHide()) {\n          set$8(contextBarEle, 'display', 'none');\n        }\n      };\n      let isDragging = false;\n      const launchContextToolbar = last(() => {\n        if (!editor.hasFocus() || editor.removed || isDragging) {\n          return;\n        }\n        if (has(contextbar.element, transitionClass)) {\n          launchContextToolbar.throttle();\n        } else {\n          const scopes = getScopes();\n          lookup$1(scopes, editor).fold(close, info => {\n            launchContext(info.toolbars, Optional.some(info.elem));\n          });\n        }\n      }, 17);\n      editor.on('init', () => {\n        editor.on('remove', close);\n        editor.on('ScrollContent ScrollWindow ObjectResized ResizeEditor longpress', hideOrRepositionIfNecessary);\n        editor.on('click keyup focus SetContent', launchContextToolbar.throttle);\n        editor.on(hideContextToolbarEvent, close);\n        editor.on(showContextToolbarEvent, e => {\n          const scopes = getScopes();\n          get$g(scopes.lookupTable, e.toolbarKey).each(ctx => {\n            launchContext([ctx], someIf(e.target !== editor, e.target));\n            InlineView.getContent(contextbar).each(Keying.focusIn);\n          });\n        });\n        editor.on('focusout', _e => {\n          global$9.setEditorTimeout(editor, () => {\n            if (search(sink.element).isNone() && search(contextbar.element).isNone()) {\n              close();\n            }\n          }, 0);\n        });\n        editor.on('SwitchMode', () => {\n          if (editor.mode.isReadOnly()) {\n            close();\n          }\n        });\n        editor.on('AfterProgressState', event => {\n          if (event.state) {\n            close();\n          } else if (editor.hasFocus()) {\n            launchContextToolbar.throttle();\n          }\n        });\n        editor.on('dragstart', () => {\n          isDragging = true;\n        });\n        editor.on('dragend drop', () => {\n          isDragging = false;\n        });\n        editor.on('NodeChange', _e => {\n          search(contextbar.element).fold(launchContextToolbar.throttle, noop);\n        });\n      });\n    };\n\n    const register$8 = editor => {\n      const alignToolbarButtons = [\n        {\n          name: 'alignleft',\n          text: 'Align left',\n          cmd: 'JustifyLeft',\n          icon: 'align-left'\n        },\n        {\n          name: 'aligncenter',\n          text: 'Align center',\n          cmd: 'JustifyCenter',\n          icon: 'align-center'\n        },\n        {\n          name: 'alignright',\n          text: 'Align right',\n          cmd: 'JustifyRight',\n          icon: 'align-right'\n        },\n        {\n          name: 'alignjustify',\n          text: 'Justify',\n          cmd: 'JustifyFull',\n          icon: 'align-justify'\n        }\n      ];\n      each$1(alignToolbarButtons, item => {\n        editor.ui.registry.addToggleButton(item.name, {\n          tooltip: item.text,\n          icon: item.icon,\n          onAction: onActionExecCommand(editor, item.cmd),\n          onSetup: onSetupStateToggle(editor, item.name)\n        });\n      });\n      editor.ui.registry.addButton('alignnone', {\n        tooltip: 'No alignment',\n        icon: 'align-none',\n        onSetup: onSetupEditableToggle(editor),\n        onAction: onActionExecCommand(editor, 'JustifyNone')\n      });\n    };\n\n    const registerController = (editor, spec) => {\n      const getMenuItems = () => {\n        const options = spec.getOptions(editor);\n        const initial = spec.getCurrent(editor).map(spec.hash);\n        const current = value$2();\n        return map$2(options, value => ({\n          type: 'togglemenuitem',\n          text: spec.display(value),\n          onSetup: api => {\n            const setActive = active => {\n              if (active) {\n                current.on(oldApi => oldApi.setActive(false));\n                current.set(api);\n              }\n              api.setActive(active);\n            };\n            setActive(is$1(initial, spec.hash(value)));\n            const unbindWatcher = spec.watcher(editor, value, setActive);\n            return () => {\n              current.clear();\n              unbindWatcher();\n            };\n          },\n          onAction: () => spec.setCurrent(editor, value)\n        }));\n      };\n      editor.ui.registry.addMenuButton(spec.name, {\n        tooltip: spec.text,\n        icon: spec.icon,\n        fetch: callback => callback(getMenuItems()),\n        onSetup: spec.onToolbarSetup\n      });\n      editor.ui.registry.addNestedMenuItem(spec.name, {\n        type: 'nestedmenuitem',\n        text: spec.text,\n        getSubmenuItems: getMenuItems,\n        onSetup: spec.onMenuSetup\n      });\n    };\n    const lineHeightSpec = editor => ({\n      name: 'lineheight',\n      text: 'Line height',\n      icon: 'line-height',\n      getOptions: getLineHeightFormats,\n      hash: input => normalise(input, [\n        'fixed',\n        'relative',\n        'empty'\n      ]).getOr(input),\n      display: identity,\n      watcher: (editor, value, callback) => editor.formatter.formatChanged('lineheight', callback, false, { value }).unbind,\n      getCurrent: editor => Optional.from(editor.queryCommandValue('LineHeight')),\n      setCurrent: (editor, value) => editor.execCommand('LineHeight', false, value),\n      onToolbarSetup: onSetupEditableToggle(editor),\n      onMenuSetup: onSetupEditableToggle(editor)\n    });\n    const languageSpec = editor => {\n      const settingsOpt = Optional.from(getContentLanguages(editor));\n      return settingsOpt.map(settings => ({\n        name: 'language',\n        text: 'Language',\n        icon: 'language',\n        getOptions: constant$1(settings),\n        hash: input => isUndefined(input.customCode) ? input.code : `${ input.code }/${ input.customCode }`,\n        display: input => input.title,\n        watcher: (editor, value, callback) => {\n          var _a;\n          return editor.formatter.formatChanged('lang', callback, false, {\n            value: value.code,\n            customValue: (_a = value.customCode) !== null && _a !== void 0 ? _a : null\n          }).unbind;\n        },\n        getCurrent: editor => {\n          const node = SugarElement.fromDom(editor.selection.getNode());\n          return closest$4(node, n => Optional.some(n).filter(isElement$1).bind(ele => {\n            const codeOpt = getOpt(ele, 'lang');\n            return codeOpt.map(code => {\n              const customCode = getOpt(ele, 'data-mce-lang').getOrUndefined();\n              return {\n                code,\n                customCode,\n                title: ''\n              };\n            });\n          }));\n        },\n        setCurrent: (editor, lang) => editor.execCommand('Lang', false, lang),\n        onToolbarSetup: api => {\n          const unbinder = unbindable();\n          api.setActive(editor.formatter.match('lang', {}, undefined, true));\n          unbinder.set(editor.formatter.formatChanged('lang', api.setActive, true));\n          return composeUnbinders(unbinder.clear, onSetupEditableToggle(editor)(api));\n        },\n        onMenuSetup: onSetupEditableToggle(editor)\n      }));\n    };\n    const register$7 = editor => {\n      registerController(editor, lineHeightSpec(editor));\n      languageSpec(editor).each(spec => registerController(editor, spec));\n    };\n\n    const register$6 = (editor, backstage) => {\n      createAlignMenu(editor, backstage);\n      createFontFamilyMenu(editor, backstage);\n      createStylesMenu(editor, backstage);\n      createBlocksMenu(editor, backstage);\n      createFontSizeMenu(editor, backstage);\n    };\n\n    const onSetupOutdentState = editor => onSetupEvent(editor, 'NodeChange', api => {\n      api.setEnabled(editor.queryCommandState('outdent') && editor.selection.isEditable());\n    });\n    const registerButtons$2 = editor => {\n      editor.ui.registry.addButton('outdent', {\n        tooltip: 'Decrease indent',\n        icon: 'outdent',\n        onSetup: onSetupOutdentState(editor),\n        onAction: onActionExecCommand(editor, 'outdent')\n      });\n      editor.ui.registry.addButton('indent', {\n        tooltip: 'Increase indent',\n        icon: 'indent',\n        onSetup: onSetupEditableToggle(editor),\n        onAction: onActionExecCommand(editor, 'indent')\n      });\n    };\n    const register$5 = editor => {\n      registerButtons$2(editor);\n    };\n\n    const makeSetupHandler = (editor, pasteAsText) => api => {\n      api.setActive(pasteAsText.get());\n      const pastePlainTextToggleHandler = e => {\n        pasteAsText.set(e.state);\n        api.setActive(e.state);\n      };\n      editor.on('PastePlainTextToggle', pastePlainTextToggleHandler);\n      return composeUnbinders(() => editor.off('PastePlainTextToggle', pastePlainTextToggleHandler), onSetupEditableToggle(editor)(api));\n    };\n    const register$4 = editor => {\n      const pasteAsText = Cell(getPasteAsText(editor));\n      const onAction = () => editor.execCommand('mceTogglePlainTextPaste');\n      editor.ui.registry.addToggleButton('pastetext', {\n        active: false,\n        icon: 'paste-text',\n        tooltip: 'Paste as text',\n        onAction,\n        onSetup: makeSetupHandler(editor, pasteAsText)\n      });\n      editor.ui.registry.addToggleMenuItem('pastetext', {\n        text: 'Paste as text',\n        icon: 'paste-text',\n        onAction,\n        onSetup: makeSetupHandler(editor, pasteAsText)\n      });\n    };\n\n    const onActionToggleFormat = (editor, fmt) => () => {\n      editor.execCommand('mceToggleFormat', false, fmt);\n    };\n    const registerFormatButtons = editor => {\n      global$1.each([\n        {\n          name: 'bold',\n          text: 'Bold',\n          icon: 'bold'\n        },\n        {\n          name: 'italic',\n          text: 'Italic',\n          icon: 'italic'\n        },\n        {\n          name: 'underline',\n          text: 'Underline',\n          icon: 'underline'\n        },\n        {\n          name: 'strikethrough',\n          text: 'Strikethrough',\n          icon: 'strike-through'\n        },\n        {\n          name: 'subscript',\n          text: 'Subscript',\n          icon: 'subscript'\n        },\n        {\n          name: 'superscript',\n          text: 'Superscript',\n          icon: 'superscript'\n        }\n      ], (btn, _idx) => {\n        editor.ui.registry.addToggleButton(btn.name, {\n          tooltip: btn.text,\n          icon: btn.icon,\n          onSetup: onSetupStateToggle(editor, btn.name),\n          onAction: onActionToggleFormat(editor, btn.name)\n        });\n      });\n      for (let i = 1; i <= 6; i++) {\n        const name = 'h' + i;\n        editor.ui.registry.addToggleButton(name, {\n          text: name.toUpperCase(),\n          tooltip: 'Heading ' + i,\n          onSetup: onSetupStateToggle(editor, name),\n          onAction: onActionToggleFormat(editor, name)\n        });\n      }\n    };\n    const registerCommandButtons = editor => {\n      global$1.each([\n        {\n          name: 'copy',\n          text: 'Copy',\n          action: 'Copy',\n          icon: 'copy'\n        },\n        {\n          name: 'help',\n          text: 'Help',\n          action: 'mceHelp',\n          icon: 'help'\n        },\n        {\n          name: 'selectall',\n          text: 'Select all',\n          action: 'SelectAll',\n          icon: 'select-all'\n        },\n        {\n          name: 'newdocument',\n          text: 'New document',\n          action: 'mceNewDocument',\n          icon: 'new-document'\n        },\n        {\n          name: 'print',\n          text: 'Print',\n          action: 'mcePrint',\n          icon: 'print'\n        }\n      ], btn => {\n        editor.ui.registry.addButton(btn.name, {\n          tooltip: btn.text,\n          icon: btn.icon,\n          onAction: onActionExecCommand(editor, btn.action)\n        });\n      });\n      global$1.each([\n        {\n          name: 'cut',\n          text: 'Cut',\n          action: 'Cut',\n          icon: 'cut'\n        },\n        {\n          name: 'paste',\n          text: 'Paste',\n          action: 'Paste',\n          icon: 'paste'\n        },\n        {\n          name: 'removeformat',\n          text: 'Clear formatting',\n          action: 'RemoveFormat',\n          icon: 'remove-formatting'\n        },\n        {\n          name: 'remove',\n          text: 'Remove',\n          action: 'Delete',\n          icon: 'remove'\n        },\n        {\n          name: 'hr',\n          text: 'Horizontal line',\n          action: 'InsertHorizontalRule',\n          icon: 'horizontal-rule'\n        }\n      ], btn => {\n        editor.ui.registry.addButton(btn.name, {\n          tooltip: btn.text,\n          icon: btn.icon,\n          onSetup: onSetupEditableToggle(editor),\n          onAction: onActionExecCommand(editor, btn.action)\n        });\n      });\n    };\n    const registerCommandToggleButtons = editor => {\n      global$1.each([{\n          name: 'blockquote',\n          text: 'Blockquote',\n          action: 'mceBlockQuote',\n          icon: 'quote'\n        }], btn => {\n        editor.ui.registry.addToggleButton(btn.name, {\n          tooltip: btn.text,\n          icon: btn.icon,\n          onAction: onActionExecCommand(editor, btn.action),\n          onSetup: onSetupStateToggle(editor, btn.name)\n        });\n      });\n    };\n    const registerButtons$1 = editor => {\n      registerFormatButtons(editor);\n      registerCommandButtons(editor);\n      registerCommandToggleButtons(editor);\n    };\n    const registerMenuItems$2 = editor => {\n      global$1.each([\n        {\n          name: 'newdocument',\n          text: 'New document',\n          action: 'mceNewDocument',\n          icon: 'new-document'\n        },\n        {\n          name: 'copy',\n          text: 'Copy',\n          action: 'Copy',\n          icon: 'copy',\n          shortcut: 'Meta+C'\n        },\n        {\n          name: 'selectall',\n          text: 'Select all',\n          action: 'SelectAll',\n          icon: 'select-all',\n          shortcut: 'Meta+A'\n        },\n        {\n          name: 'print',\n          text: 'Print...',\n          action: 'mcePrint',\n          icon: 'print',\n          shortcut: 'Meta+P'\n        }\n      ], menuitem => {\n        editor.ui.registry.addMenuItem(menuitem.name, {\n          text: menuitem.text,\n          icon: menuitem.icon,\n          shortcut: menuitem.shortcut,\n          onAction: onActionExecCommand(editor, menuitem.action)\n        });\n      });\n      global$1.each([\n        {\n          name: 'bold',\n          text: 'Bold',\n          action: 'Bold',\n          icon: 'bold',\n          shortcut: 'Meta+B'\n        },\n        {\n          name: 'italic',\n          text: 'Italic',\n          action: 'Italic',\n          icon: 'italic',\n          shortcut: 'Meta+I'\n        },\n        {\n          name: 'underline',\n          text: 'Underline',\n          action: 'Underline',\n          icon: 'underline',\n          shortcut: 'Meta+U'\n        },\n        {\n          name: 'strikethrough',\n          text: 'Strikethrough',\n          action: 'Strikethrough',\n          icon: 'strike-through'\n        },\n        {\n          name: 'subscript',\n          text: 'Subscript',\n          action: 'Subscript',\n          icon: 'subscript'\n        },\n        {\n          name: 'superscript',\n          text: 'Superscript',\n          action: 'Superscript',\n          icon: 'superscript'\n        },\n        {\n          name: 'removeformat',\n          text: 'Clear formatting',\n          action: 'RemoveFormat',\n          icon: 'remove-formatting'\n        },\n        {\n          name: 'cut',\n          text: 'Cut',\n          action: 'Cut',\n          icon: 'cut',\n          shortcut: 'Meta+X'\n        },\n        {\n          name: 'paste',\n          text: 'Paste',\n          action: 'Paste',\n          icon: 'paste',\n          shortcut: 'Meta+V'\n        },\n        {\n          name: 'hr',\n          text: 'Horizontal line',\n          action: 'InsertHorizontalRule',\n          icon: 'horizontal-rule'\n        }\n      ], menuitem => {\n        editor.ui.registry.addMenuItem(menuitem.name, {\n          text: menuitem.text,\n          icon: menuitem.icon,\n          shortcut: menuitem.shortcut,\n          onSetup: onSetupEditableToggle(editor),\n          onAction: onActionExecCommand(editor, menuitem.action)\n        });\n      });\n      editor.ui.registry.addMenuItem('codeformat', {\n        text: 'Code',\n        icon: 'sourcecode',\n        onSetup: onSetupEditableToggle(editor),\n        onAction: onActionToggleFormat(editor, 'code')\n      });\n    };\n    const register$3 = editor => {\n      registerButtons$1(editor);\n      registerMenuItems$2(editor);\n    };\n\n    const onSetupUndoRedoState = (editor, type) => onSetupEvent(editor, 'Undo Redo AddUndo TypingUndo ClearUndos SwitchMode', api => {\n      api.setEnabled(!editor.mode.isReadOnly() && editor.undoManager[type]());\n    });\n    const registerMenuItems$1 = editor => {\n      editor.ui.registry.addMenuItem('undo', {\n        text: 'Undo',\n        icon: 'undo',\n        shortcut: 'Meta+Z',\n        onSetup: onSetupUndoRedoState(editor, 'hasUndo'),\n        onAction: onActionExecCommand(editor, 'undo')\n      });\n      editor.ui.registry.addMenuItem('redo', {\n        text: 'Redo',\n        icon: 'redo',\n        shortcut: 'Meta+Y',\n        onSetup: onSetupUndoRedoState(editor, 'hasRedo'),\n        onAction: onActionExecCommand(editor, 'redo')\n      });\n    };\n    const registerButtons = editor => {\n      editor.ui.registry.addButton('undo', {\n        tooltip: 'Undo',\n        icon: 'undo',\n        enabled: false,\n        onSetup: onSetupUndoRedoState(editor, 'hasUndo'),\n        onAction: onActionExecCommand(editor, 'undo')\n      });\n      editor.ui.registry.addButton('redo', {\n        tooltip: 'Redo',\n        icon: 'redo',\n        enabled: false,\n        onSetup: onSetupUndoRedoState(editor, 'hasRedo'),\n        onAction: onActionExecCommand(editor, 'redo')\n      });\n    };\n    const register$2 = editor => {\n      registerMenuItems$1(editor);\n      registerButtons(editor);\n    };\n\n    const onSetupVisualAidState = editor => onSetupEvent(editor, 'VisualAid', api => {\n      api.setActive(editor.hasVisual);\n    });\n    const registerMenuItems = editor => {\n      editor.ui.registry.addToggleMenuItem('visualaid', {\n        text: 'Visual aids',\n        onSetup: onSetupVisualAidState(editor),\n        onAction: onActionExecCommand(editor, 'mceToggleVisualAid')\n      });\n    };\n    const registerToolbarButton = editor => {\n      editor.ui.registry.addButton('visualaid', {\n        tooltip: 'Visual aids',\n        text: 'Visual aids',\n        onAction: onActionExecCommand(editor, 'mceToggleVisualAid')\n      });\n    };\n    const register$1 = editor => {\n      registerToolbarButton(editor);\n      registerMenuItems(editor);\n    };\n\n    const setup$6 = (editor, backstage) => {\n      register$8(editor);\n      register$3(editor);\n      register$6(editor, backstage);\n      register$2(editor);\n      register$c(editor);\n      register$1(editor);\n      register$5(editor);\n      register$7(editor);\n      register$4(editor);\n    };\n\n    const patchPipeConfig = config => isString(config) ? config.split(/[ ,]/) : config;\n    const option = name => editor => editor.options.get(name);\n    const register = editor => {\n      const registerOption = editor.options.register;\n      registerOption('contextmenu_avoid_overlap', {\n        processor: 'string',\n        default: ''\n      });\n      registerOption('contextmenu_never_use_native', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('contextmenu', {\n        processor: value => {\n          if (value === false) {\n            return {\n              value: [],\n              valid: true\n            };\n          } else if (isString(value) || isArrayOf(value, isString)) {\n            return {\n              value: patchPipeConfig(value),\n              valid: true\n            };\n          } else {\n            return {\n              valid: false,\n              message: 'Must be false or a string.'\n            };\n          }\n        },\n        default: 'link linkchecker image editimage table spellchecker configurepermanentpen'\n      });\n    };\n    const shouldNeverUseNative = option('contextmenu_never_use_native');\n    const getAvoidOverlapSelector = option('contextmenu_avoid_overlap');\n    const isContextMenuDisabled = editor => getContextMenu(editor).length === 0;\n    const getContextMenu = editor => {\n      const contextMenus = editor.ui.registry.getAll().contextMenus;\n      const contextMenu = editor.options.get('contextmenu');\n      if (editor.options.isSet('contextmenu')) {\n        return contextMenu;\n      } else {\n        return filter$2(contextMenu, item => has$2(contextMenus, item));\n      }\n    };\n\n    const nu = (x, y) => ({\n      type: 'makeshift',\n      x,\n      y\n    });\n    const transpose = (pos, dx, dy) => {\n      return nu(pos.x + dx, pos.y + dy);\n    };\n    const isTouchEvent$1 = e => e.type === 'longpress' || e.type.indexOf('touch') === 0;\n    const fromPageXY = e => {\n      if (isTouchEvent$1(e)) {\n        const touch = e.touches[0];\n        return nu(touch.pageX, touch.pageY);\n      } else {\n        return nu(e.pageX, e.pageY);\n      }\n    };\n    const fromClientXY = e => {\n      if (isTouchEvent$1(e)) {\n        const touch = e.touches[0];\n        return nu(touch.clientX, touch.clientY);\n      } else {\n        return nu(e.clientX, e.clientY);\n      }\n    };\n    const transposeContentAreaContainer = (element, pos) => {\n      const containerPos = global$7.DOM.getPos(element);\n      return transpose(pos, containerPos.x, containerPos.y);\n    };\n    const getPointAnchor = (editor, e) => {\n      if (e.type === 'contextmenu' || e.type === 'longpress') {\n        if (editor.inline) {\n          return fromPageXY(e);\n        } else {\n          return transposeContentAreaContainer(editor.getContentAreaContainer(), fromClientXY(e));\n        }\n      } else {\n        return getSelectionAnchor(editor);\n      }\n    };\n    const getSelectionAnchor = editor => {\n      return {\n        type: 'selection',\n        root: SugarElement.fromDom(editor.selection.getNode())\n      };\n    };\n    const getNodeAnchor = editor => ({\n      type: 'node',\n      node: Optional.some(SugarElement.fromDom(editor.selection.getNode())),\n      root: SugarElement.fromDom(editor.getBody())\n    });\n    const getAnchorSpec$1 = (editor, e, anchorType) => {\n      switch (anchorType) {\n      case 'node':\n        return getNodeAnchor(editor);\n      case 'point':\n        return getPointAnchor(editor, e);\n      case 'selection':\n        return getSelectionAnchor(editor);\n      }\n    };\n\n    const initAndShow$1 = (editor, e, buildMenu, backstage, contextmenu, anchorType) => {\n      const items = buildMenu();\n      const anchorSpec = getAnchorSpec$1(editor, e, anchorType);\n      build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n        isHorizontalMenu: false,\n        search: Optional.none()\n      }).map(menuData => {\n        e.preventDefault();\n        InlineView.showMenuAt(contextmenu, { anchor: anchorSpec }, {\n          menu: { markers: markers('normal') },\n          data: menuData\n        });\n      });\n    };\n\n    const layouts = {\n      onLtr: () => [\n        south$2,\n        southeast$2,\n        southwest$2,\n        northeast$2,\n        northwest$2,\n        north$2,\n        north,\n        south,\n        northeast,\n        southeast,\n        northwest,\n        southwest\n      ],\n      onRtl: () => [\n        south$2,\n        southwest$2,\n        southeast$2,\n        northwest$2,\n        northeast$2,\n        north$2,\n        north,\n        south,\n        northwest,\n        southwest,\n        northeast,\n        southeast\n      ]\n    };\n    const bubbleSize = 12;\n    const bubbleAlignments = {\n      valignCentre: [],\n      alignCentre: [],\n      alignLeft: ['tox-pop--align-left'],\n      alignRight: ['tox-pop--align-right'],\n      right: ['tox-pop--right'],\n      left: ['tox-pop--left'],\n      bottom: ['tox-pop--bottom'],\n      top: ['tox-pop--top']\n    };\n    const isTouchWithinSelection = (editor, e) => {\n      const selection = editor.selection;\n      if (selection.isCollapsed() || e.touches.length < 1) {\n        return false;\n      } else {\n        const touch = e.touches[0];\n        const rng = selection.getRng();\n        const rngRectOpt = getFirstRect(editor.getWin(), SimSelection.domRange(rng));\n        return rngRectOpt.exists(rngRect => rngRect.left <= touch.clientX && rngRect.right >= touch.clientX && rngRect.top <= touch.clientY && rngRect.bottom >= touch.clientY);\n      }\n    };\n    const setupiOSOverrides = editor => {\n      const originalSelection = editor.selection.getRng();\n      const selectionReset = () => {\n        global$9.setEditorTimeout(editor, () => {\n          editor.selection.setRng(originalSelection);\n        }, 10);\n        unbindEventListeners();\n      };\n      editor.once('touchend', selectionReset);\n      const preventMousedown = e => {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      };\n      editor.on('mousedown', preventMousedown, true);\n      const clearSelectionReset = () => unbindEventListeners();\n      editor.once('longpresscancel', clearSelectionReset);\n      const unbindEventListeners = () => {\n        editor.off('touchend', selectionReset);\n        editor.off('longpresscancel', clearSelectionReset);\n        editor.off('mousedown', preventMousedown);\n      };\n    };\n    const getAnchorSpec = (editor, e, anchorType) => {\n      const anchorSpec = getAnchorSpec$1(editor, e, anchorType);\n      const bubbleYOffset = anchorType === 'point' ? bubbleSize : 0;\n      return {\n        bubble: nu$5(0, bubbleYOffset, bubbleAlignments),\n        layouts,\n        overrides: {\n          maxWidthFunction: expandable(),\n          maxHeightFunction: expandable$1()\n        },\n        ...anchorSpec\n      };\n    };\n    const show = (editor, e, items, backstage, contextmenu, anchorType, highlightImmediately) => {\n      const anchorSpec = getAnchorSpec(editor, e, anchorType);\n      build(items, ItemResponse$1.CLOSE_ON_EXECUTE, backstage, {\n        isHorizontalMenu: true,\n        search: Optional.none()\n      }).map(menuData => {\n        e.preventDefault();\n        const highlightOnOpen = highlightImmediately ? HighlightOnOpen.HighlightMenuAndItem : HighlightOnOpen.HighlightNone;\n        InlineView.showMenuWithinBounds(contextmenu, { anchor: anchorSpec }, {\n          menu: {\n            markers: markers('normal'),\n            highlightOnOpen\n          },\n          data: menuData,\n          type: 'horizontal'\n        }, () => Optional.some(getContextToolbarBounds(editor, backstage.shared, anchorType === 'node' ? 'node' : 'selection')));\n        editor.dispatch(hideContextToolbarEvent);\n      });\n    };\n    const initAndShow = (editor, e, buildMenu, backstage, contextmenu, anchorType) => {\n      const detection = detect$2();\n      const isiOS = detection.os.isiOS();\n      const isMacOS = detection.os.isMacOS();\n      const isAndroid = detection.os.isAndroid();\n      const isTouch = detection.deviceType.isTouch();\n      const shouldHighlightImmediately = () => !(isAndroid || isiOS || isMacOS && isTouch);\n      const open = () => {\n        const items = buildMenu();\n        show(editor, e, items, backstage, contextmenu, anchorType, shouldHighlightImmediately());\n      };\n      if ((isMacOS || isiOS) && anchorType !== 'node') {\n        const openiOS = () => {\n          setupiOSOverrides(editor);\n          open();\n        };\n        if (isTouchWithinSelection(editor, e)) {\n          openiOS();\n        } else {\n          editor.once('selectionchange', openiOS);\n          editor.once('touchend', () => editor.off('selectionchange', openiOS));\n        }\n      } else {\n        open();\n      }\n    };\n\n    const isSeparator = item => isString(item) ? item === '|' : item.type === 'separator';\n    const separator = { type: 'separator' };\n    const makeContextItem = item => {\n      const commonMenuItem = item => ({\n        text: item.text,\n        icon: item.icon,\n        enabled: item.enabled,\n        shortcut: item.shortcut\n      });\n      if (isString(item)) {\n        return item;\n      } else {\n        switch (item.type) {\n        case 'separator':\n          return separator;\n        case 'submenu':\n          return {\n            type: 'nestedmenuitem',\n            ...commonMenuItem(item),\n            getSubmenuItems: () => {\n              const items = item.getSubmenuItems();\n              if (isString(items)) {\n                return items;\n              } else {\n                return map$2(items, makeContextItem);\n              }\n            }\n          };\n        default:\n          const commonItem = item;\n          return {\n            type: 'menuitem',\n            ...commonMenuItem(commonItem),\n            onAction: noarg(commonItem.onAction)\n          };\n        }\n      }\n    };\n    const addContextMenuGroup = (xs, groupItems) => {\n      if (groupItems.length === 0) {\n        return xs;\n      }\n      const lastMenuItem = last$1(xs).filter(item => !isSeparator(item));\n      const before = lastMenuItem.fold(() => [], _ => [separator]);\n      return xs.concat(before).concat(groupItems).concat([separator]);\n    };\n    const generateContextMenu = (contextMenus, menuConfig, selectedElement) => {\n      const sections = foldl(menuConfig, (acc, name) => {\n        return get$g(contextMenus, name.toLowerCase()).map(menu => {\n          const items = menu.update(selectedElement);\n          if (isString(items) && isNotEmpty(trim$1(items))) {\n            return addContextMenuGroup(acc, items.split(' '));\n          } else if (isArray(items) && items.length > 0) {\n            const allItems = map$2(items, makeContextItem);\n            return addContextMenuGroup(acc, allItems);\n          } else {\n            return acc;\n          }\n        }).getOrThunk(() => acc.concat([name]));\n      }, []);\n      if (sections.length > 0 && isSeparator(sections[sections.length - 1])) {\n        sections.pop();\n      }\n      return sections;\n    };\n    const isNativeOverrideKeyEvent = (editor, e) => e.ctrlKey && !shouldNeverUseNative(editor);\n    const isTouchEvent = e => e.type === 'longpress' || has$2(e, 'touches');\n    const isTriggeredByKeyboard = (editor, e) => !isTouchEvent(e) && (e.button !== 2 || e.target === editor.getBody() && e.pointerType === '');\n    const getSelectedElement = (editor, e) => isTriggeredByKeyboard(editor, e) ? editor.selection.getStart(true) : e.target;\n    const getAnchorType = (editor, e) => {\n      const selector = getAvoidOverlapSelector(editor);\n      const anchorType = isTriggeredByKeyboard(editor, e) ? 'selection' : 'point';\n      if (isNotEmpty(selector)) {\n        const target = getSelectedElement(editor, e);\n        const selectorExists = closest(SugarElement.fromDom(target), selector);\n        return selectorExists ? 'node' : anchorType;\n      } else {\n        return anchorType;\n      }\n    };\n    const setup$5 = (editor, lazySink, backstage) => {\n      const detection = detect$2();\n      const isTouch = detection.deviceType.isTouch;\n      const contextmenu = build$1(InlineView.sketch({\n        dom: { tag: 'div' },\n        lazySink,\n        onEscape: () => editor.focus(),\n        onShow: () => backstage.setContextMenuState(true),\n        onHide: () => backstage.setContextMenuState(false),\n        fireDismissalEventInstead: {},\n        inlineBehaviours: derive$1([config('dismissContextMenu', [run$1(dismissRequested(), (comp, _se) => {\n              Sandboxing.close(comp);\n              editor.focus();\n            })])])\n      }));\n      const hideContextMenu = () => InlineView.hide(contextmenu);\n      const showContextMenu = e => {\n        if (shouldNeverUseNative(editor)) {\n          e.preventDefault();\n        }\n        if (isNativeOverrideKeyEvent(editor, e) || isContextMenuDisabled(editor)) {\n          return;\n        }\n        const anchorType = getAnchorType(editor, e);\n        const buildMenu = () => {\n          const selectedElement = getSelectedElement(editor, e);\n          const registry = editor.ui.registry.getAll();\n          const menuConfig = getContextMenu(editor);\n          return generateContextMenu(registry.contextMenus, menuConfig, selectedElement);\n        };\n        const initAndShow$2 = isTouch() ? initAndShow : initAndShow$1;\n        initAndShow$2(editor, e, buildMenu, backstage, contextmenu, anchorType);\n      };\n      editor.on('init', () => {\n        const hideEvents = 'ResizeEditor ScrollContent ScrollWindow longpresscancel' + (isTouch() ? '' : ' ResizeWindow');\n        editor.on(hideEvents, hideContextMenu);\n        editor.on('longpress contextmenu', showContextMenu);\n      });\n    };\n\n    const adt = Adt.generate([\n      {\n        offset: [\n          'x',\n          'y'\n        ]\n      },\n      {\n        absolute: [\n          'x',\n          'y'\n        ]\n      },\n      {\n        fixed: [\n          'x',\n          'y'\n        ]\n      }\n    ]);\n    const subtract = change => point => point.translate(-change.left, -change.top);\n    const add = change => point => point.translate(change.left, change.top);\n    const transform = changes => (x, y) => foldl(changes, (rest, f) => f(rest), SugarPosition(x, y));\n    const asFixed = (coord, scroll, origin) => coord.fold(transform([\n      add(origin),\n      subtract(scroll)\n    ]), transform([subtract(scroll)]), transform([]));\n    const asAbsolute = (coord, scroll, origin) => coord.fold(transform([add(origin)]), transform([]), transform([add(scroll)]));\n    const asOffset = (coord, scroll, origin) => coord.fold(transform([]), transform([subtract(origin)]), transform([\n      add(scroll),\n      subtract(origin)\n    ]));\n    const withinRange = (coord1, coord2, xRange, yRange, scroll, origin) => {\n      const a1 = asAbsolute(coord1, scroll, origin);\n      const a2 = asAbsolute(coord2, scroll, origin);\n      return Math.abs(a1.left - a2.left) <= xRange && Math.abs(a1.top - a2.top) <= yRange;\n    };\n    const getDeltas = (coord1, coord2, xRange, yRange, scroll, origin) => {\n      const a1 = asAbsolute(coord1, scroll, origin);\n      const a2 = asAbsolute(coord2, scroll, origin);\n      const left = Math.abs(a1.left - a2.left);\n      const top = Math.abs(a1.top - a2.top);\n      return SugarPosition(left, top);\n    };\n    const toStyles = (coord, scroll, origin) => {\n      const stylesOpt = coord.fold((x, y) => ({\n        position: Optional.some('absolute'),\n        left: Optional.some(x + 'px'),\n        top: Optional.some(y + 'px')\n      }), (x, y) => ({\n        position: Optional.some('absolute'),\n        left: Optional.some(x - origin.left + 'px'),\n        top: Optional.some(y - origin.top + 'px')\n      }), (x, y) => ({\n        position: Optional.some('fixed'),\n        left: Optional.some(x + 'px'),\n        top: Optional.some(y + 'px')\n      }));\n      return {\n        right: Optional.none(),\n        bottom: Optional.none(),\n        ...stylesOpt\n      };\n    };\n    const translate = (coord, deltaX, deltaY) => coord.fold((x, y) => offset(x + deltaX, y + deltaY), (x, y) => absolute(x + deltaX, y + deltaY), (x, y) => fixed(x + deltaX, y + deltaY));\n    const absorb = (partialCoord, originalCoord, scroll, origin) => {\n      const absorbOne = (stencil, nu) => (optX, optY) => {\n        const original = stencil(originalCoord, scroll, origin);\n        return nu(optX.getOr(original.left), optY.getOr(original.top));\n      };\n      return partialCoord.fold(absorbOne(asOffset, offset), absorbOne(asAbsolute, absolute), absorbOne(asFixed, fixed));\n    };\n    const offset = adt.offset;\n    const absolute = adt.absolute;\n    const fixed = adt.fixed;\n\n    const parseAttrToInt = (element, name) => {\n      const value = get$f(element, name);\n      return isUndefined(value) ? NaN : parseInt(value, 10);\n    };\n    const get = (component, snapsInfo) => {\n      const element = component.element;\n      const x = parseAttrToInt(element, snapsInfo.leftAttr);\n      const y = parseAttrToInt(element, snapsInfo.topAttr);\n      return isNaN(x) || isNaN(y) ? Optional.none() : Optional.some(SugarPosition(x, y));\n    };\n    const set = (component, snapsInfo, pt) => {\n      const element = component.element;\n      set$9(element, snapsInfo.leftAttr, pt.left + 'px');\n      set$9(element, snapsInfo.topAttr, pt.top + 'px');\n    };\n    const clear = (component, snapsInfo) => {\n      const element = component.element;\n      remove$7(element, snapsInfo.leftAttr);\n      remove$7(element, snapsInfo.topAttr);\n    };\n\n    const getCoords = (component, snapInfo, coord, delta) => get(component, snapInfo).fold(() => coord, fixed$1 => fixed(fixed$1.left + delta.left, fixed$1.top + delta.top));\n    const moveOrSnap = (component, snapInfo, coord, delta, scroll, origin) => {\n      const newCoord = getCoords(component, snapInfo, coord, delta);\n      const snap = snapInfo.mustSnap ? findClosestSnap(component, snapInfo, newCoord, scroll, origin) : findSnap(component, snapInfo, newCoord, scroll, origin);\n      const fixedCoord = asFixed(newCoord, scroll, origin);\n      set(component, snapInfo, fixedCoord);\n      return snap.fold(() => ({\n        coord: fixed(fixedCoord.left, fixedCoord.top),\n        extra: Optional.none()\n      }), spanned => ({\n        coord: spanned.output,\n        extra: spanned.extra\n      }));\n    };\n    const stopDrag = (component, snapInfo) => {\n      clear(component, snapInfo);\n    };\n    const findMatchingSnap = (snaps, newCoord, scroll, origin) => findMap(snaps, snap => {\n      const sensor = snap.sensor;\n      const inRange = withinRange(newCoord, sensor, snap.range.left, snap.range.top, scroll, origin);\n      return inRange ? Optional.some({\n        output: absorb(snap.output, newCoord, scroll, origin),\n        extra: snap.extra\n      }) : Optional.none();\n    });\n    const findClosestSnap = (component, snapInfo, newCoord, scroll, origin) => {\n      const snaps = snapInfo.getSnapPoints(component);\n      const matchSnap = findMatchingSnap(snaps, newCoord, scroll, origin);\n      return matchSnap.orThunk(() => {\n        const bestSnap = foldl(snaps, (acc, snap) => {\n          const sensor = snap.sensor;\n          const deltas = getDeltas(newCoord, sensor, snap.range.left, snap.range.top, scroll, origin);\n          return acc.deltas.fold(() => ({\n            deltas: Optional.some(deltas),\n            snap: Optional.some(snap)\n          }), bestDeltas => {\n            const currAvg = (deltas.left + deltas.top) / 2;\n            const bestAvg = (bestDeltas.left + bestDeltas.top) / 2;\n            if (currAvg <= bestAvg) {\n              return {\n                deltas: Optional.some(deltas),\n                snap: Optional.some(snap)\n              };\n            } else {\n              return acc;\n            }\n          });\n        }, {\n          deltas: Optional.none(),\n          snap: Optional.none()\n        });\n        return bestSnap.snap.map(snap => ({\n          output: absorb(snap.output, newCoord, scroll, origin),\n          extra: snap.extra\n        }));\n      });\n    };\n    const findSnap = (component, snapInfo, newCoord, scroll, origin) => {\n      const snaps = snapInfo.getSnapPoints(component);\n      return findMatchingSnap(snaps, newCoord, scroll, origin);\n    };\n    const snapTo$1 = (snap, scroll, origin) => ({\n      coord: absorb(snap.output, snap.output, scroll, origin),\n      extra: snap.extra\n    });\n\n    const snapTo = (component, dragConfig, _state, snap) => {\n      const target = dragConfig.getTarget(component.element);\n      if (dragConfig.repositionTarget) {\n        const doc = owner$4(component.element);\n        const scroll = get$b(doc);\n        const origin = getOrigin(target);\n        const snapPin = snapTo$1(snap, scroll, origin);\n        const styles = toStyles(snapPin.coord, scroll, origin);\n        setOptions(target, styles);\n      }\n    };\n\n    var DraggingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        snapTo: snapTo\n    });\n\n    const initialAttribute = 'data-initial-z-index';\n    const resetZIndex = blocker => {\n      parent(blocker.element).filter(isElement$1).each(root => {\n        getOpt(root, initialAttribute).fold(() => remove$6(root, 'z-index'), zIndex => set$8(root, 'z-index', zIndex));\n        remove$7(root, initialAttribute);\n      });\n    };\n    const changeZIndex = blocker => {\n      parent(blocker.element).filter(isElement$1).each(root => {\n        getRaw(root, 'z-index').each(zindex => {\n          set$9(root, initialAttribute, zindex);\n        });\n        set$8(root, 'z-index', get$e(blocker.element, 'z-index'));\n      });\n    };\n    const instigate = (anyComponent, blocker) => {\n      anyComponent.getSystem().addToGui(blocker);\n      changeZIndex(blocker);\n    };\n    const discard = blocker => {\n      resetZIndex(blocker);\n      blocker.getSystem().removeFromGui(blocker);\n    };\n    const createComponent = (component, blockerClass, blockerEvents) => component.getSystem().build(Container.sketch({\n      dom: {\n        styles: {\n          'left': '0px',\n          'top': '0px',\n          'width': '100%',\n          'height': '100%',\n          'position': 'fixed',\n          'z-index': '1000000000000000'\n        },\n        classes: [blockerClass]\n      },\n      events: blockerEvents\n    }));\n\n    var SnapSchema = optionObjOf('snaps', [\n      required$1('getSnapPoints'),\n      onHandler('onSensor'),\n      required$1('leftAttr'),\n      required$1('topAttr'),\n      defaulted('lazyViewport', win),\n      defaulted('mustSnap', false)\n    ]);\n\n    const schema$6 = [\n      defaulted('useFixed', never),\n      required$1('blockerClass'),\n      defaulted('getTarget', identity),\n      defaulted('onDrag', noop),\n      defaulted('repositionTarget', true),\n      defaulted('onDrop', noop),\n      defaultedFunction('getBounds', win),\n      SnapSchema\n    ];\n\n    const getCurrentCoord = target => lift3(getRaw(target, 'left'), getRaw(target, 'top'), getRaw(target, 'position'), (left, top, position) => {\n      const nu = position === 'fixed' ? fixed : offset;\n      return nu(parseInt(left, 10), parseInt(top, 10));\n    }).getOrThunk(() => {\n      const location = absolute$3(target);\n      return absolute(location.left, location.top);\n    });\n    const clampCoords = (component, coords, scroll, origin, startData) => {\n      const bounds = startData.bounds;\n      const absoluteCoord = asAbsolute(coords, scroll, origin);\n      const newX = clamp(absoluteCoord.left, bounds.x, bounds.x + bounds.width - startData.width);\n      const newY = clamp(absoluteCoord.top, bounds.y, bounds.y + bounds.height - startData.height);\n      const newCoords = absolute(newX, newY);\n      return coords.fold(() => {\n        const offset$1 = asOffset(newCoords, scroll, origin);\n        return offset(offset$1.left, offset$1.top);\n      }, constant$1(newCoords), () => {\n        const fixed$1 = asFixed(newCoords, scroll, origin);\n        return fixed(fixed$1.left, fixed$1.top);\n      });\n    };\n    const calcNewCoord = (component, optSnaps, currentCoord, scroll, origin, delta, startData) => {\n      const newCoord = optSnaps.fold(() => {\n        const translated = translate(currentCoord, delta.left, delta.top);\n        const fixedCoord = asFixed(translated, scroll, origin);\n        return fixed(fixedCoord.left, fixedCoord.top);\n      }, snapInfo => {\n        const snapping = moveOrSnap(component, snapInfo, currentCoord, delta, scroll, origin);\n        snapping.extra.each(extra => {\n          snapInfo.onSensor(component, extra);\n        });\n        return snapping.coord;\n      });\n      return clampCoords(component, newCoord, scroll, origin, startData);\n    };\n    const dragBy = (component, dragConfig, startData, delta) => {\n      const target = dragConfig.getTarget(component.element);\n      if (dragConfig.repositionTarget) {\n        const doc = owner$4(component.element);\n        const scroll = get$b(doc);\n        const origin = getOrigin(target);\n        const currentCoord = getCurrentCoord(target);\n        const newCoord = calcNewCoord(component, dragConfig.snaps, currentCoord, scroll, origin, delta, startData);\n        const styles = toStyles(newCoord, scroll, origin);\n        setOptions(target, styles);\n      }\n      dragConfig.onDrag(component, target, delta);\n    };\n\n    const calcStartData = (dragConfig, comp) => ({\n      bounds: dragConfig.getBounds(),\n      height: getOuter$2(comp.element),\n      width: getOuter$1(comp.element)\n    });\n    const move = (component, dragConfig, dragState, dragMode, event) => {\n      const delta = dragState.update(dragMode, event);\n      const dragStartData = dragState.getStartData().getOrThunk(() => calcStartData(dragConfig, component));\n      delta.each(dlt => {\n        dragBy(component, dragConfig, dragStartData, dlt);\n      });\n    };\n    const stop = (component, blocker, dragConfig, dragState) => {\n      blocker.each(discard);\n      dragConfig.snaps.each(snapInfo => {\n        stopDrag(component, snapInfo);\n      });\n      const target = dragConfig.getTarget(component.element);\n      dragState.reset();\n      dragConfig.onDrop(component, target);\n    };\n    const handlers = events => (dragConfig, dragState) => {\n      const updateStartState = comp => {\n        dragState.setStartData(calcStartData(dragConfig, comp));\n      };\n      return derive$2([\n        run$1(windowScroll(), comp => {\n          dragState.getStartData().each(() => updateStartState(comp));\n        }),\n        ...events(dragConfig, dragState, updateStartState)\n      ]);\n    };\n\n    const init$3 = dragApi => derive$2([\n      run$1(mousedown(), dragApi.forceDrop),\n      run$1(mouseup(), dragApi.drop),\n      run$1(mousemove(), (comp, simulatedEvent) => {\n        dragApi.move(simulatedEvent.event);\n      }),\n      run$1(mouseout(), dragApi.delayDrop)\n    ]);\n\n    const getData$1 = event => Optional.from(SugarPosition(event.x, event.y));\n    const getDelta$1 = (old, nu) => SugarPosition(nu.left - old.left, nu.top - old.top);\n\n    var MouseData = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getData: getData$1,\n        getDelta: getDelta$1\n    });\n\n    const events$3 = (dragConfig, dragState, updateStartState) => [run$1(mousedown(), (component, simulatedEvent) => {\n        const raw = simulatedEvent.event.raw;\n        if (raw.button !== 0) {\n          return;\n        }\n        simulatedEvent.stop();\n        const stop$1 = () => stop(component, Optional.some(blocker), dragConfig, dragState);\n        const delayDrop = DelayedFunction(stop$1, 200);\n        const dragApi = {\n          drop: stop$1,\n          delayDrop: delayDrop.schedule,\n          forceDrop: stop$1,\n          move: event => {\n            delayDrop.cancel();\n            move(component, dragConfig, dragState, MouseData, event);\n          }\n        };\n        const blocker = createComponent(component, dragConfig.blockerClass, init$3(dragApi));\n        const start = () => {\n          updateStartState(component);\n          instigate(component, blocker);\n        };\n        start();\n      })];\n    const schema$5 = [\n      ...schema$6,\n      output$1('dragger', { handlers: handlers(events$3) })\n    ];\n\n    const init$2 = dragApi => derive$2([\n      run$1(touchstart(), dragApi.forceDrop),\n      run$1(touchend(), dragApi.drop),\n      run$1(touchcancel(), dragApi.drop),\n      run$1(touchmove(), (comp, simulatedEvent) => {\n        dragApi.move(simulatedEvent.event);\n      })\n    ]);\n\n    const getDataFrom = touches => {\n      const touch = touches[0];\n      return Optional.some(SugarPosition(touch.clientX, touch.clientY));\n    };\n    const getData = event => {\n      const raw = event.raw;\n      const touches = raw.touches;\n      return touches.length === 1 ? getDataFrom(touches) : Optional.none();\n    };\n    const getDelta = (old, nu) => SugarPosition(nu.left - old.left, nu.top - old.top);\n\n    var TouchData = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getData: getData,\n        getDelta: getDelta\n    });\n\n    const events$2 = (dragConfig, dragState, updateStartState) => {\n      const blockerSingleton = value$2();\n      const stopBlocking = component => {\n        stop(component, blockerSingleton.get(), dragConfig, dragState);\n        blockerSingleton.clear();\n      };\n      return [\n        run$1(touchstart(), (component, simulatedEvent) => {\n          simulatedEvent.stop();\n          const stop = () => stopBlocking(component);\n          const dragApi = {\n            drop: stop,\n            delayDrop: noop,\n            forceDrop: stop,\n            move: event => {\n              move(component, dragConfig, dragState, TouchData, event);\n            }\n          };\n          const blocker = createComponent(component, dragConfig.blockerClass, init$2(dragApi));\n          blockerSingleton.set(blocker);\n          const start = () => {\n            updateStartState(component);\n            instigate(component, blocker);\n          };\n          start();\n        }),\n        run$1(touchmove(), (component, simulatedEvent) => {\n          simulatedEvent.stop();\n          move(component, dragConfig, dragState, TouchData, simulatedEvent.event);\n        }),\n        run$1(touchend(), (component, simulatedEvent) => {\n          simulatedEvent.stop();\n          stopBlocking(component);\n        }),\n        run$1(touchcancel(), stopBlocking)\n      ];\n    };\n    const schema$4 = [\n      ...schema$6,\n      output$1('dragger', { handlers: handlers(events$2) })\n    ];\n\n    const events$1 = (dragConfig, dragState, updateStartState) => [\n      ...events$3(dragConfig, dragState, updateStartState),\n      ...events$2(dragConfig, dragState, updateStartState)\n    ];\n    const schema$3 = [\n      ...schema$6,\n      output$1('dragger', { handlers: handlers(events$1) })\n    ];\n\n    const mouse = schema$5;\n    const touch = schema$4;\n    const mouseOrTouch = schema$3;\n\n    var DraggingBranches = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        mouse: mouse,\n        touch: touch,\n        mouseOrTouch: mouseOrTouch\n    });\n\n    const init$1 = () => {\n      let previous = Optional.none();\n      let startData = Optional.none();\n      const reset = () => {\n        previous = Optional.none();\n        startData = Optional.none();\n      };\n      const calculateDelta = (mode, nu) => {\n        const result = previous.map(old => mode.getDelta(old, nu));\n        previous = Optional.some(nu);\n        return result;\n      };\n      const update = (mode, dragEvent) => mode.getData(dragEvent).bind(nuData => calculateDelta(mode, nuData));\n      const setStartData = data => {\n        startData = Optional.some(data);\n      };\n      const getStartData = () => startData;\n      const readState = constant$1({});\n      return nu$8({\n        readState,\n        reset,\n        update,\n        getStartData,\n        setStartData\n      });\n    };\n\n    var DragState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init$1\n    });\n\n    const Dragging = createModes({\n      branchKey: 'mode',\n      branches: DraggingBranches,\n      name: 'dragging',\n      active: {\n        events: (dragConfig, dragState) => {\n          const dragger = dragConfig.dragger;\n          return dragger.handlers(dragConfig, dragState);\n        }\n      },\n      extra: {\n        snap: sConfig => ({\n          sensor: sConfig.sensor,\n          range: sConfig.range,\n          output: sConfig.output,\n          extra: Optional.from(sConfig.extra)\n        })\n      },\n      state: DragState,\n      apis: DraggingApis\n    });\n\n    const snapWidth = 40;\n    const snapOffset = snapWidth / 2;\n    const calcSnap = (selectorOpt, td, x, y, width, height) => selectorOpt.fold(() => Dragging.snap({\n      sensor: absolute(x - snapOffset, y - snapOffset),\n      range: SugarPosition(width, height),\n      output: absolute(Optional.some(x), Optional.some(y)),\n      extra: { td }\n    }), selectorHandle => {\n      const sensorLeft = x - snapOffset;\n      const sensorTop = y - snapOffset;\n      const sensorWidth = snapWidth;\n      const sensorHeight = snapWidth;\n      const rect = selectorHandle.element.dom.getBoundingClientRect();\n      return Dragging.snap({\n        sensor: absolute(sensorLeft, sensorTop),\n        range: SugarPosition(sensorWidth, sensorHeight),\n        output: absolute(Optional.some(x - rect.width / 2), Optional.some(y - rect.height / 2)),\n        extra: { td }\n      });\n    });\n    const getSnapsConfig = (getSnapPoints, cell, onChange) => {\n      const isSameCell = (cellOpt, td) => cellOpt.exists(currentTd => eq(currentTd, td));\n      return {\n        getSnapPoints,\n        leftAttr: 'data-drag-left',\n        topAttr: 'data-drag-top',\n        onSensor: (component, extra) => {\n          const td = extra.td;\n          if (!isSameCell(cell.get(), td)) {\n            cell.set(td);\n            onChange(td);\n          }\n        },\n        mustSnap: true\n      };\n    };\n    const createSelector = snaps => record(Button.sketch({\n      dom: {\n        tag: 'div',\n        classes: ['tox-selector']\n      },\n      buttonBehaviours: derive$1([\n        Dragging.config({\n          mode: 'mouseOrTouch',\n          blockerClass: 'blocker',\n          snaps\n        }),\n        Unselecting.config({})\n      ]),\n      eventOrder: {\n        mousedown: [\n          'dragging',\n          'alloy.base.behaviour'\n        ],\n        touchstart: [\n          'dragging',\n          'alloy.base.behaviour'\n        ]\n      }\n    }));\n    const setup$4 = (editor, sink) => {\n      const tlTds = Cell([]);\n      const brTds = Cell([]);\n      const isVisible = Cell(false);\n      const startCell = value$2();\n      const finishCell = value$2();\n      const getTopLeftSnap = td => {\n        const box = absolute$2(td);\n        return calcSnap(memTopLeft.getOpt(sink), td, box.x, box.y, box.width, box.height);\n      };\n      const getTopLeftSnaps = () => map$2(tlTds.get(), td => getTopLeftSnap(td));\n      const getBottomRightSnap = td => {\n        const box = absolute$2(td);\n        return calcSnap(memBottomRight.getOpt(sink), td, box.right, box.bottom, box.width, box.height);\n      };\n      const getBottomRightSnaps = () => map$2(brTds.get(), td => getBottomRightSnap(td));\n      const topLeftSnaps = getSnapsConfig(getTopLeftSnaps, startCell, start => {\n        finishCell.get().each(finish => {\n          editor.dispatch('TableSelectorChange', {\n            start,\n            finish\n          });\n        });\n      });\n      const bottomRightSnaps = getSnapsConfig(getBottomRightSnaps, finishCell, finish => {\n        startCell.get().each(start => {\n          editor.dispatch('TableSelectorChange', {\n            start,\n            finish\n          });\n        });\n      });\n      const memTopLeft = createSelector(topLeftSnaps);\n      const memBottomRight = createSelector(bottomRightSnaps);\n      const topLeft = build$1(memTopLeft.asSpec());\n      const bottomRight = build$1(memBottomRight.asSpec());\n      const showOrHideHandle = (selector, cell, isAbove, isBelow) => {\n        const cellRect = cell.dom.getBoundingClientRect();\n        remove$6(selector.element, 'display');\n        const viewportHeight = defaultView(SugarElement.fromDom(editor.getBody())).dom.innerHeight;\n        const aboveViewport = isAbove(cellRect);\n        const belowViewport = isBelow(cellRect, viewportHeight);\n        if (aboveViewport || belowViewport) {\n          set$8(selector.element, 'display', 'none');\n        }\n      };\n      const snapTo = (selector, cell, getSnapConfig, pos) => {\n        const snap = getSnapConfig(cell);\n        Dragging.snapTo(selector, snap);\n        const isAbove = rect => rect[pos] < 0;\n        const isBelow = (rect, viewportHeight) => rect[pos] > viewportHeight;\n        showOrHideHandle(selector, cell, isAbove, isBelow);\n      };\n      const snapTopLeft = cell => snapTo(topLeft, cell, getTopLeftSnap, 'top');\n      const snapLastTopLeft = () => startCell.get().each(snapTopLeft);\n      const snapBottomRight = cell => snapTo(bottomRight, cell, getBottomRightSnap, 'bottom');\n      const snapLastBottomRight = () => finishCell.get().each(snapBottomRight);\n      if (detect$2().deviceType.isTouch()) {\n        editor.on('TableSelectionChange', e => {\n          if (!isVisible.get()) {\n            attach(sink, topLeft);\n            attach(sink, bottomRight);\n            isVisible.set(true);\n          }\n          startCell.set(e.start);\n          finishCell.set(e.finish);\n          e.otherCells.each(otherCells => {\n            tlTds.set(otherCells.upOrLeftCells);\n            brTds.set(otherCells.downOrRightCells);\n            snapTopLeft(e.start);\n            snapBottomRight(e.finish);\n          });\n        });\n        editor.on('ResizeEditor ResizeWindow ScrollContent', () => {\n          snapLastTopLeft();\n          snapLastBottomRight();\n        });\n        editor.on('TableSelectionClear', () => {\n          if (isVisible.get()) {\n            detach(topLeft);\n            detach(bottomRight);\n            isVisible.set(false);\n          }\n          startCell.clear();\n          finishCell.clear();\n        });\n      }\n    };\n\n    var Logo = \"<svg width=\\\"50px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 50 16\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <path fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\" d=\\\"M10.143 0c2.608.015 5.186 2.178 5.186 5.331 0 0 .077 3.812-.084 4.87-.361 2.41-2.164 4.074-4.65 4.496-1.453.284-2.523.49-3.212.623-.373.071-.634.122-.785.152-.184.038-.997.145-1.35.145-2.732 0-5.21-2.04-5.248-5.33 0 0 0-3.514.03-4.442.093-2.4 1.758-4.342 4.926-4.963 0 0 3.875-.752 4.036-.782.368-.07.775-.1 1.15-.1Zm1.826 2.8L5.83 3.989v2.393l-2.455.475v5.968l6.137-1.189V9.243l2.456-.476V2.8ZM5.83 6.382l3.682-.713v3.574l-3.682.713V6.382Zm27.173-1.64-.084-1.066h-2.226v9.132h2.456V7.743c-.008-1.151.998-2.064 2.149-2.072 1.15-.008 1.987.92 1.995 2.072v5.065h2.455V7.359c-.015-2.18-1.657-3.929-3.837-3.913a3.993 3.993 0 0 0-2.908 1.296Zm-6.3-4.266L29.16 0v2.387l-2.456.475V.476Zm0 3.2v9.132h2.456V3.676h-2.456Zm18.179 11.787L49.11 3.676H46.58l-1.612 4.527-.46 1.382-.384-1.382-1.611-4.527H39.98l3.3 9.132L42.15 16l2.732-.537ZM22.867 9.738c0 .752.568 1.075.921 1.075.353 0 .668-.047.998-.154l.537 1.765c-.23.154-.92.537-2.225.537-1.305 0-2.655-.997-2.686-2.686a136.877 136.877 0 0 1 0-4.374H18.8V3.676h1.612v-1.98l2.455-.476v2.456h2.302V5.9h-2.302v3.837Z\\\"/>\\n</svg>\\n\";\n\n    const isHidden = elm => elm.nodeName === 'BR' || !!elm.getAttribute('data-mce-bogus') || elm.getAttribute('data-mce-type') === 'bookmark';\n    const renderElementPath = (editor, settings, providersBackstage) => {\n      var _a;\n      const delimiter = (_a = settings.delimiter) !== null && _a !== void 0 ? _a : '\\u203A';\n      const renderElement = (name, element, index) => Button.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar__path-item'],\n          attributes: {\n            'data-index': index,\n            'aria-level': index + 1\n          }\n        },\n        components: [text$2(name)],\n        action: _btn => {\n          editor.focus();\n          editor.selection.select(element);\n          editor.nodeChanged();\n        },\n        buttonBehaviours: derive$1([\n          DisablingConfigs.button(providersBackstage.isDisabled),\n          receivingConfig()\n        ])\n      });\n      const renderDivider = () => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar__path-divider'],\n          attributes: { 'aria-hidden': true }\n        },\n        components: [text$2(` ${ delimiter } `)]\n      });\n      const renderPathData = data => foldl(data, (acc, path, index) => {\n        const element = renderElement(path.name, path.element, index);\n        if (index === 0) {\n          return acc.concat([element]);\n        } else {\n          return acc.concat([\n            renderDivider(),\n            element\n          ]);\n        }\n      }, []);\n      const updatePath = parents => {\n        const newPath = [];\n        let i = parents.length;\n        while (i-- > 0) {\n          const parent = parents[i];\n          if (parent.nodeType === 1 && !isHidden(parent)) {\n            const args = fireResolveName(editor, parent);\n            if (!args.isDefaultPrevented()) {\n              newPath.push({\n                name: args.name,\n                element: parent\n              });\n            }\n            if (args.isPropagationStopped()) {\n              break;\n            }\n          }\n        }\n        return newPath;\n      };\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar__path'],\n          attributes: { role: 'navigation' }\n        },\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'flow',\n            selector: 'div[role=button]'\n          }),\n          Disabling.config({ disabled: providersBackstage.isDisabled }),\n          receivingConfig(),\n          Tabstopping.config({}),\n          Replacing.config({}),\n          config('elementPathEvents', [runOnAttached((comp, _e) => {\n              editor.shortcuts.add('alt+F11', 'focus statusbar elementpath', () => Keying.focusIn(comp));\n              editor.on('NodeChange', e => {\n                const newPath = updatePath(e.parents);\n                const newChildren = newPath.length > 0 ? renderPathData(newPath) : [];\n                Replacing.set(comp, newChildren);\n              });\n            })])\n        ]),\n        components: []\n      };\n    };\n\n    var ResizeTypes;\n    (function (ResizeTypes) {\n      ResizeTypes[ResizeTypes['None'] = 0] = 'None';\n      ResizeTypes[ResizeTypes['Both'] = 1] = 'Both';\n      ResizeTypes[ResizeTypes['Vertical'] = 2] = 'Vertical';\n    }(ResizeTypes || (ResizeTypes = {})));\n    const getDimensions = (editor, deltas, resizeType, originalHeight, originalWidth) => {\n      const dimensions = { height: calcCappedSize(originalHeight + deltas.top, getMinHeightOption(editor), getMaxHeightOption(editor)) };\n      if (resizeType === ResizeTypes.Both) {\n        dimensions.width = calcCappedSize(originalWidth + deltas.left, getMinWidthOption(editor), getMaxWidthOption(editor));\n      }\n      return dimensions;\n    };\n    const resize = (editor, deltas, resizeType) => {\n      const container = SugarElement.fromDom(editor.getContainer());\n      const dimensions = getDimensions(editor, deltas, resizeType, get$d(container), get$c(container));\n      each(dimensions, (val, dim) => {\n        if (isNumber(val)) {\n          set$8(container, dim, numToPx(val));\n        }\n      });\n      fireResizeEditor(editor);\n    };\n\n    const getResizeType = editor => {\n      const resize = getResize(editor);\n      if (resize === false) {\n        return ResizeTypes.None;\n      } else if (resize === 'both') {\n        return ResizeTypes.Both;\n      } else {\n        return ResizeTypes.Vertical;\n      }\n    };\n    const keyboardHandler = (editor, resizeType, x, y) => {\n      const scale = 20;\n      const delta = SugarPosition(x * scale, y * scale);\n      resize(editor, delta, resizeType);\n      return Optional.some(true);\n    };\n    const renderResizeHandler = (editor, providersBackstage) => {\n      const resizeType = getResizeType(editor);\n      if (resizeType === ResizeTypes.None) {\n        return Optional.none();\n      }\n      const resizeLabel = resizeType === ResizeTypes.Both ? 'Press the arrow keys to resize the editor.' : 'Press the Up and Down arrow keys to resize the editor.';\n      return Optional.some(render$3('resize-handle', {\n        tag: 'div',\n        classes: ['tox-statusbar__resize-handle'],\n        attributes: {\n          'title': providersBackstage.translate('Resize'),\n          'aria-label': providersBackstage.translate(resizeLabel)\n        },\n        behaviours: [\n          Dragging.config({\n            mode: 'mouse',\n            repositionTarget: false,\n            onDrag: (_comp, _target, delta) => resize(editor, delta, resizeType),\n            blockerClass: 'tox-blocker'\n          }),\n          Keying.config({\n            mode: 'special',\n            onLeft: () => keyboardHandler(editor, resizeType, -1, 0),\n            onRight: () => keyboardHandler(editor, resizeType, 1, 0),\n            onUp: () => keyboardHandler(editor, resizeType, 0, -1),\n            onDown: () => keyboardHandler(editor, resizeType, 0, 1)\n          }),\n          Tabstopping.config({}),\n          Focusing.config({})\n        ]\n      }, providersBackstage.icons));\n    };\n\n    const renderWordCount = (editor, providersBackstage) => {\n      const replaceCountText = (comp, count, mode) => Replacing.set(comp, [text$2(providersBackstage.translate([\n          '{0} ' + mode,\n          count[mode]\n        ]))]);\n      return Button.sketch({\n        dom: {\n          tag: 'button',\n          classes: ['tox-statusbar__wordcount']\n        },\n        components: [],\n        buttonBehaviours: derive$1([\n          DisablingConfigs.button(providersBackstage.isDisabled),\n          receivingConfig(),\n          Tabstopping.config({}),\n          Replacing.config({}),\n          Representing.config({\n            store: {\n              mode: 'memory',\n              initialValue: {\n                mode: 'words',\n                count: {\n                  words: 0,\n                  characters: 0\n                }\n              }\n            }\n          }),\n          config('wordcount-events', [\n            runOnExecute$1(comp => {\n              const currentVal = Representing.getValue(comp);\n              const newMode = currentVal.mode === 'words' ? 'characters' : 'words';\n              Representing.setValue(comp, {\n                mode: newMode,\n                count: currentVal.count\n              });\n              replaceCountText(comp, currentVal.count, newMode);\n            }),\n            runOnAttached(comp => {\n              editor.on('wordCountUpdate', e => {\n                const {mode} = Representing.getValue(comp);\n                Representing.setValue(comp, {\n                  mode,\n                  count: e.wordCount\n                });\n                replaceCountText(comp, e.wordCount, mode);\n              });\n            })\n          ])\n        ]),\n        eventOrder: {\n          [execute$5()]: [\n            'disabling',\n            'alloy.base.behaviour',\n            'wordcount-events'\n          ]\n        }\n      });\n    };\n\n    const renderStatusbar = (editor, providersBackstage) => {\n      const renderBranding = () => {\n        return {\n          dom: {\n            tag: 'span',\n            classes: ['tox-statusbar__branding']\n          },\n          components: [{\n              dom: {\n                tag: 'a',\n                attributes: {\n                  'href': 'https://www.tiny.cloud/powered-by-tiny?utm_campaign=poweredby&utm_source=tiny&utm_medium=referral&utm_content=v6',\n                  'rel': 'noopener',\n                  'target': '_blank',\n                  'aria-label': global$8.translate([\n                    'Powered by {0}',\n                    'Tiny'\n                  ])\n                },\n                innerHtml: Logo.trim()\n              },\n              behaviours: derive$1([Focusing.config({})])\n            }]\n        };\n      };\n      const renderHelpAccessibility = () => {\n        const shortcutText = convertText('Alt+0');\n        const text = `Press {0} for help`;\n        return {\n          dom: {\n            tag: 'div',\n            classes: ['tox-statusbar__help-text']\n          },\n          components: [text$2(global$8.translate([\n              text,\n              shortcutText\n            ]))]\n        };\n      };\n      const renderRightContainer = () => {\n        const components = [];\n        if (editor.hasPlugin('wordcount')) {\n          components.push(renderWordCount(editor, providersBackstage));\n        }\n        if (useBranding(editor)) {\n          components.push(renderBranding());\n        }\n        return {\n          dom: {\n            tag: 'div',\n            classes: ['tox-statusbar__right-container']\n          },\n          components\n        };\n      };\n      const getTextComponents = () => {\n        const components = [];\n        const shouldRenderHelp = useHelpAccessibility(editor);\n        const shouldRenderElementPath = useElementPath(editor);\n        const shouldRenderRightContainer = useBranding(editor) || editor.hasPlugin('wordcount');\n        const getTextComponentClasses = () => {\n          const flexStart = 'tox-statusbar__text-container--flex-start';\n          const flexEnd = 'tox-statusbar__text-container--flex-end';\n          const spaceAround = 'tox-statusbar__text-container--space-around';\n          if (shouldRenderHelp) {\n            const container3Columns = 'tox-statusbar__text-container-3-cols';\n            if (!shouldRenderRightContainer && !shouldRenderElementPath) {\n              return [\n                container3Columns,\n                spaceAround\n              ];\n            }\n            if (shouldRenderRightContainer && !shouldRenderElementPath) {\n              return [\n                container3Columns,\n                flexEnd\n              ];\n            }\n            return [\n              container3Columns,\n              flexStart\n            ];\n          }\n          return [shouldRenderRightContainer && !shouldRenderElementPath ? flexEnd : flexStart];\n        };\n        if (shouldRenderElementPath) {\n          components.push(renderElementPath(editor, {}, providersBackstage));\n        }\n        if (shouldRenderHelp) {\n          components.push(renderHelpAccessibility());\n        }\n        if (shouldRenderRightContainer) {\n          components.push(renderRightContainer());\n        }\n        if (components.length > 0) {\n          return [{\n              dom: {\n                tag: 'div',\n                classes: [\n                  'tox-statusbar__text-container',\n                  ...getTextComponentClasses()\n                ]\n              },\n              components\n            }];\n        }\n        return [];\n      };\n      const getComponents = () => {\n        const components = getTextComponents();\n        const resizeHandler = renderResizeHandler(editor, providersBackstage);\n        return components.concat(resizeHandler.toArray());\n      };\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-statusbar']\n        },\n        components: getComponents()\n      };\n    };\n\n    const getLazyMothership = (label, singleton) => singleton.get().getOrDie(`UI for ${ label } has not been rendered`);\n    const setup$3 = (editor, setupForTheme) => {\n      const isInline = editor.inline;\n      const mode = isInline ? Inline : Iframe;\n      const header = isStickyToolbar(editor) ? StickyHeader : StaticHeader;\n      const lazyUiRefs = LazyUiReferences();\n      const lazyMothership = value$2();\n      const lazyDialogMothership = value$2();\n      const lazyPopupMothership = value$2();\n      const platform = detect$2();\n      const isTouch = platform.deviceType.isTouch();\n      const touchPlatformClass = 'tox-platform-touch';\n      const deviceClasses = isTouch ? [touchPlatformClass] : [];\n      const isToolbarBottom = isToolbarLocationBottom(editor);\n      const toolbarMode = getToolbarMode(editor);\n      const memAnchorBar = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-anchorbar']\n        }\n      });\n      const memBottomAnchorBar = record({\n        dom: {\n          tag: 'div',\n          classes: ['tox-bottom-anchorbar']\n        }\n      });\n      const lazyHeader = () => lazyUiRefs.mainUi.get().map(ui => ui.outerContainer).bind(OuterContainer.getHeader);\n      const lazyDialogSinkResult = () => Result.fromOption(lazyUiRefs.dialogUi.get().map(ui => ui.sink), 'UI has not been rendered');\n      const lazyPopupSinkResult = () => Result.fromOption(lazyUiRefs.popupUi.get().map(ui => ui.sink), '(popup) UI has not been rendered');\n      const lazyAnchorBar = lazyUiRefs.lazyGetInOuterOrDie('anchor bar', memAnchorBar.getOpt);\n      const lazyBottomAnchorBar = lazyUiRefs.lazyGetInOuterOrDie('bottom anchor bar', memBottomAnchorBar.getOpt);\n      const lazyToolbar = lazyUiRefs.lazyGetInOuterOrDie('toolbar', OuterContainer.getToolbar);\n      const lazyThrobber = lazyUiRefs.lazyGetInOuterOrDie('throbber', OuterContainer.getThrobber);\n      const backstages = init$6({\n        popup: lazyPopupSinkResult,\n        dialog: lazyDialogSinkResult\n      }, editor, lazyAnchorBar, lazyBottomAnchorBar);\n      const makeHeaderPart = () => {\n        const verticalDirAttributes = { attributes: { [Attribute]: isToolbarBottom ? AttributeValue.BottomToTop : AttributeValue.TopToBottom } };\n        const partMenubar = OuterContainer.parts.menubar({\n          dom: {\n            tag: 'div',\n            classes: ['tox-menubar']\n          },\n          backstage: backstages.popup,\n          onEscape: () => {\n            editor.focus();\n          }\n        });\n        const partToolbar = OuterContainer.parts.toolbar({\n          dom: {\n            tag: 'div',\n            classes: ['tox-toolbar']\n          },\n          getSink: backstages.popup.shared.getSink,\n          providers: backstages.popup.shared.providers,\n          onEscape: () => {\n            editor.focus();\n          },\n          onToolbarToggled: state => {\n            fireToggleToolbarDrawer(editor, state);\n          },\n          type: toolbarMode,\n          lazyToolbar,\n          lazyHeader: () => lazyHeader().getOrDie('Could not find header element'),\n          ...verticalDirAttributes\n        });\n        const partMultipleToolbar = OuterContainer.parts['multiple-toolbar']({\n          dom: {\n            tag: 'div',\n            classes: ['tox-toolbar-overlord']\n          },\n          providers: backstages.popup.shared.providers,\n          onEscape: () => {\n            editor.focus();\n          },\n          type: toolbarMode\n        });\n        const hasMultipleToolbar = isMultipleToolbars(editor);\n        const hasToolbar = isToolbarEnabled(editor);\n        const hasMenubar = isMenubarEnabled(editor);\n        const shouldHavePromotion = promotionEnabled(editor);\n        const partPromotion = makePromotion();\n        const hasAnyContents = hasMultipleToolbar || hasToolbar || hasMenubar;\n        const getPartToolbar = () => {\n          if (hasMultipleToolbar) {\n            return [partMultipleToolbar];\n          } else if (hasToolbar) {\n            return [partToolbar];\n          } else {\n            return [];\n          }\n        };\n        const menubarCollection = shouldHavePromotion ? [\n          partPromotion,\n          partMenubar\n        ] : [partMenubar];\n        return OuterContainer.parts.header({\n          dom: {\n            tag: 'div',\n            classes: ['tox-editor-header'].concat(hasAnyContents ? [] : ['tox-editor-header--empty']),\n            ...verticalDirAttributes\n          },\n          components: flatten([\n            hasMenubar ? menubarCollection : [],\n            getPartToolbar(),\n            useFixedContainer(editor) ? [] : [memAnchorBar.asSpec()]\n          ]),\n          sticky: isStickyToolbar(editor),\n          editor,\n          sharedBackstage: backstages.popup.shared\n        });\n      };\n      const makePromotion = () => {\n        return OuterContainer.parts.promotion({\n          dom: {\n            tag: 'div',\n            classes: ['tox-promotion']\n          }\n        });\n      };\n      const makeSidebarDefinition = () => {\n        const partSocket = OuterContainer.parts.socket({\n          dom: {\n            tag: 'div',\n            classes: ['tox-edit-area']\n          }\n        });\n        const partSidebar = OuterContainer.parts.sidebar({\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar']\n          }\n        });\n        return {\n          dom: {\n            tag: 'div',\n            classes: ['tox-sidebar-wrap']\n          },\n          components: [\n            partSocket,\n            partSidebar\n          ]\n        };\n      };\n      const renderDialogUi = () => {\n        const uiContainer = getUiContainer(editor);\n        const isGridUiContainer = eq(body(), uiContainer) && get$e(uiContainer, 'display') === 'grid';\n        const sinkSpec = {\n          dom: {\n            tag: 'div',\n            classes: [\n              'tox',\n              'tox-silver-sink',\n              'tox-tinymce-aux'\n            ].concat(deviceClasses),\n            attributes: { ...global$8.isRtl() ? { dir: 'rtl' } : {} }\n          },\n          behaviours: derive$1([Positioning.config({ useFixed: () => header.isDocked(lazyHeader) })])\n        };\n        const reactiveWidthSpec = {\n          dom: { styles: { width: document.body.clientWidth + 'px' } },\n          events: derive$2([run$1(windowResize(), comp => {\n              set$8(comp.element, 'width', document.body.clientWidth + 'px');\n            })])\n        };\n        const sink = build$1(deepMerge(sinkSpec, isGridUiContainer ? reactiveWidthSpec : {}));\n        const uiMothership = takeover(sink);\n        lazyDialogMothership.set(uiMothership);\n        return {\n          sink,\n          mothership: uiMothership\n        };\n      };\n      const renderPopupUi = () => {\n        const sinkSpec = {\n          dom: {\n            tag: 'div',\n            classes: [\n              'tox',\n              'tox-silver-sink',\n              'tox-silver-popup-sink',\n              'tox-tinymce-aux'\n            ].concat(deviceClasses),\n            attributes: { ...global$8.isRtl() ? { dir: 'rtl' } : {} }\n          },\n          behaviours: derive$1([Positioning.config({\n              useFixed: () => header.isDocked(lazyHeader),\n              getBounds: () => setupForTheme.getPopupSinkBounds()\n            })])\n        };\n        const sink = build$1(sinkSpec);\n        const uiMothership = takeover(sink);\n        lazyPopupMothership.set(uiMothership);\n        return {\n          sink,\n          mothership: uiMothership\n        };\n      };\n      const renderMainUi = () => {\n        const partHeader = makeHeaderPart();\n        const sidebarContainer = makeSidebarDefinition();\n        const partThrobber = OuterContainer.parts.throbber({\n          dom: {\n            tag: 'div',\n            classes: ['tox-throbber']\n          },\n          backstage: backstages.popup\n        });\n        const partViewWrapper = OuterContainer.parts.viewWrapper({ backstage: backstages.popup });\n        const statusbar = useStatusBar(editor) && !isInline ? Optional.some(renderStatusbar(editor, backstages.popup.shared.providers)) : Optional.none();\n        const editorComponents = flatten([\n          isToolbarBottom ? [] : [partHeader],\n          isInline ? [] : [sidebarContainer],\n          isToolbarBottom ? [partHeader] : []\n        ]);\n        const editorContainer = OuterContainer.parts.editorContainer({\n          components: flatten([\n            editorComponents,\n            isInline ? [] : [\n              memBottomAnchorBar.asSpec(),\n              ...statusbar.toArray()\n            ]\n          ])\n        });\n        const isHidden = isDistractionFree(editor);\n        const attributes = {\n          role: 'application',\n          ...global$8.isRtl() ? { dir: 'rtl' } : {},\n          ...isHidden ? { 'aria-hidden': 'true' } : {}\n        };\n        const outerContainer = build$1(OuterContainer.sketch({\n          dom: {\n            tag: 'div',\n            classes: [\n              'tox',\n              'tox-tinymce'\n            ].concat(isInline ? ['tox-tinymce-inline'] : []).concat(isToolbarBottom ? ['tox-tinymce--toolbar-bottom'] : []).concat(deviceClasses),\n            styles: {\n              visibility: 'hidden',\n              ...isHidden ? {\n                opacity: '0',\n                border: '0'\n              } : {}\n            },\n            attributes\n          },\n          components: [\n            editorContainer,\n            ...isInline ? [] : [partViewWrapper],\n            partThrobber\n          ],\n          behaviours: derive$1([\n            receivingConfig(),\n            Disabling.config({ disableClass: 'tox-tinymce--disabled' }),\n            Keying.config({\n              mode: 'cyclic',\n              selector: '.tox-menubar, .tox-toolbar, .tox-toolbar__primary, .tox-toolbar__overflow--open, .tox-sidebar__overflow--open, .tox-statusbar__path, .tox-statusbar__wordcount, .tox-statusbar__branding a, .tox-statusbar__resize-handle'\n            })\n          ])\n        }));\n        const mothership = takeover(outerContainer);\n        lazyMothership.set(mothership);\n        return {\n          mothership,\n          outerContainer\n        };\n      };\n      const setEditorSize = outerContainer => {\n        const parsedHeight = numToPx(getHeightWithFallback(editor));\n        const parsedWidth = numToPx(getWidthWithFallback(editor));\n        if (!editor.inline) {\n          if (isValidValue$1('div', 'width', parsedWidth)) {\n            set$8(outerContainer.element, 'width', parsedWidth);\n          }\n          if (isValidValue$1('div', 'height', parsedHeight)) {\n            set$8(outerContainer.element, 'height', parsedHeight);\n          } else {\n            set$8(outerContainer.element, 'height', '400px');\n          }\n        }\n        return parsedHeight;\n      };\n      const setupShortcutsAndCommands = outerContainer => {\n        editor.addShortcut('alt+F9', 'focus menubar', () => {\n          OuterContainer.focusMenubar(outerContainer);\n        });\n        editor.addShortcut('alt+F10', 'focus toolbar', () => {\n          OuterContainer.focusToolbar(outerContainer);\n        });\n        editor.addCommand('ToggleToolbarDrawer', (_ui, options) => {\n          if (options === null || options === void 0 ? void 0 : options.skipFocus) {\n            OuterContainer.toggleToolbarDrawerWithoutFocusing(outerContainer);\n          } else {\n            OuterContainer.toggleToolbarDrawer(outerContainer);\n          }\n        });\n        editor.addQueryStateHandler('ToggleToolbarDrawer', () => OuterContainer.isToolbarDrawerToggled(outerContainer));\n      };\n      const renderUIWithRefs = uiRefs => {\n        const {mainUi, popupUi, uiMotherships} = uiRefs;\n        map$1(getToolbarGroups(editor), (toolbarGroupButtonConfig, name) => {\n          editor.ui.registry.addGroupToolbarButton(name, toolbarGroupButtonConfig);\n        });\n        const {buttons, menuItems, contextToolbars, sidebars, views} = editor.ui.registry.getAll();\n        const toolbarOpt = getMultipleToolbarsOption(editor);\n        const rawUiConfig = {\n          menuItems,\n          menus: getMenus(editor),\n          menubar: getMenubar(editor),\n          toolbar: toolbarOpt.getOrThunk(() => getToolbar(editor)),\n          allowToolbarGroups: toolbarMode === ToolbarMode$1.floating,\n          buttons,\n          sidebar: sidebars,\n          views\n        };\n        setupShortcutsAndCommands(mainUi.outerContainer);\n        setup$b(editor, mainUi.mothership, uiMotherships);\n        header.setup(editor, backstages.popup.shared, lazyHeader);\n        setup$6(editor, backstages.popup);\n        setup$5(editor, backstages.popup.shared.getSink, backstages.popup);\n        setup$8(editor);\n        setup$7(editor, lazyThrobber, backstages.popup.shared);\n        register$9(editor, contextToolbars, popupUi.sink, { backstage: backstages.popup });\n        setup$4(editor, popupUi.sink);\n        const elm = editor.getElement();\n        const height = setEditorSize(mainUi.outerContainer);\n        const args = {\n          targetNode: elm,\n          height\n        };\n        return mode.render(editor, uiRefs, rawUiConfig, backstages.popup, args);\n      };\n      const reuseDialogUiForPopuUi = dialogUi => {\n        lazyPopupMothership.set(dialogUi.mothership);\n        return dialogUi;\n      };\n      const renderUI = () => {\n        const mainUi = renderMainUi();\n        const dialogUi = renderDialogUi();\n        const popupUi = isSplitUiMode(editor) ? renderPopupUi() : reuseDialogUiForPopuUi(dialogUi);\n        lazyUiRefs.dialogUi.set(dialogUi);\n        lazyUiRefs.popupUi.set(popupUi);\n        lazyUiRefs.mainUi.set(mainUi);\n        const uiRefs = {\n          popupUi,\n          dialogUi,\n          mainUi,\n          uiMotherships: lazyUiRefs.getUiMotherships()\n        };\n        return renderUIWithRefs(uiRefs);\n      };\n      return {\n        popups: {\n          backstage: backstages.popup,\n          getMothership: () => getLazyMothership('popups', lazyPopupMothership)\n        },\n        dialogs: {\n          backstage: backstages.dialog,\n          getMothership: () => getLazyMothership('dialogs', lazyDialogMothership)\n        },\n        renderUI\n      };\n    };\n\n    const labelledBy = (labelledElement, labelElement) => {\n      const labelId = getOpt(labelledElement, 'id').fold(() => {\n        const id = generate$6('dialog-label');\n        set$9(labelElement, 'id', id);\n        return id;\n      }, identity);\n      set$9(labelledElement, 'aria-labelledby', labelId);\n    };\n\n    const schema$2 = constant$1([\n      required$1('lazySink'),\n      option$3('dragBlockClass'),\n      defaultedFunction('getBounds', win),\n      defaulted('useTabstopAt', always),\n      defaulted('firstTabstop', 0),\n      defaulted('eventOrder', {}),\n      field('modalBehaviours', [Keying]),\n      onKeyboardHandler('onExecute'),\n      onStrictKeyboardHandler('onEscape')\n    ]);\n    const basic = { sketch: identity };\n    const parts$2 = constant$1([\n      optional({\n        name: 'draghandle',\n        overrides: (detail, spec) => {\n          return {\n            behaviours: derive$1([Dragging.config({\n                mode: 'mouse',\n                getTarget: handle => {\n                  return ancestor(handle, '[role=\"dialog\"]').getOr(handle);\n                },\n                blockerClass: detail.dragBlockClass.getOrDie(new Error('The drag blocker class was not specified for a dialog with a drag handle: \\n' + JSON.stringify(spec, null, 2)).message),\n                getBounds: detail.getDragBounds\n              })])\n          };\n        }\n      }),\n      required({\n        schema: [required$1('dom')],\n        name: 'title'\n      }),\n      required({\n        factory: basic,\n        schema: [required$1('dom')],\n        name: 'close'\n      }),\n      required({\n        factory: basic,\n        schema: [required$1('dom')],\n        name: 'body'\n      }),\n      optional({\n        factory: basic,\n        schema: [required$1('dom')],\n        name: 'footer'\n      }),\n      external({\n        factory: {\n          sketch: (spec, detail) => ({\n            ...spec,\n            dom: detail.dom,\n            components: detail.components\n          })\n        },\n        schema: [\n          defaulted('dom', {\n            tag: 'div',\n            styles: {\n              position: 'fixed',\n              left: '0px',\n              top: '0px',\n              right: '0px',\n              bottom: '0px'\n            }\n          }),\n          defaulted('components', [])\n        ],\n        name: 'blocker'\n      })\n    ]);\n\n    const factory$4 = (detail, components, spec, externals) => {\n      const dialogComp = value$2();\n      const showDialog = dialog => {\n        dialogComp.set(dialog);\n        const sink = detail.lazySink(dialog).getOrDie();\n        const externalBlocker = externals.blocker();\n        const blocker = sink.getSystem().build({\n          ...externalBlocker,\n          components: externalBlocker.components.concat([premade(dialog)]),\n          behaviours: derive$1([\n            Focusing.config({}),\n            config('dialog-blocker-events', [runOnSource(focusin(), () => {\n                Blocking.isBlocked(dialog) ? noop() : Keying.focusIn(dialog);\n              })])\n          ])\n        });\n        attach(sink, blocker);\n        Keying.focusIn(dialog);\n      };\n      const hideDialog = dialog => {\n        dialogComp.clear();\n        parent(dialog.element).each(blockerDom => {\n          dialog.getSystem().getByDom(blockerDom).each(blocker => {\n            detach(blocker);\n          });\n        });\n      };\n      const getDialogBody = dialog => getPartOrDie(dialog, detail, 'body');\n      const getDialogFooter = dialog => getPart(dialog, detail, 'footer');\n      const setBusy = (dialog, getBusySpec) => {\n        Blocking.block(dialog, getBusySpec);\n      };\n      const setIdle = dialog => {\n        Blocking.unblock(dialog);\n      };\n      const modalEventsId = generate$6('modal-events');\n      const eventOrder = {\n        ...detail.eventOrder,\n        [attachedToDom()]: [modalEventsId].concat(detail.eventOrder['alloy.system.attached'] || [])\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        apis: {\n          show: showDialog,\n          hide: hideDialog,\n          getBody: getDialogBody,\n          getFooter: getDialogFooter,\n          setIdle,\n          setBusy\n        },\n        eventOrder,\n        domModification: {\n          attributes: {\n            'role': 'dialog',\n            'aria-modal': 'true'\n          }\n        },\n        behaviours: augment(detail.modalBehaviours, [\n          Replacing.config({}),\n          Keying.config({\n            mode: 'cyclic',\n            onEnter: detail.onExecute,\n            onEscape: detail.onEscape,\n            useTabstopAt: detail.useTabstopAt,\n            firstTabstop: detail.firstTabstop\n          }),\n          Blocking.config({ getRoot: dialogComp.get }),\n          config(modalEventsId, [runOnAttached(c => {\n              labelledBy(c.element, getPartOrDie(c, detail, 'title').element);\n            })])\n        ])\n      };\n    };\n    const ModalDialog = composite({\n      name: 'ModalDialog',\n      configFields: schema$2(),\n      partFields: parts$2(),\n      factory: factory$4,\n      apis: {\n        show: (apis, dialog) => {\n          apis.show(dialog);\n        },\n        hide: (apis, dialog) => {\n          apis.hide(dialog);\n        },\n        getBody: (apis, dialog) => apis.getBody(dialog),\n        getFooter: (apis, dialog) => apis.getFooter(dialog),\n        setBusy: (apis, dialog, getBusySpec) => {\n          apis.setBusy(dialog, getBusySpec);\n        },\n        setIdle: (apis, dialog) => {\n          apis.setIdle(dialog);\n        }\n      }\n    });\n\n    const dialogToggleMenuItemSchema = objOf([\n      type,\n      name$1\n    ].concat(commonMenuItemFields));\n    const dialogToggleMenuItemDataProcessor = boolean;\n\n    const baseFooterButtonFields = [\n      generatedName('button'),\n      optionalIcon,\n      defaultedStringEnum('align', 'end', [\n        'start',\n        'end'\n      ]),\n      primary,\n      enabled,\n      optionStringEnum('buttonType', [\n        'primary',\n        'secondary'\n      ])\n    ];\n    const dialogFooterButtonFields = [\n      ...baseFooterButtonFields,\n      text\n    ];\n    const normalFooterButtonFields = [\n      requiredStringEnum('type', [\n        'submit',\n        'cancel',\n        'custom'\n      ]),\n      ...dialogFooterButtonFields\n    ];\n    const menuFooterButtonFields = [\n      requiredStringEnum('type', ['menu']),\n      optionalText,\n      optionalTooltip,\n      optionalIcon,\n      requiredArrayOf('items', dialogToggleMenuItemSchema),\n      ...baseFooterButtonFields\n    ];\n    const toggleButtonSpecFields = [\n      ...baseFooterButtonFields,\n      requiredStringEnum('type', ['togglebutton']),\n      requiredString('tooltip'),\n      optionalIcon,\n      optionalText,\n      defaultedBoolean('active', false)\n    ];\n    const dialogFooterButtonSchema = choose$1('type', {\n      submit: normalFooterButtonFields,\n      cancel: normalFooterButtonFields,\n      custom: normalFooterButtonFields,\n      menu: menuFooterButtonFields,\n      togglebutton: toggleButtonSpecFields\n    });\n\n    const alertBannerFields = [\n      type,\n      text,\n      requiredStringEnum('level', [\n        'info',\n        'warn',\n        'error',\n        'success'\n      ]),\n      icon,\n      defaulted('url', '')\n    ];\n    const alertBannerSchema = objOf(alertBannerFields);\n\n    const createBarFields = itemsField => [\n      type,\n      itemsField\n    ];\n\n    const buttonFields = [\n      type,\n      text,\n      enabled,\n      generatedName('button'),\n      optionalIcon,\n      borderless,\n      optionStringEnum('buttonType', [\n        'primary',\n        'secondary',\n        'toolbar'\n      ]),\n      primary\n    ];\n    const buttonSchema = objOf(buttonFields);\n\n    const formComponentFields = [\n      type,\n      name$1\n    ];\n    const formComponentWithLabelFields = formComponentFields.concat([optionalLabel]);\n\n    const checkboxFields = formComponentFields.concat([\n      label,\n      enabled\n    ]);\n    const checkboxSchema = objOf(checkboxFields);\n    const checkboxDataProcessor = boolean;\n\n    const collectionFields = formComponentWithLabelFields.concat([defaultedColumns('auto')]);\n    const collectionSchema = objOf(collectionFields);\n    const collectionDataProcessor = arrOfObj([\n      value$1,\n      text,\n      icon\n    ]);\n\n    const colorInputFields = formComponentWithLabelFields.concat([defaultedString('storageKey', 'default')]);\n    const colorInputSchema = objOf(colorInputFields);\n    const colorInputDataProcessor = string;\n\n    const colorPickerFields = formComponentWithLabelFields;\n    const colorPickerSchema = objOf(colorPickerFields);\n    const colorPickerDataProcessor = string;\n\n    const customEditorFields = formComponentFields.concat([\n      defaultedString('tag', 'textarea'),\n      requiredString('scriptId'),\n      requiredString('scriptUrl'),\n      defaultedPostMsg('settings', undefined)\n    ]);\n    const customEditorFieldsOld = formComponentFields.concat([\n      defaultedString('tag', 'textarea'),\n      requiredFunction('init')\n    ]);\n    const customEditorSchema = valueOf(v => asRaw('customeditor.old', objOfOnly(customEditorFieldsOld), v).orThunk(() => asRaw('customeditor.new', objOfOnly(customEditorFields), v)));\n    const customEditorDataProcessor = string;\n\n    const dropZoneFields = formComponentWithLabelFields;\n    const dropZoneSchema = objOf(dropZoneFields);\n    const dropZoneDataProcessor = arrOfVal();\n\n    const createGridFields = itemsField => [\n      type,\n      requiredNumber('columns'),\n      itemsField\n    ];\n\n    const htmlPanelFields = [\n      type,\n      requiredString('html'),\n      defaultedStringEnum('presets', 'presentation', [\n        'presentation',\n        'document'\n      ])\n    ];\n    const htmlPanelSchema = objOf(htmlPanelFields);\n\n    const iframeFields = formComponentWithLabelFields.concat([\n      defaultedBoolean('border', false),\n      defaultedBoolean('sandboxed', true),\n      defaultedBoolean('streamContent', false),\n      defaultedBoolean('transparent', true)\n    ]);\n    const iframeSchema = objOf(iframeFields);\n    const iframeDataProcessor = string;\n\n    const imagePreviewSchema = objOf(formComponentFields.concat([optionString('height')]));\n    const imagePreviewDataProcessor = objOf([\n      requiredString('url'),\n      optionNumber('zoom'),\n      optionNumber('cachedWidth'),\n      optionNumber('cachedHeight')\n    ]);\n\n    const inputFields = formComponentWithLabelFields.concat([\n      optionString('inputMode'),\n      optionString('placeholder'),\n      defaultedBoolean('maximized', false),\n      enabled\n    ]);\n    const inputSchema = objOf(inputFields);\n    const inputDataProcessor = string;\n\n    const createLabelFields = itemsField => [\n      type,\n      label,\n      itemsField,\n      defaultedStringEnum('align', 'start', [\n        'start',\n        'center',\n        'end'\n      ])\n    ];\n\n    const listBoxSingleItemFields = [\n      text,\n      value$1\n    ];\n    const listBoxNestedItemFields = [\n      text,\n      requiredArrayOf('items', thunkOf('items', () => listBoxItemSchema))\n    ];\n    const listBoxItemSchema = oneOf([\n      objOf(listBoxSingleItemFields),\n      objOf(listBoxNestedItemFields)\n    ]);\n    const listBoxFields = formComponentWithLabelFields.concat([\n      requiredArrayOf('items', listBoxItemSchema),\n      enabled\n    ]);\n    const listBoxSchema = objOf(listBoxFields);\n    const listBoxDataProcessor = string;\n\n    const selectBoxFields = formComponentWithLabelFields.concat([\n      requiredArrayOfObj('items', [\n        text,\n        value$1\n      ]),\n      defaultedNumber('size', 1),\n      enabled\n    ]);\n    const selectBoxSchema = objOf(selectBoxFields);\n    const selectBoxDataProcessor = string;\n\n    const sizeInputFields = formComponentWithLabelFields.concat([\n      defaultedBoolean('constrain', true),\n      enabled\n    ]);\n    const sizeInputSchema = objOf(sizeInputFields);\n    const sizeInputDataProcessor = objOf([\n      requiredString('width'),\n      requiredString('height')\n    ]);\n\n    const sliderFields = formComponentFields.concat([\n      label,\n      defaultedNumber('min', 0),\n      defaultedNumber('max', 0)\n    ]);\n    const sliderSchema = objOf(sliderFields);\n    const sliderInputDataProcessor = number;\n\n    const tableFields = [\n      type,\n      requiredArrayOf('header', string),\n      requiredArrayOf('cells', arrOf(string))\n    ];\n    const tableSchema = objOf(tableFields);\n\n    const textAreaFields = formComponentWithLabelFields.concat([\n      optionString('placeholder'),\n      defaultedBoolean('maximized', false),\n      enabled\n    ]);\n    const textAreaSchema = objOf(textAreaFields);\n    const textAreaDataProcessor = string;\n\n    const baseTreeItemFields = [\n      requiredStringEnum('type', [\n        'directory',\n        'leaf'\n      ]),\n      title,\n      requiredString('id'),\n      optionOf('menu', MenuButtonSchema)\n    ];\n    const treeItemLeafFields = baseTreeItemFields;\n    const treeItemLeafSchema = objOf(treeItemLeafFields);\n    const treeItemDirectoryFields = baseTreeItemFields.concat([requiredArrayOf('children', thunkOf('children', () => {\n        return choose$2('type', {\n          directory: treeItemDirectorySchema,\n          leaf: treeItemLeafSchema\n        });\n      }))]);\n    const treeItemDirectorySchema = objOf(treeItemDirectoryFields);\n    const treeItemSchema = choose$2('type', {\n      directory: treeItemDirectorySchema,\n      leaf: treeItemLeafSchema\n    });\n    const treeFields = [\n      type,\n      requiredArrayOf('items', treeItemSchema),\n      optionFunction('onLeafAction'),\n      optionFunction('onToggleExpand'),\n      defaultedArrayOf('defaultExpandedIds', [], string),\n      optionString('defaultSelectedId')\n    ];\n    const treeSchema = objOf(treeFields);\n\n    const urlInputFields = formComponentWithLabelFields.concat([\n      defaultedStringEnum('filetype', 'file', [\n        'image',\n        'media',\n        'file'\n      ]),\n      enabled,\n      optionString('picker_text')\n    ]);\n    const urlInputSchema = objOf(urlInputFields);\n    const urlInputDataProcessor = objOf([\n      value$1,\n      defaultedMeta\n    ]);\n\n    const createItemsField = name => field$1('items', 'items', required$2(), arrOf(valueOf(v => asRaw(`Checking item of ${ name }`, itemSchema, v).fold(sErr => Result.error(formatError(sErr)), passValue => Result.value(passValue)))));\n    const itemSchema = valueThunk(() => choose$2('type', {\n      alertbanner: alertBannerSchema,\n      bar: objOf(createBarFields(createItemsField('bar'))),\n      button: buttonSchema,\n      checkbox: checkboxSchema,\n      colorinput: colorInputSchema,\n      colorpicker: colorPickerSchema,\n      dropzone: dropZoneSchema,\n      grid: objOf(createGridFields(createItemsField('grid'))),\n      iframe: iframeSchema,\n      input: inputSchema,\n      listbox: listBoxSchema,\n      selectbox: selectBoxSchema,\n      sizeinput: sizeInputSchema,\n      slider: sliderSchema,\n      textarea: textAreaSchema,\n      urlinput: urlInputSchema,\n      customeditor: customEditorSchema,\n      htmlpanel: htmlPanelSchema,\n      imagepreview: imagePreviewSchema,\n      collection: collectionSchema,\n      label: objOf(createLabelFields(createItemsField('label'))),\n      table: tableSchema,\n      tree: treeSchema,\n      panel: panelSchema\n    }));\n    const panelFields = [\n      type,\n      defaulted('classes', []),\n      requiredArrayOf('items', itemSchema)\n    ];\n    const panelSchema = objOf(panelFields);\n\n    const tabFields = [\n      generatedName('tab'),\n      title,\n      requiredArrayOf('items', itemSchema)\n    ];\n    const tabPanelFields = [\n      type,\n      requiredArrayOfObj('tabs', tabFields)\n    ];\n    const tabPanelSchema = objOf(tabPanelFields);\n\n    const dialogButtonFields = dialogFooterButtonFields;\n    const dialogButtonSchema = dialogFooterButtonSchema;\n    const dialogSchema = objOf([\n      requiredString('title'),\n      requiredOf('body', choose$2('type', {\n        panel: panelSchema,\n        tabpanel: tabPanelSchema\n      })),\n      defaultedString('size', 'normal'),\n      defaultedArrayOf('buttons', [], dialogButtonSchema),\n      defaulted('initialData', {}),\n      defaultedFunction('onAction', noop),\n      defaultedFunction('onChange', noop),\n      defaultedFunction('onSubmit', noop),\n      defaultedFunction('onClose', noop),\n      defaultedFunction('onCancel', noop),\n      defaultedFunction('onTabChange', noop)\n    ]);\n    const createDialog = spec => asRaw('dialog', dialogSchema, spec);\n\n    const urlDialogButtonSchema = objOf([\n      requiredStringEnum('type', [\n        'cancel',\n        'custom'\n      ]),\n      ...dialogButtonFields\n    ]);\n    const urlDialogSchema = objOf([\n      requiredString('title'),\n      requiredString('url'),\n      optionNumber('height'),\n      optionNumber('width'),\n      optionArrayOf('buttons', urlDialogButtonSchema),\n      defaultedFunction('onAction', noop),\n      defaultedFunction('onCancel', noop),\n      defaultedFunction('onClose', noop),\n      defaultedFunction('onMessage', noop)\n    ]);\n    const createUrlDialog = spec => asRaw('dialog', urlDialogSchema, spec);\n\n    const getAllObjects = obj => {\n      if (isObject(obj)) {\n        return [obj].concat(bind$3(values(obj), getAllObjects));\n      } else if (isArray(obj)) {\n        return bind$3(obj, getAllObjects);\n      } else {\n        return [];\n      }\n    };\n\n    const isNamedItem = obj => isString(obj.type) && isString(obj.name);\n    const dataProcessors = {\n      checkbox: checkboxDataProcessor,\n      colorinput: colorInputDataProcessor,\n      colorpicker: colorPickerDataProcessor,\n      dropzone: dropZoneDataProcessor,\n      input: inputDataProcessor,\n      iframe: iframeDataProcessor,\n      imagepreview: imagePreviewDataProcessor,\n      selectbox: selectBoxDataProcessor,\n      sizeinput: sizeInputDataProcessor,\n      slider: sliderInputDataProcessor,\n      listbox: listBoxDataProcessor,\n      size: sizeInputDataProcessor,\n      textarea: textAreaDataProcessor,\n      urlinput: urlInputDataProcessor,\n      customeditor: customEditorDataProcessor,\n      collection: collectionDataProcessor,\n      togglemenuitem: dialogToggleMenuItemDataProcessor\n    };\n    const getDataProcessor = item => Optional.from(dataProcessors[item.type]);\n    const getNamedItems = structure => filter$2(getAllObjects(structure), isNamedItem);\n\n    const createDataValidator = structure => {\n      const namedItems = getNamedItems(structure);\n      const fields = bind$3(namedItems, item => getDataProcessor(item).fold(() => [], schema => [requiredOf(item.name, schema)]));\n      return objOf(fields);\n    };\n\n    const extract = structure => {\n      var _a;\n      const internalDialog = getOrDie(createDialog(structure));\n      const dataValidator = createDataValidator(structure);\n      const initialData = (_a = structure.initialData) !== null && _a !== void 0 ? _a : {};\n      return {\n        internalDialog,\n        dataValidator,\n        initialData\n      };\n    };\n    const DialogManager = {\n      open: (factory, structure) => {\n        const extraction = extract(structure);\n        return factory(extraction.internalDialog, extraction.initialData, extraction.dataValidator);\n      },\n      openUrl: (factory, structure) => {\n        const internalDialog = getOrDie(createUrlDialog(structure));\n        return factory(internalDialog);\n      },\n      redial: structure => extract(structure)\n    };\n\n    const events = (reflectingConfig, reflectingState) => {\n      const update = (component, data) => {\n        reflectingConfig.updateState.each(updateState => {\n          const newState = updateState(component, data);\n          reflectingState.set(newState);\n        });\n        reflectingConfig.renderComponents.each(renderComponents => {\n          const newComponents = renderComponents(data, reflectingState.get());\n          const replacer = reflectingConfig.reuseDom ? withReuse : withoutReuse;\n          replacer(component, newComponents);\n        });\n      };\n      return derive$2([\n        run$1(receive(), (component, message) => {\n          const receivingData = message;\n          if (!receivingData.universal) {\n            const channel = reflectingConfig.channel;\n            if (contains$2(receivingData.channels, channel)) {\n              update(component, receivingData.data);\n            }\n          }\n        }),\n        runOnAttached((comp, _se) => {\n          reflectingConfig.initialData.each(rawData => {\n            update(comp, rawData);\n          });\n        })\n      ]);\n    };\n\n    var ActiveReflecting = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        events: events\n    });\n\n    const getState = (component, replaceConfig, reflectState) => reflectState;\n\n    var ReflectingApis = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getState: getState\n    });\n\n    var ReflectingSchema = [\n      required$1('channel'),\n      option$3('renderComponents'),\n      option$3('updateState'),\n      option$3('initialData'),\n      defaultedBoolean('reuseDom', true)\n    ];\n\n    const init = () => {\n      const cell = Cell(Optional.none());\n      const clear = () => cell.set(Optional.none());\n      const readState = () => cell.get().getOr('none');\n      return {\n        readState,\n        get: cell.get,\n        set: cell.set,\n        clear\n      };\n    };\n\n    var ReflectingState = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        init: init\n    });\n\n    const Reflecting = create$4({\n      fields: ReflectingSchema,\n      name: 'reflecting',\n      active: ActiveReflecting,\n      apis: ReflectingApis,\n      state: ReflectingState\n    });\n\n    const toValidValues = values => {\n      const errors = [];\n      const result = {};\n      each(values, (value, name) => {\n        value.fold(() => {\n          errors.push(name);\n        }, v => {\n          result[name] = v;\n        });\n      });\n      return errors.length > 0 ? Result.error(errors) : Result.value(result);\n    };\n\n    const renderBodyPanel = (spec, dialogData, backstage) => {\n      const memForm = record(Form.sketch(parts => ({\n        dom: {\n          tag: 'div',\n          classes: ['tox-form'].concat(spec.classes)\n        },\n        components: map$2(spec.items, item => interpretInForm(parts, item, dialogData, backstage))\n      })));\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__body']\n        },\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-content']\n            },\n            components: [memForm.asSpec()]\n          }],\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'acyclic',\n            useTabstopAt: not(isPseudoStop)\n          }),\n          ComposingConfigs.memento(memForm),\n          memento(memForm, {\n            postprocess: formValue => toValidValues(formValue).fold(err => {\n              console.error(err);\n              return {};\n            }, identity)\n          }),\n          config('dialog-body-panel', [run$1(focusin(), (comp, se) => {\n              comp.getSystem().broadcastOn([dialogFocusShiftedChannel], { newFocus: Optional.some(se.event.target) });\n            })])\n        ])\n      };\n    };\n\n    const factory$3 = (detail, _spec) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      components: detail.components,\n      events: events$a(detail.action),\n      behaviours: augment(detail.tabButtonBehaviours, [\n        Focusing.config({}),\n        Keying.config({\n          mode: 'execution',\n          useSpace: true,\n          useEnter: true\n        }),\n        Representing.config({\n          store: {\n            mode: 'memory',\n            initialValue: detail.value\n          }\n        })\n      ]),\n      domModification: detail.domModification\n    });\n    const TabButton = single({\n      name: 'TabButton',\n      configFields: [\n        defaulted('uid', undefined),\n        required$1('value'),\n        field$1('dom', 'dom', mergeWithThunk(() => ({\n          attributes: {\n            'role': 'tab',\n            'id': generate$6('aria'),\n            'aria-selected': 'false'\n          }\n        })), anyValue()),\n        option$3('action'),\n        defaulted('domModification', {}),\n        field('tabButtonBehaviours', [\n          Focusing,\n          Keying,\n          Representing\n        ]),\n        required$1('view')\n      ],\n      factory: factory$3\n    });\n\n    const schema$1 = constant$1([\n      required$1('tabs'),\n      required$1('dom'),\n      defaulted('clickToDismiss', false),\n      field('tabbarBehaviours', [\n        Highlighting,\n        Keying\n      ]),\n      markers$1([\n        'tabClass',\n        'selectedClass'\n      ])\n    ]);\n    const tabsPart = group({\n      factory: TabButton,\n      name: 'tabs',\n      unit: 'tab',\n      overrides: barDetail => {\n        const dismissTab$1 = (tabbar, button) => {\n          Highlighting.dehighlight(tabbar, button);\n          emitWith(tabbar, dismissTab(), {\n            tabbar,\n            button\n          });\n        };\n        const changeTab$1 = (tabbar, button) => {\n          Highlighting.highlight(tabbar, button);\n          emitWith(tabbar, changeTab(), {\n            tabbar,\n            button\n          });\n        };\n        return {\n          action: button => {\n            const tabbar = button.getSystem().getByUid(barDetail.uid).getOrDie();\n            const activeButton = Highlighting.isHighlighted(tabbar, button);\n            const response = (() => {\n              if (activeButton && barDetail.clickToDismiss) {\n                return dismissTab$1;\n              } else if (!activeButton) {\n                return changeTab$1;\n              } else {\n                return noop;\n              }\n            })();\n            response(tabbar, button);\n          },\n          domModification: { classes: [barDetail.markers.tabClass] }\n        };\n      }\n    });\n    const parts$1 = constant$1([tabsPart]);\n\n    const factory$2 = (detail, components, _spec, _externals) => ({\n      'uid': detail.uid,\n      'dom': detail.dom,\n      components,\n      'debug.sketcher': 'Tabbar',\n      'domModification': { attributes: { role: 'tablist' } },\n      'behaviours': augment(detail.tabbarBehaviours, [\n        Highlighting.config({\n          highlightClass: detail.markers.selectedClass,\n          itemClass: detail.markers.tabClass,\n          onHighlight: (tabbar, tab) => {\n            set$9(tab.element, 'aria-selected', 'true');\n          },\n          onDehighlight: (tabbar, tab) => {\n            set$9(tab.element, 'aria-selected', 'false');\n          }\n        }),\n        Keying.config({\n          mode: 'flow',\n          getInitial: tabbar => {\n            return Highlighting.getHighlighted(tabbar).map(tab => tab.element);\n          },\n          selector: '.' + detail.markers.tabClass,\n          executeOnMove: true\n        })\n      ])\n    });\n    const Tabbar = composite({\n      name: 'Tabbar',\n      configFields: schema$1(),\n      partFields: parts$1(),\n      factory: factory$2\n    });\n\n    const factory$1 = (detail, _spec) => ({\n      uid: detail.uid,\n      dom: detail.dom,\n      behaviours: augment(detail.tabviewBehaviours, [Replacing.config({})]),\n      domModification: { attributes: { role: 'tabpanel' } }\n    });\n    const Tabview = single({\n      name: 'Tabview',\n      configFields: [field('tabviewBehaviours', [Replacing])],\n      factory: factory$1\n    });\n\n    const schema = constant$1([\n      defaulted('selectFirst', true),\n      onHandler('onChangeTab'),\n      onHandler('onDismissTab'),\n      defaulted('tabs', []),\n      field('tabSectionBehaviours', [])\n    ]);\n    const barPart = required({\n      factory: Tabbar,\n      schema: [\n        required$1('dom'),\n        requiredObjOf('markers', [\n          required$1('tabClass'),\n          required$1('selectedClass')\n        ])\n      ],\n      name: 'tabbar',\n      defaults: detail => {\n        return { tabs: detail.tabs };\n      }\n    });\n    const viewPart = required({\n      factory: Tabview,\n      name: 'tabview'\n    });\n    const parts = constant$1([\n      barPart,\n      viewPart\n    ]);\n\n    const factory = (detail, components, _spec, _externals) => {\n      const changeTab$1 = button => {\n        const tabValue = Representing.getValue(button);\n        getPart(button, detail, 'tabview').each(tabview => {\n          const tabWithValue = find$5(detail.tabs, t => t.value === tabValue);\n          tabWithValue.each(tabData => {\n            const panel = tabData.view();\n            getOpt(button.element, 'id').each(id => {\n              set$9(tabview.element, 'aria-labelledby', id);\n            });\n            Replacing.set(tabview, panel);\n            detail.onChangeTab(tabview, button, panel);\n          });\n        });\n      };\n      const changeTabBy = (section, byPred) => {\n        getPart(section, detail, 'tabbar').each(tabbar => {\n          byPred(tabbar).each(emitExecute);\n        });\n      };\n      return {\n        uid: detail.uid,\n        dom: detail.dom,\n        components,\n        behaviours: get$3(detail.tabSectionBehaviours),\n        events: derive$2(flatten([\n          detail.selectFirst ? [runOnAttached((section, _simulatedEvent) => {\n              changeTabBy(section, Highlighting.getFirst);\n            })] : [],\n          [\n            run$1(changeTab(), (section, simulatedEvent) => {\n              const button = simulatedEvent.event.button;\n              changeTab$1(button);\n            }),\n            run$1(dismissTab(), (section, simulatedEvent) => {\n              const button = simulatedEvent.event.button;\n              detail.onDismissTab(section, button);\n            })\n          ]\n        ])),\n        apis: {\n          getViewItems: section => {\n            return getPart(section, detail, 'tabview').map(tabview => Replacing.contents(tabview)).getOr([]);\n          },\n          showTab: (section, tabKey) => {\n            const getTabIfNotActive = tabbar => {\n              const candidates = Highlighting.getCandidates(tabbar);\n              const optTab = find$5(candidates, c => Representing.getValue(c) === tabKey);\n              return optTab.filter(tab => !Highlighting.isHighlighted(tabbar, tab));\n            };\n            changeTabBy(section, getTabIfNotActive);\n          }\n        }\n      };\n    };\n    const TabSection = composite({\n      name: 'TabSection',\n      configFields: schema(),\n      partFields: parts(),\n      factory,\n      apis: {\n        getViewItems: (apis, component) => apis.getViewItems(component),\n        showTab: (apis, component, tabKey) => {\n          apis.showTab(component, tabKey);\n        }\n      }\n    });\n\n    const measureHeights = (allTabs, tabview, tabviewComp) => map$2(allTabs, (_tab, i) => {\n      Replacing.set(tabviewComp, allTabs[i].view());\n      const rect = tabview.dom.getBoundingClientRect();\n      Replacing.set(tabviewComp, []);\n      return rect.height;\n    });\n    const getMaxHeight = heights => head(sort(heights, (a, b) => {\n      if (a > b) {\n        return -1;\n      } else if (a < b) {\n        return +1;\n      } else {\n        return 0;\n      }\n    }));\n    const getMaxTabviewHeight = (dialog, tabview, tablist) => {\n      const documentElement$1 = documentElement(dialog).dom;\n      const rootElm = ancestor(dialog, '.tox-dialog-wrap').getOr(dialog);\n      const isFixed = get$e(rootElm, 'position') === 'fixed';\n      let maxHeight;\n      if (isFixed) {\n        maxHeight = Math.max(documentElement$1.clientHeight, window.innerHeight);\n      } else {\n        maxHeight = Math.max(documentElement$1.offsetHeight, documentElement$1.scrollHeight);\n      }\n      const tabviewHeight = get$d(tabview);\n      const isTabListBeside = tabview.dom.offsetLeft >= tablist.dom.offsetLeft + get$c(tablist);\n      const currentTabHeight = isTabListBeside ? Math.max(get$d(tablist), tabviewHeight) : tabviewHeight;\n      const dialogTopMargin = parseInt(get$e(dialog, 'margin-top'), 10) || 0;\n      const dialogBottomMargin = parseInt(get$e(dialog, 'margin-bottom'), 10) || 0;\n      const dialogHeight = get$d(dialog) + dialogTopMargin + dialogBottomMargin;\n      const chromeHeight = dialogHeight - currentTabHeight;\n      return maxHeight - chromeHeight;\n    };\n    const showTab = (allTabs, comp) => {\n      head(allTabs).each(tab => TabSection.showTab(comp, tab.value));\n    };\n    const setTabviewHeight = (tabview, height) => {\n      set$8(tabview, 'height', height + 'px');\n      set$8(tabview, 'flex-basis', height + 'px');\n    };\n    const updateTabviewHeight = (dialogBody, tabview, maxTabHeight) => {\n      ancestor(dialogBody, '[role=\"dialog\"]').each(dialog => {\n        descendant(dialog, '[role=\"tablist\"]').each(tablist => {\n          maxTabHeight.get().map(height => {\n            set$8(tabview, 'height', '0');\n            set$8(tabview, 'flex-basis', '0');\n            return Math.min(height, getMaxTabviewHeight(dialog, tabview, tablist));\n          }).each(height => {\n            setTabviewHeight(tabview, height);\n          });\n        });\n      });\n    };\n    const getTabview = dialog => descendant(dialog, '[role=\"tabpanel\"]');\n    const smartMode = allTabs => {\n      const maxTabHeight = value$2();\n      const extraEvents = [\n        runOnAttached(comp => {\n          const dialog = comp.element;\n          getTabview(dialog).each(tabview => {\n            set$8(tabview, 'visibility', 'hidden');\n            comp.getSystem().getByDom(tabview).toOptional().each(tabviewComp => {\n              const heights = measureHeights(allTabs, tabview, tabviewComp);\n              const maxTabHeightOpt = getMaxHeight(heights);\n              maxTabHeightOpt.fold(maxTabHeight.clear, maxTabHeight.set);\n            });\n            updateTabviewHeight(dialog, tabview, maxTabHeight);\n            remove$6(tabview, 'visibility');\n            showTab(allTabs, comp);\n            requestAnimationFrame(() => {\n              updateTabviewHeight(dialog, tabview, maxTabHeight);\n            });\n          });\n        }),\n        run$1(windowResize(), comp => {\n          const dialog = comp.element;\n          getTabview(dialog).each(tabview => {\n            updateTabviewHeight(dialog, tabview, maxTabHeight);\n          });\n        }),\n        run$1(formResizeEvent, (comp, _se) => {\n          const dialog = comp.element;\n          getTabview(dialog).each(tabview => {\n            const oldFocus = active$1(getRootNode(tabview));\n            set$8(tabview, 'visibility', 'hidden');\n            const oldHeight = getRaw(tabview, 'height').map(h => parseInt(h, 10));\n            remove$6(tabview, 'height');\n            remove$6(tabview, 'flex-basis');\n            const newHeight = tabview.dom.getBoundingClientRect().height;\n            const hasGrown = oldHeight.forall(h => newHeight > h);\n            if (hasGrown) {\n              maxTabHeight.set(newHeight);\n              updateTabviewHeight(dialog, tabview, maxTabHeight);\n            } else {\n              oldHeight.each(h => {\n                setTabviewHeight(tabview, h);\n              });\n            }\n            remove$6(tabview, 'visibility');\n            oldFocus.each(focus$3);\n          });\n        })\n      ];\n      const selectFirst = false;\n      return {\n        extraEvents,\n        selectFirst\n      };\n    };\n\n    const SendDataToSectionChannel = 'send-data-to-section';\n    const SendDataToViewChannel = 'send-data-to-view';\n    const renderTabPanel = (spec, dialogData, backstage) => {\n      const storedValue = Cell({});\n      const updateDataWithForm = form => {\n        const formData = Representing.getValue(form);\n        const validData = toValidValues(formData).getOr({});\n        const currentData = storedValue.get();\n        const newData = deepMerge(currentData, validData);\n        storedValue.set(newData);\n      };\n      const setDataOnForm = form => {\n        const tabData = storedValue.get();\n        Representing.setValue(form, tabData);\n      };\n      const oldTab = Cell(null);\n      const allTabs = map$2(spec.tabs, tab => {\n        return {\n          value: tab.name,\n          dom: {\n            tag: 'div',\n            classes: ['tox-dialog__body-nav-item']\n          },\n          components: [text$2(backstage.shared.providers.translate(tab.title))],\n          view: () => {\n            return [Form.sketch(parts => ({\n                dom: {\n                  tag: 'div',\n                  classes: ['tox-form']\n                },\n                components: map$2(tab.items, item => interpretInForm(parts, item, dialogData, backstage)),\n                formBehaviours: derive$1([\n                  Keying.config({\n                    mode: 'acyclic',\n                    useTabstopAt: not(isPseudoStop)\n                  }),\n                  config('TabView.form.events', [\n                    runOnAttached(setDataOnForm),\n                    runOnDetached(updateDataWithForm)\n                  ]),\n                  Receiving.config({\n                    channels: wrapAll([\n                      {\n                        key: SendDataToSectionChannel,\n                        value: { onReceive: updateDataWithForm }\n                      },\n                      {\n                        key: SendDataToViewChannel,\n                        value: { onReceive: setDataOnForm }\n                      }\n                    ])\n                  })\n                ])\n              }))];\n          }\n        };\n      });\n      const tabMode = smartMode(allTabs);\n      return TabSection.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__body']\n        },\n        onChangeTab: (section, button, _viewItems) => {\n          const name = Representing.getValue(button);\n          emitWith(section, formTabChangeEvent, {\n            name,\n            oldName: oldTab.get()\n          });\n          oldTab.set(name);\n        },\n        tabs: allTabs,\n        components: [\n          TabSection.parts.tabbar({\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-nav']\n            },\n            components: [Tabbar.parts.tabs({})],\n            markers: {\n              tabClass: 'tox-tab',\n              selectedClass: 'tox-dialog__body-nav-item--active'\n            },\n            tabbarBehaviours: derive$1([Tabstopping.config({})])\n          }),\n          TabSection.parts.tabview({\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-content']\n            }\n          })\n        ],\n        selectFirst: tabMode.selectFirst,\n        tabSectionBehaviours: derive$1([\n          config('tabpanel', tabMode.extraEvents),\n          Keying.config({ mode: 'acyclic' }),\n          Composing.config({ find: comp => head(TabSection.getViewItems(comp)) }),\n          withComp(Optional.none(), tsection => {\n            tsection.getSystem().broadcastOn([SendDataToSectionChannel], {});\n            return storedValue.get();\n          }, (tsection, value) => {\n            storedValue.set(value);\n            tsection.getSystem().broadcastOn([SendDataToViewChannel], {});\n          })\n        ])\n      });\n    };\n\n    const renderBody = (spec, dialogId, contentId, backstage, ariaAttrs) => {\n      const renderComponents = incoming => {\n        const body = incoming.body;\n        switch (body.type) {\n        case 'tabpanel': {\n            return [renderTabPanel(body, incoming.initialData, backstage)];\n          }\n        default: {\n            return [renderBodyPanel(body, incoming.initialData, backstage)];\n          }\n        }\n      };\n      const updateState = (_comp, incoming) => Optional.some({ isTabPanel: () => incoming.body.type === 'tabpanel' });\n      const ariaAttributes = { 'aria-live': 'polite' };\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__content-js'],\n          attributes: {\n            ...contentId.map(x => ({ id: x })).getOr({}),\n            ...ariaAttrs ? ariaAttributes : {}\n          }\n        },\n        components: [],\n        behaviours: derive$1([\n          ComposingConfigs.childAt(0),\n          Reflecting.config({\n            channel: `${ bodyChannel }-${ dialogId }`,\n            updateState,\n            renderComponents,\n            initialData: spec\n          })\n        ])\n      };\n    };\n    const renderInlineBody = (spec, dialogId, contentId, backstage, ariaAttrs) => renderBody(spec, dialogId, Optional.some(contentId), backstage, ariaAttrs);\n    const renderModalBody = (spec, dialogId, backstage) => {\n      const bodySpec = renderBody(spec, dialogId, Optional.none(), backstage, false);\n      return ModalDialog.parts.body(bodySpec);\n    };\n    const renderIframeBody = spec => {\n      const bodySpec = {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__content-js']\n        },\n        components: [{\n            dom: {\n              tag: 'div',\n              classes: ['tox-dialog__body-iframe']\n            },\n            components: [craft(Optional.none(), {\n                dom: {\n                  tag: 'iframe',\n                  attributes: { src: spec.url }\n                },\n                behaviours: derive$1([\n                  Tabstopping.config({}),\n                  Focusing.config({})\n                ])\n              })]\n          }],\n        behaviours: derive$1([Keying.config({\n            mode: 'acyclic',\n            useTabstopAt: not(isPseudoStop)\n          })])\n      };\n      return ModalDialog.parts.body(bodySpec);\n    };\n\n    const isTouch = global$5.deviceType.isTouch();\n    const hiddenHeader = (title, close) => ({\n      dom: {\n        tag: 'div',\n        styles: { display: 'none' },\n        classes: ['tox-dialog__header']\n      },\n      components: [\n        title,\n        close\n      ]\n    });\n    const pClose = (onClose, providersBackstage) => ModalDialog.parts.close(Button.sketch({\n      dom: {\n        tag: 'button',\n        classes: [\n          'tox-button',\n          'tox-button--icon',\n          'tox-button--naked'\n        ],\n        attributes: {\n          'type': 'button',\n          'aria-label': providersBackstage.translate('Close')\n        }\n      },\n      action: onClose,\n      buttonBehaviours: derive$1([Tabstopping.config({})])\n    }));\n    const pUntitled = () => ModalDialog.parts.title({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__title'],\n        innerHtml: '',\n        styles: { display: 'none' }\n      }\n    });\n    const pBodyMessage = (message, providersBackstage) => ModalDialog.parts.body({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__body']\n      },\n      components: [{\n          dom: {\n            tag: 'div',\n            classes: ['tox-dialog__body-content']\n          },\n          components: [{ dom: fromHtml(`<p>${ sanitizeHtmlString(providersBackstage.translate(message)) }</p>`) }]\n        }]\n    });\n    const pFooter = buttons => ModalDialog.parts.footer({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__footer']\n      },\n      components: buttons\n    });\n    const pFooterGroup = (startButtons, endButtons) => [\n      Container.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__footer-start']\n        },\n        components: startButtons\n      }),\n      Container.sketch({\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__footer-end']\n        },\n        components: endButtons\n      })\n    ];\n    const renderDialog$1 = spec => {\n      const dialogClass = 'tox-dialog';\n      const blockerClass = dialogClass + '-wrap';\n      const blockerBackdropClass = blockerClass + '__backdrop';\n      const scrollLockClass = dialogClass + '__disable-scroll';\n      return ModalDialog.sketch({\n        lazySink: spec.lazySink,\n        onEscape: comp => {\n          spec.onEscape(comp);\n          return Optional.some(true);\n        },\n        useTabstopAt: elem => !isPseudoStop(elem),\n        firstTabstop: spec.firstTabstop,\n        dom: {\n          tag: 'div',\n          classes: [dialogClass].concat(spec.extraClasses),\n          styles: {\n            position: 'relative',\n            ...spec.extraStyles\n          }\n        },\n        components: [\n          spec.header,\n          spec.body,\n          ...spec.footer.toArray()\n        ],\n        parts: {\n          blocker: {\n            dom: fromHtml(`<div class=\"${ blockerClass }\"></div>`),\n            components: [{\n                dom: {\n                  tag: 'div',\n                  classes: isTouch ? [\n                    blockerBackdropClass,\n                    blockerBackdropClass + '--opaque'\n                  ] : [blockerBackdropClass]\n                }\n              }]\n          }\n        },\n        dragBlockClass: blockerClass,\n        modalBehaviours: derive$1([\n          Focusing.config({}),\n          config('dialog-events', spec.dialogEvents.concat([\n            runOnSource(focusin(), (comp, _se) => {\n              Blocking.isBlocked(comp) ? noop() : Keying.focusIn(comp);\n            }),\n            run$1(focusShifted(), (comp, se) => {\n              comp.getSystem().broadcastOn([dialogFocusShiftedChannel], { newFocus: se.event.newFocus });\n            })\n          ])),\n          config('scroll-lock', [\n            runOnAttached(() => {\n              add$2(body(), scrollLockClass);\n            }),\n            runOnDetached(() => {\n              remove$2(body(), scrollLockClass);\n            })\n          ]),\n          ...spec.extraBehaviours\n        ]),\n        eventOrder: {\n          [execute$5()]: ['dialog-events'],\n          [attachedToDom()]: [\n            'scroll-lock',\n            'dialog-events',\n            'alloy.base.behaviour'\n          ],\n          [detachedFromDom()]: [\n            'alloy.base.behaviour',\n            'dialog-events',\n            'scroll-lock'\n          ],\n          ...spec.eventOrder\n        }\n      });\n    };\n\n    const renderClose = providersBackstage => Button.sketch({\n      dom: {\n        tag: 'button',\n        classes: [\n          'tox-button',\n          'tox-button--icon',\n          'tox-button--naked'\n        ],\n        attributes: {\n          'type': 'button',\n          'aria-label': providersBackstage.translate('Close'),\n          'title': providersBackstage.translate('Close')\n        }\n      },\n      buttonBehaviours: derive$1([Tabstopping.config({})]),\n      components: [render$3('close', {\n          tag: 'span',\n          classes: ['tox-icon']\n        }, providersBackstage.icons)],\n      action: comp => {\n        emit(comp, formCancelEvent);\n      }\n    });\n    const renderTitle = (spec, dialogId, titleId, providersBackstage) => {\n      const renderComponents = data => [text$2(providersBackstage.translate(data.title))];\n      return {\n        dom: {\n          tag: 'div',\n          classes: ['tox-dialog__title'],\n          attributes: { ...titleId.map(x => ({ id: x })).getOr({}) }\n        },\n        components: [],\n        behaviours: derive$1([Reflecting.config({\n            channel: `${ titleChannel }-${ dialogId }`,\n            initialData: spec,\n            renderComponents\n          })])\n      };\n    };\n    const renderDragHandle = () => ({ dom: fromHtml('<div class=\"tox-dialog__draghandle\"></div>') });\n    const renderInlineHeader = (spec, dialogId, titleId, providersBackstage) => Container.sketch({\n      dom: fromHtml('<div class=\"tox-dialog__header\"></div>'),\n      components: [\n        renderTitle(spec, dialogId, Optional.some(titleId), providersBackstage),\n        renderDragHandle(),\n        renderClose(providersBackstage)\n      ],\n      containerBehaviours: derive$1([Dragging.config({\n          mode: 'mouse',\n          blockerClass: 'blocker',\n          getTarget: handle => {\n            return closest$1(handle, '[role=\"dialog\"]').getOrDie();\n          },\n          snaps: {\n            getSnapPoints: () => [],\n            leftAttr: 'data-drag-left',\n            topAttr: 'data-drag-top'\n          }\n        })])\n    });\n    const renderModalHeader = (spec, dialogId, providersBackstage) => {\n      const pTitle = ModalDialog.parts.title(renderTitle(spec, dialogId, Optional.none(), providersBackstage));\n      const pHandle = ModalDialog.parts.draghandle(renderDragHandle());\n      const pClose = ModalDialog.parts.close(renderClose(providersBackstage));\n      const components = [pTitle].concat(spec.draggable ? [pHandle] : []).concat([pClose]);\n      return Container.sketch({\n        dom: fromHtml('<div class=\"tox-dialog__header\"></div>'),\n        components\n      });\n    };\n\n    const getHeader = (title, dialogId, backstage) => renderModalHeader({\n      title: backstage.shared.providers.translate(title),\n      draggable: backstage.dialog.isDraggableModal()\n    }, dialogId, backstage.shared.providers);\n    const getBusySpec = (message, bs, providers, headerHeight) => ({\n      dom: {\n        tag: 'div',\n        classes: ['tox-dialog__busy-spinner'],\n        attributes: { 'aria-label': providers.translate(message) },\n        styles: {\n          left: '0px',\n          right: '0px',\n          bottom: '0px',\n          top: `${ headerHeight.getOr(0) }px`,\n          position: 'absolute'\n        }\n      },\n      behaviours: bs,\n      components: [{ dom: fromHtml('<div class=\"tox-spinner\"><div></div><div></div><div></div></div>') }]\n    });\n    const getEventExtras = (lazyDialog, providers, extra) => ({\n      onClose: () => extra.closeWindow(),\n      onBlock: blockEvent => {\n        const headerHeight = descendant(lazyDialog().element, '.tox-dialog__header').map(header => get$d(header));\n        ModalDialog.setBusy(lazyDialog(), (_comp, bs) => getBusySpec(blockEvent.message, bs, providers, headerHeight));\n      },\n      onUnblock: () => {\n        ModalDialog.setIdle(lazyDialog());\n      }\n    });\n    const fullscreenClass = 'tox-dialog--fullscreen';\n    const largeDialogClass = 'tox-dialog--width-lg';\n    const mediumDialogClass = 'tox-dialog--width-md';\n    const getDialogSizeClass = size => {\n      switch (size) {\n      case 'large':\n        return Optional.some(largeDialogClass);\n      case 'medium':\n        return Optional.some(mediumDialogClass);\n      default:\n        return Optional.none();\n      }\n    };\n    const updateDialogSizeClass = (size, component) => {\n      const dialogBody = SugarElement.fromDom(component.element.dom);\n      if (!has(dialogBody, fullscreenClass)) {\n        remove$1(dialogBody, [\n          largeDialogClass,\n          mediumDialogClass\n        ]);\n        getDialogSizeClass(size).each(dialogSizeClass => add$2(dialogBody, dialogSizeClass));\n      }\n    };\n    const toggleFullscreen = (comp, currentSize) => {\n      const dialogBody = SugarElement.fromDom(comp.element.dom);\n      const classes = get$7(dialogBody);\n      const currentSizeClass = find$5(classes, c => c === largeDialogClass || c === mediumDialogClass).or(getDialogSizeClass(currentSize));\n      toggle$3(dialogBody, [\n        fullscreenClass,\n        ...currentSizeClass.toArray()\n      ]);\n    };\n    const renderModalDialog = (spec, dialogEvents, backstage) => build$1(renderDialog$1({\n      ...spec,\n      firstTabstop: 1,\n      lazySink: backstage.shared.getSink,\n      extraBehaviours: [\n        memory({}),\n        ...spec.extraBehaviours\n      ],\n      onEscape: comp => {\n        emit(comp, formCancelEvent);\n      },\n      dialogEvents,\n      eventOrder: {\n        [receive()]: [\n          Reflecting.name(),\n          Receiving.name()\n        ],\n        [attachedToDom()]: [\n          'scroll-lock',\n          Reflecting.name(),\n          'messages',\n          'dialog-events',\n          'alloy.base.behaviour'\n        ],\n        [detachedFromDom()]: [\n          'alloy.base.behaviour',\n          'dialog-events',\n          'messages',\n          Reflecting.name(),\n          'scroll-lock'\n        ]\n      }\n    }));\n    const mapMenuButtons = (buttons, menuItemStates = {}) => {\n      const mapItems = button => {\n        const items = map$2(button.items, item => {\n          const cell = get$g(menuItemStates, item.name).getOr(Cell(false));\n          return {\n            ...item,\n            storage: cell\n          };\n        });\n        return {\n          ...button,\n          items\n        };\n      };\n      return map$2(buttons, button => {\n        return button.type === 'menu' ? mapItems(button) : button;\n      });\n    };\n    const extractCellsToObject = buttons => foldl(buttons, (acc, button) => {\n      if (button.type === 'menu') {\n        const menuButton = button;\n        return foldl(menuButton.items, (innerAcc, item) => {\n          innerAcc[item.name] = item.storage;\n          return innerAcc;\n        }, acc);\n      }\n      return acc;\n    }, {});\n\n    const initCommonEvents = (fireApiEvent, extras) => [\n      runWithTarget(focusin(), onFocus),\n      fireApiEvent(formCloseEvent, (_api, spec, _event, self) => {\n        active$1(getRootNode(self.element)).fold(noop, blur$1);\n        extras.onClose();\n        spec.onClose();\n      }),\n      fireApiEvent(formCancelEvent, (api, spec, _event, self) => {\n        spec.onCancel(api);\n        emit(self, formCloseEvent);\n      }),\n      run$1(formUnblockEvent, (_c, _se) => extras.onUnblock()),\n      run$1(formBlockEvent, (_c, se) => extras.onBlock(se.event))\n    ];\n    const initUrlDialog = (getInstanceApi, extras) => {\n      const fireApiEvent = (eventName, f) => run$1(eventName, (c, se) => {\n        withSpec(c, (spec, _c) => {\n          f(getInstanceApi(), spec, se.event, c);\n        });\n      });\n      const withSpec = (c, f) => {\n        Reflecting.getState(c).get().each(currentDialog => {\n          f(currentDialog, c);\n        });\n      };\n      return [\n        ...initCommonEvents(fireApiEvent, extras),\n        fireApiEvent(formActionEvent, (api, spec, event) => {\n          spec.onAction(api, { name: event.name });\n        })\n      ];\n    };\n    const initDialog = (getInstanceApi, extras, getSink) => {\n      const fireApiEvent = (eventName, f) => run$1(eventName, (c, se) => {\n        withSpec(c, (spec, _c) => {\n          f(getInstanceApi(), spec, se.event, c);\n        });\n      });\n      const withSpec = (c, f) => {\n        Reflecting.getState(c).get().each(currentDialogInit => {\n          f(currentDialogInit.internalDialog, c);\n        });\n      };\n      return [\n        ...initCommonEvents(fireApiEvent, extras),\n        fireApiEvent(formSubmitEvent, (api, spec) => spec.onSubmit(api)),\n        fireApiEvent(formChangeEvent, (api, spec, event) => {\n          spec.onChange(api, { name: event.name });\n        }),\n        fireApiEvent(formActionEvent, (api, spec, event, component) => {\n          const focusIn = () => component.getSystem().isConnected() ? Keying.focusIn(component) : undefined;\n          const isDisabled = focused => has$1(focused, 'disabled') || getOpt(focused, 'aria-disabled').exists(val => val === 'true');\n          const rootNode = getRootNode(component.element);\n          const current = active$1(rootNode);\n          spec.onAction(api, {\n            name: event.name,\n            value: event.value\n          });\n          active$1(rootNode).fold(focusIn, focused => {\n            if (isDisabled(focused)) {\n              focusIn();\n            } else if (current.exists(cur => contains(focused, cur) && isDisabled(cur))) {\n              focusIn();\n            } else {\n              getSink().toOptional().filter(sink => !contains(sink.element, focused)).each(focusIn);\n            }\n          });\n        }),\n        fireApiEvent(formTabChangeEvent, (api, spec, event) => {\n          spec.onTabChange(api, {\n            newTabName: event.name,\n            oldTabName: event.oldName\n          });\n        }),\n        runOnDetached(component => {\n          const api = getInstanceApi();\n          Representing.setValue(component, api.getData());\n        })\n      ];\n    };\n\n    const makeButton = (button, backstage) => renderFooterButton(button, button.type, backstage);\n    const lookup = (compInSystem, footerButtons, buttonName) => find$5(footerButtons, button => button.name === buttonName).bind(memButton => memButton.memento.getOpt(compInSystem));\n    const renderComponents = (_data, state) => {\n      const footerButtons = state.map(s => s.footerButtons).getOr([]);\n      const buttonGroups = partition$3(footerButtons, button => button.align === 'start');\n      const makeGroup = (edge, buttons) => Container.sketch({\n        dom: {\n          tag: 'div',\n          classes: [`tox-dialog__footer-${ edge }`]\n        },\n        components: map$2(buttons, button => button.memento.asSpec())\n      });\n      const startButtons = makeGroup('start', buttonGroups.pass);\n      const endButtons = makeGroup('end', buttonGroups.fail);\n      return [\n        startButtons,\n        endButtons\n      ];\n    };\n    const renderFooter = (initSpec, dialogId, backstage) => {\n      const updateState = (comp, data) => {\n        const footerButtons = map$2(data.buttons, button => {\n          const memButton = record(makeButton(button, backstage));\n          return {\n            name: button.name,\n            align: button.align,\n            memento: memButton\n          };\n        });\n        const lookupByName = buttonName => lookup(comp, footerButtons, buttonName);\n        return Optional.some({\n          lookupByName,\n          footerButtons\n        });\n      };\n      return {\n        dom: fromHtml('<div class=\"tox-dialog__footer\"></div>'),\n        components: [],\n        behaviours: derive$1([Reflecting.config({\n            channel: `${ footerChannel }-${ dialogId }`,\n            initialData: initSpec,\n            updateState,\n            renderComponents\n          })])\n      };\n    };\n    const renderInlineFooter = (initSpec, dialogId, backstage) => renderFooter(initSpec, dialogId, backstage);\n    const renderModalFooter = (initSpec, dialogId, backstage) => ModalDialog.parts.footer(renderFooter(initSpec, dialogId, backstage));\n\n    const getCompByName = (access, name) => {\n      const root = access.getRoot();\n      if (root.getSystem().isConnected()) {\n        const form = Composing.getCurrent(access.getFormWrapper()).getOr(access.getFormWrapper());\n        return Form.getField(form, name).orThunk(() => {\n          const footer = access.getFooter();\n          const footerState = footer.bind(f => Reflecting.getState(f).get());\n          return footerState.bind(f => f.lookupByName(name));\n        });\n      } else {\n        return Optional.none();\n      }\n    };\n    const validateData$1 = (access, data) => {\n      const root = access.getRoot();\n      return Reflecting.getState(root).get().map(dialogState => getOrDie(asRaw('data', dialogState.dataValidator, data))).getOr(data);\n    };\n    const getDialogApi = (access, doRedial, menuItemStates) => {\n      const withRoot = f => {\n        const root = access.getRoot();\n        if (root.getSystem().isConnected()) {\n          f(root);\n        }\n      };\n      const getData = () => {\n        const root = access.getRoot();\n        const valueComp = root.getSystem().isConnected() ? access.getFormWrapper() : root;\n        const representedValues = Representing.getValue(valueComp);\n        const menuItemCurrentState = map$1(menuItemStates, cell => cell.get());\n        return {\n          ...representedValues,\n          ...menuItemCurrentState\n        };\n      };\n      const setData = newData => {\n        withRoot(_ => {\n          const prevData = instanceApi.getData();\n          const mergedData = deepMerge(prevData, newData);\n          const newInternalData = validateData$1(access, mergedData);\n          const form = access.getFormWrapper();\n          Representing.setValue(form, newInternalData);\n          each(menuItemStates, (v, k) => {\n            if (has$2(mergedData, k)) {\n              v.set(mergedData[k]);\n            }\n          });\n        });\n      };\n      const setEnabled = (name, state) => {\n        getCompByName(access, name).each(state ? Disabling.enable : Disabling.disable);\n      };\n      const focus = name => {\n        getCompByName(access, name).each(Focusing.focus);\n      };\n      const block = message => {\n        if (!isString(message)) {\n          throw new Error('The dialogInstanceAPI.block function should be passed a blocking message of type string as an argument');\n        }\n        withRoot(root => {\n          emitWith(root, formBlockEvent, { message });\n        });\n      };\n      const unblock = () => {\n        withRoot(root => {\n          emit(root, formUnblockEvent);\n        });\n      };\n      const showTab = name => {\n        withRoot(_ => {\n          const body = access.getBody();\n          const bodyState = Reflecting.getState(body);\n          if (bodyState.get().exists(b => b.isTabPanel())) {\n            Composing.getCurrent(body).each(tabSection => {\n              TabSection.showTab(tabSection, name);\n            });\n          }\n        });\n      };\n      const redial = d => {\n        withRoot(root => {\n          const id = access.getId();\n          const dialogInit = doRedial(d);\n          const storedMenuButtons = mapMenuButtons(dialogInit.internalDialog.buttons, menuItemStates);\n          root.getSystem().broadcastOn([`${ dialogChannel }-${ id }`], dialogInit);\n          root.getSystem().broadcastOn([`${ titleChannel }-${ id }`], dialogInit.internalDialog);\n          root.getSystem().broadcastOn([`${ bodyChannel }-${ id }`], dialogInit.internalDialog);\n          root.getSystem().broadcastOn([`${ footerChannel }-${ id }`], {\n            ...dialogInit.internalDialog,\n            buttons: storedMenuButtons\n          });\n          instanceApi.setData(dialogInit.initialData);\n        });\n      };\n      const close = () => {\n        withRoot(root => {\n          emit(root, formCloseEvent);\n        });\n      };\n      const instanceApi = {\n        getData,\n        setData,\n        setEnabled,\n        focus,\n        block,\n        unblock,\n        showTab,\n        redial,\n        close,\n        toggleFullscreen: access.toggleFullscreen\n      };\n      return instanceApi;\n    };\n\n    const renderDialog = (dialogInit, extra, backstage) => {\n      const dialogId = generate$6('dialog');\n      const internalDialog = dialogInit.internalDialog;\n      const header = getHeader(internalDialog.title, dialogId, backstage);\n      const dialogSize = Cell(internalDialog.size);\n      const dialogSizeClasses = getDialogSizeClass(dialogSize.get()).toArray();\n      const updateState = (comp, incoming) => {\n        dialogSize.set(incoming.internalDialog.size);\n        updateDialogSizeClass(incoming.internalDialog.size, comp);\n        return Optional.some(incoming);\n      };\n      const body = renderModalBody({\n        body: internalDialog.body,\n        initialData: internalDialog.initialData\n      }, dialogId, backstage);\n      const storedMenuButtons = mapMenuButtons(internalDialog.buttons);\n      const objOfCells = extractCellsToObject(storedMenuButtons);\n      const footer = someIf(storedMenuButtons.length !== 0, renderModalFooter({ buttons: storedMenuButtons }, dialogId, backstage));\n      const dialogEvents = initDialog(() => instanceApi, getEventExtras(() => dialog, backstage.shared.providers, extra), backstage.shared.getSink);\n      const spec = {\n        id: dialogId,\n        header,\n        body,\n        footer,\n        extraClasses: dialogSizeClasses,\n        extraBehaviours: [Reflecting.config({\n            channel: `${ dialogChannel }-${ dialogId }`,\n            updateState,\n            initialData: dialogInit\n          })],\n        extraStyles: {}\n      };\n      const dialog = renderModalDialog(spec, dialogEvents, backstage);\n      const modalAccess = (() => {\n        const getForm = () => {\n          const outerForm = ModalDialog.getBody(dialog);\n          return Composing.getCurrent(outerForm).getOr(outerForm);\n        };\n        const toggleFullscreen$1 = () => {\n          toggleFullscreen(dialog, dialogSize.get());\n        };\n        return {\n          getId: constant$1(dialogId),\n          getRoot: constant$1(dialog),\n          getBody: () => ModalDialog.getBody(dialog),\n          getFooter: () => ModalDialog.getFooter(dialog),\n          getFormWrapper: getForm,\n          toggleFullscreen: toggleFullscreen$1\n        };\n      })();\n      const instanceApi = getDialogApi(modalAccess, extra.redial, objOfCells);\n      return {\n        dialog,\n        instanceApi\n      };\n    };\n\n    const renderInlineDialog = (dialogInit, extra, backstage, ariaAttrs = false, refreshDocking) => {\n      const dialogId = generate$6('dialog');\n      const dialogLabelId = generate$6('dialog-label');\n      const dialogContentId = generate$6('dialog-content');\n      const internalDialog = dialogInit.internalDialog;\n      const dialogSize = Cell(internalDialog.size);\n      const dialogSizeClass = getDialogSizeClass(dialogSize.get()).toArray();\n      const updateState = (comp, incoming) => {\n        dialogSize.set(incoming.internalDialog.size);\n        updateDialogSizeClass(incoming.internalDialog.size, comp);\n        refreshDocking();\n        return Optional.some(incoming);\n      };\n      const memHeader = record(renderInlineHeader({\n        title: internalDialog.title,\n        draggable: true\n      }, dialogId, dialogLabelId, backstage.shared.providers));\n      const memBody = record(renderInlineBody({\n        body: internalDialog.body,\n        initialData: internalDialog.initialData\n      }, dialogId, dialogContentId, backstage, ariaAttrs));\n      const storagedMenuButtons = mapMenuButtons(internalDialog.buttons);\n      const objOfCells = extractCellsToObject(storagedMenuButtons);\n      const optMemFooter = someIf(storagedMenuButtons.length !== 0, record(renderInlineFooter({ buttons: storagedMenuButtons }, dialogId, backstage)));\n      const dialogEvents = initDialog(() => instanceApi, {\n        onBlock: event => {\n          Blocking.block(dialog, (_comp, bs) => {\n            const headerHeight = memHeader.getOpt(dialog).map(dialog => get$d(dialog.element));\n            return getBusySpec(event.message, bs, backstage.shared.providers, headerHeight);\n          });\n        },\n        onUnblock: () => {\n          Blocking.unblock(dialog);\n        },\n        onClose: () => extra.closeWindow()\n      }, backstage.shared.getSink);\n      const inlineClass = 'tox-dialog-inline';\n      const dialog = build$1({\n        dom: {\n          tag: 'div',\n          classes: [\n            'tox-dialog',\n            inlineClass,\n            ...dialogSizeClass\n          ],\n          attributes: {\n            role: 'dialog',\n            ['aria-labelledby']: dialogLabelId\n          }\n        },\n        eventOrder: {\n          [receive()]: [\n            Reflecting.name(),\n            Receiving.name()\n          ],\n          [execute$5()]: ['execute-on-form'],\n          [attachedToDom()]: [\n            'reflecting',\n            'execute-on-form'\n          ]\n        },\n        behaviours: derive$1([\n          Keying.config({\n            mode: 'cyclic',\n            onEscape: c => {\n              emit(c, formCloseEvent);\n              return Optional.some(true);\n            },\n            useTabstopAt: elem => !isPseudoStop(elem) && (name$3(elem) !== 'button' || get$f(elem, 'disabled') !== 'disabled'),\n            firstTabstop: 1\n          }),\n          Reflecting.config({\n            channel: `${ dialogChannel }-${ dialogId }`,\n            updateState,\n            initialData: dialogInit\n          }),\n          Focusing.config({}),\n          config('execute-on-form', dialogEvents.concat([\n            runOnSource(focusin(), (comp, _se) => {\n              Keying.focusIn(comp);\n            }),\n            run$1(focusShifted(), (comp, se) => {\n              comp.getSystem().broadcastOn([dialogFocusShiftedChannel], { newFocus: se.event.newFocus });\n            })\n          ])),\n          Blocking.config({ getRoot: () => Optional.some(dialog) }),\n          Replacing.config({}),\n          memory({})\n        ]),\n        components: [\n          memHeader.asSpec(),\n          memBody.asSpec(),\n          ...optMemFooter.map(memFooter => memFooter.asSpec()).toArray()\n        ]\n      });\n      const toggleFullscreen$1 = () => {\n        toggleFullscreen(dialog, dialogSize.get());\n      };\n      const instanceApi = getDialogApi({\n        getId: constant$1(dialogId),\n        getRoot: constant$1(dialog),\n        getFooter: () => optMemFooter.map(memFooter => memFooter.get(dialog)),\n        getBody: () => memBody.get(dialog),\n        getFormWrapper: () => {\n          const body = memBody.get(dialog);\n          return Composing.getCurrent(body).getOr(body);\n        },\n        toggleFullscreen: toggleFullscreen$1\n      }, extra.redial, objOfCells);\n      return {\n        dialog,\n        instanceApi\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const getUrlDialogApi = root => {\n      const withRoot = f => {\n        if (root.getSystem().isConnected()) {\n          f(root);\n        }\n      };\n      const block = message => {\n        if (!isString(message)) {\n          throw new Error('The urlDialogInstanceAPI.block function should be passed a blocking message of type string as an argument');\n        }\n        withRoot(root => {\n          emitWith(root, formBlockEvent, { message });\n        });\n      };\n      const unblock = () => {\n        withRoot(root => {\n          emit(root, formUnblockEvent);\n        });\n      };\n      const close = () => {\n        withRoot(root => {\n          emit(root, formCloseEvent);\n        });\n      };\n      const sendMessage = data => {\n        withRoot(root => {\n          root.getSystem().broadcastOn([bodySendMessageChannel], data);\n        });\n      };\n      return {\n        block,\n        unblock,\n        close,\n        sendMessage\n      };\n    };\n\n    const SUPPORTED_MESSAGE_ACTIONS = [\n      'insertContent',\n      'setContent',\n      'execCommand',\n      'close',\n      'block',\n      'unblock'\n    ];\n    const isSupportedMessage = data => isObject(data) && SUPPORTED_MESSAGE_ACTIONS.indexOf(data.mceAction) !== -1;\n    const isCustomMessage = data => !isSupportedMessage(data) && isObject(data) && has$2(data, 'mceAction');\n    const handleMessage = (editor, api, data) => {\n      switch (data.mceAction) {\n      case 'insertContent':\n        editor.insertContent(data.content);\n        break;\n      case 'setContent':\n        editor.setContent(data.content);\n        break;\n      case 'execCommand':\n        const ui = isBoolean(data.ui) ? data.ui : false;\n        editor.execCommand(data.cmd, ui, data.value);\n        break;\n      case 'close':\n        api.close();\n        break;\n      case 'block':\n        api.block(data.message);\n        break;\n      case 'unblock':\n        api.unblock();\n        break;\n      }\n    };\n    const renderUrlDialog = (internalDialog, extra, editor, backstage) => {\n      const dialogId = generate$6('dialog');\n      const header = getHeader(internalDialog.title, dialogId, backstage);\n      const body = renderIframeBody(internalDialog);\n      const footer = internalDialog.buttons.bind(buttons => {\n        if (buttons.length === 0) {\n          return Optional.none();\n        } else {\n          return Optional.some(renderModalFooter({ buttons }, dialogId, backstage));\n        }\n      });\n      const dialogEvents = initUrlDialog(() => instanceApi, getEventExtras(() => dialog, backstage.shared.providers, extra));\n      const styles = {\n        ...internalDialog.height.fold(() => ({}), height => ({\n          'height': height + 'px',\n          'max-height': height + 'px'\n        })),\n        ...internalDialog.width.fold(() => ({}), width => ({\n          'width': width + 'px',\n          'max-width': width + 'px'\n        }))\n      };\n      const classes = internalDialog.width.isNone() && internalDialog.height.isNone() ? ['tox-dialog--width-lg'] : [];\n      const iframeUri = new global(internalDialog.url, { base_uri: new global(window.location.href) });\n      const iframeDomain = `${ iframeUri.protocol }://${ iframeUri.host }${ iframeUri.port ? ':' + iframeUri.port : '' }`;\n      const messageHandlerUnbinder = unbindable();\n      const updateState = (_comp, incoming) => Optional.some(incoming);\n      const extraBehaviours = [\n        Reflecting.config({\n          channel: `${ dialogChannel }-${ dialogId }`,\n          updateState,\n          initialData: internalDialog\n        }),\n        config('messages', [\n          runOnAttached(() => {\n            const unbind = bind(SugarElement.fromDom(window), 'message', e => {\n              if (iframeUri.isSameOrigin(new global(e.raw.origin))) {\n                const data = e.raw.data;\n                if (isSupportedMessage(data)) {\n                  handleMessage(editor, instanceApi, data);\n                } else if (isCustomMessage(data)) {\n                  internalDialog.onMessage(instanceApi, data);\n                }\n              }\n            });\n            messageHandlerUnbinder.set(unbind);\n          }),\n          runOnDetached(messageHandlerUnbinder.clear)\n        ]),\n        Receiving.config({\n          channels: {\n            [bodySendMessageChannel]: {\n              onReceive: (comp, data) => {\n                descendant(comp.element, 'iframe').each(iframeEle => {\n                  const iframeWin = iframeEle.dom.contentWindow;\n                  if (isNonNullable(iframeWin)) {\n                    iframeWin.postMessage(data, iframeDomain);\n                  }\n                });\n              }\n            }\n          }\n        })\n      ];\n      const spec = {\n        id: dialogId,\n        header,\n        body,\n        footer,\n        extraClasses: classes,\n        extraBehaviours,\n        extraStyles: styles\n      };\n      const dialog = renderModalDialog(spec, dialogEvents, backstage);\n      const instanceApi = getUrlDialogApi(dialog);\n      return {\n        dialog,\n        instanceApi\n      };\n    };\n\n    const setup$2 = backstage => {\n      const sharedBackstage = backstage.shared;\n      const open = (message, callback) => {\n        const closeDialog = () => {\n          ModalDialog.hide(alertDialog);\n          callback();\n        };\n        const memFooterClose = record(renderFooterButton({\n          name: 'close-alert',\n          text: 'OK',\n          primary: true,\n          buttonType: Optional.some('primary'),\n          align: 'end',\n          enabled: true,\n          icon: Optional.none()\n        }, 'cancel', backstage));\n        const titleSpec = pUntitled();\n        const closeSpec = pClose(closeDialog, sharedBackstage.providers);\n        const alertDialog = build$1(renderDialog$1({\n          lazySink: () => sharedBackstage.getSink(),\n          header: hiddenHeader(titleSpec, closeSpec),\n          body: pBodyMessage(message, sharedBackstage.providers),\n          footer: Optional.some(pFooter(pFooterGroup([], [memFooterClose.asSpec()]))),\n          onEscape: closeDialog,\n          extraClasses: ['tox-alert-dialog'],\n          extraBehaviours: [],\n          extraStyles: {},\n          dialogEvents: [run$1(formCancelEvent, closeDialog)],\n          eventOrder: {}\n        }));\n        ModalDialog.show(alertDialog);\n        const footerCloseButton = memFooterClose.get(alertDialog);\n        Focusing.focus(footerCloseButton);\n      };\n      return { open };\n    };\n\n    const setup$1 = backstage => {\n      const sharedBackstage = backstage.shared;\n      const open = (message, callback) => {\n        const closeDialog = state => {\n          ModalDialog.hide(confirmDialog);\n          callback(state);\n        };\n        const memFooterYes = record(renderFooterButton({\n          name: 'yes',\n          text: 'Yes',\n          primary: true,\n          buttonType: Optional.some('primary'),\n          align: 'end',\n          enabled: true,\n          icon: Optional.none()\n        }, 'submit', backstage));\n        const footerNo = renderFooterButton({\n          name: 'no',\n          text: 'No',\n          primary: false,\n          buttonType: Optional.some('secondary'),\n          align: 'end',\n          enabled: true,\n          icon: Optional.none()\n        }, 'cancel', backstage);\n        const titleSpec = pUntitled();\n        const closeSpec = pClose(() => closeDialog(false), sharedBackstage.providers);\n        const confirmDialog = build$1(renderDialog$1({\n          lazySink: () => sharedBackstage.getSink(),\n          header: hiddenHeader(titleSpec, closeSpec),\n          body: pBodyMessage(message, sharedBackstage.providers),\n          footer: Optional.some(pFooter(pFooterGroup([], [\n            footerNo,\n            memFooterYes.asSpec()\n          ]))),\n          onEscape: () => closeDialog(false),\n          extraClasses: ['tox-confirm-dialog'],\n          extraBehaviours: [],\n          extraStyles: {},\n          dialogEvents: [\n            run$1(formCancelEvent, () => closeDialog(false)),\n            run$1(formSubmitEvent, () => closeDialog(true))\n          ],\n          eventOrder: {}\n        }));\n        ModalDialog.show(confirmDialog);\n        const footerYesButton = memFooterYes.get(confirmDialog);\n        Focusing.focus(footerYesButton);\n      };\n      return { open };\n    };\n\n    const validateData = (data, validator) => getOrDie(asRaw('data', validator, data));\n    const isAlertOrConfirmDialog = target => closest(target, '.tox-alert-dialog') || closest(target, '.tox-confirm-dialog');\n    const inlineAdditionalBehaviours = (editor, isStickyToolbar, isToolbarLocationTop) => {\n      if (isStickyToolbar && isToolbarLocationTop) {\n        return [];\n      } else {\n        return [Docking.config({\n            contextual: {\n              lazyContext: () => Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer()))),\n              fadeInClass: 'tox-dialog-dock-fadein',\n              fadeOutClass: 'tox-dialog-dock-fadeout',\n              transitionClass: 'tox-dialog-dock-transition'\n            },\n            modes: ['top'],\n            lazyViewport: comp => {\n              const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n              return optScrollingContext.map(sc => {\n                const combinedBounds = getBoundsFrom(sc);\n                return {\n                  bounds: combinedBounds,\n                  optScrollEnv: Optional.some({\n                    currentScrollTop: sc.element.dom.scrollTop,\n                    scrollElmTop: absolute$3(sc.element).top\n                  })\n                };\n              }).getOrThunk(() => ({\n                bounds: win(),\n                optScrollEnv: Optional.none()\n              }));\n            }\n          })];\n      }\n    };\n    const setup = extras => {\n      const editor = extras.editor;\n      const isStickyToolbar$1 = isStickyToolbar(editor);\n      const alertDialog = setup$2(extras.backstages.dialog);\n      const confirmDialog = setup$1(extras.backstages.dialog);\n      const open = (config, params, closeWindow) => {\n        if (!isUndefined(params)) {\n          if (params.inline === 'toolbar') {\n            return openInlineDialog(config, extras.backstages.popup.shared.anchors.inlineDialog(), closeWindow, params);\n          } else if (params.inline === 'bottom') {\n            return openBottomInlineDialog(config, extras.backstages.popup.shared.anchors.inlineBottomDialog(), closeWindow, params);\n          } else if (params.inline === 'cursor') {\n            return openInlineDialog(config, extras.backstages.popup.shared.anchors.cursor(), closeWindow, params);\n          }\n        }\n        return openModalDialog(config, closeWindow);\n      };\n      const openUrl = (config, closeWindow) => openModalUrlDialog(config, closeWindow);\n      const openModalUrlDialog = (config, closeWindow) => {\n        const factory = contents => {\n          const dialog = renderUrlDialog(contents, {\n            closeWindow: () => {\n              ModalDialog.hide(dialog.dialog);\n              closeWindow(dialog.instanceApi);\n            }\n          }, editor, extras.backstages.dialog);\n          ModalDialog.show(dialog.dialog);\n          return dialog.instanceApi;\n        };\n        return DialogManager.openUrl(factory, config);\n      };\n      const openModalDialog = (config, closeWindow) => {\n        const factory = (contents, internalInitialData, dataValidator) => {\n          const initialData = internalInitialData;\n          const dialogInit = {\n            dataValidator,\n            initialData,\n            internalDialog: contents\n          };\n          const dialog = renderDialog(dialogInit, {\n            redial: DialogManager.redial,\n            closeWindow: () => {\n              ModalDialog.hide(dialog.dialog);\n              closeWindow(dialog.instanceApi);\n            }\n          }, extras.backstages.dialog);\n          ModalDialog.show(dialog.dialog);\n          dialog.instanceApi.setData(initialData);\n          return dialog.instanceApi;\n        };\n        return DialogManager.open(factory, config);\n      };\n      const openInlineDialog = (config$1, anchor, closeWindow, windowParams) => {\n        const factory = (contents, internalInitialData, dataValidator) => {\n          const initialData = validateData(internalInitialData, dataValidator);\n          const inlineDialog = value$2();\n          const isToolbarLocationTop = extras.backstages.popup.shared.header.isPositionedAtTop();\n          const dialogInit = {\n            dataValidator,\n            initialData,\n            internalDialog: contents\n          };\n          const refreshDocking = () => inlineDialog.on(dialog => {\n            InlineView.reposition(dialog);\n            if (!isStickyToolbar$1 || !isToolbarLocationTop) {\n              Docking.refresh(dialog);\n            }\n          });\n          const dialogUi = renderInlineDialog(dialogInit, {\n            redial: DialogManager.redial,\n            closeWindow: () => {\n              inlineDialog.on(InlineView.hide);\n              editor.off('ResizeEditor', refreshDocking);\n              inlineDialog.clear();\n              closeWindow(dialogUi.instanceApi);\n            }\n          }, extras.backstages.popup, windowParams.ariaAttrs, refreshDocking);\n          const inlineDialogComp = build$1(InlineView.sketch({\n            lazySink: extras.backstages.popup.shared.getSink,\n            dom: {\n              tag: 'div',\n              classes: []\n            },\n            fireDismissalEventInstead: windowParams.persistent ? { event: 'doNotDismissYet' } : {},\n            ...isToolbarLocationTop ? {} : { fireRepositionEventInstead: {} },\n            inlineBehaviours: derive$1([\n              config('window-manager-inline-events', [run$1(dismissRequested(), (_comp, _se) => {\n                  emit(dialogUi.dialog, formCancelEvent);\n                })]),\n              ...inlineAdditionalBehaviours(editor, isStickyToolbar$1, isToolbarLocationTop)\n            ]),\n            isExtraPart: (_comp, target) => isAlertOrConfirmDialog(target)\n          }));\n          inlineDialog.set(inlineDialogComp);\n          const getInlineDialogBounds = () => {\n            const elem = editor.inline ? body() : SugarElement.fromDom(editor.getContainer());\n            const bounds = box$1(elem);\n            return Optional.some(bounds);\n          };\n          InlineView.showWithinBounds(inlineDialogComp, premade(dialogUi.dialog), { anchor }, getInlineDialogBounds);\n          if (!isStickyToolbar$1 || !isToolbarLocationTop) {\n            Docking.refresh(inlineDialogComp);\n            editor.on('ResizeEditor', refreshDocking);\n          }\n          dialogUi.instanceApi.setData(initialData);\n          Keying.focusIn(dialogUi.dialog);\n          return dialogUi.instanceApi;\n        };\n        return DialogManager.open(factory, config$1);\n      };\n      const openBottomInlineDialog = (config$1, anchor, closeWindow, windowParams) => {\n        const factory = (contents, internalInitialData, dataValidator) => {\n          const initialData = validateData(internalInitialData, dataValidator);\n          const inlineDialog = value$2();\n          const isToolbarLocationTop = extras.backstages.popup.shared.header.isPositionedAtTop();\n          const dialogInit = {\n            dataValidator,\n            initialData,\n            internalDialog: contents\n          };\n          const refreshDocking = () => inlineDialog.on(dialog => {\n            InlineView.reposition(dialog);\n            Docking.refresh(dialog);\n          });\n          const dialogUi = renderInlineDialog(dialogInit, {\n            redial: DialogManager.redial,\n            closeWindow: () => {\n              inlineDialog.on(InlineView.hide);\n              editor.off('ResizeEditor ScrollWindow ElementScroll', refreshDocking);\n              inlineDialog.clear();\n              closeWindow(dialogUi.instanceApi);\n            }\n          }, extras.backstages.popup, windowParams.ariaAttrs, refreshDocking);\n          const inlineDialogComp = build$1(InlineView.sketch({\n            lazySink: extras.backstages.popup.shared.getSink,\n            dom: {\n              tag: 'div',\n              classes: []\n            },\n            fireDismissalEventInstead: windowParams.persistent ? { event: 'doNotDismissYet' } : {},\n            ...isToolbarLocationTop ? {} : { fireRepositionEventInstead: {} },\n            inlineBehaviours: derive$1([\n              config('window-manager-inline-events', [run$1(dismissRequested(), (_comp, _se) => {\n                  emit(dialogUi.dialog, formCancelEvent);\n                })]),\n              Docking.config({\n                contextual: {\n                  lazyContext: () => Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer()))),\n                  fadeInClass: 'tox-dialog-dock-fadein',\n                  fadeOutClass: 'tox-dialog-dock-fadeout',\n                  transitionClass: 'tox-dialog-dock-transition'\n                },\n                modes: [\n                  'top',\n                  'bottom'\n                ],\n                lazyViewport: comp => {\n                  const optScrollingContext = detectWhenSplitUiMode(editor, comp.element);\n                  return optScrollingContext.map(sc => {\n                    const combinedBounds = getBoundsFrom(sc);\n                    return {\n                      bounds: combinedBounds,\n                      optScrollEnv: Optional.some({\n                        currentScrollTop: sc.element.dom.scrollTop,\n                        scrollElmTop: absolute$3(sc.element).top\n                      })\n                    };\n                  }).getOrThunk(() => ({\n                    bounds: win(),\n                    optScrollEnv: Optional.none()\n                  }));\n                }\n              })\n            ]),\n            isExtraPart: (_comp, target) => isAlertOrConfirmDialog(target)\n          }));\n          inlineDialog.set(inlineDialogComp);\n          const getInlineDialogBounds = () => {\n            return extras.backstages.popup.shared.getSink().toOptional().bind(s => {\n              const optScrollingContext = detectWhenSplitUiMode(editor, s.element);\n              const margin = 15;\n              const bounds$1 = optScrollingContext.map(sc => getBoundsFrom(sc)).getOr(win());\n              const contentAreaContainer = box$1(SugarElement.fromDom(editor.getContentAreaContainer()));\n              const constrainedBounds = constrain(contentAreaContainer, bounds$1);\n              return Optional.some(bounds(constrainedBounds.x, constrainedBounds.y, constrainedBounds.width, constrainedBounds.height - margin));\n            });\n          };\n          InlineView.showWithinBounds(inlineDialogComp, premade(dialogUi.dialog), { anchor }, getInlineDialogBounds);\n          Docking.refresh(inlineDialogComp);\n          editor.on('ResizeEditor ScrollWindow ElementScroll ResizeWindow', refreshDocking);\n          dialogUi.instanceApi.setData(initialData);\n          Keying.focusIn(dialogUi.dialog);\n          return dialogUi.instanceApi;\n        };\n        return DialogManager.open(factory, config$1);\n      };\n      const confirm = (message, callback) => {\n        confirmDialog.open(message, callback);\n      };\n      const alert = (message, callback) => {\n        alertDialog.open(message, callback);\n      };\n      const close = instanceApi => {\n        instanceApi.close();\n      };\n      return {\n        open,\n        openUrl,\n        alert,\n        close,\n        confirm\n      };\n    };\n\n    const registerOptions = editor => {\n      register$e(editor);\n      register$d(editor);\n      register(editor);\n    };\n    var Theme = () => {\n      global$a.add('silver', editor => {\n        registerOptions(editor);\n        let popupSinkBounds = () => win();\n        const {\n          dialogs,\n          popups,\n          renderUI: renderModeUI\n        } = setup$3(editor, { getPopupSinkBounds: () => popupSinkBounds() });\n        const renderUI = () => {\n          const renderResult = renderModeUI();\n          const optScrollingContext = detectWhenSplitUiMode(editor, popups.getMothership().element);\n          optScrollingContext.each(sc => {\n            popupSinkBounds = () => {\n              return getBoundsFrom(sc);\n            };\n          });\n          return renderResult;\n        };\n        Autocompleter.register(editor, popups.backstage.shared);\n        const windowMgr = setup({\n          editor,\n          backstages: {\n            popup: popups.backstage,\n            dialog: dialogs.backstage\n          }\n        });\n        const getNotificationManagerImpl = () => NotificationManagerImpl(editor, { backstage: popups.backstage }, popups.getMothership());\n        return {\n          renderUI,\n          getWindowManagerImpl: constant$1(windowMgr),\n          getNotificationManagerImpl\n        };\n      });\n    };\n\n    Theme();\n\n})();\n"],"names":["getPrototypeOf$2","hasProto","v","constructor","predicate","_a","typeOf","x","t","proto","isType$1","type","value","isSimpleType","eq$1","a","is$2","isObject","isString","isPlainObject","isArray","isNull","isBoolean","isUndefined","isNullable","isNonNullable","isFunction","isNumber","isArrayOf","pred","i","len","noop","noarg","f","compose","fa","fb","args","compose1","fbc","fab","constant$1","identity","tripleEquals","b","curry","fn","initialArgs","restArgs","all","not","die","msg","apply$1","never","always","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","nativeSlice","nativeIndexOf","nativePush","rawIndexOf","ts","indexOf","xs","r","contains$2","exists","range$2","num","chunk$1","array","size","map$2","each$1","eachr","partition$3","pass","fail","filter$2","foldr","acc","foldl","findUntil","until","find$5","findIndex$1","flatten","bind$3","forall","reverse","difference","a1","a2","mapToObject","pure$2","sort","comparator","copy","get$h","head","last$1","from","findMap","arr","keys","hasOwnProperty","each","obj","props","k","map$1","tupleMap","tuple","objAcc","internalFilter","onTrue","onFalse","bifilter","filter$1","mapToArray","name","find$4","values","get$g","key","has$2","hasNonNullableKey","is$1","lhs","rhs","left","equals","lift2","cat","push","sequence","oa","ob","lift3","oc","mapFrom","someIf","addToEnd","str","suffix","removeFromStart","numChars","checkRange","substr","start","removeLeading","prefix","startsWith","ensureTrailing","endsWith","contains$1","end","idx","trim$1","s","isNotEmpty","isEmpty","isSupported$1","dom","fromHtml$2","html","scope","div","fromDom","fromTag","node","fromText","text","SugarElement","docElm","y","Global","path$1","parts","resolve","p","unsafe","getOrDie$1","actual","getPrototypeOf$1","sandHTMLElement","isPrototypeOf","DOCUMENT","DOCUMENT_FRAGMENT","ELEMENT","TEXT","name$3","element","type$1","isType","isHTMLElement","isElement$1","isText","isDocument","isDocumentFragment","isTag","is","selector","elem","bypassSelector","all$3","base","one","eq","e1","e2","contains","d1","d2","owner$4","documentOrOwner","dos","documentElement","defaultView","parent","parentNode","parentElement","parents","isRoot","stop","ret","rawParent","offsetParent","nextSibling","children","child$2","index","cs","firstChild","spot","offset","leaf","isShadowRoot","supported","isSupported","getRootNode","e","getContentContainer","isInShadowRoot","getShadowRoot","getShadowHost","getOriginalEventTarget","event","el","isOpenShadowHost","composedPath","inBody","doc","body","getBody","rawSet","set$9","setAll$1","attrs","get$f","getOpt","has$1","remove$7","clone$2","attr","internalSet","property","internalRemove","set$8","setAll","css","setOptions","get$e","getUnsafeProperty","getRaw","raw","getAllRaw","ruleName","isValidValue$1","remove$6","reflow","Dimension","getOffset","set","h","get","getOuter","aggregate","properties","val","cumulativeInclusions","api$2","get$d","getOuter$2","setMax$1","inclusions","absMax","r$1","top","SugarPosition","boxPosition","box","firstDefinedOrZero","absolute$3","win","scrollTop","scrollLeft","clientTop","clientLeft","viewport$1","api$1","set$7","get$c","getOuter$1","setMax","cached","called","DeviceType","os","browser","userAgent","mediaMatch","isiPad","isiPhone","isMobile","isTouch","isTablet","isPhone","iOSwebview","isDesktop","firstMatch","regexes","find$3","agent","group","nu$d","detect$5","versionRegexes","cleanedAgent","unknown$3","major","minor","Version","detectBrowser$1","browsers","userAgentData","uaBrand","lcBrand","info","detect$4","candidates","candidate","detectBrowser","version","detectOs","oses","normalVersionRegex","checkContains","target","uastring","PlatformInfo","edge","chromium","ie","opera","firefox","safari","unknown$2","nu$c","current","isBrowser","Browser","windows","ios","android","linux","macos","solaris","freebsd","chromeos","unknown$1","nu$b","isOS","OperatingSystem","PlatformDetection","userAgentDataOpt","deviceType","query","platform","detect$2","mkEvent","prevent","kill","fromRawEvent$1","rawEvent","handle","filter","handler","useCapture","wrapped","unbind","bind$2","capture$1","before$1","marker","after$2","append$2","prepend$1","appendAt","append$1","elements","empty","rogue","remove$5","get$b","_DOC","to","get$a","_win","bounds$1","width","height","getBounds$3","scroll","visualViewport","getDocument","walkUp","navigation","rest","pathTo","d","paths","Navigation","find$2","frames","loc","pointed","point","rect","bounds","box$1","xy","w","absolute$2","position","constrain","original","constraint","right","bottom","constrainByMany","constraints","c","global$a","value$4","applyHelper","constHelper","outputHelper","output","_onError","onValue","Result","error$1","error","onError","_onValue","optional","err","SimpleResultType","fold$1","res","partition$2","results","errors","mapError","map","bind$1","bindError","svalue","serror","SimpleResult","field$2","newKey","presence","prop","customField$1","instantiator","fold","ifField","ifCustom","shallow$1","old","nu","deep$1","deepMerge","baseMerge","merger","objects","j","curObject","merge$1","required$2","defaultedThunk","fallbackThunk","defaulted$1","fallback","asOption","mergeWithThunk","baseThunk","mergeWith","mergeValues$1","mergeErrors$1","ResultCombine","partition","partitions","formatObj","input","formatErrors","es","nu$a","path","getErrorInfo","missingRequired","missingKey","missingBranch","branches","branch","unsupportedFields","unsupported","custom","value$3","validator","extract","toString","anyValue$1","requiredAccess","bundle","fallbackAccess","optionAccess","optionDefaultedAccess","opt","extractField","field","av","bundleAsOption","optValue","ov","result","extractFields","fields","success","valueThunk","getDelegate","getSetKeys","objOfOnly","delegate","objOf","fieldNames","o","extra","_okey","_presence","_instantiator","arrOf","oneOf","rawF","setOf$1","validateKeys","keys$1","validatedKeys","validKeys","schema","vk","_desc","processor","getP","arrOfObj","anyValue","typedValue","expectedType","actualType","number","string","boolean","functionProcessor","isPostMessageable","postMessageable","chooseFrom","ch","vp","choose$2","chosen","arrOfVal","valueOf","setOf","extractValue","label","errs","asRaw","getOrDie","extraction","errInfo","formatError","asRawOrDie$1","choose$1","thunkOf","desc","field$1","customField","validateEnum","required$1","requiredOf","requiredNumber","requiredString","requiredStringEnum","requiredBoolean","requiredFunction","forbid","_v","requiredObjOf","objSchema","requiredArrayOfObj","objFields","requiredArrayOf","option$3","optionOf","optionNumber","optionString","optionStringEnum","optionFunction","optionArrayOf","optionObjOf","optionObjOfOnly","defaulted","defaultedOf","defaultedNumber","defaultedString","defaultedStringEnum","defaultedBoolean","defaultedFunction","defaultedPostMsg","defaultedArrayOf","defaultedObjOf","Cell","initial","Adt","cases","constructors","adt","acase","count","argLength","foldArgs","branchKeys","reqKey","partition$1","exclude$1","wrap$2","wrapAll$1","keyvalues","kv","exclude","wrap$1","wrapAll","mergeValues","mergeErrors","consolidate","objs","ensureIsRoot","ancestor$2","transform","transformed","closest$4","isSource","component","simulatedEvent","defaultEventHandler","nu$9","all$2","handlers","any","read$2","fuse$1","can","abort","constant","touchstart","touchmove","touchend","touchcancel","mousedown","mousemove","mouseout","mouseup","mouseover","focusin","focusout","keydown","keyup","change","click","transitioncancel","transitionend","transitionstart","selectstart","prefixName","alloy","focus$4","postBlur","postPaste","receive","execute$5","focusItem","tap","longpress","sandboxClose","typeaheadCancel","systemInit","documentTouchmove","documentTouchend","windowScroll","windowResize","attachedToDom","detachedFromDom","dismissRequested","repositionRequested","focusShifted","slotVisibility","externalElementScroll","changeTab","dismissTab","highlight$1","dehighlight$1","emit","dispatchWith","emitWith","emitExecute","dispatch","data","retargetAndDispatchWith","eventName","dispatchEvent","derive$2","configs","preventDefault","run$1","runActionExtra","action","runOnName","runOnSourceName","redirectToUid","uid","redirectee","redirectToPart","detail","partName","runWithTarget","ev","cutter","stopper","runOnSource","runOnAttached","runOnDetached","runOnInit","runOnExecute$1","fromHtml$1","get$9","set$6","content","docDom","fragment","contentElements","container","clone","clone$1","isDeep","shallow","deep","getHtml","isRecursive","originator","events$i","DefaultEvents","unique","generate$6","time","random","prefix$1","idAttr$1","idAttr","write","id","writeOnly","read$1","generate$5","make$8","NoContextApi","getComp","getMessage","warn","singleton$1","markAsBehaviourApi","apiName","apiFunction","endIndex","openBracketIndex","parameters","cleanParameters","markAsExtraApi","extraName","markAsSketchApi","premadeTag","premade$1","comp","isPremade","getPremade","spec","makeApi","NoState","nu$8","generateFrom$1","validated","optBlobThunk","blob","getBehaviours$3","bData","getData$2","byInnerKey","indexKey","chain","nu$7","merge","defnA","mod","combine$2","baseMod","behaviours","modsByBehaviour","behaviour","byAspect","modification","combineObjects","combinedClasses","combinedAttributes","combinedStyles","sortKeys","keyName","order","sorted","aKey","bKey","aIndex","bIndex","uncurried","purpose","curried","curryArgs","descHandler","extraArgs","getCurried","behaviourTuple","nameToHandlers","groupByEvents","behaviourEvents","combine$1","eventOrder","byEventName","combineGroups","assemble","rawHandler","missingOrderError","tuples","fuse","sortedTuples","assembled","baseBehaviour","schema$z","toInfo","toDefinition","toModification","toEvents","read","add$4","remove$4","supports","get$8","add$3","clazz","remove$3","toggle$5","add$2","cleanClass","remove$2","toggle$4","has","add$1","classes","remove$1","toggle$3","hasAll","getNative","classList","item","get$7","get$6","set$5","determineObsoleted","oldObsoleted","newObs","oldTag","ensureInDom","child","obsoleted","obs","patchChildrenWith","builtChildren","currentChildren","patchSpecChild","build","childComp","patchSpecChildren","specs","patchDomChildren","nodes","optObsoleted","diffKeyValueSet","newObj","oldObj","newKeys","oldKeys","toRemove","toSet","reconcileToDom","definition","style","existingAttributes","attrsToSet","attrsToRemove","updateAttrs","existingStyles","stylesToSet","stylesToRemove","updateStyles","existingClasses","classesToRemove","classesToAdd","updateClasses","updateHtml","updateChildren","updateValue","valueElement","introduceToDom","subject","attemptPatch","hasMixedChildren","renderToDom","canBePatched","getBehaviours$2","generateFrom","generate$4","getDomDefinition","bList","infoModification","baseModification","getEvents","baseEvents","build$2","getMe","me","systemApi","bBlob","modDefinition","events","subcomponents","connect","newApi","disconnect","syncComponents","children$1","subs","config","hasConfigured","getApis","readState","behaviourName","buildSubcomponents","components","build$1","buildOrPatch","buildFromSpec","userSpec","specEvents","completeSpec","text$2","textContent","external$1","extSpec","uids","isSketchSpec$1","userSpecWithUid","premade","ClosestOrAncestor","ancestor","ancestor$1","closest$3","test","child$1","descendant$1","descend","closest$2","descendant","closest$1","attribute","find$1","queryElem","dep","manager","ariaId","isAriaPartOf","owner","isPartOf$1","unknown","EventConfiguration","eventConfig","makeEventLogger","initialTarget","startTime","_name","finishTime","processEvent","patterns","noLogger","logger","getTrace","lines","line","ignoreEvent","monitorEvent","menuFields","itemFields","itemSchema$3","_initSize","itemMarkers","tieredMenuMarkers","markers$1","required","onPresenceHandler","fieldName","onHandler","onKeyboardHandler","onStrictHandler","onStrictKeyboardHandler","output$1","snapshot","initSize","nu$6","bubble","direction","placement","boundsRestriction","labelPrefix","alwaysFit","adt$a","cata$2","southeast","southwest","northeast","northwest","south","north","east","west","cataVertical","middle","cataHorizontal","southeast$3","southwest$3","northeast$3","northwest$3","south$3","north$3","east$3","west$3","cycleBy","delta","min","max","clamp","getRestriction","anchor","restriction","restrictions","dir","adjustBounds","bubbleOffset","applyRestriction","pos","isVerticalAxis","newPos","adjustedLeft","adjustedTop","adjustedRight","adjustedBottom","labelPrefix$2","eastX$1","middleX$1","westX$1","northY$2","southY$2","centreY$1","eastEdgeX$1","westEdgeX$1","southeast$2","bubbles","southwest$2","northeast$2","northwest$2","north$2","south$2","east$2","west$2","all$1","allRtl$1","aboveOrBelow","aboveOrBelowRtl","belowOrAbove","belowOrAboveRtl","chooseChannels","channels","ActiveReceiving","channelMap","receiveConfig","receivingData","targetChannels","channelInfo","channelSchema","ReceivingSchema","executeEvent","bConfig","bState","executor","loadEvent","_simulatedEvent","create$5","active","apis","state","configSchema","schemaSchema","doCreate","createModes$1","modes","wrapApi","bName","revokeBehaviour","getConfig","wrappedApis","apiF","extraF","prepared","behaviourInfo","exhibitor","derive$1","capabilities","simpleSchema","create$4","modeSchema","createModes","revoke","Receiving","ActivePosition","posConfig","focus$3","preventScroll","blur$1","hasFocus","root","active$1","search","preserve$1","refocus","focused","oldFocus","newFocus","NuPositionCss","toPx","toOptions","applyPositionCss","adt$9","positionWithDirection","posName","decision","decisionRect","decisionX","decisionY","decisionWidth","decisionHeight","decisionRight","decisionBottom","none","reposition","origin","toBox","rel","viewport","optBounds","translate$2","removeScroll","outerScroll","cata$1","onRelative","onFixed","relative$1","fixed$1","anchorBox","placementAttribute","setPlacement$1","getPlacement","reset$2","adt$8","determinePosition","boundsX","boundsY","boundsRight","boundsBottom","xInBounds","yInBounds","originInBounds","rightInBounds","bottomInBounds","sizeInBounds","visibleW","visibleH","calcReposition","maxX","maxY","restrictedX","restrictedY","restrictedWidth","restrictedHeight","calcMaxSizes","upAvailable","downAvailable","maxHeight","westAvailable","eastAvailable","attempt","adjustedBounds","newX","newY","fits","fittedBox","isPartlyVisible","maxWidth","attempts","elementBox","panelWidth","panelHeight","attemptBestFit","layout","isVisible","next","attemptLayout","newReposition","newVisibleW","newVisibleH","newIsVisible","bestNext","singleton","doRevoke","destroyable","unbindable","value$2","bind","capture","fromRawEvent","timerAttr","isTransitioning$1","transition","shouldApplyTransitionCss","lastPlacement","placer","mode","hasChanges","intermediate","round","newValue","getTransitionDuration","times","parse","delay","duration","dur","setupTransitionListeners","transitionEnd","transitionCancel","timer","isSourceTransition","pseudoElement","transitionDone","transitionStart","startTransitioning","timerId","applyTransitionCss","shouldTransition","intermediatePosition","intermediateCssOptions","elementSize","options","setClasses","classInfo","setHeight","maxHeightFunction","setWidth","maxWidthFunction","position$2","positionCss","setPlacement","setMaxHeight","anchored","available","expandable$1","defaultOr","dephault","simple","layouts","overrideOptions","go","allAlignments","nu$5","xOffset","yOffset","insetModifier","insetXOffset","insetYOffset","getClasses","make","xDelta","yDelta","alignmentsOn","alignmentsOff","nu$4","onDirection","isLtr","isRtl","getDirection","AttributeValue","Attribute","isBottomToTopDir","schema$y","get$5","defaultLtr","defaultRtl","defaultBottomLtr","defaultBottomRtl","dirElement","isBottomToTop","customLtr","ls","customRtl","ltr","rtl","placement$4","anchorInfo","hotspot","HotspotAnchor","placement$3","MakeshiftAnchor","adt$7","toFixed","toAbsolute","sum","points","sumAsFixed","positions","sumAsAbsolute","screen","absolute$1","hasSameOwner","frame","frameOwner","compOwner","getRootPoint","getBox","calcNewAnchor","optBox","rootPoint","topLeft","layoutsLtr","layoutsRtl","placement$2","nodeBox","NodeAnchor","zeroWidth","nbsp","SimRange","soffset","finish","foffset","adt$6","cata","onBefore","onOn","onAfter","getStart$1","situ","before","on$1","after$1","Situ","adt$5","exactFromRange","simRange","getStart","selection","rng","startSitu","_finishSitu","_soffset","_finish","_foffset","domRange","relative","exact","getWin","range$1","SimSelection","setStart","setFinish","relativeToNative","finishSitu","range","exactToNative","toRect","getFirstRect$1","rects","getBounds$2","adt$4","fromRange","getRanges","doDiagnose","ranges","rev","diagnose","asLtrRange","ancestors","descendants","makeRange","after","same","getNativeSelection","readRange","firstRng","lastRng","doGetExact","focus","getExact","sel","getFirstRect","getBounds$1","api","getOption","get$4","descendOnce$1","last","descendOnce","isSimRange","getAnchorSelection","modStart","modFinish","placement$1","selectionBox","zeroWidth$1","rawRect","selectionRect","cell","SelectionAnchor","labelPrefix$1","eastX","westX","northY$1","southY$1","southeast$1","southwest$1","northeast$1","northwest$1","allRtl","submenuInfo","SubmenuAnchor","AnchorSchema","TransitionSchema","PositionSchema","PlacementSchema","getFixedOrigin","getRelativeOrigin","place","anchoring","placee","lastPlace","position$1","posState","placementSpec","optWithinBounds","positionWithinBounds","placeeDetail","anchorage","placeeState","oldVisibility","newState","vis","PositionApis","pConfig","_pState","PositioningState","Positioning","isConnected","fireDetaching","fireAttaching","virtualAttach","virtualDetach","attach$1","detachChildren$1","replaceChildren","newSpecs","buildNewChildren","newChildren","deleted","virtualReplaceChildren","existingComps","deletedComp","attach","attachWith","insertion","doDetach","detach","parent$1","detachChildren","attachSystem","guiSystem","attachSystemWith","attachSystemAfter","inserter","detachSystem","rebuild","sandbox","sConfig","sState","_data","built","open$1","setContent","openWhileCloaked","transaction","cloak","decloak","close$1","isOpen$1","_sandbox","_sConfig","isPartOf","getState$2","store","cssKey","restore","oldValue","_sState","sink","hasPosition","SandboxApis","ActiveSandbox","sandboxConfig","sandboxState","SandboxSchema","SandboxState","contents","Sandboxing","dismissPopups","repositionPopups","mouseReleased","schema$x","receivingChannel$1","rawSpec","fe","schema$w","receivingChannel","onLoad$5","repConfig","repState","onUnload$2","RepresentApis","ActiveRepresenting","_se","memory$1","isNotSet","clear","manual","dataset","dataByValue","dataByText","itemString","items","currentDataByValue","currentDataByText","newDataByValue","newDataByText","meta","RepresentState","setValue$2","getValue$2","onLoad$4","onUnload$1","DatasetStore","getValue$1","_repState","setValue$1","onLoad$3","ManualStore","setValue","getValue","onLoad$2","initVal","onUnload","MemoryStore","RepresentSchema","Representing","source","forbidden","get$3","augment","SketchBehaviours","_placeholder","adt$3","isSubstituted","subPlaceholder","compSpec","placeholders","newSpec","scan","substitute","req","childSpecs","substituted","valuesThunk","substituteAll","oneReplace","replacements","used","replace","_","substitutePlaces","ps","ph","outcome","single$2","multiple","placeholder","adt$2","fFactory","fSchema","fName","fPname","typeSpec","fGroupSchema","fDefaults","fOverrides","requiredSpec","externalSpec","optionalSpec","groupSpec","asNamedPart","part","name$2","asCommon","convert","adtConstructor","partSchema","external","PartType","combine","partSpec","partValidated","internals","externals","_partSpec","_partValidated","units","u","generate$3","np","g","doGenerateOne","pname","generateOne$1","schemas","names","substitutes","components$1","getPart","partKey","getPartOrDie","getParts","partKeys","system","pk","getAllParts","pUid","_k","getAllPartNames","getPartsOrDie","defaultUids","baseUid","partTypes","partNames","pn","defaultUidsSchema","AlloyParts","partSchemas","partUidsSchemas","asRawOrDie","baseS","single$1","factory","specWithUid","supplyUid","composite$1","partUidsSchema","hasUid","isSketchSpec","singleSchema","compositeSchema","single","rawConfig","sketch","extraApis","composite","inside","ComposeApis","composeConfig","_composeState","ComposeSchema","Composing","nativeDisabled","onLoad$1","disableConfig","disableState","disable","enable","hasNative","nativeIsDisabled","nativeDisable","nativeEnable","ariaIsDisabled","ariaDisable","ariaEnable","_disableState","disableClass","isDisabled","DisableApis","disabled","ActiveDisable","DisableSchema","Disabling","dehighlightAllExcept","hConfig","hState","skip","highlighted","skipComp","dehighlightAll","dehighlight","isHighlighted","highlight","highlightFirst","getFirst","firstComp","highlightLast","getLast","lastComp","highlightAt","getByIndex","highlightBy","getCandidates","queryTarget","getHighlighted","_hState","getDelta$2","selected","dest","getPrevious","getNext","HighlightApis","HighlightSchema","Highlighting","BACKSPACE","TAB","ENTER","ESCAPE","SPACE","LEFT","UP","RIGHT","DOWN","cyclePrev","tryPrev","cycleNext","tryNext","inSet","and","preds","isShift$1","isControl","isNotShift","rule","matches","choose","transitions","reportFocusShifting","prevFocus","n","dom$2","focusee","highlights","FocusInsideModes","typical","infoSchema","stateInit","getKeydownRules","getKeyupRules","optFocusIn","processKey","getRules","keyingConfig","keyingState","rules","onFocusHandler","focusIn","tryGoInsideComponent","isEnterOrSpace","keyboardEvents","create$2","cyclicField","tabbingConfig","findInitial","tabstops","visibles","findCurrent","isTabstop","_tabbingState","goFromTabstop","stopIndex","cycle","tabstop","goBackwards","navigate","goForwards","isFirstChild","goFromPseudoTabstop","execute","exit","AcyclicType","CyclicType","doDefaultExecute","defaultExecute","stopEventForFirefox","_component","schema$v","execute$4","executeConfig","getKeydownRules$5","_executeState","spaceExec","enterExec","downExec","execKeys","getKeyupRules$5","ExecutionType","flatgrid$1","dimensions","numRows","numColumns","KeyingState","useH","movement","move","use","west$1","moveLeft","moveRight","east$1","useV","north$1","south$1","move$1","isHidden$1","locate","locateVisible","visible","findIndex","withGrid","numCols","oldRow","oldColumn","address","newIndex","cycleHorizontal$1","colsInRow","newColumn","cycleVertical$1","newRow","newCol","cycleRight$1","cycleLeft$1","cycleUp$1","cycleDown$1","schema$u","focusIn$3","gridConfig","_gridState","first","findCurrent$1","execute$3","doMove$2","gridState","identified","handleTab","doEscape$1","moveLeft$3","moveRight$3","moveNorth$1","moveSouth$1","getKeydownRules$4","getKeyupRules$4","FlatgridType","getNewIndex","isDisabledButton","tryNewIndex","horizontalWithoutCycles","prevIndex","oldCandidate","onNewIndex","horizontal","_oldCandidate","schema$t","flowConfig","execute$2","focusIn$2","_state","moveLeft$2","moveRight$2","doMove$1","flowState","doEscape","getKeydownRules$3","_flowState","westMovers","eastMovers","getKeyupRules$3","FlowType","toCell","matrix","rowIndex","columnIndex","row","cycleHorizontal","startCol","deltaCol","newColIndex","cycleVertical","colIndex","startRow","deltaRow","nextRowIndex","colsInNextRow","nextColIndex","moveHorizontal","moveVertical","cycleRight","cycleLeft","cycleUp","cycleDown","moveLeft$1","moveRight$1","moveUp$1","moveDown$1","schema$s","focusIn$1","matrixConfig","selectors","execute$1","toMatrix","rows","doMove","ifCycle","ifMove","inRow","cellsInRow","allRows","moveNorth","moveSouth","getKeydownRules$2","getKeyupRules$2","MatrixType","schema$r","menuConfig","moveUp","moveDown","fireShiftTab","menuState","fireTab","getKeydownRules$1","getKeyupRules$1","MenuType","schema$q","specialInfo","SpecialType","acyclic","cyclic","flow","flatgrid","execution","menu","special","KeyboardBranches","isFlatgridState","keyState","Keying","keyConfig","sendFocusIn","withoutReuse","withReuse","virtualReplace","replacee","replaceeIndex","childSpec","insert","set$3","replaceConfig","replaceState","append","appendee","prepend","prependee","remove","removee","_replaceConfig","replaceAt","replacer","ReplaceApis","replaceePred","Replacing","events$d","eventHandlers","focus$2","focusConfig","FocusApis","ActiveFocus","FocusSchema","Focusing","SetupBehaviourCellState","initialState","init","updateAriaState","toggleConfig","toggleState","ariaInfo","updateClass","toggleClass","set$2","toggle$2","on","off","isOn","onLoad","ToggleApis","ActiveToggle","load","updatePressed","status","updateExpanded","updateSelected","updateChecked","ToggleSchema","Toggling","pointerEvents","onClick","events$a","optAction","executeHandler","hoverEvent","focusEvent","toggledEvent","onHover","onFocus$1","onToggled","hover","focus$1","toggled","getItemRole","toggling","getTogglingSpec","tConfig","_value","builder$2","schema$p","builder$1","schema$o","owner$2","parts$h","builder","focusWidget","widget","onHorizontalArrow","_widget","schema$n","itemSchema$2","configureGrid","movementInfo","configureMatrix","configureMenu","parts$g","itemInfo","schema$m","deselectOtherRadioItems","checkedRadioItems","ele","make$7","_spec","_externals","Menu","transpose$1","trace","byItem","byMenu","triggerItem","triggerMenu","generate$2","menus","expansions","menuItems","menuPaths","_triggerItem","submenu","init$c","primary","directory","isClear","setMenuBuilt","menuName","setContents","sPrimary","sMenus","sExpansions","sPaths","getTriggeringItem","menuValue","getTriggerData","getItemByValue","getPreparedMenu","triggeringItemValue","triggeredItem","getTriggeringPath","itemValue","extraPath","lookupItem","revPath","triggers","menuIndex","expand","collapse","refresh","lookupMenu","extractPreparedMenu","menuValues","prep","LayeredState","onMenuItemHighlightedEvent","onMenuItemDehighlightedEvent","HighlightOnOpen","make$6","_rawUiSpec","submenuParentItems","buildMenus","primaryName","makeSketch","menuComp","itemComp","layeredState","setup","componentMap","toDirectory","getItemValue","_container","_menuName","setActiveMenu","setActiveMenuAndItem","getMenus","mv","closeOthers","others","getSubmenuParents","parentItems","updateAriaExpansions","expanded","updateMenuPath","latestMenuName","menuPrep","activeMenu","ExpandHighlightDecision","buildIfRequired","expandRight","activeMenuPrep","collapseLeft","updateView","onRight","onLeft","onEscape","keyOnItem","tmenu","tmenuComp","se","getActiveItem","collapseMenuApi","currentItem","highlightPrimary","extractMenuFromContainer","allMenus","preparedMenus","triggeringPath","primaryMenu","_keyInfo","collapseItem$1","tieredData","singleData","collapseItem","tieredMenu","makeMenu","menuSandbox","menuSpec","getBounds","lazySink","isFirstTierSubmenu","triggeringPaths","getSubmenuLayouts","submenuTriggers","st","submenuLayouts","factory$o","isPartOfRelated","thing","showAt","showWithinBounds","showMenuAt","showMenuWithinBounds","hide","getContent","InlineView","global$9","Button","lookupAttr","getModAttributes","roleAttrs","role","getAttrs","attributes","fromHtml","record","anyInSystem","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create$1","apply","construct","fun","thisValue","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","_key","_len2","_key2","addToSet","transformCaseFunc","l","lcElement","cleanArray","object","newObject","lookupGetter","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text$1","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","ATTR_NAME","policyName","scriptUrl","createDOMPurify","window","DOMPurify","document","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","tagName","parentTagName","_forceRemove","_removeAttribute","_initDocument","dirty","leadingWhitespace","dirtyPayload","_createNodeIterator","_isClobbered","elm","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","_isBasicCustomElement","childNodes","childCount","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","namespaceURI","attrValue","initValue","_sanitizeShadowDOM","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","hookFunction","purify","sanitizeHtmlString","global$8","rtlTransform","defaultIconName","defaultIcon","icons","getIconName","rtlName","lookupIcon","get$2","iconProvider","getOr","fallbackIcon","needsRtlTransform","iconName","addFocusableBehaviour","renderIcon$3","_b","rtlIconClasses","iconHtml","render$3","renderFirst","iconNames","notificationIconMap","Notification","memBannerText","renderPercentBar","percent","renderPercentText","memBannerProgress","progress","banner","iconChoices","level","memButton","notificationIconSpec","notificationBodySpec","NotificationManagerImpl","editor","extras","uiMothership","sharedBackstage","contentArea","win$1","settings","closeCallback","close","notificationWrapper","notification","thisNotification","notificationSpec","anchorOverrides","allNotifications","previousNotification","nodeAnchor","nuText","global$7","global$6","global$5","ToolbarMode$1","ToolbarMode","ToolbarLocation$1","ToolbarLocation","option$2","wrapOptional","register$e","registerOption","stringOrFalseProcessor","stringOrNumberProcessor","isReadOnly","getHeightOption","getWidthOption","getMinWidthOption","getMinHeightOption","getMaxWidthOption","getMaxHeightOption","getUserStyleFormats","shouldMergeStyleFormats","shouldAutoHideStyleFormats","getContentLanguages","getRemovedMenuItems","getToolbarMode","getToolbarGroups","getToolbarLocation","fixedContainerSelector","fixedToolbarContainerTarget","isToolbarPersist","getStickyToolbarOffset","getMenubar","getToolbar","getFilePickerCallback","getFilePickerValidatorHandler","getFontSizeInputDefaultUnit","getFilePickerTypes","useTypeaheadUrls","getAnchorTop","getAnchorBottom","isDraggableModal$1","useStatusBar","useElementPath","useBranding","getResize","getPasteAsText","getSidebarShow","promotionEnabled","useHelpAccessibility","getDefaultFontStack","isSkinDisabled","isMenubarEnabled","getSkinUrl","skinUrl","skin","getSkinUrlOption","getLineHeightFormats","isToolbarEnabled","toolbar","isToolbarString","isToolbarObjectArray","isMultipleToolbars","getMultipleToolbarsOption","toolbars","toolbarArray","isToolbarLocationBottom","fixedContainerTarget","useFixedContainer","getUiContainer","isDistractionFree","isStickyToolbar","isSplitUiMode","Options","autocompleteSelector","detect$1","findIn","AutocompleterEditorEvents","redirectKeyToItem","getItem","keyCode","ItemResponse","ItemResponse$1","navClass","selectableClass","colorClass","presetClasses","tickedClass","groupHeadingClass","iconClass","textClass","accessoryClass","caretClass","checkmarkClass","activeClass","containerClass","containerColumnClass","containerRowClass","containerAlignRightClass","containerAlignLeftClass","containerValignTopClass","containerValignMiddleClass","containerValignBottomClass","classForPreset","presets","forMenu","markers","menuClasses","dom$1","hasIcons","columns","schema$l","focusBehaviours","factory$l","Input","refetchTriggerEvent","redirectMenuItemInteractionEvent","menuSearcherClass","findWithinSandbox","sandboxComp","inputElem","findWithinMenu","restoreState","inputComp","searcherState","saveState","fetchPattern","selectionStart","selectionEnd","setActiveDescendant","renderMenuSearcher","handleByBrowser","handleByHighlightedItem","eventData","customSearcherEventsName","searchResultsClass","augmentWithAria","chunk","rowDom","chunks","forSwatch","forToolbar","preprocessCollection","isSeparator","allSplits","currentSplit","insertItemsPlaceholder","initItems","onItem","rawItems","enrichedItems","_item","forCollection","_hasIcons","forCollectionWithSearchResults","ariaControlsSearchResults","forCollectionWithSearchField","searchField","forHorizontalCollection","menuHasIcons","handleError","createHorizontalPartialMenuWithAlloyItems","_columns","_menuLayout","structure","createPartialMenuWithAlloyItems","menuLayout","getNormalStructure","name$1","title","icon","value$1","fetch$1","getSubmenuItems","onAction","onItemAction","onSetup","optionalName","optionalText","optionalIcon","optionalTooltip","optionalLabel","optionalShortcut","optionalSelect","borderless","enabled","defaultedColumns","defaultedMeta","defaultedOnAction","defaultedType","generatedName","namePrefix","generatedValue","valuePrefix","separatorMenuItemSchema","createSeparatorMenuItem","autocompleterItemSchema","createSeparatorItem","createAutocompleterItem","baseToolbarButtonFields","toolbarButtonSchema","createToolbarButton","baseToolbarToggleButtonFields","toggleButtonSchema","createToggleButton","contextBarFields","contextButtonFields","contextToggleButtonFields","launchButtonFields","launchToggleButtonFields","toggleOrNormal","contextFormSchema","createContextForm","contextToolbarSchema","createContextToolbar","cardImageFields","cardImageSchema","cardTextFields","cardTextSchema","itemSchema$1","cardContainerSchema","commonMenuItemFields","cardMenuItemSchema","createCardMenuItem","choiceMenuItemSchema","createChoiceMenuItem","baseFields","insertTableFields","colorSwatchFields","fancyMenuItemSchema","createFancyMenuItem","menuItemSchema","createMenuItem","nestedMenuItemSchema","createNestedMenuItem","toggleMenuItemSchema","createToggleMenuItem","detectSize","margin","selectorClass","descendants$1","columnLength","thisTop","cTop","namedEvents","SimpleBehaviours","ExclusivityChannel","ShowTooltipEvent","HideTooltipEvent","hideAllExclusive","_tConfig","_tState","TooltippingApis","tState","tooltip","ActiveTooltipping","tooltipConfig","show","popup","TooltippingSchema","TooltippingState","clearTimer","resetTimer","Tooltipping","escape","ReadOnlyChannel","ReadOnlyDataSchema","broadcastReadonly","uiRefs","readonly","motherships","m","setupReadonlyModeSwitch","receivingConfig","DisablingConfigs","runWithApi","onControlAttached","editorOffCell","run","onDestroy","onControlDetached","getApi","onMenuItemExecute","itemResponse","menuItemEventOrder","componentRenderPipeline","renderCommonItem","providersBackstage","buildData","convertText","isMac","shortcut","updated","segment","renderIcon$2","renderText","renderHtml","renderStyledText","renderShortcut","renderCheckmark","renderSubmenuCaret","renderDownwardsCaret","renderContainer","directionClass","alignClass","renderImage","src","alt","renderColorStructure","providerBackstage","colorPickerCommand","removeColorCommand","itemText","iconSvg","common","baseDom","renderItemDomStructure","ariaLabel","domTitle","renderNormalItemStructure","renderIcons","iconSpec","renderIcon","renderEmptyIcon","leftIcon","checkmark","textRender","renderItemStructure","tooltipBehaviour","tooltipWorker","_tooltip","encodeText","replaceText","matchText","translated","encoded","escapedMatchRegex","match","renderAutocompleteItem","useText","onItemValueHandler","_api","render$2","renderCardMenuItem","renderChoiceItem","isSelected","parts$f","hexColour","normalizeHex","shorthandRegex","longformRegex","isHexString","hex","fromString$1","getLongForm","extractValues","longForm","splitForm","toHex","fromRgba","rgbaColour","round$1","rgbRegex","rgbaRegex","red","green","blue","alpha","isRgbaComponent","fromHsv","hsv","hue","saturation","brightness","side","chroma","fromHex","fromStringValues","fromString","rgbaString","rgbMatch","rgbaMatch","rgba","fireSkinLoaded$1","fireSkinLoadError$1","fireResizeEditor","fireResizeContent","fireScrollContent","fireTextColorChange","fireAfterProgressState","fireResolveName","fireToggleToolbarDrawer","fireStylesTextUpdate","fireAlignTextUpdate","fireFontSizeTextUpdate","fireFontSizeInputTextUpdate","fireBlocksTextUpdate","fireFontFamilyTextUpdate","composeUnbinders","onSetupEditableToggle","onSetupEvent","onSetupFormatToggle","boundFormatChangeCallback","binding","onSetupStateToggle","unbindEditableToogle","unbindFormatToggle","handleEvent","onActionToggleFormat$1","rawItem","onActionExecCommand","command","global$4","cacheStorage","ColorCache","storageId","storageString","localstorage","cache","list","add","getCacheForId","currentData","legacyDefault","storage","getCurrentColors","color","addColor","hsvColour","fromRgb","minRGB","maxRGB","hexToHsv","hsvToHex","anyToHex","canvas","canvasContext","foregroundId","backgroundId","fallbackCols","mapColors","colorMap","colors","option$1","fallbackColor","register$d","colorProcessor","colorColsProcessor","calcCols","defaultCols","getColors$2","calculatedCols","getColorCols$1","hasCustomColors$1","getDefaultForegroundColor","getDefaultBackgroundColor","defaultBackgroundColor","isValidBackgroundColor","getClosestCssBackgroundColorValue","getCurrentColor","format","cssRgbValue","applyFormat","removeFormat","registerCommands","getAdditionalColors","hasCustom","applyColor","onChoice","colorPickerDialog","colorOpt","getColors$1","getFetch$1","callback","setIconColor","splitButtonApi","newColor","setTooltip","buttonApi","select$1","optCurrentHex","getToolTipText","lastColor","tooltipPrefix","colorText","registerTextColorButton","_splitButtonApi","registerTextColorMenuItem","isValid","onSubmit","details","initialData","register$c","fallbackColorForeground","fallbackColorBackground","lastForeColor","lastBackColor","createPartialChoiceMenu","select","alloyItems","createChoiceItems","itemPresets","deriveMenuMovement","menuMarkers","deriveCollectionMovement","renderColorSwatchItem","backstage","getColorItems","widgetSpec","useCustomColors","cellOverEvent","cellExecuteEvent","makeAnnouncementText","col","makeCell","emitCellOver","makeCells","getCellLabel","cells","selectCells","selectedRow","selectedColumn","makeComponents","cellRow","makeLabelText","fancyMenuItems","emptyLabelText","memLabel","renderFancyMenuItem","render","renderNestedItem","downwardsCaret","caret","underlinePath","translatedTooltip","renderNormalItem","renderSeparatorItem","renderToggleMenuItem","autocomplete","separator$3","normal","nested","toggle$1","fancy","card","CouplingApis","coupleConfig","coupleState","CouplingSchema","CouplingState","coupled","lookupCoupled","coupledName","getOrCreate","getExisting","Coupling","nu$3","baseFn","callbacks","nCallback","isReady","call","cbs","cb","LazyValue","errorReporter","make$5","aFutureB","futureB","Future","partType$1","getAnchor","overrides","fetch","mapFetch","fetcher","openF","highlightOnOpen","futureData","getLazySink","getSink","tdata","open","onOpenSync","_onOpenSync","_highlightOnOpen","togglePopup","matchWidth","useMinWidth","buttonWidth","sinkDetail","internalSink","lazySinkFn","doRepositionMenus","makeSandbox$1","ariaControls","onOpen","onClose","repositionMenus","sandboxFields","schema$k","parts$e","factory$k","switchToMenu","togglePopup$1","dropdownComp","triggerExecute","Dropdown","identifyMenuLayout","searchMode","handleRefetchTrigger","originalSandboxComp","dropdown","optSearcherState","newSandboxComp","handleRedirectToMenuItem","getActiveMenuItemFrom","activeItem","getSearchResults","activeMenuComp","updateAriaOnHighlight","resultsElem","controlledId","updateAriaOnDehighlight","focusSearchField","searcherComp","getSearchPattern","FocusMode","createMenuItemFromBridge","isHorizontalMenu","parseForHorizontalMenu","menuitem","createAutocompleteItems","highlightOn","createPartialMenu","itemHasIcon","createItem","createTieredDataFrom","partialMenu","createInlineMenuFrom","focusMode","getAutocompleterRange","initRange","Autocompleter","autocompleterId","processingAction","activeState","autocompleter","cancelIfNecessary","isMenuOpen","isActive","hideIfNecessary","editorBody","ariaOwnsAttr","getMenu","getCombinedItems","choices","itemMeta","nr","autocompleterApi","fetchOptions","display","lookupData","ld","updateDisplay","combinedItems","cloneAutocompleterToEditorDoc","newElm","autocompleterUiApi","nonScrollingOverflows","isScrollingOverflowValue","isScroller","overflowX","overflowY","detect","popupSinkElem","ancestorsScrollers","scrollers","detectWhenSplitUiMode","getBoundsFrom","sc","scrollableBoxes","closest","DelayedFunction","ref","SIGNIFICANT_MOVE","LONGPRESS_DELAY","getTouch","isFarEnough","touch","distX","distY","monitor","startData","longpressFired","longpress$1","handleTouchstart","handleTouchmove","handleTouchend","isSame","isDangerous","setup$d","rawSettings","tapEvent","simpleEvents","tapStopped","pasteTimeout","onPaste","onKeydown","onFocusIn","focusoutTimeout","onFocusOut","derive","rawTarget","fromSource","fromExternal","adt$1","doTriggerHandler","lookup","eventType","handlerInfo","doTriggerOnUntilStopped","triggerHandler","broadcast","listeners","_logger","listener","triggerUntilStopped","triggerOnUntilStopped","eventHandler","broadcastHandler","EventRegistry","registry","registerId","findHandler","handlersById","_eventName","isAboveRoot","Registry","readOrTag","failOnDuplicate","tagId","conflict","unregister","register","Container","domWithoutAttributes","takeover","domEvents","_alloyId","getByUid","getByDom","addToWorld","removeFromWorld","broadcast$1","broadcastOn","broadcastEvent","destroy","broadcastData","receivers","receiver","renderBar","schema$j","parts$d","excludeFactory","factory$i","descriptor","descriptorId","FormField","ActiveTabstopping","tabConfig","TabstopSchema","Tabstopping","global$3","renderFormFieldWith","pLabel","pField","extraClasses","extraBehaviours","renderFormFieldSpecWith","renderFormField","renderFormFieldDomWith","renderFormFieldDom","renderLabel$3","formChangeEvent","formCloseEvent","formCancelEvent","formActionEvent","formSubmitEvent","formBlockEvent","formUnblockEvent","formTabChangeEvent","formResizeEvent","renderCollection","getIcon","runOnItem","htmlLines","iconContent","mapItemName","tgt","collectionEvents","currentActive","iterCollectionItems","applyAttributes","childElm","ariaElements","isAriaElement","markValid","invalidConfig","notifyInfo","markInvalid","invalidState","_invalidState","validatorInfo","valid","InvalidateApis","ActiveInvalidate","InvalidateSchema","Invalidating","ActiveUnselecting","Unselecting","renderPanelButton","colorInputChangeEvent","colorSwatchChangeEvent","colorPickerCancelEvent","renderColorInput","colorInputBackstage","inputValue","span","emitSwatchChange","colorBit","memColorButton","valueOpt","colorButton","_field","labelPart","edgePart","det","tlEdgePart","tedgePart","trEdgePart","redgePart","brEdgePart","bedgePart","blEdgePart","ledgePart","thumbPart","isShift","spectrumPart","model","setValueFrom","spectrum","SliderParts","sliderChangeEvent","isTouchEvent$2","evt","getEventSource","touchEvent","mouseEvent","minX","minY","min1X","min1Y","max1X","max1Y","xRange","yRange","halfX","halfY","step","useMultiplier","snap","snapStart","rounded","hasEdge","edgeName","hasLEdge","hasREdge","hasTEdge","hasBEdge","currentValue","xyValue","fireSliderChange$3","setToTLEdgeXY","setToTEdge","setToTEdgeXY","setToTREdgeXY","setToREdge","setToREdgeXY","setToBREdgeXY","setToBEdge","setToBEdgeXY","setToBLEdgeXY","setToLEdge","setToLEdgeXY","reduceBy","increaseBy","capValue","snapValueOf","extraValue","remainder","adjustment","rawSteps","maxSteps","numSteps","findOffsetOf","findValueOf","hasMinEdge","hasMaxEdge","minBound","maxBound","screenRange","capMin","capMax","findOffsetOfValue$2","maxOffset","centerMinEdge","centerMaxEdge","getBoundsProperty","getMinXBounds","getMaxXBounds","getMinYBounds","getMaxYBounds","getXScreenRange","getYScreenRange","getCenterOffsetOf","componentMinEdge","componentMaxEdge","spectrumMinEdge","getXCenterOffSetOf","componentBounds","spectrumBounds","getYCenterOffSetOf","fireSliderChange$2","findValueOfOffset$1","setValueFrom$2","xValue","setToMin$2","setToMax$2","moveBy$2","handleMovement$2","getValueFromEvent$2","findOffsetOfValue$1","minEdge","maxEdge","findPositionOfValue$1","slider","setPositionFromValue$2","thumb","edges","thumbRadius","onLeft$2","onRight$2","onUp$2","onDown$2","edgeActions$2","HorizontalModel","fireSliderChange$1","findValueOfOffset","setValueFrom$1","yValue","setToMin$1","setToMax$1","moveBy$1","handleMovement$1","getValueFromEvent$1","findOffsetOfValue","findPositionOfValue","setPositionFromValue$1","onLeft$1","onRight$1","onUp$1","onDown$1","edgeActions$1","VerticalModel","fireSliderChange","sliderValue","moveBy","isVerticalMovement","handleMovement","setToMin","mX","mY","setToMax","getValueFromEvent","setPositionFromValue","xPos","yPos","thumbXRadius","thumbYRadius","onUp","onDown","edgeActions","TwoDModel","SliderSchema","Slider","getThumb","getSpectrum","getLeftEdge","getRightEdge","getTopEdge","getBottomEdge","modelDetail","changeValue","resetToMin","resetToMax","fireOnChoose","wasDown","onDragStart","onDragEnd","getInitial","fieldsUpdate","sliderUpdate","paletteUpdate","sliderFactory","translate","getClass","_thumb","owner$1","schema$i","getPartName$1","sketch$1","fSpec","fieldParts","make$4","toResult","form","resPs","resPThunk","pName","wrapper","Form","validInput","invalidInput","validatingInput","translatePrefix","rgbFormFactory","onValidHexx","onInvalidHexx","invalidation","renderTextField","description","helptext","comps","concats","copyRgbToHex","hexField","copyRgbToForm","rgb","memPreview","updatePreview","preview","copyHexToRgb","setValueRgb","getValueRgb","onInvalidInput","onValidHex","onValidRgb","isHexInputEvent","onValidInput","formPartStrings","redStrings","greenStrings","blueStrings","hexStrings","paletteFactory","setColour","ctx","grdWhite","grdBlack","setPaletteHue","setPaletteThumb","_detail","getInitialValue","onChange","onInit","_slider","sliderBehaviours","_apis","makeFactory","rgbForm","sbPalette","hueSliderToDegrees","hueDegreesToSlider","memSlider","memPalette","memRgb","updatePalette","_hex","palette","updateFields","updateSlider","updatePaletteThumb","updateState","runUpdates","updates","update","onPaletteUpdate","oldHue","newHsv","newHex","onSliderUpdate","oldRgb","oldHsv","onFieldsUpdate","ComposingConfigs","mem","processors","memento","rawProcessors","other","rawValue","withComp","optInitialValue","getter","setter","initialValue","withElement","domHtml","memory","english","translate$1","renderColorPicker","colourPickerFactory","onInvalidHex","memPicker","picker","pattern","valOpt","global$2","isOldCustomEditor","renderCustomEditor","editorApi","memReplaced","ta","ea","cvalue","ed","global$1","filterByExtension","files","allowedImageFileTypes","isFileInAllowedTypes","file","renderDropZone","actions","onDrop","transferEvent","handleFiles","onSelect","memInput","renderField","renderGrid","adaptable","rate","newArgs","tempArgs","cancel","beforeObject","afterObject","craftWithClasses","craft","containerClasses","triggerTab","shiftKey","onFocus","targetComp","isPseudoStop","dialogChannel","titleChannel","bodyChannel","footerChannel","bodySendMessageChannel","dialogFocusShiftedChannel","isSafari","isFirefox","isSafariOrFirefox","isChromium","isElementScrollAtBottom","scrollHeight","clientHeight","scrollToY","getScrollingElement","writeValue","iframeElement","fallbackFn","iframe","lastScrollTop","isScrollAtBottom","scrollAfterWrite","writeValueThrottler","interval","getDynamicSource","stream","cachedValue","_frameComponent","frameComponent","setSrcdocValue","throttler","renderIFrame","baseClass","opaqueClass","containerBorderedClass","sourcing","image","reject","loaded","calculateImagePosition","imageWidth","imageHeight","zoom","zoomToFit","panel","panelW","panelH","renderImagePreview","cachedData","memImage","memContainer","translatedData","z","applyFramePositioning","cachedWidth","cachedHeight","imageComponent","img","styles","fakeValidatedData","renderLabel$2","backstageShared","centerClass","endClass","internalToolbarButtonExecute","onToolbarButtonExecute","itemApi","commonButtonDisplayEvent","toolbarButtonEventOrder","forceInitialSize","renderIcon$1","iconsProvider","renderIconFromPack$1","renderReplaceableIconFromPack","renderLabel$1","updateMenuText","updateMenuIcon","renderCommonDropdown","optMemDisplayText","optMemDisplayIcon","onLeftOrRightInMenu","tooltipAttributes","fixWidthBehaviourName","displayText","displayIcon","itemCompCausingCollapse","nowActiveMenuComp","isMenuItemReference","isSeparator$2","isExpandingMenuItem","separator$2","unwrapReferences","realItems","getFromExpandingItem","submenuItems","newMenus","newExpansions","generateValueIfRequired","itemWithValue","newData","getSearchModeForField","searchSettings","getSearchModeForResults","mainMenuSearchMode","mainMenu","submenuSearchMode","submenus","isSingleListItem","dataAttribute","fetchItems","selectedValue","findItemByValue","renderListBox","initialItem","sketchSpec","listBoxWrap","renderPanel","factory$h","option","initialValues","firstOption","HtmlSelect","renderSelectBox","translatedOptions","chevron","selectWrap","schema$h","getField","coupledPart","selfName","otherName","lock","parts$c","factory$g","FormCoupledInputs","formatSize","unitDec","maxDecimal","unit","numText","parseSize","sizeText","convertUnit","inInch","noSizeConversion","_input","ratioSizeConversion","scale","makeRatioConverter","currentFieldText","otherFieldText","cValue","oValue","cSize","oSize","renderSizeInput","converter","ratioEvent","makeIcon","pLock","formGroup","getFieldPart","isField1","getLabel","widthField","heightField","_lock","newSize","optCurrent","optOther","value1","value2","renderSlider","renderTable","renderTh","renderHeader","header","renderTd","renderTr","renderRows","baseInputBehaviours","validatingBehaviours","vl","inputMode","inputAttributes","pTextField","extraClasses2","renderInput","renderTextarea","getAnimationRoot","slideConfig","getDimensionProperty","getDimension","disableTransitions","setShrunk","setGrown","doImmediateShrink","slideState","_calculatedSize","doStartShrink","calculatedSize","doStartSmartShrink","doStartGrow","wasShrinking","beforeSize","fullSize","refresh$4","grow","shrink","immediateShrink","hasGrown","hasShrunk","isGrowing","_slideState","isShrinking","SlidingApis","ActiveSliding","SlidingSchema","SlidingState","Sliding","getMenuButtonApi","renderMenuButton","tabstopping","fetchContext","getFetch","getButton","getMenuItemAction","orig","getMenuItemSetup","renderLabel","leafLabelEventsId","renderLeafLabel","onLeafAction","treeId","selectedId","internalMenuButton","btn","button","toggle","isLeftArrowKey","isRightArrowKey","dirComp","dirLabelElement","renderIconFromPack","directoryLabelEventsId","renderDirectoryLabel","noChildren","toggleExpandChildren","directoryEle","directoryComp","willExpand","parentDirElement","parentDirLabelElement","renderDirectoryChildren","expandedIds","renderDirectory","directoryEventsId","labelTabstopping","expandedIdsCell","computedChildrenComponents","childrenVisible","_cmp","childrenComp","treeEventsId","renderTree","onToggleExpand","defaultExpandedIds","selectedIdCell","ActiveStreaming","streamConfig","streamState","throttle","_config","StreamingState","setup$c","streamInfo","sInfo","StreamingSchema","Streaming","setValueFromItem","itemData","setCursorAtEnd","setSelectionOn","setSelectionToEnd","startOffset","attemptSelectOver","inputDisplay","itemExecute","make$3","navigateList","highlighter","focusBehaviours$1","getActiveMenu","typeaheadCustomEvents","previousValue","pv","sandboxIsOpen","typeaheadComp","_typeaheadComp","typeahead","schema$g","parts$b","_tmenu","selectOverTextInInput","_menu","Typeahead","wrap","resA","whenError","whenValue","timeout","errorThunk","timedOut","nu$1","FutureResult","future","promise","completer","renderCommonSpec","actionOpt","domFinal","renderIconButtonSpec","calculateClassesFromButtonType","buttonType","renderButtonSpec","translatedText","renderButton$1","buttonSpec","getAction","isMenuFooterButtonSpec","isNormalFooterButtonSpec","isToggleButtonSpec","renderToggleButton","providers","optMemIcon","memIcon","newIcon","buttonTypeClasses","showIconAndText","translatedTextComponed","iconButtonSpec","renderFooterButton","menuButtonSpec","fixedSpec","renderDialogButton","separator$1","toMenuItem","staticMenuItem","url","toMenuItems","targets","filterLinkTargets","filteredTargets","headerTargets","linkInfo","anchorTargets","anchorTargetTop","anchorTargetBottom","historyTargets","history","joinMenuLists","filterByQuery","term","lowerCaseTerm","getItems","fileType","urlBackstage","urlInputValue","errorId","renderUrlInput","updateHistory","urlEntry","typeaheadSpec","memUrlBox","_newValue","memInvalidIcon","invalidComp","validation","trimmedValue","_entry","errId","memStatus","optUrlPicker","browseUrlEvent","memUrlPickerButton","controlHWrapper","openUrlPicker","componentData","urlData","chosenData","renderAlertBanner","set$1","get$1","renderCheckbox","toggleCheckboxHandler","className","memIcons","renderHtmlPanel","make$2","dialogData","makeIframe","iframeSpec","factories","noFormParts","interpretInForm","oldBackstage","newBackstage","interpretParts","interpretWithoutForm","westEdgeX","middleX","eastEdgeX","northY","southY","centreY","lookupPreserveLayout","preserve","lookupFlippedLayout","flip","bubbleAlignments$2","getInlineDialogAnchor","contentAreaElement","lazyAnchorbar","lazyUseEditableAreaAnchor","editableAreaAnchor","bubbleSize","standardAnchor","getInlineBottomDialogAnchor","inline","lazyBottomAnchorBar","getBannerAnchor","getCursorAnchor","bodyElement","selectedCells","firstCell","lastCell","selectionTableCellRange","getNodeAnchor$1","getAnchors","isToolbarTop","useFixedToolbarContainer","colorPicker","hasCustomColors","getColors","getColorCols","ColorInputBackstage","isDraggableModal","DialogBackstage","HeaderBackstage","isNestedFormat","isFormatReference","defaultStyleFormats","isNestedFormats","isBlockFormat","isInlineFormat","isSelectorFormat","mapFormats","userFormats","fmt","formatNameWithPrefix","registerCustomFormats","registerFormats","customFormats","getStyleFormats","registeredUserFormats","isSeparator$1","processBasic","isSelectedFor","getPreviewFor","register$a","formats","enrichSupported","enrichMenu","newItems","doEnrich","enrichCustom","formatName","newItem","init$7","settingsFormats","eventsFormats","replaceSettings","_e","enriched","modifications","fromSettings","fromEvents","getData","isElement","trim","hasContentEditableState","isContentEditableTrue","isContentEditableFalse","create","isChildOfContentEditableTrue","tempNode","getElementText","getOrGenerateId","isAnchor","isValidAnchor","isEditable","isHeader","isValidHeader","getLevel","headerTarget","headerId","anchorTarget","anchorId","anchorText","getHeaderTargets","elms","getAnchorTargets","getTargetElements","hasTitle","LinkTargets","STORAGE_KEY","HISTORY_LENGTH","isHttpUrl","isArrayOfUrl","isRecordOfUrlArray","getAllHistory","unparsedHistory","setAllHistory","getHistory","addToHistory","itemsWithoutUrl","isTruthy","makeMap","getPicker","getPickerTypes","optFileTypes","_picker","types","getPickerSetting","filetype","pickerTypes","getUrlPicker","entry","getTextSetting","getLinkInformation","getValidationHandler","UrlInputBackstage","init$6","lazySinks","contextMenuState","urlinput","colorinput","dialogSettings","isContextMenuOpen","setContextMenuState","commonBackstage","popupBackstage","dialogBackstage","setup$b","mothership","uiMotherships","channel","fireDismissPopups","onTouchstart","onTouchmove","onTouchend","onMousedown","onMouseup","onContentClick","onContentMouseup","onContentMousedown","loopEditor","onWindowScroll","onWindowResize","onElementScroll","onEditorResize","onEditorProgress","onDismissPopups","parts$a","partType","schema$f","itemsPart","parts$9","factory$f","_external","setItems","getListContainer","itemComps","numListsRequired","numListsToAdd","itemsToAdd","itemsToRemove","builtLists","CustomList","schema$e","parts$8","factory$e","setGroups","groups","getGroupContainer","Toolbar","setup$a","isDocked$2","getBehaviours$1","StaticHeader","getOffsetParent","offsetParent$1","getOrigin","appear","contextualInfo","disappear","isPartiallyVisible","isTopCompletelyVisible","isBottomCompletelyVisible","forceTopPosition","winBox","leftX","forceBottomPosition","getDockedLeftPosition","tryDockingPosition","isVisibleForModes","getXYForRestoring","priorY","scrollEnv","getXYForSaving","getPrior","storePrior","storePriorIfNone","revertToOriginal","offsetBox","scrollDelta","_left","_top","_right","tryMorphToOriginal","tryDecisionToFixedMorph","tryMorphToFixed","tryMorphToOriginalOrUpdateFixed","location","tryMorph","calculateMorphToOriginal","forceDockWith","getDecision","morphToStatic","morphToCoord","isDocked","updateVisibility","morphToDocked","contextInfo","applyFixedMorph","morph","applyMorph","refreshInternal","resetInternal","staticOrAbsoluteMorph","refresh$3","reset","forceDockWithDecision","forceDockToTop","forceDockToBottom","DockingApis","ActiveDocking","dockInfo","dockState","DockingSchema","DockingState","docked","initialBounds","Docking","toolbarHeightChange","visibility","editorStickyOnClass","editorStickyOffClass","scrollFromBehindHeader","containerHeader","viewHeight","scrollPos","markerElement","markerPos","markerHeight","markerTop","markerBottom","editorHeaderPos","editorHeaderHeight","editorHeaderTop","editorHeaderBottom","editorHeaderDockedAtTop","editorHeaderDockedAtBottom","isDockedMode","updateIframeContentFlow","getOccupiedHeight","parentElem","padding","parentWidth","updateSinkVisibility","sinkElem","updateEditorClasses","editorContainer","restoreFocus","headerElem","focusedElem","ownerDoc","activeElm","findFocusedElem","rootElm","setup$9","lazyHeader","getIframeBehaviours","getBehaviours","focusedElm","runOnSinkElement","onDockingSwitch","additionalBehaviours","headerHeight","boxHeight","topBound","constrainedBounds","constrainedBoundsY","boundsWithoutOffset","StickyHeader","groupToolbarButtonSchema","createGroupToolbarButton","baseMenuButtonFields","MenuButtonSchema","createMenuButton","splitButtonSchema","createSplitButton","SilverMenubar","setMenus","internal","activeButton","hoveredButton","activeComp","hoveredComp","prev","promotionMessage","promotionLink","renderPromotion","schema$d","getPartName","sSpec","make$1","getSlotNames","getSlot","onSlot","def","slot","onSlots","doShowing","doShow","doHide","isShowing","hideSlot","hideSlots","hideAllSlots","showSlot","SlotContainer","sidebarSchema","createSidebar","setup$8","sidebars","handleToggle","makePanels","panelConfigs","bridged","sidepanel","sidePanelSpec","makeSidebar","slotContainer","setSidebar","sidebar","showSidebar","configKey","updateSidebarRoleOnToggle","sidebarState","toggleSidebar","whichSidebar","fixSize","autoSize","renderSidebar","BlockingApis","getBusySpec","blockerBehaviours","blockSpec","blocker","blockingConfig","blockingState","BlockingSchema","BlockingState","blockWith","Blocking","getBusySpec$1","_root","_behaviours","focusBusyComponent","throbber","toggleEditorTabIndex","tabIndexAttr","dataTabIndexAttr","tabIndex","toggleThrobber","throbberFocus","busyComp","renderThrobber","isFocusEvent","isPasteBinTarget","targetElm","setup$7","lazyThrobber","throbberState","stealFocus","generate$1","within","withinWidth","apportion","total","parray","toUnit","fitLast","overflow","overflower","fitAll","tryFit","divide","setGroups$1","storedGroups","bGroups","findFocusedComp","refresh$2","setOverflow","builtGroups","overflowGroup","focusedComp","availableWidth","overflows","schema$c","schema$b","parts$7","expandable","schema$a","parts$6","shouldSkipFocus","toggleWithoutFocusing","toolbarSandbox","bounder","makeSandbox","skipFocus","FloatingToolbarButton","schema$9","parts$5","factory$b","ToolbarGroup","buildGroups","refresh$1","memFloatingToolbarButton","overflowGroups","floatingToolbarButton","factory$a","SplitFloatingToolbar","schema$8","parts$4","isOpen","toggleToolbar","overf","factory$9","toolbarToggleEvent","doSetGroups","_button","SplitSlidingToolbar","renderToolbarGroupCommon","toolbarGroup","renderToolbarGroup","getToolbarBehaviours","toolbarSpec","modeName","onAttached","renderMoreToolbarCommon","renderFloatingMoreToolbar","baseSpec","overflowXOffset","headerBounds","docElem","docBounds","renderSlidingMoreToolbar","renderToolbar","baseButtonFields","normalButtonFields","toggleButtonFields","schemaWithoutGroupButton","groupFields","viewButtonSchema","viewSchema","createView","renderButton","isToggleButton","setIcon","setActive","optTranslatedText","optTranslatedTextComponed","optIconSpec","hasIconAndText","renderViewButton","renderButtonsGroup","deviceDetection","renderViewHeader","hasGroups","endButtons","btnspec","renderViewPane","factory$8","_comp","View","makeViews","viewConfigs","internalViewConfig","makeSlotContainer","getCurrentName","hideContainer","showContainer","makeViewInstanceApi","runOnPaneWithInstanceApi","view","pane","runOnShow","runOnHide","ViewWrapper","showMainView","hideMainView","optCurrentSlotName","isTogglingCurrentView","prevName","views","outerContainer","editorCont","factory$6","toolbarDrawerOpenState","renderedGroups","mToolbar","renderedToolbars","menubar","partMenubar","toolbarFactory","partMultipleToolbar","_mToolbar","tc","_index","partToolbar","renderer","partHeader","partPromotion","partSocket","partSidebar","partThrobber","partViewWrapper","renderEditorContainer","partEditorContainer","OuterContainer","defaultMenubar","defaultMenus","removedMenuItems","itemName","removedMenuItem","parseItemsString","identifyMenus","rawMenuData","userDefinedMenus","validMenus","isDefaultMenu","menuData","isNotSeparator","fireSkinLoaded","done","fireSkinLoadError","loadStylesheet","stylesheetUrl","styleSheetLoader","loadRawCss","loadUiSkins","skinUiCss","loadShadowDomUiSkins","shadowDomSkinCss","loadUrlSkin","isInline","skinResourceIdentifier","skinContentCss","loadSkin","makeTooltipText","labelWithPlaceholder","generateSelectItems","generateItem","response","invalid","validate","si","validateItems","preItems","getStyleItems","createMenuItems","createSelectButton","tooltipWithPlaceholder","textUpdateEventName","process","rawFormats","buildBasicStaticDataset","Delimiter","split","delimiter","buildBasicSettingsDataset","settingName","menuTitle$4","btnTooltip$4","fallbackAlignment","alignMenuItems","getSpec$4","getMatchingValue","updateSelectMenuIcon","alignment","createAlignButton","createAlignMenu","findNearest","getStyles","menuTitle$3","btnTooltip$3","fallbackFormat","getSpec$3","updateSelectMenuText","createBlocksButton","createBlocksMenu","menuTitle$2","btnTooltip$2","systemFont","systemStackFonts","splitFonts","fontFamily","fonts","font","matchesStack","stack","isSystemFontStack","userStack","getSpec$2","getFirstFont","getCurrentValue","matchOpt","createFontFamilyButton","createFontFamilyMenu","decimalDigits","exponentPart","dot","float","isUnit","accepted","check","unitRaw","normalise","Keys","createBespokeNumberInput","currentComp","getValueFromCurrentComp","alloyComp","customEvents","fromInput","focusBack","lenghtDelta","oldStart","oldEnd","decrease","increase","goToParent","focusInput","makeStepperButton","editorOffCellStepButton","altExecuting","memMinus","memPlus","buttonNode","wrapperComp","menuTitle$1","btnTooltip$1","fallbackFontSize","legacyFontSizes","keywordFontSizes","precision","factor","toPt","fontSize","toLegacy","getSpec$1","pt","legacy","createFontSizeButton","getConfigFromUnit","baseConfig","defaultValue","isValidValue","getNumberInputSpec","updateFunction","parsedText","defaultUnit","createFontSizeInputButton","createFontSizeMenu","menuTitle","btnTooltip","getSpec","getFormatItems","flattenedItems","createStylesButton","createStylesMenu","schema$7","arrowPart","arrow","buttonPart","splitDropdown","parts$3","factory$5","openMenu","executeOnButton","buttonEvents","SplitDropdown","getButtonApi","getToggleApi","getTooltipAttributes","focusButtonEvent","renderCommonStructure","optIcon","optText","renderFloatingToolbarButton","identifyButtons","specialisation","renderCommonToolbarButton","_d","renderToolbarButton","renderToolbarButtonWith","bonusEvents","renderToolbarToggleButton","renderToolbarToggleButtonWith","fetchChoices","renderSplitButton","buttonComp","_c","defaultToolbar","renderFromBridge","bridgeBuilder","buttons","identify","extractFrom","bespokeButtons","removeUnusedDefaults","filteredItemGroups","subItem","convertStringToolbar","strToolbar","groupsStrings","isToolbarGroupSettingArray","createToolbar","toolbarConfig","lookupButton","toolbarItem","allowToolbarGroups","prefixes","toolbarGroups","setToolbar","rawUiConfig","toolbarButtonsConfig","detection","isiOS12","setupEvents$1","contentWindow","initialDocEle","lastWindowDimensions","lastDocumentDimensions","resizeWindow","outer","resizeDocument","docEle","inner","elementLoad","attachUiMotherships","uiRoot","Iframe","mainUi","lastToolbarWidth","eTargetNode","socket","limit","unbinder","_ui","toolbarMode","refreshDrawer","parseToInt","numToPx","calcCappedSize","minSize","maxSize","minOverride","maxOverride","getHeight","baseHeight","minHeight","getHeightWithFallback","getWidth","baseWidth","minWidth","getWidthWithFallback","maximumDistanceToEdge","InlineHeader","floatContainer","DOM","isSticky","editorMaxWidthOpt","headerBackstage","isPositionedAtTop","isSplitToolbar","calcToolbarOffset","tbar","calcMode","toolbarHeight","targetBounds","docHeight","setupMode","verticalDir","updateChromeWidth","bodyMargin","updateChromePosition","optToolbarWidth","getOffsetParent$1","isOffsetParentBody","topValue","baseProperties","widthProperties","toolbarWidth","minimumToolbarWidth","repositionPopups$1","restoreAndGetCompleteOuterContainerWidth","stickyAction","doUpdateMode","fc","currentMode","newMode","getTargetPosAndBounds","setupEvents","ui","toolbarPersist","prevPosAndBounds","resizeContent","prevPos","prevBounds","hasResized","lastScrollX","updateUi","newScrollX","_args","Inline","uiContainer","LazyUiReferences","dialogUi","popupUi","optDialogMothership","optPopupMothership","dm","pm","showContextToolbarEvent","hideContextToolbarEvent","getFormApi","runOnExecute","formApi","renderContextButton","renderContextToggleButton","generateOne","generate","mementos","compInSystem","buildInitGroups","commands","ContextForm","toolbarType","isVerticalOverlap","threshold","getRangeRect","leaf$1","getSelectionBounds","bodyPos","getAnchorElementBounds","lastElement","getHorizontalBounds","contentAreaBox","viewportBounds","getVerticalBounds","isToolbarLocationTop","headerBox","isToolbarBelowContentArea","isToolbarAbove","containerBounds","getContextToolbarBounds","toolbarOrMenubarEnabled","bubbleSize$1","bubbleAlignments$1","isEntireElementSelected","preservePosition","currentPosition","shouldUseInsetLayouts","determineInsetLayout","contextbar","selectionBounds","isSameAnchorElement","yBounds","contextbarHeight","getAnchorSpec$2","mobile","smartInsetLayout","newAnchor","getInsetLayouts","getAnchorLayout","matchTargetWith","ctxs","toolbarApi","filterByPositionForStartNode","doesPositionExist","filterToolbarsByPosition","hasSelectionToolbars","hasNodeToolbars","nodeToolbars","selectionToolbars","filterByPositionForAncestorNode","findPosition","matchStartNode","nodeCandidates","editorCandidates","nodeMatches","editorMatches","matchAncestor","startNode","scopes","ancestorElem","contextToolbars","contextForms","lookup$1","rootElem","isOutsideRoot","categorise","forms","inNodeScope","inEditorScope","formNavigators","lookupTable","registerForm","contextForm","launch","registerToolbar","contextToolbar","forwardSlideEvent","backSlideEvent","changeSlideEvent","resizingClass","renderContextToolbar","currentWidth","newWidth","newContents","oldContents","transitionClass","register$9","registryContextToolbars","lastTrigger","lastContextPosition","canLaunchToolbar","isSameLaunchElement","shouldContextToolbarHide","contextToolbarBounds","anchorBounds","hideOrRepositionIfNecessary","contextBarEle","wrapInPopDialog","getScopes","alloySpec","buildToolbar","buildContextToolbarGroups","allButtons","buildContextFormGroups","initGroups","anchorLayout","launchContext","launchContextToolbar","isDragging","register$8","registerController","getMenuItems","oldApi","unbindWatcher","lineHeightSpec","languageSpec","code","customCode","lang","register$7","register$6","onSetupOutdentState","registerButtons$2","register$5","makeSetupHandler","pasteAsText","pastePlainTextToggleHandler","register$4","onActionToggleFormat","registerFormatButtons","_idx","registerCommandButtons","registerCommandToggleButtons","registerButtons$1","registerMenuItems$2","register$3","onSetupUndoRedoState","registerMenuItems$1","registerButtons","register$2","onSetupVisualAidState","registerMenuItems","registerToolbarButton","register$1","setup$6","patchPipeConfig","shouldNeverUseNative","getAvoidOverlapSelector","isContextMenuDisabled","getContextMenu","contextMenus","contextMenu","transpose","dx","dy","isTouchEvent$1","fromPageXY","fromClientXY","transposeContentAreaContainer","containerPos","getPointAnchor","getSelectionAnchor","getNodeAnchor","getAnchorSpec$1","anchorType","initAndShow$1","buildMenu","contextmenu","anchorSpec","bubbleAlignments","isTouchWithinSelection","rngRect","setupiOSOverrides","originalSelection","selectionReset","unbindEventListeners","preventMousedown","clearSelectionReset","getAnchorSpec","highlightImmediately","initAndShow","isiOS","isMacOS","isAndroid","shouldHighlightImmediately","openiOS","separator","makeContextItem","commonMenuItem","commonItem","addContextMenuGroup","groupItems","generateContextMenu","selectedElement","sections","allItems","isNativeOverrideKeyEvent","isTouchEvent","isTriggeredByKeyboard","getSelectedElement","getAnchorType","setup$5","hideContextMenu","showContextMenu","hideEvents","subtract","changes","asFixed","coord","asAbsolute","asOffset","withinRange","coord1","coord2","getDeltas","toStyles","stylesOpt","deltaX","deltaY","absolute","fixed","absorb","partialCoord","originalCoord","absorbOne","stencil","optX","optY","parseAttrToInt","snapsInfo","getCoords","snapInfo","moveOrSnap","newCoord","findClosestSnap","findSnap","fixedCoord","spanned","stopDrag","findMatchingSnap","snaps","sensor","deltas","bestDeltas","currAvg","bestAvg","snapTo$1","DraggingApis","dragConfig","snapPin","initialAttribute","resetZIndex","zIndex","changeZIndex","zindex","instigate","anyComponent","discard","createComponent","blockerClass","blockerEvents","SnapSchema","schema$6","getCurrentCoord","clampCoords","coords","absoluteCoord","newCoords","offset$1","calcNewCoord","optSnaps","currentCoord","snapping","dragBy","calcStartData","dragState","dragMode","dragStartData","dlt","updateStartState","init$3","dragApi","MouseData","events$3","stop$1","delayDrop","schema$5","init$2","getDataFrom","touches","TouchData","events$2","blockerSingleton","stopBlocking","schema$4","events$1","schema$3","DraggingBranches","DragState","previous","calculateDelta","dragEvent","nuData","setStartData","getStartData","Dragging","snapWidth","snapOffset","calcSnap","selectorOpt","td","selectorHandle","sensorLeft","sensorTop","sensorWidth","sensorHeight","getSnapsConfig","getSnapPoints","isSameCell","cellOpt","currentTd","createSelector","setup$4","tlTds","brTds","startCell","finishCell","getTopLeftSnap","memTopLeft","getTopLeftSnaps","getBottomRightSnap","memBottomRight","getBottomRightSnaps","topLeftSnaps","bottomRightSnaps","bottomRight","showOrHideHandle","isAbove","isBelow","cellRect","viewportHeight","aboveViewport","belowViewport","snapTo","getSnapConfig","snapTopLeft","snapLastTopLeft","snapBottomRight","snapLastBottomRight","otherCells","Logo","isHidden","renderElementPath","renderElement","_btn","renderDivider","renderPathData","updatePath","newPath","ResizeTypes","getDimensions","resizeType","originalHeight","originalWidth","resize","dim","getResizeType","keyboardHandler","renderResizeHandler","resizeLabel","_target","renderWordCount","replaceCountText","currentVal","renderStatusbar","renderBranding","renderHelpAccessibility","shortcutText","renderRightContainer","getTextComponents","shouldRenderHelp","shouldRenderElementPath","shouldRenderRightContainer","getTextComponentClasses","flexStart","flexEnd","spaceAround","container3Columns","resizeHandler","getLazyMothership","setup$3","setupForTheme","lazyUiRefs","lazyMothership","lazyDialogMothership","lazyPopupMothership","deviceClasses","isToolbarBottom","memAnchorBar","memBottomAnchorBar","lazyDialogSinkResult","lazyPopupSinkResult","lazyAnchorBar","lazyToolbar","backstages","makeHeaderPart","verticalDirAttributes","hasMultipleToolbar","hasToolbar","hasMenubar","shouldHavePromotion","makePromotion","hasAnyContents","getPartToolbar","menubarCollection","makeSidebarDefinition","renderDialogUi","isGridUiContainer","sinkSpec","reactiveWidthSpec","renderPopupUi","renderMainUi","sidebarContainer","statusbar","editorComponents","setEditorSize","parsedHeight","parsedWidth","setupShortcutsAndCommands","renderUIWithRefs","toolbarGroupButtonConfig","toolbarOpt","reuseDialogUiForPopuUi","renderUI","labelledBy","labelledElement","labelElement","labelId","schema$2","basic","parts$2","factory$4","dialogComp","showDialog","dialog","externalBlocker","hideDialog","blockerDom","getDialogBody","getDialogFooter","setBusy","setIdle","modalEventsId","ModalDialog","dialogToggleMenuItemSchema","dialogToggleMenuItemDataProcessor","baseFooterButtonFields","dialogFooterButtonFields","normalFooterButtonFields","menuFooterButtonFields","toggleButtonSpecFields","dialogFooterButtonSchema","alertBannerFields","alertBannerSchema","createBarFields","itemsField","buttonFields","buttonSchema","formComponentFields","formComponentWithLabelFields","checkboxFields","checkboxSchema","checkboxDataProcessor","collectionFields","collectionSchema","collectionDataProcessor","colorInputFields","colorInputSchema","colorInputDataProcessor","colorPickerSchema","colorPickerDataProcessor","customEditorFields","customEditorFieldsOld","customEditorSchema","customEditorDataProcessor","dropZoneSchema","dropZoneDataProcessor","createGridFields","htmlPanelFields","htmlPanelSchema","iframeFields","iframeSchema","iframeDataProcessor","imagePreviewSchema","imagePreviewDataProcessor","inputFields","inputSchema","inputDataProcessor","createLabelFields","listBoxSingleItemFields","listBoxNestedItemFields","listBoxItemSchema","listBoxFields","listBoxSchema","listBoxDataProcessor","selectBoxFields","selectBoxSchema","selectBoxDataProcessor","sizeInputFields","sizeInputSchema","sizeInputDataProcessor","sliderFields","sliderSchema","sliderInputDataProcessor","tableFields","tableSchema","textAreaFields","textAreaSchema","textAreaDataProcessor","baseTreeItemFields","treeItemLeafSchema","treeItemDirectoryFields","treeItemDirectorySchema","treeItemSchema","treeFields","treeSchema","urlInputFields","urlInputSchema","urlInputDataProcessor","createItemsField","itemSchema","sErr","passValue","panelSchema","panelFields","tabFields","tabPanelFields","tabPanelSchema","dialogButtonFields","dialogButtonSchema","dialogSchema","createDialog","urlDialogButtonSchema","urlDialogSchema","createUrlDialog","getAllObjects","isNamedItem","dataProcessors","getDataProcessor","getNamedItems","createDataValidator","namedItems","internalDialog","dataValidator","DialogManager","ActiveReflecting","reflectingConfig","reflectingState","renderComponents","newComponents","rawData","ReflectingApis","reflectState","ReflectingSchema","ReflectingState","Reflecting","toValidValues","renderBodyPanel","memForm","formValue","factory$3","TabButton","schema$1","tabsPart","barDetail","dismissTab$1","tabbar","changeTab$1","parts$1","factory$2","tab","Tabbar","factory$1","Tabview","barPart","viewPart","tabValue","tabview","tabData","changeTabBy","section","byPred","tabKey","TabSection","measureHeights","allTabs","tabviewComp","_tab","getMaxHeight","heights","getMaxTabviewHeight","tablist","documentElement$1","isFixed","tabviewHeight","currentTabHeight","dialogTopMargin","dialogBottomMargin","chromeHeight","showTab","setTabviewHeight","updateTabviewHeight","dialogBody","maxTabHeight","getTabview","smartMode","oldHeight","newHeight","SendDataToSectionChannel","SendDataToViewChannel","renderTabPanel","storedValue","updateDataWithForm","formData","validData","setDataOnForm","oldTab","tabMode","_viewItems","tsection","renderBody","dialogId","contentId","ariaAttrs","incoming","ariaAttributes","renderInlineBody","renderModalBody","bodySpec","renderIframeBody","hiddenHeader","pClose","pUntitled","pBodyMessage","pFooter","pFooterGroup","startButtons","renderDialog$1","dialogClass","blockerBackdropClass","scrollLockClass","renderClose","renderTitle","titleId","renderDragHandle","renderInlineHeader","renderModalHeader","pTitle","pHandle","getHeader","bs","getEventExtras","lazyDialog","blockEvent","fullscreenClass","largeDialogClass","mediumDialogClass","getDialogSizeClass","updateDialogSizeClass","dialogSizeClass","toggleFullscreen","currentSize","currentSizeClass","renderModalDialog","dialogEvents","mapMenuButtons","menuItemStates","mapItems","extractCellsToObject","innerAcc","initCommonEvents","fireApiEvent","_event","self","initUrlDialog","getInstanceApi","withSpec","currentDialog","initDialog","currentDialogInit","rootNode","cur","makeButton","footerButtons","buttonName","buttonGroups","makeGroup","renderFooter","initSpec","lookupByName","renderInlineFooter","renderModalFooter","getCompByName","access","validateData$1","dialogState","getDialogApi","doRedial","withRoot","instanceApi","valueComp","representedValues","menuItemCurrentState","prevData","mergedData","newInternalData","tabSection","dialogInit","storedMenuButtons","renderDialog","dialogSize","dialogSizeClasses","objOfCells","footer","modalAccess","getForm","outerForm","toggleFullscreen$1","renderInlineDialog","refreshDocking","dialogLabelId","dialogContentId","memHeader","memBody","storagedMenuButtons","optMemFooter","memFooter","global","getUrlDialogApi","SUPPORTED_MESSAGE_ACTIONS","isSupportedMessage","isCustomMessage","handleMessage","renderUrlDialog","iframeUri","iframeDomain","messageHandlerUnbinder","iframeEle","iframeWin","setup$2","closeDialog","alertDialog","memFooterClose","titleSpec","closeSpec","footerCloseButton","setup$1","confirmDialog","memFooterYes","footerNo","footerYesButton","validateData","isAlertOrConfirmDialog","inlineAdditionalBehaviours","isStickyToolbar$1","params","closeWindow","openInlineDialog","openBottomInlineDialog","openModalDialog","openUrl","openModalUrlDialog","internalInitialData","config$1","windowParams","inlineDialog","inlineDialogComp","getInlineDialogBounds","optScrollingContext","contentAreaContainer","registerOptions","Theme","popupSinkBounds","dialogs","popups","renderModeUI","renderResult","windowMgr","getNotificationManagerImpl"],"mappings":"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","x_google_ignoreList":[0]}