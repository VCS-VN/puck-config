{"version":3,"file":"index-DOLD1GSS.cjs","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/pagebreak/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('pagebreak_separator', {\n        processor: 'string',\n        default: '<!-- pagebreak -->'\n      });\n      registerOption('pagebreak_split_block', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const getSeparatorHtml = option('pagebreak_separator');\n    const shouldSplitBlock = option('pagebreak_split_block');\n\n    const pageBreakClass = 'mce-pagebreak';\n    const getPlaceholderHtml = shouldSplitBlock => {\n      const html = `<img src=\"${ global.transparentSrc }\" class=\"${ pageBreakClass }\" data-mce-resize=\"false\" data-mce-placeholder />`;\n      return shouldSplitBlock ? `<p>${ html }</p>` : html;\n    };\n    const setup$1 = editor => {\n      const separatorHtml = getSeparatorHtml(editor);\n      const shouldSplitBlock$1 = () => shouldSplitBlock(editor);\n      const pageBreakSeparatorRegExp = new RegExp(separatorHtml.replace(/[\\?\\.\\*\\[\\]\\(\\)\\{\\}\\+\\^\\$\\:]/g, a => {\n        return '\\\\' + a;\n      }), 'gi');\n      editor.on('BeforeSetContent', e => {\n        e.content = e.content.replace(pageBreakSeparatorRegExp, getPlaceholderHtml(shouldSplitBlock$1()));\n      });\n      editor.on('PreInit', () => {\n        editor.serializer.addNodeFilter('img', nodes => {\n          let i = nodes.length, node, className;\n          while (i--) {\n            node = nodes[i];\n            className = node.attr('class');\n            if (className && className.indexOf(pageBreakClass) !== -1) {\n              const parentNode = node.parent;\n              if (parentNode && editor.schema.getBlockElements()[parentNode.name] && shouldSplitBlock$1()) {\n                parentNode.type = 3;\n                parentNode.value = separatorHtml;\n                parentNode.raw = true;\n                node.remove();\n                continue;\n              }\n              node.type = 3;\n              node.value = separatorHtml;\n              node.raw = true;\n            }\n          }\n        });\n      });\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mcePageBreak', () => {\n        editor.insertContent(getPlaceholderHtml(shouldSplitBlock(editor)));\n      });\n    };\n\n    const setup = editor => {\n      editor.on('ResolveName', e => {\n        if (e.target.nodeName === 'IMG' && editor.dom.hasClass(e.target, pageBreakClass)) {\n          e.name = 'pagebreak';\n        }\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mcePageBreak');\n      editor.ui.registry.addButton('pagebreak', {\n        icon: 'page-break',\n        tooltip: 'Page break',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n      editor.ui.registry.addMenuItem('pagebreak', {\n        text: 'Page break',\n        icon: 'page-break',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n    };\n\n    var Plugin = () => {\n      global$1.add('pagebreak', editor => {\n        register$2(editor);\n        register$1(editor);\n        register(editor);\n        setup$1(editor);\n        setup(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","global","option","name","editor","register$2","registerOption","getSeparatorHtml","shouldSplitBlock","pageBreakClass","getPlaceholderHtml","html","setup$1","separatorHtml","shouldSplitBlock$1","pageBreakSeparatorRegExp","a","e","nodes","i","node","className","parentNode","register$1","setup","onSetupEditable","api","nodeChanged","register","onAction","Plugin"],"mappings":"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","x_google_ignoreList":[0]}