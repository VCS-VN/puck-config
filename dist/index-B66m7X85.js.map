{"version":3,"file":"index-B66m7X85.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/template/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const never = constant(false);\n\n    const escape = text => text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('template_cdate_classes', {\n        processor: 'string',\n        default: 'cdate'\n      });\n      registerOption('template_mdate_classes', {\n        processor: 'string',\n        default: 'mdate'\n      });\n      registerOption('template_selected_content_classes', {\n        processor: 'string',\n        default: 'selcontent'\n      });\n      registerOption('template_preview_replace_values', { processor: 'object' });\n      registerOption('template_replace_values', { processor: 'object' });\n      registerOption('templates', {\n        processor: value => isString(value) || isArrayOf(value, isObject) || isFunction(value),\n        default: []\n      });\n      registerOption('template_cdate_format', {\n        processor: 'string',\n        default: editor.translate('%Y-%m-%d')\n      });\n      registerOption('template_mdate_format', {\n        processor: 'string',\n        default: editor.translate('%Y-%m-%d')\n      });\n    };\n    const getCreationDateClasses = option('template_cdate_classes');\n    const getModificationDateClasses = option('template_mdate_classes');\n    const getSelectedContentClasses = option('template_selected_content_classes');\n    const getPreviewReplaceValues = option('template_preview_replace_values');\n    const getTemplateReplaceValues = option('template_replace_values');\n    const getTemplates = option('templates');\n    const getCdateFormat = option('template_cdate_format');\n    const getMdateFormat = option('template_mdate_format');\n    const getContentStyle = option('content_style');\n    const shouldUseContentCssCors = option('content_css_cors');\n    const getBodyClass = option('body_class');\n\n    const addZeros = (value, len) => {\n      value = '' + value;\n      if (value.length < len) {\n        for (let i = 0; i < len - value.length; i++) {\n          value = '0' + value;\n        }\n      }\n      return value;\n    };\n    const getDateTime = (editor, fmt, date = new Date()) => {\n      const daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n      const daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n      const monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n      const monthsLong = 'January February March April May June July August September October November December'.split(' ');\n      fmt = fmt.replace('%D', '%m/%d/%Y');\n      fmt = fmt.replace('%r', '%I:%M:%S %p');\n      fmt = fmt.replace('%Y', '' + date.getFullYear());\n      fmt = fmt.replace('%y', '' + date.getYear());\n      fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n      fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n      fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n      fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n      fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n      fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n      fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n      fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n      fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n      fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n      fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n      fmt = fmt.replace('%%', '%');\n      return fmt;\n    };\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n\n    const hasOwnProperty = Object.hasOwnProperty;\n    const get = (obj, key) => {\n      return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    const entitiesAttr = {\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '&': '&amp;',\n      '\\'': '&#039;'\n    };\n    const htmlEscape = html => html.replace(/[\"'<>&]/g, match => get(entitiesAttr, match).getOr(match));\n    const hasAnyClasses = (dom, n, classes) => exists(classes.split(/\\s+/), c => dom.hasClass(n, c));\n    const parseAndSerialize = (editor, html) => global$1({ validate: true }, editor.schema).serialize(editor.parser.parse(html, { insert: true }));\n\n    const createTemplateList = (editor, callback) => {\n      return () => {\n        const templateList = getTemplates(editor);\n        if (isFunction(templateList)) {\n          templateList(callback);\n        } else if (isString(templateList)) {\n          fetch(templateList).then(res => {\n            if (res.ok) {\n              res.json().then(callback);\n            }\n          });\n        } else {\n          callback(templateList);\n        }\n      };\n    };\n    const replaceTemplateValues = (html, templateValues) => {\n      global$2.each(templateValues, (v, k) => {\n        if (isFunction(v)) {\n          v = v(k);\n        }\n        html = html.replace(new RegExp('\\\\{\\\\$' + escape(k) + '\\\\}', 'g'), v);\n      });\n      return html;\n    };\n    const replaceVals = (editor, scope) => {\n      const dom = editor.dom, vl = getTemplateReplaceValues(editor);\n      global$2.each(dom.select('*', scope), e => {\n        global$2.each(vl, (v, k) => {\n          if (dom.hasClass(e, k)) {\n            if (isFunction(v)) {\n              v(e);\n            }\n          }\n        });\n      });\n    };\n    const insertTemplate = (editor, _ui, html) => {\n      const dom = editor.dom;\n      const sel = editor.selection.getContent();\n      html = replaceTemplateValues(html, getTemplateReplaceValues(editor));\n      let el = dom.create('div', {}, parseAndSerialize(editor, html));\n      const n = dom.select('.mceTmpl', el);\n      if (n && n.length > 0) {\n        el = dom.create('div');\n        el.appendChild(n[0].cloneNode(true));\n      }\n      global$2.each(dom.select('*', el), n => {\n        if (hasAnyClasses(dom, n, getCreationDateClasses(editor))) {\n          n.innerHTML = getDateTime(editor, getCdateFormat(editor));\n        }\n        if (hasAnyClasses(dom, n, getModificationDateClasses(editor))) {\n          n.innerHTML = getDateTime(editor, getMdateFormat(editor));\n        }\n        if (hasAnyClasses(dom, n, getSelectedContentClasses(editor))) {\n          n.innerHTML = sel;\n        }\n      });\n      replaceVals(editor, el);\n      editor.execCommand('mceInsertContent', false, el.innerHTML);\n      editor.addVisual();\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const getPreviewContent = (editor, html) => {\n      var _a;\n      let previewHtml = parseAndSerialize(editor, html);\n      if (html.indexOf('<html>') === -1) {\n        let contentCssEntries = '';\n        const contentStyle = (_a = getContentStyle(editor)) !== null && _a !== void 0 ? _a : '';\n        const cors = shouldUseContentCssCors(editor) ? ' crossorigin=\"anonymous\"' : '';\n        global$2.each(editor.contentCSS, url => {\n          contentCssEntries += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + editor.documentBaseURI.toAbsolute(url) + '\"' + cors + '>';\n        });\n        if (contentStyle) {\n          contentCssEntries += '<style type=\"text/css\">' + contentStyle + '</style>';\n        }\n        const bodyClass = getBodyClass(editor);\n        const encode = editor.dom.encode;\n        const isMetaKeyPressed = global.os.isMacOS() || global.os.isiOS() ? 'e.metaKey' : 'e.ctrlKey && !e.altKey';\n        const preventClicksOnLinksScript = '<script>' + 'document.addEventListener && document.addEventListener(\"click\", function(e) {' + 'for (var elm = e.target; elm; elm = elm.parentNode) {' + 'if (elm.nodeName === \"A\" && !(' + isMetaKeyPressed + ')) {' + 'e.preventDefault();' + '}' + '}' + '}, false);' + '</script> ';\n        const directionality = editor.getBody().dir;\n        const dirAttr = directionality ? ' dir=\"' + encode(directionality) + '\"' : '';\n        previewHtml = '<!DOCTYPE html>' + '<html>' + '<head>' + '<base href=\"' + encode(editor.documentBaseURI.getURI()) + '\">' + contentCssEntries + preventClicksOnLinksScript + '</head>' + '<body class=\"' + encode(bodyClass) + '\"' + dirAttr + '>' + previewHtml + '</body>' + '</html>';\n      }\n      return replaceTemplateValues(previewHtml, getPreviewReplaceValues(editor));\n    };\n    const open = (editor, templateList) => {\n      const createTemplates = () => {\n        if (!templateList || templateList.length === 0) {\n          const message = editor.translate('No templates defined.');\n          editor.notificationManager.open({\n            text: message,\n            type: 'info'\n          });\n          return Optional.none();\n        }\n        return Optional.from(global$2.map(templateList, (template, index) => {\n          const isUrlTemplate = t => t.url !== undefined;\n          return {\n            selected: index === 0,\n            text: template.title,\n            value: {\n              url: isUrlTemplate(template) ? Optional.from(template.url) : Optional.none(),\n              content: !isUrlTemplate(template) ? Optional.from(template.content) : Optional.none(),\n              description: template.description\n            }\n          };\n        }));\n      };\n      const createSelectBoxItems = templates => map(templates, t => ({\n        text: t.text,\n        value: t.text\n      }));\n      const findTemplate = (templates, templateTitle) => find(templates, t => t.text === templateTitle);\n      const loadFailedAlert = api => {\n        editor.windowManager.alert('Could not load the specified template.', () => api.focus('template'));\n      };\n      const getTemplateContent = t => t.value.url.fold(() => Promise.resolve(t.value.content.getOr('')), url => fetch(url).then(res => res.ok ? res.text() : Promise.reject()));\n      const onChange = (templates, updateDialog) => (api, change) => {\n        if (change.name === 'template') {\n          const newTemplateTitle = api.getData().template;\n          findTemplate(templates, newTemplateTitle).each(t => {\n            api.block('Loading...');\n            getTemplateContent(t).then(previewHtml => {\n              updateDialog(api, t, previewHtml);\n            }).catch(() => {\n              updateDialog(api, t, '');\n              api.setEnabled('save', false);\n              loadFailedAlert(api);\n            });\n          });\n        }\n      };\n      const onSubmit = templates => api => {\n        const data = api.getData();\n        findTemplate(templates, data.template).each(t => {\n          getTemplateContent(t).then(previewHtml => {\n            editor.execCommand('mceInsertTemplate', false, previewHtml);\n            api.close();\n          }).catch(() => {\n            api.setEnabled('save', false);\n            loadFailedAlert(api);\n          });\n        });\n      };\n      const openDialog = templates => {\n        const selectBoxItems = createSelectBoxItems(templates);\n        const buildDialogSpec = (bodyItems, initialData) => ({\n          title: 'Insert Template',\n          size: 'large',\n          body: {\n            type: 'panel',\n            items: bodyItems\n          },\n          initialData,\n          buttons: [\n            {\n              type: 'cancel',\n              name: 'cancel',\n              text: 'Cancel'\n            },\n            {\n              type: 'submit',\n              name: 'save',\n              text: 'Save',\n              primary: true\n            }\n          ],\n          onSubmit: onSubmit(templates),\n          onChange: onChange(templates, updateDialog)\n        });\n        const updateDialog = (dialogApi, template, previewHtml) => {\n          const content = getPreviewContent(editor, previewHtml);\n          const bodyItems = [\n            {\n              type: 'listbox',\n              name: 'template',\n              label: 'Templates',\n              items: selectBoxItems\n            },\n            {\n              type: 'htmlpanel',\n              html: `<p aria-live=\"polite\">${ htmlEscape(template.value.description) }</p>`\n            },\n            {\n              label: 'Preview',\n              type: 'iframe',\n              name: 'preview',\n              sandboxed: false,\n              transparent: false\n            }\n          ];\n          const initialData = {\n            template: template.text,\n            preview: content\n          };\n          dialogApi.unblock();\n          dialogApi.redial(buildDialogSpec(bodyItems, initialData));\n          dialogApi.focus('template');\n        };\n        const dialogApi = editor.windowManager.open(buildDialogSpec([], {\n          template: '',\n          preview: ''\n        }));\n        dialogApi.block('Loading...');\n        getTemplateContent(templates[0]).then(previewHtml => {\n          updateDialog(dialogApi, templates[0], previewHtml);\n        }).catch(() => {\n          updateDialog(dialogApi, templates[0], '');\n          dialogApi.setEnabled('save', false);\n          loadFailedAlert(dialogApi);\n        });\n      };\n      const optTemplates = createTemplates();\n      optTemplates.each(openDialog);\n    };\n\n    const showDialog = editor => templates => {\n      open(editor, templates);\n    };\n    const register$1 = editor => {\n      editor.addCommand('mceInsertTemplate', curry(insertTemplate, editor));\n      editor.addCommand('mceTemplate', createTemplateList(editor, showDialog(editor)));\n    };\n\n    const setup = editor => {\n      editor.on('PreProcess', o => {\n        const dom = editor.dom, dateFormat = getMdateFormat(editor);\n        global$2.each(dom.select('div', o.node), e => {\n          if (dom.hasClass(e, 'mceTmpl')) {\n            global$2.each(dom.select('*', e), e => {\n              if (hasAnyClasses(dom, e, getModificationDateClasses(editor))) {\n                e.innerHTML = getDateTime(editor, dateFormat);\n              }\n            });\n            replaceVals(editor, e);\n          }\n        });\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mceTemplate');\n      editor.ui.registry.addButton('template', {\n        icon: 'template',\n        tooltip: 'Insert template',\n        onSetup: onSetupEditable(editor),\n        onAction\n      });\n      editor.ui.registry.addMenuItem('template', {\n        icon: 'template',\n        text: 'Insert template...',\n        onSetup: onSetupEditable(editor),\n        onAction\n      });\n    };\n\n    var Plugin = () => {\n      global$3.add('template', editor => {\n        register$2(editor);\n        register(editor);\n        register$1(editor);\n        setup(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$3","hasProto","v","constructor","predicate","_a","typeOf","x","o","proto","isType","type","value","isSimpleType","isString","isObject","isArray","isNullable","a","isNonNullable","isFunction","isArrayOf","pred","i","len","constant","curry","fn","initialArgs","restArgs","all","never","escape","text","global$2","option","name","editor","register$2","registerOption","getCreationDateClasses","getModificationDateClasses","getSelectedContentClasses","getPreviewReplaceValues","getTemplateReplaceValues","getTemplates","getCdateFormat","getMdateFormat","getContentStyle","shouldUseContentCssCors","getBodyClass","addZeros","getDateTime","fmt","date","daysShort","daysLong","monthsShort","monthsLong","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","exists","xs","map","f","r","findUntil","until","find","hasOwnProperty","get","obj","key","has","global$1","entitiesAttr","htmlEscape","html","match","hasAnyClasses","dom","n","classes","c","parseAndSerialize","createTemplateList","callback","templateList","res","replaceTemplateValues","templateValues","k","replaceVals","scope","vl","e","insertTemplate","_ui","sel","el","global","getPreviewContent","previewHtml","contentCssEntries","contentStyle","cors","url","bodyClass","encode","preventClicksOnLinksScript","directionality","dirAttr","open","createTemplates","template","index","isUrlTemplate","t","createSelectBoxItems","templates","findTemplate","templateTitle","loadFailedAlert","api","getTemplateContent","onChange","updateDialog","change","newTemplateTitle","onSubmit","data","openDialog","selectBoxItems","buildDialogSpec","bodyItems","initialData","dialogApi","content","showDialog","register$1","setup","dateFormat","onSetupEditable","nodeChanged","register","onAction","Plugin"],"mappings":"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","x_google_ignoreList":[0]}