{"version":3,"file":"index-DMKezR2K.cjs","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/anchor/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('allow_html_in_named_anchor', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const allowHtmlInNamedAnchor = option('allow_html_in_named_anchor');\n\n    const namedAnchorSelector = 'a:not([href])';\n    const isEmptyString = str => !str;\n    const getIdFromAnchor = elm => {\n      const id = elm.getAttribute('id') || elm.getAttribute('name');\n      return id || '';\n    };\n    const isAnchor = elm => elm.nodeName.toLowerCase() === 'a';\n    const isNamedAnchor = elm => isAnchor(elm) && !elm.getAttribute('href') && getIdFromAnchor(elm) !== '';\n    const isEmptyNamedAnchor = elm => isNamedAnchor(elm) && !elm.firstChild;\n\n    const removeEmptyNamedAnchorsInSelection = editor => {\n      const dom = editor.dom;\n      global$1(dom).walk(editor.selection.getRng(), nodes => {\n        global.each(nodes, node => {\n          if (isEmptyNamedAnchor(node)) {\n            dom.remove(node, false);\n          }\n        });\n      });\n    };\n    const isValidId = id => /^[A-Za-z][A-Za-z0-9\\-:._]*$/.test(id);\n    const getNamedAnchor = editor => editor.dom.getParent(editor.selection.getStart(), namedAnchorSelector);\n    const getId = editor => {\n      const anchor = getNamedAnchor(editor);\n      if (anchor) {\n        return getIdFromAnchor(anchor);\n      } else {\n        return '';\n      }\n    };\n    const createAnchor = (editor, id) => {\n      editor.undoManager.transact(() => {\n        if (!allowHtmlInNamedAnchor(editor)) {\n          editor.selection.collapse(true);\n        }\n        if (editor.selection.isCollapsed()) {\n          editor.insertContent(editor.dom.createHTML('a', { id }));\n        } else {\n          removeEmptyNamedAnchorsInSelection(editor);\n          editor.formatter.remove('namedAnchor', undefined, undefined, true);\n          editor.formatter.apply('namedAnchor', { value: id });\n          editor.addVisual();\n        }\n      });\n    };\n    const updateAnchor = (editor, id, anchorElement) => {\n      anchorElement.removeAttribute('name');\n      anchorElement.id = id;\n      editor.addVisual();\n      editor.undoManager.add();\n    };\n    const insert = (editor, id) => {\n      const anchor = getNamedAnchor(editor);\n      if (anchor) {\n        updateAnchor(editor, id, anchor);\n      } else {\n        createAnchor(editor, id);\n      }\n      editor.focus();\n    };\n\n    const insertAnchor = (editor, newId) => {\n      if (!isValidId(newId)) {\n        editor.windowManager.alert('ID should start with a letter, followed only by letters, numbers, dashes, dots, colons or underscores.');\n        return false;\n      } else {\n        insert(editor, newId);\n        return true;\n      }\n    };\n    const open = editor => {\n      const currentId = getId(editor);\n      editor.windowManager.open({\n        title: 'Anchor',\n        size: 'normal',\n        body: {\n          type: 'panel',\n          items: [{\n              name: 'id',\n              type: 'input',\n              label: 'ID',\n              placeholder: 'example'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: { id: currentId },\n        onSubmit: api => {\n          if (insertAnchor(editor, api.getData().id)) {\n            api.close();\n          }\n        }\n      });\n    };\n\n    const register$1 = editor => {\n      editor.addCommand('mceAnchor', () => {\n        open(editor);\n      });\n    };\n\n    const isNamedAnchorNode = node => isEmptyString(node.attr('href')) && !isEmptyString(node.attr('id') || node.attr('name'));\n    const isEmptyNamedAnchorNode = node => isNamedAnchorNode(node) && !node.firstChild;\n    const setContentEditable = state => nodes => {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (isEmptyNamedAnchorNode(node)) {\n          node.attr('contenteditable', state);\n        }\n      }\n    };\n    const setup = editor => {\n      editor.on('PreInit', () => {\n        editor.parser.addNodeFilter('a', setContentEditable('false'));\n        editor.serializer.addNodeFilter('a', setContentEditable(null));\n      });\n    };\n\n    const registerFormats = editor => {\n      editor.formatter.register('namedAnchor', {\n        inline: 'a',\n        selector: namedAnchorSelector,\n        remove: 'all',\n        split: true,\n        deep: true,\n        attributes: { id: '%value' },\n        onmatch: (node, _fmt, _itemName) => {\n          return isNamedAnchor(node);\n        }\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mceAnchor');\n      editor.ui.registry.addToggleButton('anchor', {\n        icon: 'bookmark',\n        tooltip: 'Anchor',\n        onAction,\n        onSetup: buttonApi => {\n          const unbindSelectorChanged = editor.selection.selectorChangedWithUnbind('a:not([href])', buttonApi.setActive).unbind;\n          const unbindEditableChanged = onSetupEditable(editor)(buttonApi);\n          return () => {\n            unbindSelectorChanged();\n            unbindEditableChanged();\n          };\n        }\n      });\n      editor.ui.registry.addMenuItem('anchor', {\n        icon: 'bookmark',\n        text: 'Anchor...',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n    };\n\n    var Plugin = () => {\n      global$2.add('anchor', editor => {\n        register$2(editor);\n        setup(editor);\n        register$1(editor);\n        register(editor);\n        editor.on('PreInit', () => {\n          registerFormats(editor);\n        });\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$2","global$1","global","option","name","editor","register$2","registerOption","allowHtmlInNamedAnchor","namedAnchorSelector","isEmptyString","str","getIdFromAnchor","elm","isAnchor","isNamedAnchor","isEmptyNamedAnchor","removeEmptyNamedAnchorsInSelection","dom","nodes","node","isValidId","id","getNamedAnchor","getId","anchor","createAnchor","updateAnchor","anchorElement","insert","insertAnchor","newId","open","currentId","api","register$1","isNamedAnchorNode","isEmptyNamedAnchorNode","setContentEditable","i","state","setup","registerFormats","_fmt","_itemName","onSetupEditable","nodeChanged","register","onAction","buttonApi","unbindSelectorChanged","unbindEditableChanged","Plugin"],"mappings":"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","x_google_ignoreList":[0]}