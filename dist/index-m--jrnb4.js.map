{"version":3,"file":"index-m--jrnb4.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/link/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isArrayOf = (value, pred) => {\n      if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; ++i) {\n          if (!pred(value[i])) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    };\n\n    const noop = () => {\n    };\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const foldl = (xs, f, acc) => {\n      each$1(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const is = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('link_assume_external_targets', {\n        processor: value => {\n          const valid = isString(value) || isBoolean(value);\n          if (valid) {\n            if (value === true) {\n              return {\n                value: 1,\n                valid\n              };\n            } else if (value === 'http' || value === 'https') {\n              return {\n                value,\n                valid\n              };\n            } else {\n              return {\n                value: 0,\n                valid\n              };\n            }\n          } else {\n            return {\n              valid: false,\n              message: 'Must be a string or a boolean.'\n            };\n          }\n        },\n        default: false\n      });\n      registerOption('link_context_toolbar', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('link_list', { processor: value => isString(value) || isFunction(value) || isArrayOf(value, isObject) });\n      registerOption('link_default_target', { processor: 'string' });\n      registerOption('link_default_protocol', {\n        processor: 'string',\n        default: 'https'\n      });\n      registerOption('link_target_list', {\n        processor: value => isBoolean(value) || isArrayOf(value, isObject),\n        default: true\n      });\n      registerOption('link_rel_list', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('link_class_list', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('link_title', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('allow_unsafe_link_target', {\n        processor: 'boolean',\n        default: false\n      });\n      registerOption('link_quicklink', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const assumeExternalTargets = option('link_assume_external_targets');\n    const hasContextToolbar = option('link_context_toolbar');\n    const getLinkList = option('link_list');\n    const getDefaultLinkTarget = option('link_default_target');\n    const getDefaultLinkProtocol = option('link_default_protocol');\n    const getTargetList = option('link_target_list');\n    const getRelList = option('link_rel_list');\n    const getLinkClassList = option('link_class_list');\n    const shouldShowLinkTitle = option('link_title');\n    const allowUnsafeLinkTarget = option('allow_unsafe_link_target');\n    const useQuickLink = option('link_quicklink');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const getValue = item => isString(item.value) ? item.value : '';\n    const getText = item => {\n      if (isString(item.text)) {\n        return item.text;\n      } else if (isString(item.title)) {\n        return item.title;\n      } else {\n        return '';\n      }\n    };\n    const sanitizeList = (list, extractValue) => {\n      const out = [];\n      global$4.each(list, item => {\n        const text = getText(item);\n        if (item.menu !== undefined) {\n          const items = sanitizeList(item.menu, extractValue);\n          out.push({\n            text,\n            items\n          });\n        } else {\n          const value = extractValue(item);\n          out.push({\n            text,\n            value\n          });\n        }\n      });\n      return out;\n    };\n    const sanitizeWith = (extracter = getValue) => list => Optional.from(list).map(list => sanitizeList(list, extracter));\n    const sanitize = list => sanitizeWith(getValue)(list);\n    const createUi = (name, label) => items => ({\n      name,\n      type: 'listbox',\n      label,\n      items\n    });\n    const ListOptions = {\n      sanitize,\n      sanitizeWith,\n      createUi,\n      getValue\n    };\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.TreeWalker');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const isAnchor = elm => isNonNullable(elm) && elm.nodeName.toLowerCase() === 'a';\n    const isLink = elm => isAnchor(elm) && !!getHref(elm);\n    const collectNodesInRange = (rng, predicate) => {\n      if (rng.collapsed) {\n        return [];\n      } else {\n        const contents = rng.cloneContents();\n        const firstChild = contents.firstChild;\n        const walker = new global$3(firstChild, contents);\n        const elements = [];\n        let current = firstChild;\n        do {\n          if (predicate(current)) {\n            elements.push(current);\n          }\n        } while (current = walker.next());\n        return elements;\n      }\n    };\n    const hasProtocol = url => /^\\w+:/i.test(url);\n    const getHref = elm => {\n      var _a, _b;\n      return (_b = (_a = elm.getAttribute('data-mce-href')) !== null && _a !== void 0 ? _a : elm.getAttribute('href')) !== null && _b !== void 0 ? _b : '';\n    };\n    const applyRelTargetRules = (rel, isUnsafe) => {\n      const rules = ['noopener'];\n      const rels = rel ? rel.split(/\\s+/) : [];\n      const toString = rels => global$4.trim(rels.sort().join(' '));\n      const addTargetRules = rels => {\n        rels = removeTargetRules(rels);\n        return rels.length > 0 ? rels.concat(rules) : rules;\n      };\n      const removeTargetRules = rels => rels.filter(val => global$4.inArray(rules, val) === -1);\n      const newRels = isUnsafe ? addTargetRules(rels) : removeTargetRules(rels);\n      return newRels.length > 0 ? toString(newRels) : '';\n    };\n    const trimCaretContainers = text => text.replace(/\\uFEFF/g, '');\n    const getAnchorElement = (editor, selectedElm) => {\n      selectedElm = selectedElm || getLinksInSelection(editor.selection.getRng())[0] || editor.selection.getNode();\n      if (isImageFigure(selectedElm)) {\n        return Optional.from(editor.dom.select('a[href]', selectedElm)[0]);\n      } else {\n        return Optional.from(editor.dom.getParent(selectedElm, 'a[href]'));\n      }\n    };\n    const isInAnchor = (editor, selectedElm) => getAnchorElement(editor, selectedElm).isSome();\n    const getAnchorText = (selection, anchorElm) => {\n      const text = anchorElm.fold(() => selection.getContent({ format: 'text' }), anchorElm => anchorElm.innerText || anchorElm.textContent || '');\n      return trimCaretContainers(text);\n    };\n    const getLinksInSelection = rng => collectNodesInRange(rng, isLink);\n    const getLinks$1 = elements => global$4.grep(elements, isLink);\n    const hasLinks = elements => getLinks$1(elements).length > 0;\n    const hasLinksInSelection = rng => getLinksInSelection(rng).length > 0;\n    const isOnlyTextSelected = editor => {\n      const inlineTextElements = editor.schema.getTextInlineElements();\n      const isElement = elm => elm.nodeType === 1 && !isAnchor(elm) && !has(inlineTextElements, elm.nodeName.toLowerCase());\n      const isInBlockAnchor = getAnchorElement(editor).exists(anchor => anchor.hasAttribute('data-mce-block'));\n      if (isInBlockAnchor) {\n        return false;\n      }\n      const rng = editor.selection.getRng();\n      if (!rng.collapsed) {\n        const elements = collectNodesInRange(rng, isElement);\n        return elements.length === 0;\n      } else {\n        return true;\n      }\n    };\n    const isImageFigure = elm => isNonNullable(elm) && elm.nodeName === 'FIGURE' && /\\bimage\\b/i.test(elm.className);\n    const getLinkAttrs = data => {\n      const attrs = [\n        'title',\n        'rel',\n        'class',\n        'target'\n      ];\n      return foldl(attrs, (acc, key) => {\n        data[key].each(value => {\n          acc[key] = value.length > 0 ? value : null;\n        });\n        return acc;\n      }, { href: data.href });\n    };\n    const handleExternalTargets = (href, assumeExternalTargets) => {\n      if ((assumeExternalTargets === 'http' || assumeExternalTargets === 'https') && !hasProtocol(href)) {\n        return assumeExternalTargets + '://' + href;\n      }\n      return href;\n    };\n    const applyLinkOverrides = (editor, linkAttrs) => {\n      const newLinkAttrs = { ...linkAttrs };\n      if (getRelList(editor).length === 0 && !allowUnsafeLinkTarget(editor)) {\n        const newRel = applyRelTargetRules(newLinkAttrs.rel, newLinkAttrs.target === '_blank');\n        newLinkAttrs.rel = newRel ? newRel : null;\n      }\n      if (Optional.from(newLinkAttrs.target).isNone() && getTargetList(editor) === false) {\n        newLinkAttrs.target = getDefaultLinkTarget(editor);\n      }\n      newLinkAttrs.href = handleExternalTargets(newLinkAttrs.href, assumeExternalTargets(editor));\n      return newLinkAttrs;\n    };\n    const updateLink = (editor, anchorElm, text, linkAttrs) => {\n      text.each(text => {\n        if (has(anchorElm, 'innerText')) {\n          anchorElm.innerText = text;\n        } else {\n          anchorElm.textContent = text;\n        }\n      });\n      editor.dom.setAttribs(anchorElm, linkAttrs);\n      editor.selection.select(anchorElm);\n    };\n    const createLink = (editor, selectedElm, text, linkAttrs) => {\n      const dom = editor.dom;\n      if (isImageFigure(selectedElm)) {\n        linkImageFigure(dom, selectedElm, linkAttrs);\n      } else {\n        text.fold(() => {\n          editor.execCommand('mceInsertLink', false, linkAttrs);\n        }, text => {\n          editor.insertContent(dom.createHTML('a', linkAttrs, dom.encode(text)));\n        });\n      }\n    };\n    const linkDomMutation = (editor, attachState, data) => {\n      const selectedElm = editor.selection.getNode();\n      const anchorElm = getAnchorElement(editor, selectedElm);\n      const linkAttrs = applyLinkOverrides(editor, getLinkAttrs(data));\n      editor.undoManager.transact(() => {\n        if (data.href === attachState.href) {\n          attachState.attach();\n        }\n        anchorElm.fold(() => {\n          createLink(editor, selectedElm, data.text, linkAttrs);\n        }, elm => {\n          editor.focus();\n          updateLink(editor, elm, data.text, linkAttrs);\n        });\n      });\n    };\n    const unlinkSelection = editor => {\n      const dom = editor.dom, selection = editor.selection;\n      const bookmark = selection.getBookmark();\n      const rng = selection.getRng().cloneRange();\n      const startAnchorElm = dom.getParent(rng.startContainer, 'a[href]', editor.getBody());\n      const endAnchorElm = dom.getParent(rng.endContainer, 'a[href]', editor.getBody());\n      if (startAnchorElm) {\n        rng.setStartBefore(startAnchorElm);\n      }\n      if (endAnchorElm) {\n        rng.setEndAfter(endAnchorElm);\n      }\n      selection.setRng(rng);\n      editor.execCommand('unlink');\n      selection.moveToBookmark(bookmark);\n    };\n    const unlinkDomMutation = editor => {\n      editor.undoManager.transact(() => {\n        const node = editor.selection.getNode();\n        if (isImageFigure(node)) {\n          unlinkImageFigure(editor, node);\n        } else {\n          unlinkSelection(editor);\n        }\n        editor.focus();\n      });\n    };\n    const unwrapOptions = data => {\n      const {\n        class: cls,\n        href,\n        rel,\n        target,\n        text,\n        title\n      } = data;\n      return filter({\n        class: cls.getOrNull(),\n        href,\n        rel: rel.getOrNull(),\n        target: target.getOrNull(),\n        text: text.getOrNull(),\n        title: title.getOrNull()\n      }, (v, _k) => isNull(v) === false);\n    };\n    const sanitizeData = (editor, data) => {\n      const getOption = editor.options.get;\n      const uriOptions = {\n        allow_html_data_urls: getOption('allow_html_data_urls'),\n        allow_script_urls: getOption('allow_script_urls'),\n        allow_svg_data_urls: getOption('allow_svg_data_urls')\n      };\n      const href = data.href;\n      return {\n        ...data,\n        href: global$2.isDomSafe(href, 'a', uriOptions) ? href : ''\n      };\n    };\n    const link = (editor, attachState, data) => {\n      const sanitizedData = sanitizeData(editor, data);\n      editor.hasPlugin('rtc', true) ? editor.execCommand('createlink', false, unwrapOptions(sanitizedData)) : linkDomMutation(editor, attachState, sanitizedData);\n    };\n    const unlink = editor => {\n      editor.hasPlugin('rtc', true) ? editor.execCommand('unlink') : unlinkDomMutation(editor);\n    };\n    const unlinkImageFigure = (editor, fig) => {\n      var _a;\n      const img = editor.dom.select('img', fig)[0];\n      if (img) {\n        const a = editor.dom.getParents(img, 'a[href]', fig)[0];\n        if (a) {\n          (_a = a.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(img, a);\n          editor.dom.remove(a);\n        }\n      }\n    };\n    const linkImageFigure = (dom, fig, attrs) => {\n      var _a;\n      const img = dom.select('img', fig)[0];\n      if (img) {\n        const a = dom.create('a', attrs);\n        (_a = img.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(a, img);\n        a.appendChild(img);\n      }\n    };\n\n    const isListGroup = item => hasNonNullableKey(item, 'items');\n    const findTextByValue = (value, catalog) => findMap(catalog, item => {\n      if (isListGroup(item)) {\n        return findTextByValue(value, item.items);\n      } else {\n        return someIf(item.value === value, item);\n      }\n    });\n    const getDelta = (persistentText, fieldName, catalog, data) => {\n      const value = data[fieldName];\n      const hasPersistentText = persistentText.length > 0;\n      return value !== undefined ? findTextByValue(value, catalog).map(i => ({\n        url: {\n          value: i.value,\n          meta: {\n            text: hasPersistentText ? persistentText : i.text,\n            attach: noop\n          }\n        },\n        text: hasPersistentText ? persistentText : i.text\n      })) : Optional.none();\n    };\n    const findCatalog = (catalogs, fieldName) => {\n      if (fieldName === 'link') {\n        return catalogs.link;\n      } else if (fieldName === 'anchor') {\n        return catalogs.anchor;\n      } else {\n        return Optional.none();\n      }\n    };\n    const init = (initialData, linkCatalog) => {\n      const persistentData = {\n        text: initialData.text,\n        title: initialData.title\n      };\n      const getTitleFromUrlChange = url => {\n        var _a;\n        return someIf(persistentData.title.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.title).getOr(''));\n      };\n      const getTextFromUrlChange = url => {\n        var _a;\n        return someIf(persistentData.text.length <= 0, Optional.from((_a = url.meta) === null || _a === void 0 ? void 0 : _a.text).getOr(url.value));\n      };\n      const onUrlChange = data => {\n        const text = getTextFromUrlChange(data.url);\n        const title = getTitleFromUrlChange(data.url);\n        if (text.isSome() || title.isSome()) {\n          return Optional.some({\n            ...text.map(text => ({ text })).getOr({}),\n            ...title.map(title => ({ title })).getOr({})\n          });\n        } else {\n          return Optional.none();\n        }\n      };\n      const onCatalogChange = (data, change) => {\n        const catalog = findCatalog(linkCatalog, change).getOr([]);\n        return getDelta(persistentData.text, change, catalog, data);\n      };\n      const onChange = (getData, change) => {\n        const name = change.name;\n        if (name === 'url') {\n          return onUrlChange(getData());\n        } else if (contains([\n            'anchor',\n            'link'\n          ], name)) {\n          return onCatalogChange(getData(), name);\n        } else if (name === 'text' || name === 'title') {\n          persistentData[name] = getData()[name];\n          return Optional.none();\n        } else {\n          return Optional.none();\n        }\n      };\n      return { onChange };\n    };\n    const DialogChanges = {\n      init,\n      getDelta\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    const delayedConfirm = (editor, message, callback) => {\n      const rng = editor.selection.getRng();\n      global$1.setEditorTimeout(editor, () => {\n        editor.windowManager.confirm(message, state => {\n          editor.selection.setRng(rng);\n          callback(state);\n        });\n      });\n    };\n    const tryEmailTransform = data => {\n      const url = data.href;\n      const suggestMailTo = url.indexOf('@') > 0 && url.indexOf('/') === -1 && url.indexOf('mailto:') === -1;\n      return suggestMailTo ? Optional.some({\n        message: 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?',\n        preprocess: oldData => ({\n          ...oldData,\n          href: 'mailto:' + url\n        })\n      }) : Optional.none();\n    };\n    const tryProtocolTransform = (assumeExternalTargets, defaultLinkProtocol) => data => {\n      const url = data.href;\n      const suggestProtocol = assumeExternalTargets === 1 && !hasProtocol(url) || assumeExternalTargets === 0 && /^\\s*www(\\.|\\d\\.)/i.test(url);\n      return suggestProtocol ? Optional.some({\n        message: `The URL you entered seems to be an external link. Do you want to add the required ${ defaultLinkProtocol }:// prefix?`,\n        preprocess: oldData => ({\n          ...oldData,\n          href: defaultLinkProtocol + '://' + url\n        })\n      }) : Optional.none();\n    };\n    const preprocess = (editor, data) => findMap([\n      tryEmailTransform,\n      tryProtocolTransform(assumeExternalTargets(editor), getDefaultLinkProtocol(editor))\n    ], f => f(data)).fold(() => Promise.resolve(data), transform => new Promise(callback => {\n      delayedConfirm(editor, transform.message, state => {\n        callback(state ? transform.preprocess(data) : data);\n      });\n    }));\n    const DialogConfirms = { preprocess };\n\n    const getAnchors = editor => {\n      const anchorNodes = editor.dom.select('a:not([href])');\n      const anchors = bind(anchorNodes, anchor => {\n        const id = anchor.name || anchor.id;\n        return id ? [{\n            text: id,\n            value: '#' + id\n          }] : [];\n      });\n      return anchors.length > 0 ? Optional.some([{\n          text: 'None',\n          value: ''\n        }].concat(anchors)) : Optional.none();\n    };\n    const AnchorListOptions = { getAnchors };\n\n    const getClasses = editor => {\n      const list = getLinkClassList(editor);\n      if (list.length > 0) {\n        return ListOptions.sanitize(list);\n      }\n      return Optional.none();\n    };\n    const ClassListOptions = { getClasses };\n\n    const parseJson = text => {\n      try {\n        return Optional.some(JSON.parse(text));\n      } catch (err) {\n        return Optional.none();\n      }\n    };\n    const getLinks = editor => {\n      const extractor = item => editor.convertURL(item.value || item.url || '', 'href');\n      const linkList = getLinkList(editor);\n      return new Promise(resolve => {\n        if (isString(linkList)) {\n          fetch(linkList).then(res => res.ok ? res.text().then(parseJson) : Promise.reject()).then(resolve, () => resolve(Optional.none()));\n        } else if (isFunction(linkList)) {\n          linkList(output => resolve(Optional.some(output)));\n        } else {\n          resolve(Optional.from(linkList));\n        }\n      }).then(optItems => optItems.bind(ListOptions.sanitizeWith(extractor)).map(items => {\n        if (items.length > 0) {\n          const noneItem = [{\n              text: 'None',\n              value: ''\n            }];\n          return noneItem.concat(items);\n        } else {\n          return items;\n        }\n      }));\n    };\n    const LinkListOptions = { getLinks };\n\n    const getRels = (editor, initialTarget) => {\n      const list = getRelList(editor);\n      if (list.length > 0) {\n        const isTargetBlank = is(initialTarget, '_blank');\n        const enforceSafe = allowUnsafeLinkTarget(editor) === false;\n        const safeRelExtractor = item => applyRelTargetRules(ListOptions.getValue(item), isTargetBlank);\n        const sanitizer = enforceSafe ? ListOptions.sanitizeWith(safeRelExtractor) : ListOptions.sanitize;\n        return sanitizer(list);\n      }\n      return Optional.none();\n    };\n    const RelOptions = { getRels };\n\n    const fallbacks = [\n      {\n        text: 'Current window',\n        value: ''\n      },\n      {\n        text: 'New window',\n        value: '_blank'\n      }\n    ];\n    const getTargets = editor => {\n      const list = getTargetList(editor);\n      if (isArray(list)) {\n        return ListOptions.sanitize(list).orThunk(() => Optional.some(fallbacks));\n      } else if (list === false) {\n        return Optional.none();\n      }\n      return Optional.some(fallbacks);\n    };\n    const TargetOptions = { getTargets };\n\n    const nonEmptyAttr = (dom, elem, name) => {\n      const val = dom.getAttrib(elem, name);\n      return val !== null && val.length > 0 ? Optional.some(val) : Optional.none();\n    };\n    const extractFromAnchor = (editor, anchor) => {\n      const dom = editor.dom;\n      const onlyText = isOnlyTextSelected(editor);\n      const text = onlyText ? Optional.some(getAnchorText(editor.selection, anchor)) : Optional.none();\n      const url = anchor.bind(anchorElm => Optional.from(dom.getAttrib(anchorElm, 'href')));\n      const target = anchor.bind(anchorElm => Optional.from(dom.getAttrib(anchorElm, 'target')));\n      const rel = anchor.bind(anchorElm => nonEmptyAttr(dom, anchorElm, 'rel'));\n      const linkClass = anchor.bind(anchorElm => nonEmptyAttr(dom, anchorElm, 'class'));\n      const title = anchor.bind(anchorElm => nonEmptyAttr(dom, anchorElm, 'title'));\n      return {\n        url,\n        text,\n        title,\n        target,\n        rel,\n        linkClass\n      };\n    };\n    const collect = (editor, linkNode) => LinkListOptions.getLinks(editor).then(links => {\n      const anchor = extractFromAnchor(editor, linkNode);\n      return {\n        anchor,\n        catalogs: {\n          targets: TargetOptions.getTargets(editor),\n          rels: RelOptions.getRels(editor, anchor.target),\n          classes: ClassListOptions.getClasses(editor),\n          anchor: AnchorListOptions.getAnchors(editor),\n          link: links\n        },\n        optNode: linkNode,\n        flags: { titleEnabled: shouldShowLinkTitle(editor) }\n      };\n    });\n    const DialogInfo = { collect };\n\n    const handleSubmit = (editor, info) => api => {\n      const data = api.getData();\n      if (!data.url.value) {\n        unlink(editor);\n        api.close();\n        return;\n      }\n      const getChangedValue = key => Optional.from(data[key]).filter(value => !is(info.anchor[key], value));\n      const changedData = {\n        href: data.url.value,\n        text: getChangedValue('text'),\n        target: getChangedValue('target'),\n        rel: getChangedValue('rel'),\n        class: getChangedValue('linkClass'),\n        title: getChangedValue('title')\n      };\n      const attachState = {\n        href: data.url.value,\n        attach: data.url.meta !== undefined && data.url.meta.attach ? data.url.meta.attach : noop\n      };\n      DialogConfirms.preprocess(editor, changedData).then(pData => {\n        link(editor, attachState, pData);\n      });\n      api.close();\n    };\n    const collectData = editor => {\n      const anchorNode = getAnchorElement(editor);\n      return DialogInfo.collect(editor, anchorNode);\n    };\n    const getInitialData = (info, defaultTarget) => {\n      const anchor = info.anchor;\n      const url = anchor.url.getOr('');\n      return {\n        url: {\n          value: url,\n          meta: { original: { value: url } }\n        },\n        text: anchor.text.getOr(''),\n        title: anchor.title.getOr(''),\n        anchor: url,\n        link: url,\n        rel: anchor.rel.getOr(''),\n        target: anchor.target.or(defaultTarget).getOr(''),\n        linkClass: anchor.linkClass.getOr('')\n      };\n    };\n    const makeDialog = (settings, onSubmit, editor) => {\n      const urlInput = [{\n          name: 'url',\n          type: 'urlinput',\n          filetype: 'file',\n          label: 'URL',\n          picker_text: 'Browse links'\n        }];\n      const displayText = settings.anchor.text.map(() => ({\n        name: 'text',\n        type: 'input',\n        label: 'Text to display'\n      })).toArray();\n      const titleText = settings.flags.titleEnabled ? [{\n          name: 'title',\n          type: 'input',\n          label: 'Title'\n        }] : [];\n      const defaultTarget = Optional.from(getDefaultLinkTarget(editor));\n      const initialData = getInitialData(settings, defaultTarget);\n      const catalogs = settings.catalogs;\n      const dialogDelta = DialogChanges.init(initialData, catalogs);\n      const body = {\n        type: 'panel',\n        items: flatten([\n          urlInput,\n          displayText,\n          titleText,\n          cat([\n            catalogs.anchor.map(ListOptions.createUi('anchor', 'Anchors')),\n            catalogs.rels.map(ListOptions.createUi('rel', 'Rel')),\n            catalogs.targets.map(ListOptions.createUi('target', 'Open link in...')),\n            catalogs.link.map(ListOptions.createUi('link', 'Link list')),\n            catalogs.classes.map(ListOptions.createUi('linkClass', 'Class'))\n          ])\n        ])\n      };\n      return {\n        title: 'Insert/Edit Link',\n        size: 'normal',\n        body,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData,\n        onChange: (api, {name}) => {\n          dialogDelta.onChange(api.getData, { name }).each(newData => {\n            api.setData(newData);\n          });\n        },\n        onSubmit\n      };\n    };\n    const open$1 = editor => {\n      const data = collectData(editor);\n      data.then(info => {\n        const onSubmit = handleSubmit(editor, info);\n        return makeDialog(info, onSubmit, editor);\n      }).then(spec => {\n        editor.windowManager.open(spec);\n      });\n    };\n\n    const register = editor => {\n      editor.addCommand('mceLink', (_ui, value) => {\n        if ((value === null || value === void 0 ? void 0 : value.dialog) === true || !useQuickLink(editor)) {\n          open$1(editor);\n        } else {\n          editor.dispatch('contexttoolbar-show', { toolbarKey: 'quicklink' });\n        }\n      });\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    const appendClickRemove = (link, evt) => {\n      document.body.appendChild(link);\n      link.dispatchEvent(evt);\n      document.body.removeChild(link);\n    };\n    const open = url => {\n      const link = document.createElement('a');\n      link.target = '_blank';\n      link.href = url;\n      link.rel = 'noreferrer noopener';\n      const evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n      appendClickRemove(link, evt);\n    };\n\n    const getLink = (editor, elm) => editor.dom.getParent(elm, 'a[href]');\n    const getSelectedLink = editor => getLink(editor, editor.selection.getStart());\n    const hasOnlyAltModifier = e => {\n      return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    const gotoLink = (editor, a) => {\n      if (a) {\n        const href = getHref(a);\n        if (/^#/.test(href)) {\n          const targetEl = editor.dom.select(href);\n          if (targetEl.length) {\n            editor.selection.scrollIntoView(targetEl[0], true);\n          }\n        } else {\n          open(a.href);\n        }\n      }\n    };\n    const openDialog = editor => () => {\n      editor.execCommand('mceLink', false, { dialog: true });\n    };\n    const gotoSelectedLink = editor => () => {\n      gotoLink(editor, getSelectedLink(editor));\n    };\n    const setupGotoLinks = editor => {\n      editor.on('click', e => {\n        const link = getLink(editor, e.target);\n        if (link && global.metaKeyPressed(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n      editor.on('keydown', e => {\n        if (!e.isDefaultPrevented() && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n          const link = getSelectedLink(editor);\n          if (link) {\n            e.preventDefault();\n            gotoLink(editor, link);\n          }\n        }\n      });\n    };\n    const toggleState = (editor, toggler) => {\n      editor.on('NodeChange', toggler);\n      return () => editor.off('NodeChange', toggler);\n    };\n    const toggleLinkState = editor => api => {\n      const updateState = () => {\n        api.setActive(!editor.mode.isReadOnly() && isInAnchor(editor, editor.selection.getNode()));\n        api.setEnabled(editor.selection.isEditable());\n      };\n      updateState();\n      return toggleState(editor, updateState);\n    };\n    const toggleLinkMenuState = editor => api => {\n      const updateState = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      updateState();\n      return toggleState(editor, updateState);\n    };\n    const hasExactlyOneLinkInSelection = editor => {\n      const links = editor.selection.isCollapsed() ? getLinks$1(editor.dom.getParents(editor.selection.getStart())) : getLinksInSelection(editor.selection.getRng());\n      return links.length === 1;\n    };\n    const toggleGotoLinkState = editor => api => {\n      const updateState = () => api.setEnabled(hasExactlyOneLinkInSelection(editor));\n      updateState();\n      return toggleState(editor, updateState);\n    };\n    const toggleUnlinkState = editor => api => {\n      const hasLinks$1 = parents => hasLinks(parents) || hasLinksInSelection(editor.selection.getRng());\n      const parents = editor.dom.getParents(editor.selection.getStart());\n      const updateEnabled = parents => {\n        api.setEnabled(hasLinks$1(parents) && editor.selection.isEditable());\n      };\n      updateEnabled(parents);\n      return toggleState(editor, e => updateEnabled(e.parents));\n    };\n\n    const setup = editor => {\n      editor.addShortcut('Meta+K', '', () => {\n        editor.execCommand('mceLink');\n      });\n    };\n\n    const setupButtons = editor => {\n      editor.ui.registry.addToggleButton('link', {\n        icon: 'link',\n        tooltip: 'Insert/edit link',\n        onAction: openDialog(editor),\n        onSetup: toggleLinkState(editor)\n      });\n      editor.ui.registry.addButton('openlink', {\n        icon: 'new-tab',\n        tooltip: 'Open link',\n        onAction: gotoSelectedLink(editor),\n        onSetup: toggleGotoLinkState(editor)\n      });\n      editor.ui.registry.addButton('unlink', {\n        icon: 'unlink',\n        tooltip: 'Remove link',\n        onAction: () => unlink(editor),\n        onSetup: toggleUnlinkState(editor)\n      });\n    };\n    const setupMenuItems = editor => {\n      editor.ui.registry.addMenuItem('openlink', {\n        text: 'Open link',\n        icon: 'new-tab',\n        onAction: gotoSelectedLink(editor),\n        onSetup: toggleGotoLinkState(editor)\n      });\n      editor.ui.registry.addMenuItem('link', {\n        icon: 'link',\n        text: 'Link...',\n        shortcut: 'Meta+K',\n        onSetup: toggleLinkMenuState(editor),\n        onAction: openDialog(editor)\n      });\n      editor.ui.registry.addMenuItem('unlink', {\n        icon: 'unlink',\n        text: 'Remove link',\n        onAction: () => unlink(editor),\n        onSetup: toggleUnlinkState(editor)\n      });\n    };\n    const setupContextMenu = editor => {\n      const inLink = 'link unlink openlink';\n      const noLink = 'link';\n      editor.ui.registry.addContextMenu('link', {\n        update: element => {\n          const isEditable = editor.dom.isEditable(element);\n          if (!isEditable) {\n            return '';\n          }\n          return hasLinks(editor.dom.getParents(element, 'a')) ? inLink : noLink;\n        }\n      });\n    };\n    const setupContextToolbars = editor => {\n      const collapseSelectionToEnd = editor => {\n        editor.selection.collapse(false);\n      };\n      const onSetupLink = buttonApi => {\n        const node = editor.selection.getNode();\n        buttonApi.setEnabled(isInAnchor(editor, node));\n        return noop;\n      };\n      const getLinkText = value => {\n        const anchor = getAnchorElement(editor);\n        const onlyText = isOnlyTextSelected(editor);\n        if (anchor.isNone() && onlyText) {\n          const text = getAnchorText(editor.selection, anchor);\n          return someIf(text.length === 0, value);\n        } else {\n          return Optional.none();\n        }\n      };\n      editor.ui.registry.addContextForm('quicklink', {\n        launch: {\n          type: 'contextformtogglebutton',\n          icon: 'link',\n          tooltip: 'Link',\n          onSetup: toggleLinkState(editor)\n        },\n        label: 'Link',\n        predicate: node => hasContextToolbar(editor) && isInAnchor(editor, node),\n        initValue: () => {\n          const elm = getAnchorElement(editor);\n          return elm.fold(constant(''), getHref);\n        },\n        commands: [\n          {\n            type: 'contextformtogglebutton',\n            icon: 'link',\n            tooltip: 'Link',\n            primary: true,\n            onSetup: buttonApi => {\n              const node = editor.selection.getNode();\n              buttonApi.setActive(isInAnchor(editor, node));\n              return toggleLinkState(editor)(buttonApi);\n            },\n            onAction: formApi => {\n              const value = formApi.getValue();\n              const text = getLinkText(value);\n              const attachState = {\n                href: value,\n                attach: noop\n              };\n              link(editor, attachState, {\n                href: value,\n                text,\n                title: Optional.none(),\n                rel: Optional.none(),\n                target: Optional.none(),\n                class: Optional.none()\n              });\n              collapseSelectionToEnd(editor);\n              formApi.hide();\n            }\n          },\n          {\n            type: 'contextformbutton',\n            icon: 'unlink',\n            tooltip: 'Remove link',\n            onSetup: onSetupLink,\n            onAction: formApi => {\n              unlink(editor);\n              formApi.hide();\n            }\n          },\n          {\n            type: 'contextformbutton',\n            icon: 'new-tab',\n            tooltip: 'Open link',\n            onSetup: onSetupLink,\n            onAction: formApi => {\n              gotoSelectedLink(editor)();\n              formApi.hide();\n            }\n          }\n        ]\n      });\n    };\n\n    var Plugin = () => {\n      global$5.add('link', editor => {\n        register$1(editor);\n        setupButtons(editor);\n        setupMenuItems(editor);\n        setupContextMenu(editor);\n        setupContextToolbars(editor);\n        setupGotoLinks(editor);\n        register(editor);\n        setup(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$5","hasProto","v","constructor","predicate","_a","typeOf","x","t","o","proto","isType","type","value","isSimpleType","eq","a","isString","isObject","isArray","isNull","isBoolean","isNullable","isNonNullable","isFunction","isArrayOf","pred","i","len","noop","constant","tripleEquals","b","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","nativeIndexOf","nativePush","rawIndexOf","ts","contains","xs","map","f","r","each$1","foldl","acc","flatten","bind","findMap","arr","is","lhs","rhs","comparator","left","cat","push","someIf","option","name","editor","register$1","registerOption","valid","assumeExternalTargets","hasContextToolbar","getLinkList","getDefaultLinkTarget","getDefaultLinkProtocol","getTargetList","getRelList","getLinkClassList","shouldShowLinkTitle","allowUnsafeLinkTarget","useQuickLink","global$4","getValue","item","getText","sanitizeList","list","extractValue","out","text","items","sanitizeWith","extracter","ListOptions","label","keys","hasOwnProperty","each","obj","props","k","objAcc","internalFilter","onTrue","onFalse","filter","has","key","hasNonNullableKey","global$3","global$2","isAnchor","elm","isLink","getHref","collectNodesInRange","rng","contents","firstChild","walker","elements","current","hasProtocol","url","_b","applyRelTargetRules","rel","isUnsafe","rules","rels","toString","addTargetRules","removeTargetRules","val","newRels","trimCaretContainers","getAnchorElement","selectedElm","getLinksInSelection","isImageFigure","isInAnchor","getAnchorText","selection","anchorElm","getLinks$1","hasLinks","hasLinksInSelection","isOnlyTextSelected","inlineTextElements","isElement","anchor","getLinkAttrs","data","handleExternalTargets","href","applyLinkOverrides","linkAttrs","newLinkAttrs","newRel","updateLink","createLink","dom","linkImageFigure","linkDomMutation","attachState","unlinkSelection","bookmark","startAnchorElm","endAnchorElm","unlinkDomMutation","node","unlinkImageFigure","unwrapOptions","cls","target","title","_k","sanitizeData","getOption","uriOptions","link","sanitizedData","unlink","fig","img","attrs","isListGroup","findTextByValue","catalog","getDelta","persistentText","fieldName","hasPersistentText","findCatalog","catalogs","DialogChanges","initialData","linkCatalog","persistentData","getTitleFromUrlChange","getTextFromUrlChange","onUrlChange","onCatalogChange","change","getData","global$1","delayedConfirm","callback","state","tryEmailTransform","oldData","tryProtocolTransform","defaultLinkProtocol","DialogConfirms","transform","AnchorListOptions","anchorNodes","anchors","id","ClassListOptions","parseJson","LinkListOptions","extractor","linkList","resolve","res","output","optItems","RelOptions","initialTarget","isTargetBlank","enforceSafe","safeRelExtractor","fallbacks","TargetOptions","nonEmptyAttr","elem","extractFromAnchor","linkClass","DialogInfo","linkNode","links","handleSubmit","info","api","getChangedValue","changedData","pData","collectData","anchorNode","getInitialData","defaultTarget","makeDialog","settings","onSubmit","urlInput","displayText","titleText","dialogDelta","newData","open$1","spec","register","_ui","global","appendClickRemove","evt","open","getLink","getSelectedLink","hasOnlyAltModifier","e","gotoLink","targetEl","openDialog","gotoSelectedLink","setupGotoLinks","toggleState","toggler","toggleLinkState","updateState","toggleLinkMenuState","hasExactlyOneLinkInSelection","toggleGotoLinkState","toggleUnlinkState","hasLinks$1","parents","updateEnabled","setup","setupButtons","setupMenuItems","setupContextMenu","inLink","noLink","element","setupContextToolbars","collapseSelectionToEnd","onSetupLink","buttonApi","getLinkText","onlyText","formApi","Plugin"],"mappings":"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","x_google_ignoreList":[0]}