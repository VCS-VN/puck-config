{"version":3,"file":"index-xGmiqU8g.js","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/visualchars/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const get$2 = toggleState => {\n      const isEnabled = () => {\n        return toggleState.get();\n      };\n      return { isEnabled };\n    };\n\n    const fireVisualChars = (editor, state) => {\n      return editor.dispatch('VisualChars', { state });\n    };\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const isString = isType$1('string');\n    const isObject = isType$1('object');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isNumber = isSimpleType('number');\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each$1 = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const filter = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n\n    const keys = Object.keys;\n    const each = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n\n    const Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const path = (parts, scope) => {\n      let o = scope !== undefined && scope !== null ? scope : Global;\n      for (let i = 0; i < parts.length && o !== undefined && o !== null; ++i) {\n        o = o[parts[i]];\n      }\n      return o;\n    };\n    const resolve = (p, scope) => {\n      const parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    const unsafe = (name, scope) => {\n      return resolve(name, scope);\n    };\n    const getOrDie = (name, scope) => {\n      const actual = unsafe(name, scope);\n      if (actual === undefined || actual === null) {\n        throw new Error(name + ' not available on this browser');\n      }\n      return actual;\n    };\n\n    const getPrototypeOf = Object.getPrototypeOf;\n    const sandHTMLElement = scope => {\n      return getOrDie('HTMLElement', scope);\n    };\n    const isPrototypeOf = x => {\n      const scope = resolve('ownerDocument.defaultView', x);\n      return isObject(x) && (sandHTMLElement(scope).prototype.isPrototypeOf(x) || /^HTML\\w*Element$/.test(getPrototypeOf(x).constructor.name));\n    };\n\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const type = element => element.dom.nodeType;\n    const value = element => element.dom.nodeValue;\n    const isType = t => element => type(element) === t;\n    const isHTMLElement = element => isElement(element) && isPrototypeOf(element.dom);\n    const isElement = isType(ELEMENT);\n    const isText = isType(TEXT);\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const get$1 = (element, key) => {\n      const v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    const remove$3 = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n\n    const read = (element, attr) => {\n      const value = get$1(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    const add$2 = (element, attr, id) => {\n      const old = read(element, attr);\n      const nu = old.concat([id]);\n      set(element, attr, nu.join(' '));\n      return true;\n    };\n    const remove$2 = (element, attr, id) => {\n      const nu = filter(read(element, attr), v => v !== id);\n      if (nu.length > 0) {\n        set(element, attr, nu.join(' '));\n      } else {\n        remove$3(element, attr);\n      }\n      return false;\n    };\n\n    const supports = element => element.dom.classList !== undefined;\n    const get = element => read(element, 'class');\n    const add$1 = (element, clazz) => add$2(element, 'class', clazz);\n    const remove$1 = (element, clazz) => remove$2(element, 'class', clazz);\n\n    const add = (element, clazz) => {\n      if (supports(element)) {\n        element.dom.classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    const cleanClass = element => {\n      const classList = supports(element) ? element.dom.classList : get(element);\n      if (classList.length === 0) {\n        remove$3(element, 'class');\n      }\n    };\n    const remove = (element, clazz) => {\n      if (supports(element)) {\n        const classList = element.dom.classList;\n        classList.remove(clazz);\n      } else {\n        remove$1(element, clazz);\n      }\n      cleanClass(element);\n    };\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    const fromDom = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom,\n      fromPoint\n    };\n\n    const charMap = {\n      '\\xA0': 'nbsp',\n      '\\xAD': 'shy'\n    };\n    const charMapToRegExp = (charMap, global) => {\n      let regExp = '';\n      each(charMap, (_value, key) => {\n        regExp += key;\n      });\n      return new RegExp('[' + regExp + ']', global ? 'g' : '');\n    };\n    const charMapToSelector = charMap => {\n      let selector = '';\n      each(charMap, value => {\n        if (selector) {\n          selector += ',';\n        }\n        selector += 'span.mce-' + value;\n      });\n      return selector;\n    };\n    const regExp = charMapToRegExp(charMap);\n    const regExpGlobal = charMapToRegExp(charMap, true);\n    const selector = charMapToSelector(charMap);\n    const nbspClass = 'mce-nbsp';\n\n    const getRaw = element => element.dom.contentEditable;\n\n    const wrapCharWithSpan = value => '<span data-mce-bogus=\"1\" class=\"mce-' + charMap[value] + '\">' + value + '</span>';\n\n    const isWrappedNbsp = node => node.nodeName.toLowerCase() === 'span' && node.classList.contains('mce-nbsp-wrap');\n    const isMatch = n => {\n      const value$1 = value(n);\n      return isText(n) && isString(value$1) && regExp.test(value$1);\n    };\n    const isContentEditableFalse = node => isHTMLElement(node) && getRaw(node) === 'false';\n    const isChildEditable = (node, currentState) => {\n      if (isHTMLElement(node) && !isWrappedNbsp(node.dom)) {\n        const value = getRaw(node);\n        if (value === 'true') {\n          return true;\n        } else if (value === 'false') {\n          return false;\n        }\n      }\n      return currentState;\n    };\n    const filterEditableDescendants = (scope, predicate, editable) => {\n      let result = [];\n      const dom = scope.dom;\n      const children = map(dom.childNodes, SugarElement.fromDom);\n      const isEditable = node => isWrappedNbsp(node.dom) || !isContentEditableFalse(node);\n      each$1(children, x => {\n        if (editable && isEditable(x) && predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(filterEditableDescendants(x, predicate, isChildEditable(x, editable)));\n      });\n      return result;\n    };\n    const findParentElm = (elm, rootElm) => {\n      while (elm.parentNode) {\n        if (elm.parentNode === rootElm) {\n          return rootElm;\n        }\n        elm = elm.parentNode;\n      }\n      return undefined;\n    };\n    const replaceWithSpans = text => text.replace(regExpGlobal, wrapCharWithSpan);\n\n    const show = (editor, rootElm) => {\n      const dom = editor.dom;\n      const nodeList = filterEditableDescendants(SugarElement.fromDom(rootElm), isMatch, editor.dom.isEditable(rootElm));\n      each$1(nodeList, n => {\n        var _a;\n        const parent = n.dom.parentNode;\n        if (isWrappedNbsp(parent)) {\n          add(SugarElement.fromDom(parent), nbspClass);\n        } else {\n          const withSpans = replaceWithSpans(dom.encode((_a = value(n)) !== null && _a !== void 0 ? _a : ''));\n          const div = dom.create('div', {}, withSpans);\n          let node;\n          while (node = div.lastChild) {\n            dom.insertAfter(node, n.dom);\n          }\n          editor.dom.remove(n.dom);\n        }\n      });\n    };\n    const hide = (editor, rootElm) => {\n      const nodeList = editor.dom.select(selector, rootElm);\n      each$1(nodeList, node => {\n        if (isWrappedNbsp(node)) {\n          remove(SugarElement.fromDom(node), nbspClass);\n        } else {\n          editor.dom.remove(node, true);\n        }\n      });\n    };\n    const toggle = editor => {\n      const body = editor.getBody();\n      const bookmark = editor.selection.getBookmark();\n      let parentNode = findParentElm(editor.selection.getNode(), body);\n      parentNode = parentNode !== undefined ? parentNode : body;\n      hide(editor, parentNode);\n      show(editor, parentNode);\n      editor.selection.moveToBookmark(bookmark);\n    };\n\n    const applyVisualChars = (editor, toggleState) => {\n      fireVisualChars(editor, toggleState.get());\n      const body = editor.getBody();\n      if (toggleState.get() === true) {\n        show(editor, body);\n      } else {\n        hide(editor, body);\n      }\n    };\n    const toggleVisualChars = (editor, toggleState) => {\n      toggleState.set(!toggleState.get());\n      const bookmark = editor.selection.getBookmark();\n      applyVisualChars(editor, toggleState);\n      editor.selection.moveToBookmark(bookmark);\n    };\n\n    const register$2 = (editor, toggleState) => {\n      editor.addCommand('mceVisualChars', () => {\n        toggleVisualChars(editor, toggleState);\n      });\n    };\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('visualchars_default_state', {\n        processor: 'boolean',\n        default: false\n      });\n    };\n    const isEnabledByDefault = option('visualchars_default_state');\n\n    const setup$1 = (editor, toggleState) => {\n      editor.on('init', () => {\n        applyVisualChars(editor, toggleState);\n      });\n    };\n\n    const first = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        if (isNull(timer)) {\n          timer = setTimeout(() => {\n            timer = null;\n            fn.apply(null, args);\n          }, rate);\n        }\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const setup = (editor, toggleState) => {\n      const debouncedToggle = first(() => {\n        toggle(editor);\n      }, 300);\n      editor.on('keydown', e => {\n        if (toggleState.get() === true) {\n          e.keyCode === 13 ? toggle(editor) : debouncedToggle.throttle();\n        }\n      });\n      editor.on('remove', debouncedToggle.cancel);\n    };\n\n    const toggleActiveState = (editor, enabledStated) => api => {\n      api.setActive(enabledStated.get());\n      const editorEventCallback = e => api.setActive(e.state);\n      editor.on('VisualChars', editorEventCallback);\n      return () => editor.off('VisualChars', editorEventCallback);\n    };\n    const register = (editor, toggleState) => {\n      const onAction = () => editor.execCommand('mceVisualChars');\n      editor.ui.registry.addToggleButton('visualchars', {\n        tooltip: 'Show invisible characters',\n        icon: 'visualchars',\n        onAction,\n        onSetup: toggleActiveState(editor, toggleState)\n      });\n      editor.ui.registry.addToggleMenuItem('visualchars', {\n        text: 'Show invisible characters',\n        icon: 'visualchars',\n        onAction,\n        onSetup: toggleActiveState(editor, toggleState)\n      });\n    };\n\n    var Plugin = () => {\n      global.add('visualchars', editor => {\n        register$1(editor);\n        const toggleState = Cell(isEnabledByDefault(editor));\n        register$2(editor, toggleState);\n        register(editor, toggleState);\n        setup(editor, toggleState);\n        setup$1(editor, toggleState);\n        return get$2(toggleState);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["Cell","initial","value","v","global","get$2","toggleState","fireVisualChars","editor","state","hasProto","constructor","predicate","_a","typeOf","x","t","o","proto","isType$1","type","isSimpleType","eq","a","isString","isObject","isNull","isBoolean","isNullable","isNonNullable","isNumber","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","map","xs","f","len","r","i","each$1","filter","pred","keys","each","obj","props","k","Global","path","parts","scope","resolve","p","unsafe","name","getOrDie","actual","getPrototypeOf","sandHTMLElement","isPrototypeOf","ELEMENT","TEXT","element","isType","isHTMLElement","isElement","isText","rawSet","dom","key","set","get$1","remove$3","read","attr","add$2","id","nu","remove$2","supports","get","add$1","clazz","remove$1","add","cleanClass","remove","fromHtml","html","div","fromDom","fromTag","node","fromText","text","SugarElement","docElm","y","charMap","charMapToRegExp","regExp","_value","charMapToSelector","selector","regExpGlobal","nbspClass","getRaw","wrapCharWithSpan","isWrappedNbsp","isMatch","n","value$1","isContentEditableFalse","isChildEditable","currentState","filterEditableDescendants","editable","result","children","isEditable","findParentElm","elm","rootElm","replaceWithSpans","show","nodeList","parent","withSpans","hide","toggle","body","bookmark","parentNode","applyVisualChars","toggleVisualChars","register$2","option","register$1","registerOption","isEnabledByDefault","setup$1","first","fn","rate","timer","args","setup","debouncedToggle","e","toggleActiveState","enabledStated","api","editorEventCallback","register","onAction","Plugin"],"mappings":"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","x_google_ignoreList":[0]}