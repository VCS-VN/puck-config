{"version":3,"file":"index-DISOMVl3.cjs","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/table/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType$1 = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq$1 = t => a => t === a;\n    const isString = isType$1('string');\n    const isArray = isType$1('array');\n    const isBoolean = isSimpleType('boolean');\n    const isUndefined = eq$1(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n\n    const noop = () => {\n    };\n    const compose1 = (fbc, fab) => a => fbc(fab(a));\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const identity = x => {\n      return x;\n    };\n    const tripleEquals = (a, b) => {\n      return a === b;\n    };\n    function curry(fn, ...initialArgs) {\n      return (...restArgs) => {\n        const all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    const call = f => {\n      f();\n    };\n    const never = constant(false);\n    const always = constant(true);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each$1 = (obj, f) => {\n      const props = keys(obj);\n      for (let k = 0, len = props.length; k < len; k++) {\n        const i = props[k];\n        const x = obj[i];\n        f(x, i);\n      }\n    };\n    const objAcc = r => (x, i) => {\n      r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n      each$1(obj, (x, i) => {\n        (pred(x, i) ? onTrue : onFalse)(x, i);\n      });\n    };\n    const filter$1 = (obj, pred) => {\n      const t = {};\n      internalFilter(obj, pred, objAcc(t), noop);\n      return t;\n    };\n    const mapToArray = (obj, f) => {\n      const r = [];\n      each$1(obj, (value, name) => {\n        r.push(f(value, name));\n      });\n      return r;\n    };\n    const values = obj => {\n      return mapToArray(obj, identity);\n    };\n    const size = obj => {\n      return keys(obj).length;\n    };\n    const get$4 = (obj, key) => {\n      return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n    const isEmpty$1 = r => {\n      for (const x in r) {\n        if (hasOwnProperty.call(r, x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    const nativeIndexOf = Array.prototype.indexOf;\n    const nativePush = Array.prototype.push;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const exists = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const range = (num, f) => {\n      const r = [];\n      for (let i = 0; i < num; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const eachr = (xs, f) => {\n      for (let i = xs.length - 1; i >= 0; i--) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const partition = (xs, pred) => {\n      const pass = [];\n      const fail = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        const arr = pred(x, i) ? pass : fail;\n        arr.push(x);\n      }\n      return {\n        pass,\n        fail\n      };\n    };\n    const filter = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const foldr = (xs, f, acc) => {\n      eachr(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const foldl = (xs, f, acc) => {\n      each(xs, (x, i) => {\n        acc = f(acc, x, i);\n      });\n      return acc;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const flatten$1 = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind = (xs, f) => flatten$1(map(xs, f));\n    const forall = (xs, pred) => {\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        const x = xs[i];\n        if (pred(x, i) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    const mapToObject = (xs, f) => {\n      const r = {};\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        r[String(x)] = f(x, i);\n      }\n      return r;\n    };\n    const get$3 = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = xs => get$3(xs, 0);\n    const last = xs => get$3(xs, xs.length - 1);\n    const findMap = (arr, f) => {\n      for (let i = 0; i < arr.length; i++) {\n        const r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Optional.none();\n    };\n\n    const COMMENT = 8;\n    const DOCUMENT = 9;\n    const DOCUMENT_FRAGMENT = 11;\n    const ELEMENT = 1;\n    const TEXT = 3;\n\n    const fromHtml = (html, scope) => {\n      const doc = scope || document;\n      const div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        const message = 'HTML does not have a single root node';\n        console.error(message, html);\n        throw new Error(message);\n      }\n      return fromDom$1(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n      const doc = scope || document;\n      const node = doc.createElement(tag);\n      return fromDom$1(node);\n    };\n    const fromText = (text, scope) => {\n      const doc = scope || document;\n      const node = doc.createTextNode(text);\n      return fromDom$1(node);\n    };\n    const fromDom$1 = node => {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: node };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom$1);\n    const SugarElement = {\n      fromHtml,\n      fromTag,\n      fromText,\n      fromDom: fromDom$1,\n      fromPoint\n    };\n\n    const is$2 = (element, selector) => {\n      const dom = element.dom;\n      if (dom.nodeType !== ELEMENT) {\n        return false;\n      } else {\n        const elem = dom;\n        if (elem.matches !== undefined) {\n          return elem.matches(selector);\n        } else if (elem.msMatchesSelector !== undefined) {\n          return elem.msMatchesSelector(selector);\n        } else if (elem.webkitMatchesSelector !== undefined) {\n          return elem.webkitMatchesSelector(selector);\n        } else if (elem.mozMatchesSelector !== undefined) {\n          return elem.mozMatchesSelector(selector);\n        } else {\n          throw new Error('Browser lacks native selectors');\n        }\n      }\n    };\n    const bypassSelector = dom => dom.nodeType !== ELEMENT && dom.nodeType !== DOCUMENT && dom.nodeType !== DOCUMENT_FRAGMENT || dom.childElementCount === 0;\n    const all$1 = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), SugarElement.fromDom);\n    };\n    const one = (selector, scope) => {\n      const base = scope === undefined ? document : scope.dom;\n      return bypassSelector(base) ? Optional.none() : Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);\n    };\n\n    const eq = (e1, e2) => e1.dom === e2.dom;\n    const is$1 = is$2;\n\n    typeof window !== 'undefined' ? window : Function('return this;')();\n\n    const name = element => {\n      const r = element.dom.nodeName;\n      return r.toLowerCase();\n    };\n    const type = element => element.dom.nodeType;\n    const isType = t => element => type(element) === t;\n    const isComment = element => type(element) === COMMENT || name(element) === '#comment';\n    const isElement = isType(ELEMENT);\n    const isText = isType(TEXT);\n    const isDocument = isType(DOCUMENT);\n    const isDocumentFragment = isType(DOCUMENT_FRAGMENT);\n    const isTag = tag => e => isElement(e) && name(e) === tag;\n\n    const owner = element => SugarElement.fromDom(element.dom.ownerDocument);\n    const documentOrOwner = dos => isDocument(dos) ? dos : owner(dos);\n    const parent = element => Optional.from(element.dom.parentNode).map(SugarElement.fromDom);\n    const parents = (element, isRoot) => {\n      const stop = isFunction(isRoot) ? isRoot : never;\n      let dom = element.dom;\n      const ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        const rawParent = dom.parentNode;\n        const p = SugarElement.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    const prevSibling = element => Optional.from(element.dom.previousSibling).map(SugarElement.fromDom);\n    const nextSibling = element => Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);\n    const children$3 = element => map(element.dom.childNodes, SugarElement.fromDom);\n    const child$3 = (element, index) => {\n      const cs = element.dom.childNodes;\n      return Optional.from(cs[index]).map(SugarElement.fromDom);\n    };\n    const firstChild = element => child$3(element, 0);\n\n    const isShadowRoot = dos => isDocumentFragment(dos) && isNonNullable(dos.dom.host);\n    const supported = isFunction(Element.prototype.attachShadow) && isFunction(Node.prototype.getRootNode);\n    const getRootNode = supported ? e => SugarElement.fromDom(e.dom.getRootNode()) : documentOrOwner;\n    const getShadowRoot = e => {\n      const r = getRootNode(e);\n      return isShadowRoot(r) ? Optional.some(r) : Optional.none();\n    };\n    const getShadowHost = e => SugarElement.fromDom(e.dom.host);\n\n    const inBody = element => {\n      const dom = isText(element) ? element.dom.parentNode : element.dom;\n      if (dom === undefined || dom === null || dom.ownerDocument === null) {\n        return false;\n      }\n      const doc = dom.ownerDocument;\n      return getShadowRoot(SugarElement.fromDom(dom)).fold(() => doc.body.contains(dom), compose1(inBody, getShadowHost));\n    };\n\n    var ClosestOrAncestor = (is, ancestor, scope, a, isRoot) => {\n      if (is(scope, a)) {\n        return Optional.some(scope);\n      } else if (isFunction(isRoot) && isRoot(scope)) {\n        return Optional.none();\n      } else {\n        return ancestor(scope, a, isRoot);\n      }\n    };\n\n    const ancestor$1 = (scope, predicate, isRoot) => {\n      let element = scope.dom;\n      const stop = isFunction(isRoot) ? isRoot : never;\n      while (element.parentNode) {\n        element = element.parentNode;\n        const el = SugarElement.fromDom(element);\n        if (predicate(el)) {\n          return Optional.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const closest$2 = (scope, predicate, isRoot) => {\n      const is = (s, test) => test(s);\n      return ClosestOrAncestor(is, ancestor$1, scope, predicate, isRoot);\n    };\n    const child$2 = (scope, predicate) => {\n      const pred = node => predicate(SugarElement.fromDom(node));\n      const result = find(scope.dom.childNodes, pred);\n      return result.map(SugarElement.fromDom);\n    };\n\n    const ancestor = (scope, selector, isRoot) => ancestor$1(scope, e => is$2(e, selector), isRoot);\n    const child$1 = (scope, selector) => child$2(scope, e => is$2(e, selector));\n    const descendant = (scope, selector) => one(selector, scope);\n    const closest$1 = (scope, selector, isRoot) => {\n      const is = (element, selector) => is$2(element, selector);\n      return ClosestOrAncestor(is, ancestor, scope, selector, isRoot);\n    };\n\n    const closest = target => closest$1(target, '[contenteditable]');\n    const isEditable = (element, assumeEditable = false) => {\n      if (inBody(element)) {\n        return element.dom.isContentEditable;\n      } else {\n        return closest(element).fold(constant(assumeEditable), editable => getRaw$1(editable) === 'true');\n      }\n    };\n    const getRaw$1 = element => element.dom.contentEditable;\n\n    const getNodeName = elm => elm.nodeName.toLowerCase();\n    const getBody = editor => SugarElement.fromDom(editor.getBody());\n    const getIsRoot = editor => element => eq(element, getBody(editor));\n    const removePxSuffix = size => size ? size.replace(/px$/, '') : '';\n    const addPxSuffix = size => /^\\d+(\\.\\d+)?$/.test(size) ? size + 'px' : size;\n    const getSelectionStart = editor => SugarElement.fromDom(editor.selection.getStart());\n    const getSelectionEnd = editor => SugarElement.fromDom(editor.selection.getEnd());\n    const isInEditableContext = cell => closest$2(cell, isTag('table')).forall(isEditable);\n\n    const children$2 = (scope, predicate) => filter(children$3(scope), predicate);\n    const descendants$1 = (scope, predicate) => {\n      let result = [];\n      each(children$3(scope), x => {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants$1(x, predicate));\n      });\n      return result;\n    };\n\n    const children$1 = (scope, selector) => children$2(scope, e => is$2(e, selector));\n    const descendants = (scope, selector) => all$1(selector, scope);\n\n    const rawSet = (dom, key, value) => {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    const set$2 = (element, key, value) => {\n      rawSet(element.dom, key, value);\n    };\n    const setAll = (element, attrs) => {\n      const dom = element.dom;\n      each$1(attrs, (v, k) => {\n        rawSet(dom, k, v);\n      });\n    };\n    const get$2 = (element, key) => {\n      const v = element.dom.getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    const getOpt = (element, key) => Optional.from(get$2(element, key));\n    const remove$2 = (element, key) => {\n      element.dom.removeAttribute(key);\n    };\n    const clone = element => foldl(element.dom.attributes, (acc, attr) => {\n      acc[attr.name] = attr.value;\n      return acc;\n    }, {});\n\n    const is = (lhs, rhs, comparator = tripleEquals) => lhs.exists(left => comparator(left, rhs));\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    const lift2 = (oa, ob, f) => oa.isSome() && ob.isSome() ? Optional.some(f(oa.getOrDie(), ob.getOrDie())) : Optional.none();\n    const flatten = oot => oot.bind(identity);\n    const someIf = (b, a) => b ? Optional.some(a) : Optional.none();\n\n    const removeFromStart = (str, numChars) => {\n      return str.substring(numChars);\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const removeLeading = (str, prefix) => {\n      return startsWith(str, prefix) ? removeFromStart(str, prefix.length) : str;\n    };\n    const startsWith = (str, prefix) => {\n      return checkRange(str, prefix, 0);\n    };\n    const blank = r => s => s.replace(r, '');\n    const trim = blank(/^\\s+|\\s+$/g);\n    const isNotEmpty = s => s.length > 0;\n    const isEmpty = s => !isNotEmpty(s);\n    const toInt = (value, radix = 10) => {\n      const num = parseInt(value, radix);\n      return isNaN(num) ? Optional.none() : Optional.some(num);\n    };\n    const toFloat = value => {\n      const num = parseFloat(value);\n      return isNaN(num) ? Optional.none() : Optional.some(num);\n    };\n\n    const isSupported = dom => dom.style !== undefined && isFunction(dom.style.getPropertyValue);\n\n    const internalSet = (dom, property, value) => {\n      if (!isString(value)) {\n        console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    const internalRemove = (dom, property) => {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    const set$1 = (element, property, value) => {\n      const dom = element.dom;\n      internalSet(dom, property, value);\n    };\n    const get$1 = (element, property) => {\n      const dom = element.dom;\n      const styles = window.getComputedStyle(dom);\n      const r = styles.getPropertyValue(property);\n      return r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n    };\n    const getUnsafeProperty = (dom, property) => isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    const getRaw = (element, property) => {\n      const dom = element.dom;\n      const raw = getUnsafeProperty(dom, property);\n      return Optional.from(raw).filter(r => r.length > 0);\n    };\n    const remove$1 = (element, property) => {\n      const dom = element.dom;\n      internalRemove(dom, property);\n      if (is(getOpt(element, 'style').map(trim), '')) {\n        remove$2(element, 'style');\n      }\n    };\n\n    const getAttrValue = (cell, name, fallback = 0) => getOpt(cell, name).map(value => parseInt(value, 10)).getOr(fallback);\n\n    const firstLayer = (scope, selector) => {\n      return filterFirstLayer(scope, selector, always);\n    };\n    const filterFirstLayer = (scope, selector, predicate) => {\n      return bind(children$3(scope), x => {\n        if (is$2(x, selector)) {\n          return predicate(x) ? [x] : [];\n        } else {\n          return filterFirstLayer(x, selector, predicate);\n        }\n      });\n    };\n\n    const validSectionList = [\n      'tfoot',\n      'thead',\n      'tbody',\n      'colgroup'\n    ];\n    const isValidSection = parentName => contains(validSectionList, parentName);\n    const grid = (rows, columns) => ({\n      rows,\n      columns\n    });\n    const detail = (element, rowspan, colspan) => ({\n      element,\n      rowspan,\n      colspan\n    });\n    const extended = (element, rowspan, colspan, row, column, isLocked) => ({\n      element,\n      rowspan,\n      colspan,\n      row,\n      column,\n      isLocked\n    });\n    const rowdetail = (element, cells, section) => ({\n      element,\n      cells,\n      section\n    });\n    const bounds = (startRow, startCol, finishRow, finishCol) => ({\n      startRow,\n      startCol,\n      finishRow,\n      finishCol\n    });\n    const columnext = (element, colspan, column) => ({\n      element,\n      colspan,\n      column\n    });\n    const colgroup = (element, columns) => ({\n      element,\n      columns\n    });\n\n    const lookup = (tags, element, isRoot = never) => {\n      if (isRoot(element)) {\n        return Optional.none();\n      }\n      if (contains(tags, name(element))) {\n        return Optional.some(element);\n      }\n      const isRootOrUpperTable = elm => is$2(elm, 'table') || isRoot(elm);\n      return ancestor(element, tags.join(','), isRootOrUpperTable);\n    };\n    const cell = (element, isRoot) => lookup([\n      'td',\n      'th'\n    ], element, isRoot);\n    const cells = ancestor => firstLayer(ancestor, 'th,td');\n    const columns = ancestor => {\n      if (is$2(ancestor, 'colgroup')) {\n        return children$1(ancestor, 'col');\n      } else {\n        return bind(columnGroups(ancestor), columnGroup => children$1(columnGroup, 'col'));\n      }\n    };\n    const table = (element, isRoot) => closest$1(element, 'table', isRoot);\n    const rows = ancestor => firstLayer(ancestor, 'tr');\n    const columnGroups = ancestor => table(ancestor).fold(constant([]), table => children$1(table, 'colgroup'));\n\n    const fromRowsOrColGroups = (elems, getSection) => map(elems, row => {\n      if (name(row) === 'colgroup') {\n        const cells = map(columns(row), column => {\n          const colspan = getAttrValue(column, 'span', 1);\n          return detail(column, 1, colspan);\n        });\n        return rowdetail(row, cells, 'colgroup');\n      } else {\n        const cells$1 = map(cells(row), cell => {\n          const rowspan = getAttrValue(cell, 'rowspan', 1);\n          const colspan = getAttrValue(cell, 'colspan', 1);\n          return detail(cell, rowspan, colspan);\n        });\n        return rowdetail(row, cells$1, getSection(row));\n      }\n    });\n    const getParentSection = group => parent(group).map(parent => {\n      const parentName = name(parent);\n      return isValidSection(parentName) ? parentName : 'tbody';\n    }).getOr('tbody');\n    const fromTable$1 = table => {\n      const rows$1 = rows(table);\n      const columnGroups$1 = columnGroups(table);\n      const elems = [\n        ...columnGroups$1,\n        ...rows$1\n      ];\n      return fromRowsOrColGroups(elems, getParentSection);\n    };\n\n    const LOCKED_COL_ATTR = 'data-snooker-locked-cols';\n    const getLockedColumnsFromTable = table => getOpt(table, LOCKED_COL_ATTR).bind(lockedColStr => Optional.from(lockedColStr.match(/\\d+/g))).map(lockedCols => mapToObject(lockedCols, always));\n\n    const key = (row, column) => {\n      return row + ',' + column;\n    };\n    const getAt = (warehouse, row, column) => Optional.from(warehouse.access[key(row, column)]);\n    const findItem = (warehouse, item, comparator) => {\n      const filtered = filterItems(warehouse, detail => {\n        return comparator(item, detail.element);\n      });\n      return filtered.length > 0 ? Optional.some(filtered[0]) : Optional.none();\n    };\n    const filterItems = (warehouse, predicate) => {\n      const all = bind(warehouse.all, r => {\n        return r.cells;\n      });\n      return filter(all, predicate);\n    };\n    const generateColumns = rowData => {\n      const columnsGroup = {};\n      let index = 0;\n      each(rowData.cells, column => {\n        const colspan = column.colspan;\n        range(colspan, columnIndex => {\n          const colIndex = index + columnIndex;\n          columnsGroup[colIndex] = columnext(column.element, colspan, colIndex);\n        });\n        index += colspan;\n      });\n      return columnsGroup;\n    };\n    const generate$1 = list => {\n      const access = {};\n      const cells = [];\n      const tableOpt = head(list).map(rowData => rowData.element).bind(table);\n      const lockedColumns = tableOpt.bind(getLockedColumnsFromTable).getOr({});\n      let maxRows = 0;\n      let maxColumns = 0;\n      let rowCount = 0;\n      const {\n        pass: colgroupRows,\n        fail: rows\n      } = partition(list, rowData => rowData.section === 'colgroup');\n      each(rows, rowData => {\n        const currentRow = [];\n        each(rowData.cells, rowCell => {\n          let start = 0;\n          while (access[key(rowCount, start)] !== undefined) {\n            start++;\n          }\n          const isLocked = hasNonNullableKey(lockedColumns, start.toString());\n          const current = extended(rowCell.element, rowCell.rowspan, rowCell.colspan, rowCount, start, isLocked);\n          for (let occupiedColumnPosition = 0; occupiedColumnPosition < rowCell.colspan; occupiedColumnPosition++) {\n            for (let occupiedRowPosition = 0; occupiedRowPosition < rowCell.rowspan; occupiedRowPosition++) {\n              const rowPosition = rowCount + occupiedRowPosition;\n              const columnPosition = start + occupiedColumnPosition;\n              const newpos = key(rowPosition, columnPosition);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, columnPosition + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        maxRows++;\n        cells.push(rowdetail(rowData.element, currentRow, rowData.section));\n        rowCount++;\n      });\n      const {columns, colgroups} = last(colgroupRows).map(rowData => {\n        const columns = generateColumns(rowData);\n        const colgroup$1 = colgroup(rowData.element, values(columns));\n        return {\n          colgroups: [colgroup$1],\n          columns\n        };\n      }).getOrThunk(() => ({\n        colgroups: [],\n        columns: {}\n      }));\n      const grid$1 = grid(maxRows, maxColumns);\n      return {\n        grid: grid$1,\n        access,\n        all: cells,\n        columns,\n        colgroups\n      };\n    };\n    const fromTable = table => {\n      const list = fromTable$1(table);\n      return generate$1(list);\n    };\n    const justCells = warehouse => bind(warehouse.all, w => w.cells);\n    const justColumns = warehouse => values(warehouse.columns);\n    const hasColumns = warehouse => keys(warehouse.columns).length > 0;\n    const getColumnAt = (warehouse, columnIndex) => Optional.from(warehouse.columns[columnIndex]);\n    const Warehouse = {\n      fromTable,\n      generate: generate$1,\n      getAt,\n      findItem,\n      filterItems,\n      justCells,\n      justColumns,\n      hasColumns,\n      getColumnAt\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const getTDTHOverallStyle = (dom, elm, name) => {\n      const cells = dom.select('td,th', elm);\n      let firstChildStyle;\n      for (let i = 0; i < cells.length; i++) {\n        const currentStyle = dom.getStyle(cells[i], name);\n        if (isUndefined(firstChildStyle)) {\n          firstChildStyle = currentStyle;\n        }\n        if (firstChildStyle !== currentStyle) {\n          return '';\n        }\n      }\n      return firstChildStyle;\n    };\n    const setAlign = (editor, elm, name) => {\n      global$2.each('left center right'.split(' '), align => {\n        if (align !== name) {\n          editor.formatter.remove('align' + align, {}, elm);\n        }\n      });\n      if (name) {\n        editor.formatter.apply('align' + name, {}, elm);\n      }\n    };\n    const setVAlign = (editor, elm, name) => {\n      global$2.each('top middle bottom'.split(' '), align => {\n        if (align !== name) {\n          editor.formatter.remove('valign' + align, {}, elm);\n        }\n      });\n      if (name) {\n        editor.formatter.apply('valign' + name, {}, elm);\n      }\n    };\n\n    const fireTableModified = (editor, table, data) => {\n      editor.dispatch('TableModified', {\n        ...data,\n        table\n      });\n    };\n\n    const toNumber = (px, fallback) => toFloat(px).getOr(fallback);\n    const getProp = (element, name, fallback) => toNumber(get$1(element, name), fallback);\n    const calcContentBoxSize = (element, size, upper, lower) => {\n      const paddingUpper = getProp(element, `padding-${ upper }`, 0);\n      const paddingLower = getProp(element, `padding-${ lower }`, 0);\n      const borderUpper = getProp(element, `border-${ upper }-width`, 0);\n      const borderLower = getProp(element, `border-${ lower }-width`, 0);\n      return size - paddingUpper - paddingLower - borderUpper - borderLower;\n    };\n    const getCalculatedWidth = (element, boxSizing) => {\n      const dom = element.dom;\n      const width = dom.getBoundingClientRect().width || dom.offsetWidth;\n      return boxSizing === 'border-box' ? width : calcContentBoxSize(element, width, 'left', 'right');\n    };\n    const getInnerWidth = element => getCalculatedWidth(element, 'content-box');\n\n    const getInner = getInnerWidth;\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const defaultTableToolbar = 'tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol';\n    const defaultCellBorderWidths = range(5, i => {\n      const size = `${ i + 1 }px`;\n      return {\n        title: size,\n        value: size\n      };\n    });\n    const defaultCellBorderStyles = map([\n      'Solid',\n      'Dotted',\n      'Dashed',\n      'Double',\n      'Groove',\n      'Ridge',\n      'Inset',\n      'Outset',\n      'None',\n      'Hidden'\n    ], type => {\n      return {\n        title: type,\n        value: type.toLowerCase()\n      };\n    });\n    const defaultWidth = '100%';\n    const getPixelForcedWidth = editor => {\n      var _a;\n      const dom = editor.dom;\n      const parentBlock = (_a = dom.getParent(editor.selection.getStart(), dom.isBlock)) !== null && _a !== void 0 ? _a : editor.getBody();\n      return getInner(SugarElement.fromDom(parentBlock)) + 'px';\n    };\n    const determineDefaultStyles = (editor, defaultStyles) => {\n      if (isResponsiveForced(editor) || !shouldStyleWithCss(editor)) {\n        return defaultStyles;\n      } else if (isPixelsForced(editor)) {\n        return {\n          ...defaultStyles,\n          width: getPixelForcedWidth(editor)\n        };\n      } else {\n        return {\n          ...defaultStyles,\n          width: defaultWidth\n        };\n      }\n    };\n    const determineDefaultAttributes = (editor, defaultAttributes) => {\n      if (isResponsiveForced(editor) || shouldStyleWithCss(editor)) {\n        return defaultAttributes;\n      } else if (isPixelsForced(editor)) {\n        return {\n          ...defaultAttributes,\n          width: getPixelForcedWidth(editor)\n        };\n      } else {\n        return {\n          ...defaultAttributes,\n          width: defaultWidth\n        };\n      }\n    };\n    const option = name => editor => editor.options.get(name);\n    const register = editor => {\n      const registerOption = editor.options.register;\n      registerOption('table_border_widths', {\n        processor: 'object[]',\n        default: defaultCellBorderWidths\n      });\n      registerOption('table_border_styles', {\n        processor: 'object[]',\n        default: defaultCellBorderStyles\n      });\n      registerOption('table_cell_advtab', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_row_advtab', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_advtab', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_appearance_options', {\n        processor: 'boolean',\n        default: true\n      });\n      registerOption('table_grid', {\n        processor: 'boolean',\n        default: !global$1.deviceType.isTouch()\n      });\n      registerOption('table_cell_class_list', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('table_row_class_list', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('table_class_list', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('table_toolbar', {\n        processor: 'string',\n        default: defaultTableToolbar\n      });\n      registerOption('table_background_color_map', {\n        processor: 'object[]',\n        default: []\n      });\n      registerOption('table_border_color_map', {\n        processor: 'object[]',\n        default: []\n      });\n    };\n    const getTableSizingMode = option('table_sizing_mode');\n    const getTableBorderWidths = option('table_border_widths');\n    const getTableBorderStyles = option('table_border_styles');\n    const hasAdvancedCellTab = option('table_cell_advtab');\n    const hasAdvancedRowTab = option('table_row_advtab');\n    const hasAdvancedTableTab = option('table_advtab');\n    const hasAppearanceOptions = option('table_appearance_options');\n    const hasTableGrid = option('table_grid');\n    const shouldStyleWithCss = option('table_style_by_css');\n    const getCellClassList = option('table_cell_class_list');\n    const getRowClassList = option('table_row_class_list');\n    const getTableClassList = option('table_class_list');\n    const getToolbar = option('table_toolbar');\n    const getTableBackgroundColorMap = option('table_background_color_map');\n    const getTableBorderColorMap = option('table_border_color_map');\n    const isPixelsForced = editor => getTableSizingMode(editor) === 'fixed';\n    const isResponsiveForced = editor => getTableSizingMode(editor) === 'responsive';\n    const getDefaultStyles = editor => {\n      const options = editor.options;\n      const defaultStyles = options.get('table_default_styles');\n      return options.isSet('table_default_styles') ? defaultStyles : determineDefaultStyles(editor, defaultStyles);\n    };\n    const getDefaultAttributes = editor => {\n      const options = editor.options;\n      const defaultAttributes = options.get('table_default_attributes');\n      return options.isSet('table_default_attributes') ? defaultAttributes : determineDefaultAttributes(editor, defaultAttributes);\n    };\n\n    const isWithin = (bounds, detail) => {\n      return detail.column >= bounds.startCol && detail.column + detail.colspan - 1 <= bounds.finishCol && detail.row >= bounds.startRow && detail.row + detail.rowspan - 1 <= bounds.finishRow;\n    };\n    const isRectangular = (warehouse, bounds) => {\n      let isRect = true;\n      const detailIsWithin = curry(isWithin, bounds);\n      for (let i = bounds.startRow; i <= bounds.finishRow; i++) {\n        for (let j = bounds.startCol; j <= bounds.finishCol; j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Optional.some(bounds) : Optional.none();\n    };\n\n    const getBounds = (detailA, detailB) => {\n      return bounds(Math.min(detailA.row, detailB.row), Math.min(detailA.column, detailB.column), Math.max(detailA.row + detailA.rowspan - 1, detailB.row + detailB.rowspan - 1), Math.max(detailA.column + detailA.colspan - 1, detailB.column + detailB.colspan - 1));\n    };\n    const getAnyBox = (warehouse, startCell, finishCell) => {\n      const startCoords = Warehouse.findItem(warehouse, startCell, eq);\n      const finishCoords = Warehouse.findItem(warehouse, finishCell, eq);\n      return startCoords.bind(sc => {\n        return finishCoords.map(fc => {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    const getBox$1 = (warehouse, startCell, finishCell) => {\n      return getAnyBox(warehouse, startCell, finishCell).bind(bounds => {\n        return isRectangular(warehouse, bounds);\n      });\n    };\n\n    const getBox = (table, first, last) => {\n      const warehouse = getWarehouse(table);\n      return getBox$1(warehouse, first, last);\n    };\n    const getWarehouse = Warehouse.fromTable;\n\n    const before = (marker, element) => {\n      const parent$1 = parent(marker);\n      parent$1.each(v => {\n        v.dom.insertBefore(element.dom, marker.dom);\n      });\n    };\n    const after$1 = (marker, element) => {\n      const sibling = nextSibling(marker);\n      sibling.fold(() => {\n        const parent$1 = parent(marker);\n        parent$1.each(v => {\n          append$1(v, element);\n        });\n      }, v => {\n        before(v, element);\n      });\n    };\n    const prepend = (parent, element) => {\n      const firstChild$1 = firstChild(parent);\n      firstChild$1.fold(() => {\n        append$1(parent, element);\n      }, v => {\n        parent.dom.insertBefore(element.dom, v.dom);\n      });\n    };\n    const append$1 = (parent, element) => {\n      parent.dom.appendChild(element.dom);\n    };\n    const wrap = (element, wrapper) => {\n      before(element, wrapper);\n      append$1(wrapper, element);\n    };\n\n    const after = (marker, elements) => {\n      each(elements, (x, i) => {\n        const e = i === 0 ? marker : elements[i - 1];\n        after$1(e, x);\n      });\n    };\n    const append = (parent, elements) => {\n      each(elements, x => {\n        append$1(parent, x);\n      });\n    };\n\n    const remove = element => {\n      const dom = element.dom;\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    const unwrap = wrapper => {\n      const children = children$3(wrapper);\n      if (children.length > 0) {\n        after(wrapper, children);\n      }\n      remove(wrapper);\n    };\n\n    const NodeValue = (is, name) => {\n      const get = element => {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      const getOption = element => is(element) ? Optional.from(element.dom.nodeValue) : Optional.none();\n      const set = (element, value) => {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom.nodeValue = value;\n      };\n      return {\n        get,\n        getOption,\n        set\n      };\n    };\n\n    const api = NodeValue(isText, 'text');\n    const get = element => api.get(element);\n    const set = (element, value) => api.set(element, value);\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    var DomUniverse = () => {\n      const clone$1 = element => {\n        return SugarElement.fromDom(element.dom.cloneNode(false));\n      };\n      const document = element => documentOrOwner(element).dom;\n      const isBoundary = element => {\n        if (!isElement(element)) {\n          return false;\n        }\n        if (name(element) === 'body') {\n          return true;\n        }\n        return contains(TagBoundaries, name(element));\n      };\n      const isEmptyTag = element => {\n        if (!isElement(element)) {\n          return false;\n        }\n        return contains([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      const isNonEditable = element => isElement(element) && get$2(element, 'contenteditable') === 'false';\n      const comparePosition = (element, other) => {\n        return element.dom.compareDocumentPosition(other.dom);\n      };\n      const copyAttributesTo = (source, destination) => {\n        const as = clone(source);\n        setAll(destination, as);\n      };\n      const isSpecial = element => {\n        const tag = name(element);\n        return contains([\n          'script',\n          'noscript',\n          'iframe',\n          'noframes',\n          'noembed',\n          'title',\n          'style',\n          'textarea',\n          'xmp'\n        ], tag);\n      };\n      const getLanguage = element => isElement(element) ? getOpt(element, 'lang') : Optional.none();\n      return {\n        up: constant({\n          selector: ancestor,\n          closest: closest$1,\n          predicate: ancestor$1,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants,\n          predicate: descendants$1\n        }),\n        styles: constant({\n          get: get$1,\n          getRaw: getRaw,\n          set: set$1,\n          remove: remove$1\n        }),\n        attrs: constant({\n          get: get$2,\n          set: set$2,\n          remove: remove$2,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before,\n          after: after$1,\n          afterAll: after,\n          append: append$1,\n          appendAll: append,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove\n        }),\n        create: constant({\n          nu: SugarElement.fromTag,\n          clone: clone$1,\n          text: SugarElement.fromText\n        }),\n        query: constant({\n          comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children$3,\n          name: name,\n          parent: parent,\n          document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          isSpecial,\n          getLanguage,\n          getText: get,\n          setText: set,\n          isBoundary,\n          isEmptyTag,\n          isNonEditable\n        }),\n        eq: eq,\n        is: is$1\n      };\n    };\n\n    const all = (universe, look, elements, f) => {\n      const head = elements[0];\n      const tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    const oneAll = (universe, look, elements) => {\n      return elements.length > 0 ? all(universe, look, elements, unsafeOne) : Optional.none();\n    };\n    const unsafeOne = (universe, look, head, tail) => {\n      const start = look(universe, head);\n      return foldr(tail, (b, a) => {\n        const current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    const commonElement = (universe, start, end) => {\n      return start.bind(s => {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n\n    const sharedOne$1 = oneAll;\n\n    const universe = DomUniverse();\n    const sharedOne = (look, elements) => {\n      return sharedOne$1(universe, (_universe, element) => {\n        return look(element);\n      }, elements);\n    };\n\n    const lookupTable = container => {\n      return ancestor(container, 'table');\n    };\n    const retrieve$1 = (container, selector) => {\n      const sels = descendants(container, selector);\n      return sels.length > 0 ? Optional.some(sels) : Optional.none();\n    };\n    const getEdges = (container, firstSelectedSelector, lastSelectedSelector) => {\n      return descendant(container, firstSelectedSelector).bind(first => {\n        return descendant(container, lastSelectedSelector).bind(last => {\n          return sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(table => {\n            return {\n              first,\n              last,\n              table\n            };\n          });\n        });\n      });\n    };\n\n    const retrieve = (container, selector) => {\n      return retrieve$1(container, selector);\n    };\n    const retrieveBox = (container, firstSelectedSelector, lastSelectedSelector) => {\n      return getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(edges => {\n        const isRoot = ancestor => {\n          return eq(container, ancestor);\n        };\n        const sectionSelector = 'thead,tfoot,tbody,table';\n        const firstAncestor = ancestor(edges.first, sectionSelector, isRoot);\n        const lastAncestor = ancestor(edges.last, sectionSelector, isRoot);\n        return firstAncestor.bind(fA => {\n          return lastAncestor.bind(lA => {\n            return eq(fA, lA) ? getBox(edges.table, edges.first, edges.last) : Optional.none();\n          });\n        });\n      });\n    };\n\n    const fromDom = nodes => map(nodes, SugarElement.fromDom);\n\n    const strSelected = 'data-mce-selected';\n    const strSelectedSelector = 'td[' + strSelected + '],th[' + strSelected + ']';\n    const strFirstSelected = 'data-mce-first-selected';\n    const strFirstSelectedSelector = 'td[' + strFirstSelected + '],th[' + strFirstSelected + ']';\n    const strLastSelected = 'data-mce-last-selected';\n    const strLastSelectedSelector = 'td[' + strLastSelected + '],th[' + strLastSelected + ']';\n    const ephemera = {\n      selected: strSelected,\n      selectedSelector: strSelectedSelector,\n      firstSelected: strFirstSelected,\n      firstSelectedSelector: strFirstSelectedSelector,\n      lastSelected: strLastSelected,\n      lastSelectedSelector: strLastSelectedSelector\n    };\n\n    const getSelectionCellFallback = element => table(element).bind(table => retrieve(table, ephemera.firstSelectedSelector)).fold(constant(element), cells => cells[0]);\n    const getSelectionFromSelector = selector => (initCell, isRoot) => {\n      const cellName = name(initCell);\n      const cell = cellName === 'col' || cellName === 'colgroup' ? getSelectionCellFallback(initCell) : initCell;\n      return closest$1(cell, selector, isRoot);\n    };\n    const getSelectionCellOrCaption = getSelectionFromSelector('th,td,caption');\n    const getSelectionCell = getSelectionFromSelector('th,td');\n    const getCellsFromSelection = editor => fromDom(editor.model.table.getSelectedCells());\n    const getRowsFromSelection = (selected, selector) => {\n      const cellOpt = getSelectionCell(selected);\n      const rowsOpt = cellOpt.bind(cell => table(cell)).map(table => rows(table));\n      return lift2(cellOpt, rowsOpt, (cell, rows) => filter(rows, row => exists(fromDom(row.dom.cells), rowCell => get$2(rowCell, selector) === '1' || eq(rowCell, cell)))).getOr([]);\n    };\n\n    const verticalAlignValues = [\n      {\n        text: 'None',\n        value: ''\n      },\n      {\n        text: 'Top',\n        value: 'top'\n      },\n      {\n        text: 'Middle',\n        value: 'middle'\n      },\n      {\n        text: 'Bottom',\n        value: 'bottom'\n      }\n    ];\n\n    const hexColour = value => ({ value: normalizeHex(value) });\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const longformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    const isHexString = hex => shorthandRegex.test(hex) || longformRegex.test(hex);\n    const normalizeHex = hex => removeLeading(hex, '#').toUpperCase();\n    const fromString$1 = hex => isHexString(hex) ? Optional.some({ value: normalizeHex(hex) }) : Optional.none();\n    const toHex = component => {\n      const hex = component.toString(16);\n      return (hex.length === 1 ? '0' + hex : hex).toUpperCase();\n    };\n    const fromRgba = rgbaColour => {\n      const value = toHex(rgbaColour.red) + toHex(rgbaColour.green) + toHex(rgbaColour.blue);\n      return hexColour(value);\n    };\n\n    const rgbRegex = /^\\s*rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)\\s*$/i;\n    const rgbaRegex = /^\\s*rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?(?:\\.\\d+)?)\\s*\\)\\s*$/i;\n    const rgbaColour = (red, green, blue, alpha) => ({\n      red,\n      green,\n      blue,\n      alpha\n    });\n    const fromStringValues = (red, green, blue, alpha) => {\n      const r = parseInt(red, 10);\n      const g = parseInt(green, 10);\n      const b = parseInt(blue, 10);\n      const a = parseFloat(alpha);\n      return rgbaColour(r, g, b, a);\n    };\n    const fromString = rgbaString => {\n      if (rgbaString === 'transparent') {\n        return Optional.some(rgbaColour(0, 0, 0, 0));\n      }\n      const rgbMatch = rgbRegex.exec(rgbaString);\n      if (rgbMatch !== null) {\n        return Optional.some(fromStringValues(rgbMatch[1], rgbMatch[2], rgbMatch[3], '1'));\n      }\n      const rgbaMatch = rgbaRegex.exec(rgbaString);\n      if (rgbaMatch !== null) {\n        return Optional.some(fromStringValues(rgbaMatch[1], rgbaMatch[2], rgbaMatch[3], rgbaMatch[4]));\n      }\n      return Optional.none();\n    };\n\n    const anyToHex = color => fromString$1(color).orThunk(() => fromString(color).map(fromRgba)).getOrThunk(() => {\n      const canvas = document.createElement('canvas');\n      canvas.height = 1;\n      canvas.width = 1;\n      const canvasContext = canvas.getContext('2d');\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n      canvasContext.fillStyle = '#FFFFFF';\n      canvasContext.fillStyle = color;\n      canvasContext.fillRect(0, 0, 1, 1);\n      const rgba = canvasContext.getImageData(0, 0, 1, 1).data;\n      const r = rgba[0];\n      const g = rgba[1];\n      const b = rgba[2];\n      const a = rgba[3];\n      return fromRgba(rgbaColour(r, g, b, a));\n    });\n    const rgbaToHexString = color => fromString(color).map(fromRgba).map(h => '#' + h.value).getOr(color);\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const singleton = doRevoke => {\n      const subject = Cell(Optional.none());\n      const revoke = () => subject.get().each(doRevoke);\n      const clear = () => {\n        revoke();\n        subject.set(Optional.none());\n      };\n      const isSet = () => subject.get().isSome();\n      const get = () => subject.get();\n      const set = s => {\n        revoke();\n        subject.set(Optional.some(s));\n      };\n      return {\n        clear,\n        isSet,\n        get,\n        set\n      };\n    };\n    const unbindable = () => singleton(s => s.unbind());\n\n    const onSetupToggle = (editor, formatName, formatValue) => {\n      return api => {\n        const boundCallback = unbindable();\n        const isNone = isEmpty(formatValue);\n        const init = () => {\n          const selectedCells = getCellsFromSelection(editor);\n          const checkNode = cell => editor.formatter.match(formatName, { value: formatValue }, cell.dom, isNone);\n          if (isNone) {\n            api.setActive(!exists(selectedCells, checkNode));\n            boundCallback.set(editor.formatter.formatChanged(formatName, match => api.setActive(!match), true));\n          } else {\n            api.setActive(forall(selectedCells, checkNode));\n            boundCallback.set(editor.formatter.formatChanged(formatName, api.setActive, false, { value: formatValue }));\n          }\n        };\n        editor.initialized ? init() : editor.on('init', init);\n        return boundCallback.clear;\n      };\n    };\n    const isListGroup = item => hasNonNullableKey(item, 'menu');\n    const buildListItems = items => map(items, item => {\n      const text = item.text || item.title || '';\n      if (isListGroup(item)) {\n        return {\n          text,\n          items: buildListItems(item.menu)\n        };\n      } else {\n        return {\n          text,\n          value: item.value\n        };\n      }\n    });\n    const buildMenuItems = (editor, items, format, onAction) => map(items, item => {\n      const text = item.text || item.title;\n      if (isListGroup(item)) {\n        return {\n          type: 'nestedmenuitem',\n          text,\n          getSubmenuItems: () => buildMenuItems(editor, item.menu, format, onAction)\n        };\n      } else {\n        return {\n          text,\n          type: 'togglemenuitem',\n          onAction: () => onAction(item.value),\n          onSetup: onSetupToggle(editor, format, item.value)\n        };\n      }\n    });\n    const applyTableCellStyle = (editor, style) => value => {\n      editor.execCommand('mceTableApplyCellStyle', false, { [style]: value });\n    };\n    const filterNoneItem = list => bind(list, item => {\n      if (isListGroup(item)) {\n        return [{\n            ...item,\n            menu: filterNoneItem(item.menu)\n          }];\n      } else {\n        return isNotEmpty(item.value) ? [item] : [];\n      }\n    });\n    const generateMenuItemsCallback = (editor, items, format, onAction) => callback => callback(buildMenuItems(editor, items, format, onAction));\n    const buildColorMenu = (editor, colorList, style) => {\n      const colorMap = map(colorList, entry => ({\n        text: entry.title,\n        value: '#' + anyToHex(entry.value).value,\n        type: 'choiceitem'\n      }));\n      return [{\n          type: 'fancymenuitem',\n          fancytype: 'colorswatch',\n          initData: {\n            colors: colorMap.length > 0 ? colorMap : undefined,\n            allowCustomColors: false\n          },\n          onAction: data => {\n            const value = data.value === 'remove' ? '' : data.value;\n            editor.execCommand('mceTableApplyCellStyle', false, { [style]: value });\n          }\n        }];\n    };\n    const changeRowHeader = editor => () => {\n      const currentType = editor.queryCommandValue('mceTableRowType');\n      const newType = currentType === 'header' ? 'body' : 'header';\n      editor.execCommand('mceTableRowType', false, { type: newType });\n    };\n    const changeColumnHeader = editor => () => {\n      const currentType = editor.queryCommandValue('mceTableColType');\n      const newType = currentType === 'th' ? 'td' : 'th';\n      editor.execCommand('mceTableColType', false, { type: newType });\n    };\n\n    const getClassList$1 = editor => {\n      const classes = buildListItems(getCellClassList(editor));\n      if (classes.length > 0) {\n        return Optional.some({\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Optional.none();\n    };\n    const children = [\n      {\n        name: 'width',\n        type: 'input',\n        label: 'Width'\n      },\n      {\n        name: 'height',\n        type: 'input',\n        label: 'Height'\n      },\n      {\n        name: 'celltype',\n        type: 'listbox',\n        label: 'Cell type',\n        items: [\n          {\n            text: 'Cell',\n            value: 'td'\n          },\n          {\n            text: 'Header cell',\n            value: 'th'\n          }\n        ]\n      },\n      {\n        name: 'scope',\n        type: 'listbox',\n        label: 'Scope',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Row',\n            value: 'row'\n          },\n          {\n            text: 'Column',\n            value: 'col'\n          },\n          {\n            text: 'Row group',\n            value: 'rowgroup'\n          },\n          {\n            text: 'Column group',\n            value: 'colgroup'\n          }\n        ]\n      },\n      {\n        name: 'halign',\n        type: 'listbox',\n        label: 'Horizontal align',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        name: 'valign',\n        type: 'listbox',\n        label: 'Vertical align',\n        items: verticalAlignValues\n      }\n    ];\n    const getItems$2 = editor => children.concat(getClassList$1(editor).toArray());\n\n    const getAdvancedTab = (editor, dialogName) => {\n      const emptyBorderStyle = [{\n          text: 'Select...',\n          value: ''\n        }];\n      const advTabItems = [\n        {\n          name: 'borderstyle',\n          type: 'listbox',\n          label: 'Border style',\n          items: emptyBorderStyle.concat(buildListItems(getTableBorderStyles(editor)))\n        },\n        {\n          name: 'bordercolor',\n          type: 'colorinput',\n          label: 'Border color'\n        },\n        {\n          name: 'backgroundcolor',\n          type: 'colorinput',\n          label: 'Background color'\n        }\n      ];\n      const borderWidth = {\n        name: 'borderwidth',\n        type: 'input',\n        label: 'Border width'\n      };\n      const items = dialogName === 'cell' ? [borderWidth].concat(advTabItems) : advTabItems;\n      return {\n        title: 'Advanced',\n        name: 'advanced',\n        items\n      };\n    };\n\n    const normal = (editor, element) => {\n      const dom = editor.dom;\n      const setAttrib = (attr, value) => {\n        dom.setAttrib(element, attr, value);\n      };\n      const setStyle = (prop, value) => {\n        dom.setStyle(element, prop, value);\n      };\n      const setFormat = (formatName, value) => {\n        if (value === '') {\n          editor.formatter.remove(formatName, { value: null }, element, true);\n        } else {\n          editor.formatter.apply(formatName, { value }, element);\n        }\n      };\n      return {\n        setAttrib,\n        setStyle,\n        setFormat\n      };\n    };\n    const DomModifier = { normal };\n\n    const isHeaderCell = isTag('th');\n    const getRowHeaderType = (isHeaderRow, isHeaderCells) => {\n      if (isHeaderRow && isHeaderCells) {\n        return 'sectionCells';\n      } else if (isHeaderRow) {\n        return 'section';\n      } else {\n        return 'cells';\n      }\n    };\n    const getRowType$1 = row => {\n      const isHeaderRow = row.section === 'thead';\n      const isHeaderCells = is(findCommonCellType(row.cells), 'th');\n      if (row.section === 'tfoot') {\n        return { type: 'footer' };\n      } else if (isHeaderRow || isHeaderCells) {\n        return {\n          type: 'header',\n          subType: getRowHeaderType(isHeaderRow, isHeaderCells)\n        };\n      } else {\n        return { type: 'body' };\n      }\n    };\n    const findCommonCellType = cells => {\n      const headerCells = filter(cells, cell => isHeaderCell(cell.element));\n      if (headerCells.length === 0) {\n        return Optional.some('td');\n      } else if (headerCells.length === cells.length) {\n        return Optional.some('th');\n      } else {\n        return Optional.none();\n      }\n    };\n    const findCommonRowType = rows => {\n      const rowTypes = map(rows, row => getRowType$1(row).type);\n      const hasHeader = contains(rowTypes, 'header');\n      const hasFooter = contains(rowTypes, 'footer');\n      if (!hasHeader && !hasFooter) {\n        return Optional.some('body');\n      } else {\n        const hasBody = contains(rowTypes, 'body');\n        if (hasHeader && !hasBody && !hasFooter) {\n          return Optional.some('header');\n        } else if (!hasHeader && !hasBody && hasFooter) {\n          return Optional.some('footer');\n        } else {\n          return Optional.none();\n        }\n      }\n    };\n\n    const cached = f => {\n      let called = false;\n      let r;\n      return (...args) => {\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    const findInWarehouse = (warehouse, element) => findMap(warehouse.all, r => find(r.cells, e => eq(element, e.element)));\n    const extractCells = (warehouse, target, predicate) => {\n      const details = map(target.selection, cell$1 => {\n        return cell(cell$1).bind(lc => findInWarehouse(warehouse, lc)).filter(predicate);\n      });\n      const cells = cat(details);\n      return someIf(cells.length > 0, cells);\n    };\n    const onMergable = (_warehouse, target) => target.mergable;\n    const onUnmergable = (_warehouse, target) => target.unmergable;\n    const onCells = (warehouse, target) => extractCells(warehouse, target, always);\n    const isUnlockedTableCell = (warehouse, cell) => findInWarehouse(warehouse, cell).exists(detail => !detail.isLocked);\n    const allUnlocked = (warehouse, cells) => forall(cells, cell => isUnlockedTableCell(warehouse, cell));\n    const onUnlockedMergable = (warehouse, target) => onMergable(warehouse, target).filter(mergeable => allUnlocked(warehouse, mergeable.cells));\n    const onUnlockedUnmergable = (warehouse, target) => onUnmergable(warehouse, target).filter(cells => allUnlocked(warehouse, cells));\n\n    const generate = cases => {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      const constructors = [];\n      const adt = {};\n      each(cases, (acase, count) => {\n        const keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        const key = keys$1[0];\n        const value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = (...args) => {\n          const argLength = args.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          const match = branches => {\n            const branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            const allReqd = forall(constructors, reqKey => {\n              return contains(branchKeys, reqKey);\n            });\n            if (!allReqd) {\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            }\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: (...foldArgs) => {\n              if (foldArgs.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + foldArgs.length);\n              }\n              const target = foldArgs[count];\n              return target.apply(null, args);\n            },\n            match,\n            log: label => {\n              console.log(label, {\n                constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    const Adt = { generate };\n\n    const adt = Adt.generate([\n      { none: [] },\n      { only: ['index'] },\n      {\n        left: [\n          'index',\n          'next'\n        ]\n      },\n      {\n        middle: [\n          'prev',\n          'index',\n          'next'\n        ]\n      },\n      {\n        right: [\n          'prev',\n          'index'\n        ]\n      }\n    ]);\n    ({ ...adt });\n\n    const opGetRowsType = (table, target) => {\n      const house = Warehouse.fromTable(table);\n      const details = onCells(house, target);\n      return details.bind(selectedCells => {\n        const lastSelectedCell = selectedCells[selectedCells.length - 1];\n        const minRowRange = selectedCells[0].row;\n        const maxRowRange = lastSelectedCell.row + lastSelectedCell.rowspan;\n        const selectedRows = house.all.slice(minRowRange, maxRowRange);\n        return findCommonRowType(selectedRows);\n      }).getOr('');\n    };\n    const getRowsType = opGetRowsType;\n\n    const rgbToHex = value => startsWith(value, 'rgb') ? rgbaToHexString(value) : value;\n    const extractAdvancedStyles = elm => {\n      const element = SugarElement.fromDom(elm);\n      return {\n        borderwidth: getRaw(element, 'border-width').getOr(''),\n        borderstyle: getRaw(element, 'border-style').getOr(''),\n        bordercolor: getRaw(element, 'border-color').map(rgbToHex).getOr(''),\n        backgroundcolor: getRaw(element, 'background-color').map(rgbToHex).getOr('')\n      };\n    };\n    const getSharedValues = data => {\n      const baseData = data[0];\n      const comparisonData = data.slice(1);\n      each(comparisonData, items => {\n        each(keys(baseData), key => {\n          each$1(items, (itemValue, itemKey) => {\n            const comparisonValue = baseData[key];\n            if (comparisonValue !== '' && key === itemKey) {\n              if (comparisonValue !== itemValue) {\n                baseData[key] = '';\n              }\n            }\n          });\n        });\n      });\n      return baseData;\n    };\n    const getAlignment = (formats, formatName, editor, elm) => find(formats, name => !isUndefined(editor.formatter.matchNode(elm, formatName + name))).getOr('');\n    const getHAlignment = curry(getAlignment, [\n      'left',\n      'center',\n      'right'\n    ], 'align');\n    const getVAlignment = curry(getAlignment, [\n      'top',\n      'middle',\n      'bottom'\n    ], 'valign');\n    const extractDataFromSettings = (editor, hasAdvTableTab) => {\n      const style = getDefaultStyles(editor);\n      const attrs = getDefaultAttributes(editor);\n      const extractAdvancedStyleData = () => ({\n        borderstyle: get$4(style, 'border-style').getOr(''),\n        bordercolor: rgbToHex(get$4(style, 'border-color').getOr('')),\n        backgroundcolor: rgbToHex(get$4(style, 'background-color').getOr(''))\n      });\n      const defaultData = {\n        height: '',\n        width: '100%',\n        cellspacing: '',\n        cellpadding: '',\n        caption: false,\n        class: '',\n        align: '',\n        border: ''\n      };\n      const getBorder = () => {\n        const borderWidth = style['border-width'];\n        if (shouldStyleWithCss(editor) && borderWidth) {\n          return { border: borderWidth };\n        }\n        return get$4(attrs, 'border').fold(() => ({}), border => ({ border }));\n      };\n      const advStyle = hasAdvTableTab ? extractAdvancedStyleData() : {};\n      const getCellPaddingCellSpacing = () => {\n        const spacing = get$4(style, 'border-spacing').or(get$4(attrs, 'cellspacing')).fold(() => ({}), cellspacing => ({ cellspacing }));\n        const padding = get$4(style, 'border-padding').or(get$4(attrs, 'cellpadding')).fold(() => ({}), cellpadding => ({ cellpadding }));\n        return {\n          ...spacing,\n          ...padding\n        };\n      };\n      const data = {\n        ...defaultData,\n        ...style,\n        ...attrs,\n        ...advStyle,\n        ...getBorder(),\n        ...getCellPaddingCellSpacing()\n      };\n      return data;\n    };\n    const getRowType = elm => table(SugarElement.fromDom(elm)).map(table => {\n      const target = { selection: fromDom(elm.cells) };\n      return getRowsType(table, target);\n    }).getOr('');\n    const extractDataFromTableElement = (editor, elm, hasAdvTableTab) => {\n      const getBorder = (dom, elm) => {\n        const optBorderWidth = getRaw(SugarElement.fromDom(elm), 'border-width');\n        if (shouldStyleWithCss(editor) && optBorderWidth.isSome()) {\n          return optBorderWidth.getOr('');\n        }\n        return dom.getAttrib(elm, 'border') || getTDTHOverallStyle(editor.dom, elm, 'border-width') || getTDTHOverallStyle(editor.dom, elm, 'border') || '';\n      };\n      const dom = editor.dom;\n      const cellspacing = shouldStyleWithCss(editor) ? dom.getStyle(elm, 'border-spacing') || dom.getAttrib(elm, 'cellspacing') : dom.getAttrib(elm, 'cellspacing') || dom.getStyle(elm, 'border-spacing');\n      const cellpadding = shouldStyleWithCss(editor) ? getTDTHOverallStyle(dom, elm, 'padding') || dom.getAttrib(elm, 'cellpadding') : dom.getAttrib(elm, 'cellpadding') || getTDTHOverallStyle(dom, elm, 'padding');\n      return {\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        cellspacing: cellspacing !== null && cellspacing !== void 0 ? cellspacing : '',\n        cellpadding: cellpadding !== null && cellpadding !== void 0 ? cellpadding : '',\n        border: getBorder(dom, elm),\n        caption: !!dom.select('caption', elm)[0],\n        class: dom.getAttrib(elm, 'class', ''),\n        align: getHAlignment(editor, elm),\n        ...hasAdvTableTab ? extractAdvancedStyles(elm) : {}\n      };\n    };\n    const extractDataFromRowElement = (editor, elm, hasAdvancedRowTab) => {\n      const dom = editor.dom;\n      return {\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        class: dom.getAttrib(elm, 'class', ''),\n        type: getRowType(elm),\n        align: getHAlignment(editor, elm),\n        ...hasAdvancedRowTab ? extractAdvancedStyles(elm) : {}\n      };\n    };\n    const extractDataFromCellElement = (editor, cell, hasAdvancedCellTab, column) => {\n      const dom = editor.dom;\n      const colElm = column.getOr(cell);\n      const getStyle = (element, style) => dom.getStyle(element, style) || dom.getAttrib(element, style);\n      return {\n        width: getStyle(colElm, 'width'),\n        height: getStyle(cell, 'height'),\n        scope: dom.getAttrib(cell, 'scope'),\n        celltype: getNodeName(cell),\n        class: dom.getAttrib(cell, 'class', ''),\n        halign: getHAlignment(editor, cell),\n        valign: getVAlignment(editor, cell),\n        ...hasAdvancedCellTab ? extractAdvancedStyles(cell) : {}\n      };\n    };\n\n    const getSelectedCells = (table, cells) => {\n      const warehouse = Warehouse.fromTable(table);\n      const allCells = Warehouse.justCells(warehouse);\n      const filtered = filter(allCells, cellA => exists(cells, cellB => eq(cellA.element, cellB)));\n      return map(filtered, cell => ({\n        element: cell.element.dom,\n        column: Warehouse.getColumnAt(warehouse, cell.column).map(col => col.element.dom)\n      }));\n    };\n    const updateSimpleProps$1 = (modifier, colModifier, data, shouldUpdate) => {\n      if (shouldUpdate('scope')) {\n        modifier.setAttrib('scope', data.scope);\n      }\n      if (shouldUpdate('class')) {\n        modifier.setAttrib('class', data.class);\n      }\n      if (shouldUpdate('height')) {\n        modifier.setStyle('height', addPxSuffix(data.height));\n      }\n      if (shouldUpdate('width')) {\n        colModifier.setStyle('width', addPxSuffix(data.width));\n      }\n    };\n    const updateAdvancedProps$1 = (modifier, data, shouldUpdate) => {\n      if (shouldUpdate('backgroundcolor')) {\n        modifier.setFormat('tablecellbackgroundcolor', data.backgroundcolor);\n      }\n      if (shouldUpdate('bordercolor')) {\n        modifier.setFormat('tablecellbordercolor', data.bordercolor);\n      }\n      if (shouldUpdate('borderstyle')) {\n        modifier.setFormat('tablecellborderstyle', data.borderstyle);\n      }\n      if (shouldUpdate('borderwidth')) {\n        modifier.setFormat('tablecellborderwidth', addPxSuffix(data.borderwidth));\n      }\n    };\n    const applyStyleData$1 = (editor, cells, data, wasChanged) => {\n      const isSingleCell = cells.length === 1;\n      each(cells, item => {\n        const cellElm = item.element;\n        const shouldOverrideCurrentValue = isSingleCell ? always : wasChanged;\n        const modifier = DomModifier.normal(editor, cellElm);\n        const colModifier = item.column.map(col => DomModifier.normal(editor, col)).getOr(modifier);\n        updateSimpleProps$1(modifier, colModifier, data, shouldOverrideCurrentValue);\n        if (hasAdvancedCellTab(editor)) {\n          updateAdvancedProps$1(modifier, data, shouldOverrideCurrentValue);\n        }\n        if (wasChanged('halign')) {\n          setAlign(editor, cellElm, data.halign);\n        }\n        if (wasChanged('valign')) {\n          setVAlign(editor, cellElm, data.valign);\n        }\n      });\n    };\n    const applyStructureData$1 = (editor, data) => {\n      editor.execCommand('mceTableCellType', false, {\n        type: data.celltype,\n        no_events: true\n      });\n    };\n    const applyCellData = (editor, cells, oldData, data) => {\n      const modifiedData = filter$1(data, (value, key) => oldData[key] !== value);\n      if (size(modifiedData) > 0 && cells.length >= 1) {\n        table(cells[0]).each(table => {\n          const selectedCells = getSelectedCells(table, cells);\n          const styleModified = size(filter$1(modifiedData, (_value, key) => key !== 'scope' && key !== 'celltype')) > 0;\n          const structureModified = has(modifiedData, 'celltype');\n          if (styleModified || has(modifiedData, 'scope')) {\n            applyStyleData$1(editor, selectedCells, data, curry(has, modifiedData));\n          }\n          if (structureModified) {\n            applyStructureData$1(editor, data);\n          }\n          fireTableModified(editor, table.dom, {\n            structure: structureModified,\n            style: styleModified\n          });\n        });\n      }\n    };\n    const onSubmitCellForm = (editor, cells, oldData, api) => {\n      const data = api.getData();\n      api.close();\n      editor.undoManager.transact(() => {\n        applyCellData(editor, cells, oldData, data);\n        editor.focus();\n      });\n    };\n    const getData$1 = (editor, cells) => {\n      const cellsData = table(cells[0]).map(table => map(getSelectedCells(table, cells), item => extractDataFromCellElement(editor, item.element, hasAdvancedCellTab(editor), item.column)));\n      return getSharedValues(cellsData.getOrDie());\n    };\n    const open$2 = editor => {\n      const cells = getCellsFromSelection(editor);\n      if (cells.length === 0) {\n        return;\n      }\n      const data = getData$1(editor, cells);\n      const dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            name: 'general',\n            items: getItems$2(editor)\n          },\n          getAdvancedTab(editor, 'cell')\n        ]\n      };\n      const dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: getItems$2(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Cell Properties',\n        size: 'normal',\n        body: hasAdvancedCellTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitCellForm, editor, cells, data)\n      });\n    };\n\n    const getClassList = editor => {\n      const classes = buildListItems(getRowClassList(editor));\n      if (classes.length > 0) {\n        return Optional.some({\n          name: 'class',\n          type: 'listbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Optional.none();\n    };\n    const formChildren = [\n      {\n        type: 'listbox',\n        name: 'type',\n        label: 'Row type',\n        items: [\n          {\n            text: 'Header',\n            value: 'header'\n          },\n          {\n            text: 'Body',\n            value: 'body'\n          },\n          {\n            text: 'Footer',\n            value: 'footer'\n          }\n        ]\n      },\n      {\n        type: 'listbox',\n        name: 'align',\n        label: 'Alignment',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        label: 'Height',\n        name: 'height',\n        type: 'input'\n      }\n    ];\n    const getItems$1 = editor => formChildren.concat(getClassList(editor).toArray());\n\n    const updateSimpleProps = (modifier, data, shouldUpdate) => {\n      if (shouldUpdate('class')) {\n        modifier.setAttrib('class', data.class);\n      }\n      if (shouldUpdate('height')) {\n        modifier.setStyle('height', addPxSuffix(data.height));\n      }\n    };\n    const updateAdvancedProps = (modifier, data, shouldUpdate) => {\n      if (shouldUpdate('backgroundcolor')) {\n        modifier.setStyle('background-color', data.backgroundcolor);\n      }\n      if (shouldUpdate('bordercolor')) {\n        modifier.setStyle('border-color', data.bordercolor);\n      }\n      if (shouldUpdate('borderstyle')) {\n        modifier.setStyle('border-style', data.borderstyle);\n      }\n    };\n    const applyStyleData = (editor, rows, data, wasChanged) => {\n      const isSingleRow = rows.length === 1;\n      const shouldOverrideCurrentValue = isSingleRow ? always : wasChanged;\n      each(rows, rowElm => {\n        const modifier = DomModifier.normal(editor, rowElm);\n        updateSimpleProps(modifier, data, shouldOverrideCurrentValue);\n        if (hasAdvancedRowTab(editor)) {\n          updateAdvancedProps(modifier, data, shouldOverrideCurrentValue);\n        }\n        if (wasChanged('align')) {\n          setAlign(editor, rowElm, data.align);\n        }\n      });\n    };\n    const applyStructureData = (editor, data) => {\n      editor.execCommand('mceTableRowType', false, {\n        type: data.type,\n        no_events: true\n      });\n    };\n    const applyRowData = (editor, rows, oldData, data) => {\n      const modifiedData = filter$1(data, (value, key) => oldData[key] !== value);\n      if (size(modifiedData) > 0) {\n        const typeModified = has(modifiedData, 'type');\n        const styleModified = typeModified ? size(modifiedData) > 1 : true;\n        if (styleModified) {\n          applyStyleData(editor, rows, data, curry(has, modifiedData));\n        }\n        if (typeModified) {\n          applyStructureData(editor, data);\n        }\n        table(SugarElement.fromDom(rows[0])).each(table => fireTableModified(editor, table.dom, {\n          structure: typeModified,\n          style: styleModified\n        }));\n      }\n    };\n    const onSubmitRowForm = (editor, rows, oldData, api) => {\n      const data = api.getData();\n      api.close();\n      editor.undoManager.transact(() => {\n        applyRowData(editor, rows, oldData, data);\n        editor.focus();\n      });\n    };\n    const open$1 = editor => {\n      const rows = getRowsFromSelection(getSelectionStart(editor), ephemera.selected);\n      if (rows.length === 0) {\n        return;\n      }\n      const rowsData = map(rows, rowElm => extractDataFromRowElement(editor, rowElm.dom, hasAdvancedRowTab(editor)));\n      const data = getSharedValues(rowsData);\n      const dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            name: 'general',\n            items: getItems$1(editor)\n          },\n          getAdvancedTab(editor, 'row')\n        ]\n      };\n      const dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: getItems$1(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Row Properties',\n        size: 'normal',\n        body: hasAdvancedRowTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitRowForm, editor, map(rows, r => r.dom), data)\n      });\n    };\n\n    const getItems = (editor, classes, insertNewTable) => {\n      const rowColCountItems = !insertNewTable ? [] : [\n        {\n          type: 'input',\n          name: 'cols',\n          label: 'Cols',\n          inputMode: 'numeric'\n        },\n        {\n          type: 'input',\n          name: 'rows',\n          label: 'Rows',\n          inputMode: 'numeric'\n        }\n      ];\n      const alwaysItems = [\n        {\n          type: 'input',\n          name: 'width',\n          label: 'Width'\n        },\n        {\n          type: 'input',\n          name: 'height',\n          label: 'Height'\n        }\n      ];\n      const appearanceItems = hasAppearanceOptions(editor) ? [\n        {\n          type: 'input',\n          name: 'cellspacing',\n          label: 'Cell spacing',\n          inputMode: 'numeric'\n        },\n        {\n          type: 'input',\n          name: 'cellpadding',\n          label: 'Cell padding',\n          inputMode: 'numeric'\n        },\n        {\n          type: 'input',\n          name: 'border',\n          label: 'Border width'\n        },\n        {\n          type: 'label',\n          label: 'Caption',\n          items: [{\n              type: 'checkbox',\n              name: 'caption',\n              label: 'Show caption'\n            }]\n        }\n      ] : [];\n      const alignmentItem = [{\n          type: 'listbox',\n          name: 'align',\n          label: 'Alignment',\n          items: [\n            {\n              text: 'None',\n              value: ''\n            },\n            {\n              text: 'Left',\n              value: 'left'\n            },\n            {\n              text: 'Center',\n              value: 'center'\n            },\n            {\n              text: 'Right',\n              value: 'right'\n            }\n          ]\n        }];\n      const classListItem = classes.length > 0 ? [{\n          type: 'listbox',\n          name: 'class',\n          label: 'Class',\n          items: classes\n        }] : [];\n      return rowColCountItems.concat(alwaysItems).concat(appearanceItems).concat(alignmentItem).concat(classListItem);\n    };\n\n    const styleTDTH = (dom, elm, name, value) => {\n      if (elm.tagName === 'TD' || elm.tagName === 'TH') {\n        if (isString(name) && isNonNullable(value)) {\n          dom.setStyle(elm, name, value);\n        } else {\n          dom.setStyles(elm, name);\n        }\n      } else {\n        if (elm.children) {\n          for (let i = 0; i < elm.children.length; i++) {\n            styleTDTH(dom, elm.children[i], name, value);\n          }\n        }\n      }\n    };\n    const applyDataToElement = (editor, tableElm, data, shouldApplyOnCell) => {\n      const dom = editor.dom;\n      const attrs = {};\n      const styles = {};\n      const shouldStyleWithCss$1 = shouldStyleWithCss(editor);\n      const hasAdvancedTableTab$1 = hasAdvancedTableTab(editor);\n      if (!isUndefined(data.class)) {\n        attrs.class = data.class;\n      }\n      styles.height = addPxSuffix(data.height);\n      if (shouldStyleWithCss$1) {\n        styles.width = addPxSuffix(data.width);\n      } else if (dom.getAttrib(tableElm, 'width')) {\n        attrs.width = removePxSuffix(data.width);\n      }\n      if (shouldStyleWithCss$1) {\n        styles['border-width'] = addPxSuffix(data.border);\n        styles['border-spacing'] = addPxSuffix(data.cellspacing);\n      } else {\n        attrs.border = data.border;\n        attrs.cellpadding = data.cellpadding;\n        attrs.cellspacing = data.cellspacing;\n      }\n      if (shouldStyleWithCss$1 && tableElm.children) {\n        const cellStyles = {};\n        if (shouldApplyOnCell.border) {\n          cellStyles['border-width'] = addPxSuffix(data.border);\n        }\n        if (shouldApplyOnCell.cellpadding) {\n          cellStyles.padding = addPxSuffix(data.cellpadding);\n        }\n        if (hasAdvancedTableTab$1 && shouldApplyOnCell.bordercolor) {\n          cellStyles['border-color'] = data.bordercolor;\n        }\n        if (!isEmpty$1(cellStyles)) {\n          for (let i = 0; i < tableElm.children.length; i++) {\n            styleTDTH(dom, tableElm.children[i], cellStyles);\n          }\n        }\n      }\n      if (hasAdvancedTableTab$1) {\n        const advData = data;\n        styles['background-color'] = advData.backgroundcolor;\n        styles['border-color'] = advData.bordercolor;\n        styles['border-style'] = advData.borderstyle;\n      }\n      dom.setStyles(tableElm, {\n        ...getDefaultStyles(editor),\n        ...styles\n      });\n      dom.setAttribs(tableElm, {\n        ...getDefaultAttributes(editor),\n        ...attrs\n      });\n    };\n    const onSubmitTableForm = (editor, tableElm, oldData, api) => {\n      const dom = editor.dom;\n      const data = api.getData();\n      const modifiedData = filter$1(data, (value, key) => oldData[key] !== value);\n      api.close();\n      if (data.class === '') {\n        delete data.class;\n      }\n      editor.undoManager.transact(() => {\n        if (!tableElm) {\n          const cols = toInt(data.cols).getOr(1);\n          const rows = toInt(data.rows).getOr(1);\n          editor.execCommand('mceInsertTable', false, {\n            rows,\n            columns: cols\n          });\n          tableElm = getSelectionCell(getSelectionStart(editor), getIsRoot(editor)).bind(cell => table(cell, getIsRoot(editor))).map(table => table.dom).getOrDie();\n        }\n        if (size(modifiedData) > 0) {\n          const applicableCellProperties = {\n            border: has(modifiedData, 'border'),\n            bordercolor: has(modifiedData, 'bordercolor'),\n            cellpadding: has(modifiedData, 'cellpadding')\n          };\n          applyDataToElement(editor, tableElm, data, applicableCellProperties);\n          const captionElm = dom.select('caption', tableElm)[0];\n          if (captionElm && !data.caption || !captionElm && data.caption) {\n            editor.execCommand('mceTableToggleCaption');\n          }\n          setAlign(editor, tableElm, data.align);\n        }\n        editor.focus();\n        editor.addVisual();\n        if (size(modifiedData) > 0) {\n          const captionModified = has(modifiedData, 'caption');\n          const styleModified = captionModified ? size(modifiedData) > 1 : true;\n          fireTableModified(editor, tableElm, {\n            structure: captionModified,\n            style: styleModified\n          });\n        }\n      });\n    };\n    const open = (editor, insertNewTable) => {\n      const dom = editor.dom;\n      let tableElm;\n      let data = extractDataFromSettings(editor, hasAdvancedTableTab(editor));\n      if (insertNewTable) {\n        data.cols = '1';\n        data.rows = '1';\n        if (hasAdvancedTableTab(editor)) {\n          data.borderstyle = '';\n          data.bordercolor = '';\n          data.backgroundcolor = '';\n        }\n      } else {\n        tableElm = dom.getParent(editor.selection.getStart(), 'table', editor.getBody());\n        if (tableElm) {\n          data = extractDataFromTableElement(editor, tableElm, hasAdvancedTableTab(editor));\n        } else {\n          if (hasAdvancedTableTab(editor)) {\n            data.borderstyle = '';\n            data.bordercolor = '';\n            data.backgroundcolor = '';\n          }\n        }\n      }\n      const classes = buildListItems(getTableClassList(editor));\n      if (classes.length > 0) {\n        if (data.class) {\n          data.class = data.class.replace(/\\s*mce\\-item\\-table\\s*/g, '');\n        }\n      }\n      const generalPanel = {\n        type: 'grid',\n        columns: 2,\n        items: getItems(editor, classes, insertNewTable)\n      };\n      const nonAdvancedForm = () => ({\n        type: 'panel',\n        items: [generalPanel]\n      });\n      const advancedForm = () => ({\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            name: 'general',\n            items: [generalPanel]\n          },\n          getAdvancedTab(editor, 'table')\n        ]\n      });\n      const dialogBody = hasAdvancedTableTab(editor) ? advancedForm() : nonAdvancedForm();\n      editor.windowManager.open({\n        title: 'Table Properties',\n        size: 'normal',\n        body: dialogBody,\n        onSubmit: curry(onSubmitTableForm, editor, tableElm, data),\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data\n      });\n    };\n\n    const registerCommands = editor => {\n      const runAction = f => {\n        if (isInEditableContext(getSelectionStart(editor))) {\n          f();\n        }\n      };\n      each$1({\n        mceTableProps: curry(open, editor, false),\n        mceTableRowProps: curry(open$1, editor),\n        mceTableCellProps: curry(open$2, editor),\n        mceInsertTableDialog: curry(open, editor, true)\n      }, (func, name) => editor.addCommand(name, () => runAction(func)));\n    };\n\n    const child = (scope, selector) => child$1(scope, selector).isSome();\n\n    const selection = identity;\n    const unmergable = selectedCells => {\n      const hasSpan = (elem, type) => getOpt(elem, type).exists(span => parseInt(span, 10) > 1);\n      const hasRowOrColSpan = elem => hasSpan(elem, 'rowspan') || hasSpan(elem, 'colspan');\n      return selectedCells.length > 0 && forall(selectedCells, hasRowOrColSpan) ? Optional.some(selectedCells) : Optional.none();\n    };\n    const mergable = (table, selectedCells, ephemera) => {\n      if (selectedCells.length <= 1) {\n        return Optional.none();\n      } else {\n        return retrieveBox(table, ephemera.firstSelectedSelector, ephemera.lastSelectedSelector).map(bounds => ({\n          bounds,\n          cells: selectedCells\n        }));\n      }\n    };\n\n    const noMenu = cell => ({\n      element: cell,\n      mergable: Optional.none(),\n      unmergable: Optional.none(),\n      selection: [cell]\n    });\n    const forMenu = (selectedCells, table, cell) => ({\n      element: cell,\n      mergable: mergable(table, selectedCells, ephemera),\n      unmergable: unmergable(selectedCells),\n      selection: selection(selectedCells)\n    });\n\n    const getSelectionTargets = editor => {\n      const targets = Cell(Optional.none());\n      const changeHandlers = Cell([]);\n      let selectionDetails = Optional.none();\n      const isCaption = isTag('caption');\n      const isDisabledForSelection = key => selectionDetails.forall(details => !details[key]);\n      const getStart = () => getSelectionCellOrCaption(getSelectionStart(editor), getIsRoot(editor));\n      const getEnd = () => getSelectionCellOrCaption(getSelectionEnd(editor), getIsRoot(editor));\n      const findTargets = () => getStart().bind(startCellOrCaption => flatten(lift2(table(startCellOrCaption), getEnd().bind(table), (startTable, endTable) => {\n        if (eq(startTable, endTable)) {\n          if (isCaption(startCellOrCaption)) {\n            return Optional.some(noMenu(startCellOrCaption));\n          } else {\n            return Optional.some(forMenu(getCellsFromSelection(editor), startTable, startCellOrCaption));\n          }\n        }\n        return Optional.none();\n      })));\n      const getExtractedDetails = targets => {\n        const tableOpt = table(targets.element);\n        return tableOpt.map(table => {\n          const warehouse = Warehouse.fromTable(table);\n          const selectedCells = onCells(warehouse, targets).getOr([]);\n          const locked = foldl(selectedCells, (acc, cell) => {\n            if (cell.isLocked) {\n              acc.onAny = true;\n              if (cell.column === 0) {\n                acc.onFirst = true;\n              } else if (cell.column + cell.colspan >= warehouse.grid.columns) {\n                acc.onLast = true;\n              }\n            }\n            return acc;\n          }, {\n            onAny: false,\n            onFirst: false,\n            onLast: false\n          });\n          return {\n            mergeable: onUnlockedMergable(warehouse, targets).isSome(),\n            unmergeable: onUnlockedUnmergable(warehouse, targets).isSome(),\n            locked\n          };\n        });\n      };\n      const resetTargets = () => {\n        targets.set(cached(findTargets)());\n        selectionDetails = targets.get().bind(getExtractedDetails);\n        each(changeHandlers.get(), call);\n      };\n      const setupHandler = handler => {\n        handler();\n        changeHandlers.set(changeHandlers.get().concat([handler]));\n        return () => {\n          changeHandlers.set(filter(changeHandlers.get(), h => h !== handler));\n        };\n      };\n      const onSetup = (api, isDisabled) => setupHandler(() => targets.get().fold(() => {\n        api.setEnabled(false);\n      }, targets => {\n        api.setEnabled(!isDisabled(targets) && editor.selection.isEditable());\n      }));\n      const onSetupWithToggle = (api, isDisabled, isActive) => setupHandler(() => targets.get().fold(() => {\n        api.setEnabled(false);\n        api.setActive(false);\n      }, targets => {\n        api.setEnabled(!isDisabled(targets) && editor.selection.isEditable());\n        api.setActive(isActive(targets));\n      }));\n      const isDisabledFromLocked = lockedDisable => selectionDetails.exists(details => details.locked[lockedDisable]);\n      const onSetupTable = api => onSetup(api, _ => false);\n      const onSetupCellOrRow = api => onSetup(api, targets => isCaption(targets.element));\n      const onSetupColumn = lockedDisable => api => onSetup(api, targets => isCaption(targets.element) || isDisabledFromLocked(lockedDisable));\n      const onSetupPasteable = getClipboardData => api => onSetup(api, targets => isCaption(targets.element) || getClipboardData().isNone());\n      const onSetupPasteableColumn = (getClipboardData, lockedDisable) => api => onSetup(api, targets => isCaption(targets.element) || getClipboardData().isNone() || isDisabledFromLocked(lockedDisable));\n      const onSetupMergeable = api => onSetup(api, _targets => isDisabledForSelection('mergeable'));\n      const onSetupUnmergeable = api => onSetup(api, _targets => isDisabledForSelection('unmergeable'));\n      const onSetupTableWithCaption = api => {\n        return onSetupWithToggle(api, never, targets => {\n          const tableOpt = table(targets.element, getIsRoot(editor));\n          return tableOpt.exists(table => child(table, 'caption'));\n        });\n      };\n      const onSetupTableHeaders = (command, headerType) => api => {\n        return onSetupWithToggle(api, targets => isCaption(targets.element), () => editor.queryCommandValue(command) === headerType);\n      };\n      const onSetupTableRowHeaders = onSetupTableHeaders('mceTableRowType', 'header');\n      const onSetupTableColumnHeaders = onSetupTableHeaders('mceTableColType', 'th');\n      editor.on('NodeChange ExecCommand TableSelectorChange', resetTargets);\n      return {\n        onSetupTable,\n        onSetupCellOrRow,\n        onSetupColumn,\n        onSetupPasteable,\n        onSetupPasteableColumn,\n        onSetupMergeable,\n        onSetupUnmergeable,\n        resetTargets,\n        onSetupTableWithCaption,\n        onSetupTableRowHeaders,\n        onSetupTableColumnHeaders,\n        targets: targets.get\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.FakeClipboard');\n\n    const tableTypeBase = 'x-tinymce/dom-table-';\n    const tableTypeRow = tableTypeBase + 'rows';\n    const tableTypeColumn = tableTypeBase + 'columns';\n    const getData = type => {\n      var _a;\n      const items = (_a = global.read()) !== null && _a !== void 0 ? _a : [];\n      return findMap(items, item => Optional.from(item.getType(type)));\n    };\n    const getRows = () => getData(tableTypeRow);\n    const getColumns = () => getData(tableTypeColumn);\n\n    const onSetupEditable$1 = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const addButtons = (editor, selectionTargets) => {\n      editor.ui.registry.addMenuButton('table', {\n        tooltip: 'Table',\n        icon: 'table',\n        onSetup: onSetupEditable$1(editor),\n        fetch: callback => callback('inserttable | cell row column | advtablesort | tableprops deletetable')\n      });\n      const cmd = command => () => editor.execCommand(command);\n      const addButtonIfRegistered = (name, spec) => {\n        if (editor.queryCommandSupported(spec.command)) {\n          editor.ui.registry.addButton(name, {\n            ...spec,\n            onAction: isFunction(spec.onAction) ? spec.onAction : cmd(spec.command)\n          });\n        }\n      };\n      const addToggleButtonIfRegistered = (name, spec) => {\n        if (editor.queryCommandSupported(spec.command)) {\n          editor.ui.registry.addToggleButton(name, {\n            ...spec,\n            onAction: isFunction(spec.onAction) ? spec.onAction : cmd(spec.command)\n          });\n        }\n      };\n      addButtonIfRegistered('tableprops', {\n        tooltip: 'Table properties',\n        command: 'mceTableProps',\n        icon: 'table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      addButtonIfRegistered('tabledelete', {\n        tooltip: 'Delete table',\n        command: 'mceTableDelete',\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      addButtonIfRegistered('tablecellprops', {\n        tooltip: 'Cell properties',\n        command: 'mceTableCellProps',\n        icon: 'table-cell-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      addButtonIfRegistered('tablemergecells', {\n        tooltip: 'Merge cells',\n        command: 'mceTableMergeCells',\n        icon: 'table-merge-cells',\n        onSetup: selectionTargets.onSetupMergeable\n      });\n      addButtonIfRegistered('tablesplitcells', {\n        tooltip: 'Split cell',\n        command: 'mceTableSplitCells',\n        icon: 'table-split-cells',\n        onSetup: selectionTargets.onSetupUnmergeable\n      });\n      addButtonIfRegistered('tableinsertrowbefore', {\n        tooltip: 'Insert row before',\n        command: 'mceTableInsertRowBefore',\n        icon: 'table-insert-row-above',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      addButtonIfRegistered('tableinsertrowafter', {\n        tooltip: 'Insert row after',\n        command: 'mceTableInsertRowAfter',\n        icon: 'table-insert-row-after',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      addButtonIfRegistered('tabledeleterow', {\n        tooltip: 'Delete row',\n        command: 'mceTableDeleteRow',\n        icon: 'table-delete-row',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      addButtonIfRegistered('tablerowprops', {\n        tooltip: 'Row properties',\n        command: 'mceTableRowProps',\n        icon: 'table-row-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      addButtonIfRegistered('tableinsertcolbefore', {\n        tooltip: 'Insert column before',\n        command: 'mceTableInsertColBefore',\n        icon: 'table-insert-column-before',\n        onSetup: selectionTargets.onSetupColumn('onFirst')\n      });\n      addButtonIfRegistered('tableinsertcolafter', {\n        tooltip: 'Insert column after',\n        command: 'mceTableInsertColAfter',\n        icon: 'table-insert-column-after',\n        onSetup: selectionTargets.onSetupColumn('onLast')\n      });\n      addButtonIfRegistered('tabledeletecol', {\n        tooltip: 'Delete column',\n        command: 'mceTableDeleteCol',\n        icon: 'table-delete-column',\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      addButtonIfRegistered('tablecutrow', {\n        tooltip: 'Cut row',\n        command: 'mceTableCutRow',\n        icon: 'cut-row',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      addButtonIfRegistered('tablecopyrow', {\n        tooltip: 'Copy row',\n        command: 'mceTableCopyRow',\n        icon: 'duplicate-row',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      addButtonIfRegistered('tablepasterowbefore', {\n        tooltip: 'Paste row before',\n        command: 'mceTablePasteRowBefore',\n        icon: 'paste-row-before',\n        onSetup: selectionTargets.onSetupPasteable(getRows)\n      });\n      addButtonIfRegistered('tablepasterowafter', {\n        tooltip: 'Paste row after',\n        command: 'mceTablePasteRowAfter',\n        icon: 'paste-row-after',\n        onSetup: selectionTargets.onSetupPasteable(getRows)\n      });\n      addButtonIfRegistered('tablecutcol', {\n        tooltip: 'Cut column',\n        command: 'mceTableCutCol',\n        icon: 'cut-column',\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      addButtonIfRegistered('tablecopycol', {\n        tooltip: 'Copy column',\n        command: 'mceTableCopyCol',\n        icon: 'duplicate-column',\n        onSetup: selectionTargets.onSetupColumn('onAny')\n      });\n      addButtonIfRegistered('tablepastecolbefore', {\n        tooltip: 'Paste column before',\n        command: 'mceTablePasteColBefore',\n        icon: 'paste-column-before',\n        onSetup: selectionTargets.onSetupPasteableColumn(getColumns, 'onFirst')\n      });\n      addButtonIfRegistered('tablepastecolafter', {\n        tooltip: 'Paste column after',\n        command: 'mceTablePasteColAfter',\n        icon: 'paste-column-after',\n        onSetup: selectionTargets.onSetupPasteableColumn(getColumns, 'onLast')\n      });\n      addButtonIfRegistered('tableinsertdialog', {\n        tooltip: 'Insert table',\n        command: 'mceInsertTableDialog',\n        icon: 'table',\n        onSetup: onSetupEditable$1(editor)\n      });\n      const tableClassList = filterNoneItem(getTableClassList(editor));\n      if (tableClassList.length !== 0 && editor.queryCommandSupported('mceTableToggleClass')) {\n        editor.ui.registry.addMenuButton('tableclass', {\n          icon: 'table-classes',\n          tooltip: 'Table styles',\n          fetch: generateMenuItemsCallback(editor, tableClassList, 'tableclass', value => editor.execCommand('mceTableToggleClass', false, value)),\n          onSetup: selectionTargets.onSetupTable\n        });\n      }\n      const tableCellClassList = filterNoneItem(getCellClassList(editor));\n      if (tableCellClassList.length !== 0 && editor.queryCommandSupported('mceTableCellToggleClass')) {\n        editor.ui.registry.addMenuButton('tablecellclass', {\n          icon: 'table-cell-classes',\n          tooltip: 'Cell styles',\n          fetch: generateMenuItemsCallback(editor, tableCellClassList, 'tablecellclass', value => editor.execCommand('mceTableCellToggleClass', false, value)),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n      }\n      if (editor.queryCommandSupported('mceTableApplyCellStyle')) {\n        editor.ui.registry.addMenuButton('tablecellvalign', {\n          icon: 'vertical-align',\n          tooltip: 'Vertical align',\n          fetch: generateMenuItemsCallback(editor, verticalAlignValues, 'tablecellverticalalign', applyTableCellStyle(editor, 'vertical-align')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addMenuButton('tablecellborderwidth', {\n          icon: 'border-width',\n          tooltip: 'Border width',\n          fetch: generateMenuItemsCallback(editor, getTableBorderWidths(editor), 'tablecellborderwidth', applyTableCellStyle(editor, 'border-width')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addMenuButton('tablecellborderstyle', {\n          icon: 'border-style',\n          tooltip: 'Border style',\n          fetch: generateMenuItemsCallback(editor, getTableBorderStyles(editor), 'tablecellborderstyle', applyTableCellStyle(editor, 'border-style')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addMenuButton('tablecellbackgroundcolor', {\n          icon: 'cell-background-color',\n          tooltip: 'Background color',\n          fetch: callback => callback(buildColorMenu(editor, getTableBackgroundColorMap(editor), 'background-color')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addMenuButton('tablecellbordercolor', {\n          icon: 'cell-border-color',\n          tooltip: 'Border color',\n          fetch: callback => callback(buildColorMenu(editor, getTableBorderColorMap(editor), 'border-color')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n      }\n      addToggleButtonIfRegistered('tablecaption', {\n        tooltip: 'Table caption',\n        icon: 'table-caption',\n        command: 'mceTableToggleCaption',\n        onSetup: selectionTargets.onSetupTableWithCaption\n      });\n      addToggleButtonIfRegistered('tablerowheader', {\n        tooltip: 'Row header',\n        icon: 'table-top-header',\n        command: 'mceTableRowType',\n        onAction: changeRowHeader(editor),\n        onSetup: selectionTargets.onSetupTableRowHeaders\n      });\n      addToggleButtonIfRegistered('tablecolheader', {\n        tooltip: 'Column header',\n        icon: 'table-left-header',\n        command: 'mceTableColType',\n        onAction: changeColumnHeader(editor),\n        onSetup: selectionTargets.onSetupTableColumnHeaders\n      });\n    };\n    const addToolbars = editor => {\n      const isEditableTable = table => editor.dom.is(table, 'table') && editor.getBody().contains(table) && editor.dom.isEditable(table.parentNode);\n      const toolbar = getToolbar(editor);\n      if (toolbar.length > 0) {\n        editor.ui.registry.addContextToolbar('table', {\n          predicate: isEditableTable,\n          items: toolbar,\n          scope: 'node',\n          position: 'node'\n        });\n      }\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const addMenuItems = (editor, selectionTargets) => {\n      const cmd = command => () => editor.execCommand(command);\n      const addMenuIfRegistered = (name, spec) => {\n        if (editor.queryCommandSupported(spec.command)) {\n          editor.ui.registry.addMenuItem(name, {\n            ...spec,\n            onAction: isFunction(spec.onAction) ? spec.onAction : cmd(spec.command)\n          });\n          return true;\n        } else {\n          return false;\n        }\n      };\n      const addToggleMenuIfRegistered = (name, spec) => {\n        if (editor.queryCommandSupported(spec.command)) {\n          editor.ui.registry.addToggleMenuItem(name, {\n            ...spec,\n            onAction: isFunction(spec.onAction) ? spec.onAction : cmd(spec.command)\n          });\n        }\n      };\n      const insertTableAction = data => {\n        editor.execCommand('mceInsertTable', false, {\n          rows: data.numRows,\n          columns: data.numColumns\n        });\n      };\n      const hasRowMenuItems = [\n        addMenuIfRegistered('tableinsertrowbefore', {\n          text: 'Insert row before',\n          icon: 'table-insert-row-above',\n          command: 'mceTableInsertRowBefore',\n          onSetup: selectionTargets.onSetupCellOrRow\n        }),\n        addMenuIfRegistered('tableinsertrowafter', {\n          text: 'Insert row after',\n          icon: 'table-insert-row-after',\n          command: 'mceTableInsertRowAfter',\n          onSetup: selectionTargets.onSetupCellOrRow\n        }),\n        addMenuIfRegistered('tabledeleterow', {\n          text: 'Delete row',\n          icon: 'table-delete-row',\n          command: 'mceTableDeleteRow',\n          onSetup: selectionTargets.onSetupCellOrRow\n        }),\n        addMenuIfRegistered('tablerowprops', {\n          text: 'Row properties',\n          icon: 'table-row-properties',\n          command: 'mceTableRowProps',\n          onSetup: selectionTargets.onSetupCellOrRow\n        }),\n        addMenuIfRegistered('tablecutrow', {\n          text: 'Cut row',\n          icon: 'cut-row',\n          command: 'mceTableCutRow',\n          onSetup: selectionTargets.onSetupCellOrRow\n        }),\n        addMenuIfRegistered('tablecopyrow', {\n          text: 'Copy row',\n          icon: 'duplicate-row',\n          command: 'mceTableCopyRow',\n          onSetup: selectionTargets.onSetupCellOrRow\n        }),\n        addMenuIfRegistered('tablepasterowbefore', {\n          text: 'Paste row before',\n          icon: 'paste-row-before',\n          command: 'mceTablePasteRowBefore',\n          onSetup: selectionTargets.onSetupPasteable(getRows)\n        }),\n        addMenuIfRegistered('tablepasterowafter', {\n          text: 'Paste row after',\n          icon: 'paste-row-after',\n          command: 'mceTablePasteRowAfter',\n          onSetup: selectionTargets.onSetupPasteable(getRows)\n        })\n      ];\n      const hasColumnMenuItems = [\n        addMenuIfRegistered('tableinsertcolumnbefore', {\n          text: 'Insert column before',\n          icon: 'table-insert-column-before',\n          command: 'mceTableInsertColBefore',\n          onSetup: selectionTargets.onSetupColumn('onFirst')\n        }),\n        addMenuIfRegistered('tableinsertcolumnafter', {\n          text: 'Insert column after',\n          icon: 'table-insert-column-after',\n          command: 'mceTableInsertColAfter',\n          onSetup: selectionTargets.onSetupColumn('onLast')\n        }),\n        addMenuIfRegistered('tabledeletecolumn', {\n          text: 'Delete column',\n          icon: 'table-delete-column',\n          command: 'mceTableDeleteCol',\n          onSetup: selectionTargets.onSetupColumn('onAny')\n        }),\n        addMenuIfRegistered('tablecutcolumn', {\n          text: 'Cut column',\n          icon: 'cut-column',\n          command: 'mceTableCutCol',\n          onSetup: selectionTargets.onSetupColumn('onAny')\n        }),\n        addMenuIfRegistered('tablecopycolumn', {\n          text: 'Copy column',\n          icon: 'duplicate-column',\n          command: 'mceTableCopyCol',\n          onSetup: selectionTargets.onSetupColumn('onAny')\n        }),\n        addMenuIfRegistered('tablepastecolumnbefore', {\n          text: 'Paste column before',\n          icon: 'paste-column-before',\n          command: 'mceTablePasteColBefore',\n          onSetup: selectionTargets.onSetupPasteableColumn(getColumns, 'onFirst')\n        }),\n        addMenuIfRegistered('tablepastecolumnafter', {\n          text: 'Paste column after',\n          icon: 'paste-column-after',\n          command: 'mceTablePasteColAfter',\n          onSetup: selectionTargets.onSetupPasteableColumn(getColumns, 'onLast')\n        })\n      ];\n      const hasCellMenuItems = [\n        addMenuIfRegistered('tablecellprops', {\n          text: 'Cell properties',\n          icon: 'table-cell-properties',\n          command: 'mceTableCellProps',\n          onSetup: selectionTargets.onSetupCellOrRow\n        }),\n        addMenuIfRegistered('tablemergecells', {\n          text: 'Merge cells',\n          icon: 'table-merge-cells',\n          command: 'mceTableMergeCells',\n          onSetup: selectionTargets.onSetupMergeable\n        }),\n        addMenuIfRegistered('tablesplitcells', {\n          text: 'Split cell',\n          icon: 'table-split-cells',\n          command: 'mceTableSplitCells',\n          onSetup: selectionTargets.onSetupUnmergeable\n        })\n      ];\n      if (!hasTableGrid(editor)) {\n        editor.ui.registry.addMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          onAction: cmd('mceInsertTableDialog'),\n          onSetup: onSetupEditable(editor)\n        });\n      } else {\n        editor.ui.registry.addNestedMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          getSubmenuItems: () => [{\n              type: 'fancymenuitem',\n              fancytype: 'inserttable',\n              onAction: insertTableAction\n            }],\n          onSetup: onSetupEditable(editor)\n        });\n      }\n      editor.ui.registry.addMenuItem('inserttabledialog', {\n        text: 'Insert table',\n        icon: 'table',\n        onAction: cmd('mceInsertTableDialog'),\n        onSetup: onSetupEditable(editor)\n      });\n      addMenuIfRegistered('tableprops', {\n        text: 'Table properties',\n        onSetup: selectionTargets.onSetupTable,\n        command: 'mceTableProps'\n      });\n      addMenuIfRegistered('deletetable', {\n        text: 'Delete table',\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable,\n        command: 'mceTableDelete'\n      });\n      if (contains(hasRowMenuItems, true)) {\n        editor.ui.registry.addNestedMenuItem('row', {\n          type: 'nestedmenuitem',\n          text: 'Row',\n          getSubmenuItems: constant('tableinsertrowbefore tableinsertrowafter tabledeleterow tablerowprops | tablecutrow tablecopyrow tablepasterowbefore tablepasterowafter')\n        });\n      }\n      if (contains(hasColumnMenuItems, true)) {\n        editor.ui.registry.addNestedMenuItem('column', {\n          type: 'nestedmenuitem',\n          text: 'Column',\n          getSubmenuItems: constant('tableinsertcolumnbefore tableinsertcolumnafter tabledeletecolumn | tablecutcolumn tablecopycolumn tablepastecolumnbefore tablepastecolumnafter')\n        });\n      }\n      if (contains(hasCellMenuItems, true)) {\n        editor.ui.registry.addNestedMenuItem('cell', {\n          type: 'nestedmenuitem',\n          text: 'Cell',\n          getSubmenuItems: constant('tablecellprops tablemergecells tablesplitcells')\n        });\n      }\n      editor.ui.registry.addContextMenu('table', {\n        update: () => {\n          selectionTargets.resetTargets();\n          return selectionTargets.targets().fold(constant(''), targets => {\n            if (name(targets.element) === 'caption') {\n              return 'tableprops deletetable';\n            } else {\n              return 'cell row column | advtablesort | tableprops deletetable';\n            }\n          });\n        }\n      });\n      const tableClassList = filterNoneItem(getTableClassList(editor));\n      if (tableClassList.length !== 0 && editor.queryCommandSupported('mceTableToggleClass')) {\n        editor.ui.registry.addNestedMenuItem('tableclass', {\n          icon: 'table-classes',\n          text: 'Table styles',\n          getSubmenuItems: () => buildMenuItems(editor, tableClassList, 'tableclass', value => editor.execCommand('mceTableToggleClass', false, value)),\n          onSetup: selectionTargets.onSetupTable\n        });\n      }\n      const tableCellClassList = filterNoneItem(getCellClassList(editor));\n      if (tableCellClassList.length !== 0 && editor.queryCommandSupported('mceTableCellToggleClass')) {\n        editor.ui.registry.addNestedMenuItem('tablecellclass', {\n          icon: 'table-cell-classes',\n          text: 'Cell styles',\n          getSubmenuItems: () => buildMenuItems(editor, tableCellClassList, 'tablecellclass', value => editor.execCommand('mceTableCellToggleClass', false, value)),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n      }\n      if (editor.queryCommandSupported('mceTableApplyCellStyle')) {\n        editor.ui.registry.addNestedMenuItem('tablecellvalign', {\n          icon: 'vertical-align',\n          text: 'Vertical align',\n          getSubmenuItems: () => buildMenuItems(editor, verticalAlignValues, 'tablecellverticalalign', applyTableCellStyle(editor, 'vertical-align')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addNestedMenuItem('tablecellborderwidth', {\n          icon: 'border-width',\n          text: 'Border width',\n          getSubmenuItems: () => buildMenuItems(editor, getTableBorderWidths(editor), 'tablecellborderwidth', applyTableCellStyle(editor, 'border-width')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addNestedMenuItem('tablecellborderstyle', {\n          icon: 'border-style',\n          text: 'Border style',\n          getSubmenuItems: () => buildMenuItems(editor, getTableBorderStyles(editor), 'tablecellborderstyle', applyTableCellStyle(editor, 'border-style')),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addNestedMenuItem('tablecellbackgroundcolor', {\n          icon: 'cell-background-color',\n          text: 'Background color',\n          getSubmenuItems: () => buildColorMenu(editor, getTableBackgroundColorMap(editor), 'background-color'),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n        editor.ui.registry.addNestedMenuItem('tablecellbordercolor', {\n          icon: 'cell-border-color',\n          text: 'Border color',\n          getSubmenuItems: () => buildColorMenu(editor, getTableBorderColorMap(editor), 'border-color'),\n          onSetup: selectionTargets.onSetupCellOrRow\n        });\n      }\n      addToggleMenuIfRegistered('tablecaption', {\n        icon: 'table-caption',\n        text: 'Table caption',\n        command: 'mceTableToggleCaption',\n        onSetup: selectionTargets.onSetupTableWithCaption\n      });\n      addToggleMenuIfRegistered('tablerowheader', {\n        text: 'Row header',\n        icon: 'table-top-header',\n        command: 'mceTableRowType',\n        onAction: changeRowHeader(editor),\n        onSetup: selectionTargets.onSetupTableRowHeaders\n      });\n      addToggleMenuIfRegistered('tablecolheader', {\n        text: 'Column header',\n        icon: 'table-left-header',\n        command: 'mceTableColType',\n        onAction: changeColumnHeader(editor),\n        onSetup: selectionTargets.onSetupTableRowHeaders\n      });\n    };\n\n    const Plugin = editor => {\n      const selectionTargets = getSelectionTargets(editor);\n      register(editor);\n      registerCommands(editor);\n      addMenuItems(editor, selectionTargets);\n      addButtons(editor, selectionTargets);\n      addToolbars(editor);\n    };\n    var Plugin$1 = () => {\n      global$3.add('table', Plugin);\n    };\n\n    Plugin$1();\n\n})();\n"],"names":["global$3","hasProto","v","constructor","predicate","_a","typeOf","x","proto","isType$1","type","value","isSimpleType","eq$1","t","a","isString","isArray","isBoolean","isUndefined","isNullable","isNonNullable","isFunction","isNumber","noop","compose1","fbc","fab","constant","identity","tripleEquals","b","curry","fn","initialArgs","restArgs","all","call","f","never","always","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","keys","hasOwnProperty","each$1","obj","props","k","len","i","objAcc","r","internalFilter","pred","onTrue","onFalse","filter$1","mapToArray","name","values","size","get$4","key","has","hasNonNullableKey","isEmpty$1","nativeIndexOf","nativePush","rawIndexOf","ts","contains","xs","exists","range","num","map","each","eachr","partition","pass","fail","filter","foldr","acc","foldl","findUntil","until","find","flatten$1","bind","forall","mapToObject","get$3","head","last","findMap","arr","COMMENT","DOCUMENT","DOCUMENT_FRAGMENT","ELEMENT","TEXT","fromHtml","html","scope","div","fromDom$1","fromTag","node","fromText","text","SugarElement","docElm","y","is$2","element","selector","dom","elem","bypassSelector","all$1","base","one","eq","e1","e2","is$1","isType","isComment","isElement","isText","isDocument","isDocumentFragment","isTag","e","owner","documentOrOwner","dos","parent","parents","isRoot","stop","ret","rawParent","p","prevSibling","nextSibling","children$3","child$3","index","cs","firstChild","isShadowRoot","getRootNode","getShadowRoot","getShadowHost","inBody","doc","ClosestOrAncestor","is","ancestor","ancestor$1","el","closest$2","s","test","child$2","child$1","descendant","closest$1","closest","target","isEditable","assumeEditable","editable","getRaw$1","getNodeName","elm","getBody","editor","getIsRoot","removePxSuffix","addPxSuffix","getSelectionStart","getSelectionEnd","isInEditableContext","cell","children$2","descendants$1","result","children$1","descendants","rawSet","set$2","setAll","attrs","get$2","getOpt","remove$2","clone","attr","lhs","rhs","comparator","left","cat","push","lift2","oa","ob","flatten","oot","someIf","removeFromStart","str","numChars","checkRange","substr","start","removeLeading","prefix","startsWith","trim","isNotEmpty","isEmpty","toInt","radix","toFloat","isSupported","internalSet","property","internalRemove","set$1","get$1","getUnsafeProperty","getRaw","raw","remove$1","getAttrValue","fallback","firstLayer","filterFirstLayer","validSectionList","isValidSection","parentName","grid","rows","columns","detail","rowspan","colspan","extended","row","column","isLocked","rowdetail","cells","section","bounds","startRow","startCol","finishRow","finishCol","columnext","colgroup","lookup","tags","isRootOrUpperTable","columnGroups","columnGroup","table","fromRowsOrColGroups","elems","getSection","cells$1","getParentSection","group","fromTable$1","rows$1","LOCKED_COL_ATTR","getLockedColumnsFromTable","lockedColStr","lockedCols","getAt","warehouse","findItem","item","filtered","filterItems","generateColumns","rowData","columnsGroup","columnIndex","colIndex","generate$1","list","access","lockedColumns","maxRows","maxColumns","rowCount","colgroupRows","currentRow","rowCell","current","occupiedColumnPosition","occupiedRowPosition","rowPosition","columnPosition","newpos","colgroups","Warehouse","w","global$2","getTDTHOverallStyle","firstChildStyle","currentStyle","setAlign","align","setVAlign","fireTableModified","data","toNumber","px","getProp","calcContentBoxSize","upper","lower","paddingUpper","paddingLower","borderUpper","borderLower","getCalculatedWidth","boxSizing","width","getInner","global$1","defaultTableToolbar","defaultCellBorderWidths","defaultCellBorderStyles","defaultWidth","getPixelForcedWidth","parentBlock","determineDefaultStyles","defaultStyles","isResponsiveForced","shouldStyleWithCss","isPixelsForced","determineDefaultAttributes","defaultAttributes","option","register","registerOption","getTableSizingMode","getTableBorderWidths","getTableBorderStyles","hasAdvancedCellTab","hasAdvancedRowTab","hasAdvancedTableTab","hasAppearanceOptions","hasTableGrid","getCellClassList","getRowClassList","getTableClassList","getToolbar","getTableBackgroundColorMap","getTableBorderColorMap","getDefaultStyles","options","getDefaultAttributes","isWithin","isRectangular","isRect","detailIsWithin","j","getBounds","detailA","detailB","getAnyBox","startCell","finishCell","startCoords","finishCoords","sc","fc","getBox$1","getBox","first","getWarehouse","before","marker","after$1","append$1","prepend","wrap","wrapper","after","elements","append","remove","unwrap","children","api","get","getOption","set","TagBoundaries","DomUniverse","clone$1","document","isBoundary","isEmptyTag","isNonEditable","comparePosition","other","copyAttributesTo","source","destination","as","isSpecial","getLanguage","universe","look","tail","oneAll","unsafeOne","commonElement","end","sharedOne$1","sharedOne","_universe","lookupTable","container","retrieve$1","sels","getEdges","firstSelectedSelector","lastSelectedSelector","retrieve","retrieveBox","edges","sectionSelector","firstAncestor","lastAncestor","fA","lA","fromDom","nodes","strSelected","strFirstSelected","strFirstSelectedSelector","strLastSelected","strLastSelectedSelector","ephemera","getSelectionCellFallback","getSelectionFromSelector","initCell","cellName","getSelectionCellOrCaption","getSelectionCell","getCellsFromSelection","getRowsFromSelection","selected","cellOpt","rowsOpt","verticalAlignValues","hexColour","normalizeHex","shorthandRegex","longformRegex","isHexString","hex","fromString$1","toHex","component","fromRgba","rgbaColour","rgbRegex","rgbaRegex","red","green","blue","alpha","fromStringValues","g","fromString","rgbaString","rgbMatch","rgbaMatch","anyToHex","color","canvas","canvasContext","rgba","rgbaToHexString","h","Cell","initial","singleton","doRevoke","subject","revoke","unbindable","onSetupToggle","formatName","formatValue","boundCallback","isNone","init","selectedCells","checkNode","match","isListGroup","buildListItems","items","buildMenuItems","format","onAction","applyTableCellStyle","style","filterNoneItem","generateMenuItemsCallback","callback","buildColorMenu","colorList","colorMap","entry","changeRowHeader","newType","changeColumnHeader","getClassList$1","classes","getItems$2","getAdvancedTab","dialogName","advTabItems","DomModifier","prop","isHeaderCell","getRowHeaderType","isHeaderRow","isHeaderCells","getRowType$1","findCommonCellType","headerCells","findCommonRowType","rowTypes","hasHeader","hasFooter","hasBody","cached","called","args","findInWarehouse","extractCells","details","cell$1","lc","onMergable","_warehouse","onUnmergable","onCells","isUnlockedTableCell","allUnlocked","onUnlockedMergable","mergeable","onUnlockedUnmergable","cases","constructors","adt","acase","count","keys$1","argLength","foldArgs","branches","branchKeys","reqKey","label","getRowsType","house","lastSelectedCell","minRowRange","maxRowRange","selectedRows","rgbToHex","extractAdvancedStyles","getSharedValues","baseData","comparisonData","itemValue","itemKey","comparisonValue","getAlignment","formats","getHAlignment","getVAlignment","extractDataFromSettings","hasAdvTableTab","extractAdvancedStyleData","defaultData","getBorder","borderWidth","border","advStyle","getCellPaddingCellSpacing","spacing","cellspacing","padding","cellpadding","getRowType","extractDataFromTableElement","optBorderWidth","extractDataFromRowElement","extractDataFromCellElement","colElm","getStyle","getSelectedCells","allCells","cellA","cellB","col","updateSimpleProps$1","modifier","colModifier","shouldUpdate","updateAdvancedProps$1","applyStyleData$1","wasChanged","isSingleCell","cellElm","shouldOverrideCurrentValue","applyStructureData$1","applyCellData","oldData","modifiedData","styleModified","_value","structureModified","onSubmitCellForm","getData$1","cellsData","open$2","dialogTabPanel","dialogPanel","getClassList","formChildren","getItems$1","updateSimpleProps","updateAdvancedProps","applyStyleData","rowElm","applyStructureData","applyRowData","typeModified","onSubmitRowForm","open$1","rowsData","getItems","insertNewTable","rowColCountItems","alwaysItems","appearanceItems","alignmentItem","classListItem","styleTDTH","applyDataToElement","tableElm","shouldApplyOnCell","styles","shouldStyleWithCss$1","hasAdvancedTableTab$1","cellStyles","advData","onSubmitTableForm","cols","applicableCellProperties","captionElm","captionModified","open","generalPanel","nonAdvancedForm","advancedForm","dialogBody","registerCommands","runAction","func","child","selection","unmergable","hasSpan","span","hasRowOrColSpan","mergable","noMenu","forMenu","getSelectionTargets","targets","changeHandlers","selectionDetails","isCaption","isDisabledForSelection","getStart","getEnd","findTargets","startCellOrCaption","startTable","endTable","getExtractedDetails","locked","resetTargets","setupHandler","handler","onSetup","isDisabled","onSetupWithToggle","isActive","isDisabledFromLocked","lockedDisable","onSetupTable","onSetupCellOrRow","onSetupColumn","onSetupPasteable","getClipboardData","onSetupPasteableColumn","onSetupMergeable","_targets","onSetupUnmergeable","onSetupTableWithCaption","onSetupTableHeaders","command","headerType","onSetupTableRowHeaders","onSetupTableColumnHeaders","global","tableTypeBase","tableTypeRow","tableTypeColumn","getData","getRows","getColumns","onSetupEditable$1","nodeChanged","addButtons","selectionTargets","cmd","addButtonIfRegistered","spec","addToggleButtonIfRegistered","tableClassList","tableCellClassList","addToolbars","isEditableTable","toolbar","onSetupEditable","addMenuItems","addMenuIfRegistered","addToggleMenuIfRegistered","insertTableAction","hasRowMenuItems","hasColumnMenuItems","hasCellMenuItems","Plugin","Plugin$1"],"mappings":"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","x_google_ignoreList":[0]}