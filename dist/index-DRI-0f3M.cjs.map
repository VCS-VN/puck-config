{"version":3,"file":"index-DRI-0f3M.cjs","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/charmap/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const fireInsertCustomChar = (editor, chr) => {\n      return editor.dispatch('insertCustomChar', { chr });\n    };\n\n    const insertChar = (editor, chr) => {\n      const evtChr = fireInsertCustomChar(editor, chr).chr;\n      editor.execCommand('mceInsertContent', false, evtChr);\n    };\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const isArray$1 = isType('array');\n    const isNull = eq(null);\n    const isUndefined = eq(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const never = constant(false);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativePush = Array.prototype.push;\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const each = (xs, f) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        f(x, i);\n      }\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const flatten = xs => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray$1(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    const bind = (xs, f) => flatten(map(xs, f));\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const option = name => editor => editor.options.get(name);\n    const register$2 = editor => {\n      const registerOption = editor.options.register;\n      const charMapProcessor = value => isFunction(value) || isArray$1(value);\n      registerOption('charmap', { processor: charMapProcessor });\n      registerOption('charmap_append', { processor: charMapProcessor });\n    };\n    const getCharMap$1 = option('charmap');\n    const getCharMapAppend = option('charmap_append');\n\n    const isArray = global.isArray;\n    const UserDefined = 'User Defined';\n    const getDefaultCharMap = () => {\n      return [\n        {\n          name: 'Currency',\n          characters: [\n            [\n              36,\n              'dollar sign'\n            ],\n            [\n              162,\n              'cent sign'\n            ],\n            [\n              8364,\n              'euro sign'\n            ],\n            [\n              163,\n              'pound sign'\n            ],\n            [\n              165,\n              'yen sign'\n            ],\n            [\n              164,\n              'currency sign'\n            ],\n            [\n              8352,\n              'euro-currency sign'\n            ],\n            [\n              8353,\n              'colon sign'\n            ],\n            [\n              8354,\n              'cruzeiro sign'\n            ],\n            [\n              8355,\n              'french franc sign'\n            ],\n            [\n              8356,\n              'lira sign'\n            ],\n            [\n              8357,\n              'mill sign'\n            ],\n            [\n              8358,\n              'naira sign'\n            ],\n            [\n              8359,\n              'peseta sign'\n            ],\n            [\n              8360,\n              'rupee sign'\n            ],\n            [\n              8361,\n              'won sign'\n            ],\n            [\n              8362,\n              'new sheqel sign'\n            ],\n            [\n              8363,\n              'dong sign'\n            ],\n            [\n              8365,\n              'kip sign'\n            ],\n            [\n              8366,\n              'tugrik sign'\n            ],\n            [\n              8367,\n              'drachma sign'\n            ],\n            [\n              8368,\n              'german penny symbol'\n            ],\n            [\n              8369,\n              'peso sign'\n            ],\n            [\n              8370,\n              'guarani sign'\n            ],\n            [\n              8371,\n              'austral sign'\n            ],\n            [\n              8372,\n              'hryvnia sign'\n            ],\n            [\n              8373,\n              'cedi sign'\n            ],\n            [\n              8374,\n              'livre tournois sign'\n            ],\n            [\n              8375,\n              'spesmilo sign'\n            ],\n            [\n              8376,\n              'tenge sign'\n            ],\n            [\n              8377,\n              'indian rupee sign'\n            ],\n            [\n              8378,\n              'turkish lira sign'\n            ],\n            [\n              8379,\n              'nordic mark sign'\n            ],\n            [\n              8380,\n              'manat sign'\n            ],\n            [\n              8381,\n              'ruble sign'\n            ],\n            [\n              20870,\n              'yen character'\n            ],\n            [\n              20803,\n              'yuan character'\n            ],\n            [\n              22291,\n              'yuan character, in hong kong and taiwan'\n            ],\n            [\n              22278,\n              'yen/yuan character variant one'\n            ]\n          ]\n        },\n        {\n          name: 'Text',\n          characters: [\n            [\n              169,\n              'copyright sign'\n            ],\n            [\n              174,\n              'registered sign'\n            ],\n            [\n              8482,\n              'trade mark sign'\n            ],\n            [\n              8240,\n              'per mille sign'\n            ],\n            [\n              181,\n              'micro sign'\n            ],\n            [\n              183,\n              'middle dot'\n            ],\n            [\n              8226,\n              'bullet'\n            ],\n            [\n              8230,\n              'three dot leader'\n            ],\n            [\n              8242,\n              'minutes / feet'\n            ],\n            [\n              8243,\n              'seconds / inches'\n            ],\n            [\n              167,\n              'section sign'\n            ],\n            [\n              182,\n              'paragraph sign'\n            ],\n            [\n              223,\n              'sharp s / ess-zed'\n            ]\n          ]\n        },\n        {\n          name: 'Quotations',\n          characters: [\n            [\n              8249,\n              'single left-pointing angle quotation mark'\n            ],\n            [\n              8250,\n              'single right-pointing angle quotation mark'\n            ],\n            [\n              171,\n              'left pointing guillemet'\n            ],\n            [\n              187,\n              'right pointing guillemet'\n            ],\n            [\n              8216,\n              'left single quotation mark'\n            ],\n            [\n              8217,\n              'right single quotation mark'\n            ],\n            [\n              8220,\n              'left double quotation mark'\n            ],\n            [\n              8221,\n              'right double quotation mark'\n            ],\n            [\n              8218,\n              'single low-9 quotation mark'\n            ],\n            [\n              8222,\n              'double low-9 quotation mark'\n            ],\n            [\n              60,\n              'less-than sign'\n            ],\n            [\n              62,\n              'greater-than sign'\n            ],\n            [\n              8804,\n              'less-than or equal to'\n            ],\n            [\n              8805,\n              'greater-than or equal to'\n            ],\n            [\n              8211,\n              'en dash'\n            ],\n            [\n              8212,\n              'em dash'\n            ],\n            [\n              175,\n              'macron'\n            ],\n            [\n              8254,\n              'overline'\n            ],\n            [\n              164,\n              'currency sign'\n            ],\n            [\n              166,\n              'broken bar'\n            ],\n            [\n              168,\n              'diaeresis'\n            ],\n            [\n              161,\n              'inverted exclamation mark'\n            ],\n            [\n              191,\n              'turned question mark'\n            ],\n            [\n              710,\n              'circumflex accent'\n            ],\n            [\n              732,\n              'small tilde'\n            ],\n            [\n              176,\n              'degree sign'\n            ],\n            [\n              8722,\n              'minus sign'\n            ],\n            [\n              177,\n              'plus-minus sign'\n            ],\n            [\n              247,\n              'division sign'\n            ],\n            [\n              8260,\n              'fraction slash'\n            ],\n            [\n              215,\n              'multiplication sign'\n            ],\n            [\n              185,\n              'superscript one'\n            ],\n            [\n              178,\n              'superscript two'\n            ],\n            [\n              179,\n              'superscript three'\n            ],\n            [\n              188,\n              'fraction one quarter'\n            ],\n            [\n              189,\n              'fraction one half'\n            ],\n            [\n              190,\n              'fraction three quarters'\n            ]\n          ]\n        },\n        {\n          name: 'Mathematical',\n          characters: [\n            [\n              402,\n              'function / florin'\n            ],\n            [\n              8747,\n              'integral'\n            ],\n            [\n              8721,\n              'n-ary sumation'\n            ],\n            [\n              8734,\n              'infinity'\n            ],\n            [\n              8730,\n              'square root'\n            ],\n            [\n              8764,\n              'similar to'\n            ],\n            [\n              8773,\n              'approximately equal to'\n            ],\n            [\n              8776,\n              'almost equal to'\n            ],\n            [\n              8800,\n              'not equal to'\n            ],\n            [\n              8801,\n              'identical to'\n            ],\n            [\n              8712,\n              'element of'\n            ],\n            [\n              8713,\n              'not an element of'\n            ],\n            [\n              8715,\n              'contains as member'\n            ],\n            [\n              8719,\n              'n-ary product'\n            ],\n            [\n              8743,\n              'logical and'\n            ],\n            [\n              8744,\n              'logical or'\n            ],\n            [\n              172,\n              'not sign'\n            ],\n            [\n              8745,\n              'intersection'\n            ],\n            [\n              8746,\n              'union'\n            ],\n            [\n              8706,\n              'partial differential'\n            ],\n            [\n              8704,\n              'for all'\n            ],\n            [\n              8707,\n              'there exists'\n            ],\n            [\n              8709,\n              'diameter'\n            ],\n            [\n              8711,\n              'backward difference'\n            ],\n            [\n              8727,\n              'asterisk operator'\n            ],\n            [\n              8733,\n              'proportional to'\n            ],\n            [\n              8736,\n              'angle'\n            ]\n          ]\n        },\n        {\n          name: 'Extended Latin',\n          characters: [\n            [\n              192,\n              'A - grave'\n            ],\n            [\n              193,\n              'A - acute'\n            ],\n            [\n              194,\n              'A - circumflex'\n            ],\n            [\n              195,\n              'A - tilde'\n            ],\n            [\n              196,\n              'A - diaeresis'\n            ],\n            [\n              197,\n              'A - ring above'\n            ],\n            [\n              256,\n              'A - macron'\n            ],\n            [\n              198,\n              'ligature AE'\n            ],\n            [\n              199,\n              'C - cedilla'\n            ],\n            [\n              200,\n              'E - grave'\n            ],\n            [\n              201,\n              'E - acute'\n            ],\n            [\n              202,\n              'E - circumflex'\n            ],\n            [\n              203,\n              'E - diaeresis'\n            ],\n            [\n              274,\n              'E - macron'\n            ],\n            [\n              204,\n              'I - grave'\n            ],\n            [\n              205,\n              'I - acute'\n            ],\n            [\n              206,\n              'I - circumflex'\n            ],\n            [\n              207,\n              'I - diaeresis'\n            ],\n            [\n              298,\n              'I - macron'\n            ],\n            [\n              208,\n              'ETH'\n            ],\n            [\n              209,\n              'N - tilde'\n            ],\n            [\n              210,\n              'O - grave'\n            ],\n            [\n              211,\n              'O - acute'\n            ],\n            [\n              212,\n              'O - circumflex'\n            ],\n            [\n              213,\n              'O - tilde'\n            ],\n            [\n              214,\n              'O - diaeresis'\n            ],\n            [\n              216,\n              'O - slash'\n            ],\n            [\n              332,\n              'O - macron'\n            ],\n            [\n              338,\n              'ligature OE'\n            ],\n            [\n              352,\n              'S - caron'\n            ],\n            [\n              217,\n              'U - grave'\n            ],\n            [\n              218,\n              'U - acute'\n            ],\n            [\n              219,\n              'U - circumflex'\n            ],\n            [\n              220,\n              'U - diaeresis'\n            ],\n            [\n              362,\n              'U - macron'\n            ],\n            [\n              221,\n              'Y - acute'\n            ],\n            [\n              376,\n              'Y - diaeresis'\n            ],\n            [\n              562,\n              'Y - macron'\n            ],\n            [\n              222,\n              'THORN'\n            ],\n            [\n              224,\n              'a - grave'\n            ],\n            [\n              225,\n              'a - acute'\n            ],\n            [\n              226,\n              'a - circumflex'\n            ],\n            [\n              227,\n              'a - tilde'\n            ],\n            [\n              228,\n              'a - diaeresis'\n            ],\n            [\n              229,\n              'a - ring above'\n            ],\n            [\n              257,\n              'a - macron'\n            ],\n            [\n              230,\n              'ligature ae'\n            ],\n            [\n              231,\n              'c - cedilla'\n            ],\n            [\n              232,\n              'e - grave'\n            ],\n            [\n              233,\n              'e - acute'\n            ],\n            [\n              234,\n              'e - circumflex'\n            ],\n            [\n              235,\n              'e - diaeresis'\n            ],\n            [\n              275,\n              'e - macron'\n            ],\n            [\n              236,\n              'i - grave'\n            ],\n            [\n              237,\n              'i - acute'\n            ],\n            [\n              238,\n              'i - circumflex'\n            ],\n            [\n              239,\n              'i - diaeresis'\n            ],\n            [\n              299,\n              'i - macron'\n            ],\n            [\n              240,\n              'eth'\n            ],\n            [\n              241,\n              'n - tilde'\n            ],\n            [\n              242,\n              'o - grave'\n            ],\n            [\n              243,\n              'o - acute'\n            ],\n            [\n              244,\n              'o - circumflex'\n            ],\n            [\n              245,\n              'o - tilde'\n            ],\n            [\n              246,\n              'o - diaeresis'\n            ],\n            [\n              248,\n              'o slash'\n            ],\n            [\n              333,\n              'o macron'\n            ],\n            [\n              339,\n              'ligature oe'\n            ],\n            [\n              353,\n              's - caron'\n            ],\n            [\n              249,\n              'u - grave'\n            ],\n            [\n              250,\n              'u - acute'\n            ],\n            [\n              251,\n              'u - circumflex'\n            ],\n            [\n              252,\n              'u - diaeresis'\n            ],\n            [\n              363,\n              'u - macron'\n            ],\n            [\n              253,\n              'y - acute'\n            ],\n            [\n              254,\n              'thorn'\n            ],\n            [\n              255,\n              'y - diaeresis'\n            ],\n            [\n              563,\n              'y - macron'\n            ],\n            [\n              913,\n              'Alpha'\n            ],\n            [\n              914,\n              'Beta'\n            ],\n            [\n              915,\n              'Gamma'\n            ],\n            [\n              916,\n              'Delta'\n            ],\n            [\n              917,\n              'Epsilon'\n            ],\n            [\n              918,\n              'Zeta'\n            ],\n            [\n              919,\n              'Eta'\n            ],\n            [\n              920,\n              'Theta'\n            ],\n            [\n              921,\n              'Iota'\n            ],\n            [\n              922,\n              'Kappa'\n            ],\n            [\n              923,\n              'Lambda'\n            ],\n            [\n              924,\n              'Mu'\n            ],\n            [\n              925,\n              'Nu'\n            ],\n            [\n              926,\n              'Xi'\n            ],\n            [\n              927,\n              'Omicron'\n            ],\n            [\n              928,\n              'Pi'\n            ],\n            [\n              929,\n              'Rho'\n            ],\n            [\n              931,\n              'Sigma'\n            ],\n            [\n              932,\n              'Tau'\n            ],\n            [\n              933,\n              'Upsilon'\n            ],\n            [\n              934,\n              'Phi'\n            ],\n            [\n              935,\n              'Chi'\n            ],\n            [\n              936,\n              'Psi'\n            ],\n            [\n              937,\n              'Omega'\n            ],\n            [\n              945,\n              'alpha'\n            ],\n            [\n              946,\n              'beta'\n            ],\n            [\n              947,\n              'gamma'\n            ],\n            [\n              948,\n              'delta'\n            ],\n            [\n              949,\n              'epsilon'\n            ],\n            [\n              950,\n              'zeta'\n            ],\n            [\n              951,\n              'eta'\n            ],\n            [\n              952,\n              'theta'\n            ],\n            [\n              953,\n              'iota'\n            ],\n            [\n              954,\n              'kappa'\n            ],\n            [\n              955,\n              'lambda'\n            ],\n            [\n              956,\n              'mu'\n            ],\n            [\n              957,\n              'nu'\n            ],\n            [\n              958,\n              'xi'\n            ],\n            [\n              959,\n              'omicron'\n            ],\n            [\n              960,\n              'pi'\n            ],\n            [\n              961,\n              'rho'\n            ],\n            [\n              962,\n              'final sigma'\n            ],\n            [\n              963,\n              'sigma'\n            ],\n            [\n              964,\n              'tau'\n            ],\n            [\n              965,\n              'upsilon'\n            ],\n            [\n              966,\n              'phi'\n            ],\n            [\n              967,\n              'chi'\n            ],\n            [\n              968,\n              'psi'\n            ],\n            [\n              969,\n              'omega'\n            ]\n          ]\n        },\n        {\n          name: 'Symbols',\n          characters: [\n            [\n              8501,\n              'alef symbol'\n            ],\n            [\n              982,\n              'pi symbol'\n            ],\n            [\n              8476,\n              'real part symbol'\n            ],\n            [\n              978,\n              'upsilon - hook symbol'\n            ],\n            [\n              8472,\n              'Weierstrass p'\n            ],\n            [\n              8465,\n              'imaginary part'\n            ]\n          ]\n        },\n        {\n          name: 'Arrows',\n          characters: [\n            [\n              8592,\n              'leftwards arrow'\n            ],\n            [\n              8593,\n              'upwards arrow'\n            ],\n            [\n              8594,\n              'rightwards arrow'\n            ],\n            [\n              8595,\n              'downwards arrow'\n            ],\n            [\n              8596,\n              'left right arrow'\n            ],\n            [\n              8629,\n              'carriage return'\n            ],\n            [\n              8656,\n              'leftwards double arrow'\n            ],\n            [\n              8657,\n              'upwards double arrow'\n            ],\n            [\n              8658,\n              'rightwards double arrow'\n            ],\n            [\n              8659,\n              'downwards double arrow'\n            ],\n            [\n              8660,\n              'left right double arrow'\n            ],\n            [\n              8756,\n              'therefore'\n            ],\n            [\n              8834,\n              'subset of'\n            ],\n            [\n              8835,\n              'superset of'\n            ],\n            [\n              8836,\n              'not a subset of'\n            ],\n            [\n              8838,\n              'subset of or equal to'\n            ],\n            [\n              8839,\n              'superset of or equal to'\n            ],\n            [\n              8853,\n              'circled plus'\n            ],\n            [\n              8855,\n              'circled times'\n            ],\n            [\n              8869,\n              'perpendicular'\n            ],\n            [\n              8901,\n              'dot operator'\n            ],\n            [\n              8968,\n              'left ceiling'\n            ],\n            [\n              8969,\n              'right ceiling'\n            ],\n            [\n              8970,\n              'left floor'\n            ],\n            [\n              8971,\n              'right floor'\n            ],\n            [\n              9001,\n              'left-pointing angle bracket'\n            ],\n            [\n              9002,\n              'right-pointing angle bracket'\n            ],\n            [\n              9674,\n              'lozenge'\n            ],\n            [\n              9824,\n              'black spade suit'\n            ],\n            [\n              9827,\n              'black club suit'\n            ],\n            [\n              9829,\n              'black heart suit'\n            ],\n            [\n              9830,\n              'black diamond suit'\n            ],\n            [\n              8194,\n              'en space'\n            ],\n            [\n              8195,\n              'em space'\n            ],\n            [\n              8201,\n              'thin space'\n            ],\n            [\n              8204,\n              'zero width non-joiner'\n            ],\n            [\n              8205,\n              'zero width joiner'\n            ],\n            [\n              8206,\n              'left-to-right mark'\n            ],\n            [\n              8207,\n              'right-to-left mark'\n            ]\n          ]\n        }\n      ];\n    };\n    const charmapFilter = charmap => {\n      return global.grep(charmap, item => {\n        return isArray(item) && item.length === 2;\n      });\n    };\n    const getCharsFromOption = optionValue => {\n      if (isArray(optionValue)) {\n        return charmapFilter(optionValue);\n      }\n      if (typeof optionValue === 'function') {\n        return optionValue();\n      }\n      return [];\n    };\n    const extendCharMap = (editor, charmap) => {\n      const userCharMap = getCharMap$1(editor);\n      if (userCharMap) {\n        charmap = [{\n            name: UserDefined,\n            characters: getCharsFromOption(userCharMap)\n          }];\n      }\n      const userCharMapAppend = getCharMapAppend(editor);\n      if (userCharMapAppend) {\n        const userDefinedGroup = global.grep(charmap, cg => cg.name === UserDefined);\n        if (userDefinedGroup.length) {\n          userDefinedGroup[0].characters = [\n            ...userDefinedGroup[0].characters,\n            ...getCharsFromOption(userCharMapAppend)\n          ];\n          return charmap;\n        }\n        return charmap.concat({\n          name: UserDefined,\n          characters: getCharsFromOption(userCharMapAppend)\n        });\n      }\n      return charmap;\n    };\n    const getCharMap = editor => {\n      const groups = extendCharMap(editor, getDefaultCharMap());\n      return groups.length > 1 ? [{\n          name: 'All',\n          characters: bind(groups, g => g.characters)\n        }].concat(groups) : groups;\n    };\n\n    const get = editor => {\n      const getCharMap$1 = () => {\n        return getCharMap(editor);\n      };\n      const insertChar$1 = chr => {\n        insertChar(editor, chr);\n      };\n      return {\n        getCharMap: getCharMap$1,\n        insertChar: insertChar$1\n      };\n    };\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    const last = (fn, rate) => {\n      let timer = null;\n      const cancel = () => {\n        if (!isNull(timer)) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      const throttle = (...args) => {\n        cancel();\n        timer = setTimeout(() => {\n          timer = null;\n          fn.apply(null, args);\n        }, rate);\n      };\n      return {\n        cancel,\n        throttle\n      };\n    };\n\n    const contains = (str, substr, start = 0, end) => {\n      const idx = str.indexOf(substr, start);\n      if (idx !== -1) {\n        return isUndefined(end) ? true : idx + substr.length <= end;\n      } else {\n        return false;\n      }\n    };\n    const fromCodePoint = String.fromCodePoint;\n\n    const charMatches = (charCode, name, lowerCasePattern) => {\n      if (contains(fromCodePoint(charCode).toLowerCase(), lowerCasePattern)) {\n        return true;\n      } else {\n        return contains(name.toLowerCase(), lowerCasePattern) || contains(name.toLowerCase().replace(/\\s+/g, ''), lowerCasePattern);\n      }\n    };\n    const scan = (group, pattern) => {\n      const matches = [];\n      const lowerCasePattern = pattern.toLowerCase();\n      each(group.characters, g => {\n        if (charMatches(g[0], g[1], lowerCasePattern)) {\n          matches.push(g);\n        }\n      });\n      return map(matches, m => ({\n        text: m[1],\n        value: fromCodePoint(m[0]),\n        icon: fromCodePoint(m[0])\n      }));\n    };\n\n    const patternName = 'pattern';\n    const open = (editor, charMap) => {\n      const makeGroupItems = () => [\n        {\n          label: 'Search',\n          type: 'input',\n          name: patternName\n        },\n        {\n          type: 'collection',\n          name: 'results'\n        }\n      ];\n      const makeTabs = () => map(charMap, charGroup => ({\n        title: charGroup.name,\n        name: charGroup.name,\n        items: makeGroupItems()\n      }));\n      const makePanel = () => ({\n        type: 'panel',\n        items: makeGroupItems()\n      });\n      const makeTabPanel = () => ({\n        type: 'tabpanel',\n        tabs: makeTabs()\n      });\n      const currentTab = charMap.length === 1 ? Cell(UserDefined) : Cell('All');\n      const scanAndSet = (dialogApi, pattern) => {\n        find(charMap, group => group.name === currentTab.get()).each(f => {\n          const items = scan(f, pattern);\n          dialogApi.setData({ results: items });\n        });\n      };\n      const SEARCH_DELAY = 40;\n      const updateFilter = last(dialogApi => {\n        const pattern = dialogApi.getData().pattern;\n        scanAndSet(dialogApi, pattern);\n      }, SEARCH_DELAY);\n      const body = charMap.length === 1 ? makePanel() : makeTabPanel();\n      const initialData = {\n        pattern: '',\n        results: scan(charMap[0], '')\n      };\n      const bridgeSpec = {\n        title: 'Special Character',\n        size: 'normal',\n        body,\n        buttons: [{\n            type: 'cancel',\n            name: 'close',\n            text: 'Close',\n            primary: true\n          }],\n        initialData,\n        onAction: (api, details) => {\n          if (details.name === 'results') {\n            insertChar(editor, details.value);\n            api.close();\n          }\n        },\n        onTabChange: (dialogApi, details) => {\n          currentTab.set(details.newTabName);\n          updateFilter.throttle(dialogApi);\n        },\n        onChange: (dialogApi, changeData) => {\n          if (changeData.name === patternName) {\n            updateFilter.throttle(dialogApi);\n          }\n        }\n      };\n      const dialogApi = editor.windowManager.open(bridgeSpec);\n      dialogApi.focus(patternName);\n    };\n\n    const register$1 = (editor, charMap) => {\n      editor.addCommand('mceShowCharmap', () => {\n        open(editor, charMap);\n      });\n    };\n\n    const init = (editor, all) => {\n      editor.ui.registry.addAutocompleter('charmap', {\n        trigger: ':',\n        columns: 'auto',\n        minChars: 2,\n        fetch: (pattern, _maxResults) => new Promise((resolve, _reject) => {\n          resolve(scan(all, pattern));\n        }),\n        onAction: (autocompleteApi, rng, value) => {\n          editor.selection.setRng(rng);\n          editor.insertContent(value);\n          autocompleteApi.hide();\n        }\n      });\n    };\n\n    const onSetupEditable = editor => api => {\n      const nodeChanged = () => {\n        api.setEnabled(editor.selection.isEditable());\n      };\n      editor.on('NodeChange', nodeChanged);\n      nodeChanged();\n      return () => {\n        editor.off('NodeChange', nodeChanged);\n      };\n    };\n    const register = editor => {\n      const onAction = () => editor.execCommand('mceShowCharmap');\n      editor.ui.registry.addButton('charmap', {\n        icon: 'insert-character',\n        tooltip: 'Special character',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n      editor.ui.registry.addMenuItem('charmap', {\n        icon: 'insert-character',\n        text: 'Special character...',\n        onAction,\n        onSetup: onSetupEditable(editor)\n      });\n    };\n\n    var Plugin = () => {\n      global$1.add('charmap', editor => {\n        register$2(editor);\n        const charMap = getCharMap(editor);\n        register$1(editor, charMap);\n        register(editor);\n        init(editor, charMap[0]);\n        return get(editor);\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["global$1","fireInsertCustomChar","editor","chr","insertChar","evtChr","hasProto","v","constructor","predicate","_a","typeOf","x","t","o","proto","isType","type","value","isSimpleType","eq","a","isArray$1","isNull","isUndefined","isNullable","isNonNullable","isFunction","never","Optional","tag","onNone","onSome","mapper","binder","replacement","thunk","message","worker","nativePush","map","xs","f","len","r","i","each","findUntil","pred","until","find","flatten","bind","global","option","name","register$2","registerOption","charMapProcessor","getCharMap$1","getCharMapAppend","isArray","UserDefined","getDefaultCharMap","charmapFilter","charmap","item","getCharsFromOption","optionValue","extendCharMap","userCharMap","userCharMapAppend","userDefinedGroup","cg","getCharMap","groups","g","get","Cell","initial","last","fn","rate","timer","cancel","args","contains","str","substr","start","end","idx","fromCodePoint","charMatches","charCode","lowerCasePattern","scan","group","pattern","matches","m","patternName","open","charMap","makeGroupItems","makeTabs","charGroup","makePanel","makeTabPanel","currentTab","scanAndSet","dialogApi","items","updateFilter","body","initialData","bridgeSpec","api","details","changeData","register$1","init","all","_maxResults","resolve","_reject","autocompleteApi","rng","onSetupEditable","nodeChanged","register","onAction","Plugin"],"mappings":"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AAc,eACdC,EAAoB,IACjB,CACL,CACE,KAAM,WACN,WAAY,CACV,CACE,GACA,aAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,UAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,KACA,oBAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,mBAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,aAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,UAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,KACA,UAAA,EAEF,CACE,KACA,aAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,qBAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,KACA,qBAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,mBAAA,EAEF,CACE,KACA,mBAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,MACA,eAAA,EAEF,CACE,MACA,gBAAA,EAEF,CACE,MACA,yCAAA,EAEF,CACE,MACA,gCAAA,CACF,CACF,EAEF,CACE,KAAM,OACN,WAAY,CACV,CACE,IACA,gBAAA,EAEF,CACE,IACA,iBAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,gBAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,KACA,QAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,KACA,gBAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,IACA,cAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,mBAAA,CACF,CACF,EAEF,CACE,KAAM,aACN,WAAY,CACV,CACE,KACA,2CAAA,EAEF,CACE,KACA,4CAAA,EAEF,CACE,IACA,yBAAA,EAEF,CACE,IACA,0BAAA,EAEF,CACE,KACA,4BAAA,EAEF,CACE,KACA,6BAAA,EAEF,CACE,KACA,4BAAA,EAEF,CACE,KACA,6BAAA,EAEF,CACE,KACA,6BAAA,EAEF,CACE,KACA,6BAAA,EAEF,CACE,GACA,gBAAA,EAEF,CACE,GACA,mBAAA,EAEF,CACE,KACA,uBAAA,EAEF,CACE,KACA,0BAAA,EAEF,CACE,KACA,SAAA,EAEF,CACE,KACA,SAAA,EAEF,CACE,IACA,QAAA,EAEF,CACE,KACA,UAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,2BAAA,EAEF,CACE,IACA,sBAAA,EAEF,CACE,IACA,mBAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,IACA,iBAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,KACA,gBAAA,EAEF,CACE,IACA,qBAAA,EAEF,CACE,IACA,iBAAA,EAEF,CACE,IACA,iBAAA,EAEF,CACE,IACA,mBAAA,EAEF,CACE,IACA,sBAAA,EAEF,CACE,IACA,mBAAA,EAEF,CACE,IACA,yBAAA,CACF,CACF,EAEF,CACE,KAAM,eACN,WAAY,CACV,CACE,IACA,mBAAA,EAEF,CACE,KACA,UAAA,EAEF,CACE,KACA,gBAAA,EAEF,CACE,KACA,UAAA,EAEF,CACE,KACA,aAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,wBAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,mBAAA,EAEF,CACE,KACA,oBAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,aAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,IACA,UAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,OAAA,EAEF,CACE,KACA,sBAAA,EAEF,CACE,KACA,SAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,UAAA,EAEF,CACE,KACA,qBAAA,EAEF,CACE,KACA,mBAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,OAAA,CACF,CACF,EAEF,CACE,KAAM,iBACN,WAAY,CACV,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,SAAA,EAEF,CACE,IACA,UAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,gBAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,eAAA,EAEF,CACE,IACA,YAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,MAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,SAAA,EAEF,CACE,IACA,MAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,MAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,QAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,SAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,SAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,MAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,SAAA,EAEF,CACE,IACA,MAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,MAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,QAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,SAAA,EAEF,CACE,IACA,IAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,aAAA,EAEF,CACE,IACA,OAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,SAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,KAAA,EAEF,CACE,IACA,OAAA,CACF,CACF,EAEF,CACE,KAAM,UACN,WAAY,CACV,CACE,KACA,aAAA,EAEF,CACE,IACA,WAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,IACA,uBAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,gBAAA,CACF,CACF,EAEF,CACE,KAAM,SACN,WAAY,CACV,CACE,KACA,iBAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,wBAAA,EAEF,CACE,KACA,sBAAA,EAEF,CACE,KACA,yBAAA,EAEF,CACE,KACA,wBAAA,EAEF,CACE,KACA,yBAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,KACA,WAAA,EAEF,CACE,KACA,aAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,uBAAA,EAEF,CACE,KACA,yBAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,cAAA,EAEF,CACE,KACA,eAAA,EAEF,CACE,KACA,YAAA,EAEF,CACE,KACA,aAAA,EAEF,CACE,KACA,6BAAA,EAEF,CACE,KACA,8BAAA,EAEF,CACE,KACA,SAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,KACA,iBAAA,EAEF,CACE,KACA,kBAAA,EAEF,CACE,KACA,oBAAA,EAEF,CACE,KACA,UAAA,EAEF,CACE,KA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","x_google_ignoreList":[0]}