{"version":3,"file":"index-BkSbvHhq.cjs","sources":["../node_modules/.pnpm/tinymce@6.8.6/node_modules/tinymce/plugins/autoresize/plugin.js"],"sourcesContent":["/**\n * TinyMCE version 6.8.6 (TBD)\n */\n\n(function () {\n    'use strict';\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const fireResizeEditor = editor => editor.dispatch('ResizeEditor');\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('autoresize_overflow_padding', {\n        processor: 'number',\n        default: 1\n      });\n      registerOption('autoresize_bottom_margin', {\n        processor: 'number',\n        default: 50\n      });\n    };\n    const getMinHeight = option('min_height');\n    const getMaxHeight = option('max_height');\n    const getAutoResizeOverflowPadding = option('autoresize_overflow_padding');\n    const getAutoResizeBottomMargin = option('autoresize_bottom_margin');\n\n    const isFullscreen = editor => editor.plugins.fullscreen && editor.plugins.fullscreen.isFullscreen();\n    const toggleScrolling = (editor, state) => {\n      const body = editor.getBody();\n      if (body) {\n        body.style.overflowY = state ? '' : 'hidden';\n        if (!state) {\n          body.scrollTop = 0;\n        }\n      }\n    };\n    const parseCssValueToInt = (dom, elm, name, computed) => {\n      var _a;\n      const value = parseInt((_a = dom.getStyle(elm, name, computed)) !== null && _a !== void 0 ? _a : '', 10);\n      return isNaN(value) ? 0 : value;\n    };\n    const shouldScrollIntoView = trigger => {\n      if ((trigger === null || trigger === void 0 ? void 0 : trigger.type.toLowerCase()) === 'setcontent') {\n        const setContentEvent = trigger;\n        return setContentEvent.selection === true || setContentEvent.paste === true;\n      } else {\n        return false;\n      }\n    };\n    const resize = (editor, oldSize, trigger, getExtraMarginBottom) => {\n      var _a;\n      const dom = editor.dom;\n      const doc = editor.getDoc();\n      if (!doc) {\n        return;\n      }\n      if (isFullscreen(editor)) {\n        toggleScrolling(editor, true);\n        return;\n      }\n      const docEle = doc.documentElement;\n      const resizeBottomMargin = getExtraMarginBottom ? getExtraMarginBottom() : getAutoResizeOverflowPadding(editor);\n      const minHeight = (_a = getMinHeight(editor)) !== null && _a !== void 0 ? _a : editor.getElement().offsetHeight;\n      let resizeHeight = minHeight;\n      const marginTop = parseCssValueToInt(dom, docEle, 'margin-top', true);\n      const marginBottom = parseCssValueToInt(dom, docEle, 'margin-bottom', true);\n      let contentHeight = docEle.offsetHeight + marginTop + marginBottom + resizeBottomMargin;\n      if (contentHeight < 0) {\n        contentHeight = 0;\n      }\n      const containerHeight = editor.getContainer().offsetHeight;\n      const contentAreaHeight = editor.getContentAreaContainer().offsetHeight;\n      const chromeHeight = containerHeight - contentAreaHeight;\n      if (contentHeight + chromeHeight > minHeight) {\n        resizeHeight = contentHeight + chromeHeight;\n      }\n      const maxHeight = getMaxHeight(editor);\n      if (maxHeight && resizeHeight > maxHeight) {\n        resizeHeight = maxHeight;\n        toggleScrolling(editor, true);\n      } else {\n        toggleScrolling(editor, false);\n      }\n      if (resizeHeight !== oldSize.get()) {\n        const deltaSize = resizeHeight - oldSize.get();\n        dom.setStyle(editor.getContainer(), 'height', resizeHeight + 'px');\n        oldSize.set(resizeHeight);\n        fireResizeEditor(editor);\n        if (global.browser.isSafari() && (global.os.isMacOS() || global.os.isiOS())) {\n          const win = editor.getWin();\n          win.scrollTo(win.pageXOffset, win.pageYOffset);\n        }\n        if (editor.hasFocus() && shouldScrollIntoView(trigger)) {\n          editor.selection.scrollIntoView();\n        }\n        if ((global.browser.isSafari() || global.browser.isChromium()) && deltaSize < 0) {\n          resize(editor, oldSize, trigger, getExtraMarginBottom);\n        }\n      }\n    };\n    const setup = (editor, oldSize) => {\n      let getExtraMarginBottom = () => getAutoResizeBottomMargin(editor);\n      let resizeCounter;\n      let sizeAfterFirstResize;\n      editor.on('init', e => {\n        resizeCounter = 0;\n        const overflowPadding = getAutoResizeOverflowPadding(editor);\n        const dom = editor.dom;\n        dom.setStyles(editor.getDoc().documentElement, { height: 'auto' });\n        if (global.browser.isEdge() || global.browser.isIE()) {\n          dom.setStyles(editor.getBody(), {\n            'paddingLeft': overflowPadding,\n            'paddingRight': overflowPadding,\n            'min-height': 0\n          });\n        } else {\n          dom.setStyles(editor.getBody(), {\n            paddingLeft: overflowPadding,\n            paddingRight: overflowPadding\n          });\n        }\n        resize(editor, oldSize, e, getExtraMarginBottom);\n        resizeCounter += 1;\n      });\n      editor.on('NodeChange SetContent keyup FullscreenStateChanged ResizeContent', e => {\n        if (resizeCounter === 1) {\n          sizeAfterFirstResize = editor.getContainer().offsetHeight;\n          resize(editor, oldSize, e, getExtraMarginBottom);\n          resizeCounter += 1;\n        } else if (resizeCounter === 2) {\n          const isLooping = sizeAfterFirstResize < editor.getContainer().offsetHeight;\n          if (isLooping) {\n            const dom = editor.dom;\n            const doc = editor.getDoc();\n            dom.setStyles(doc.documentElement, { 'min-height': 0 });\n            dom.setStyles(editor.getBody(), { 'min-height': 'inherit' });\n          }\n          getExtraMarginBottom = isLooping ? constant(0) : getExtraMarginBottom;\n          resizeCounter += 1;\n        } else {\n          resize(editor, oldSize, e, getExtraMarginBottom);\n        }\n      });\n    };\n\n    const register = (editor, oldSize) => {\n      editor.addCommand('mceAutoResize', () => {\n        resize(editor, oldSize);\n      });\n    };\n\n    var Plugin = () => {\n      global$1.add('autoresize', editor => {\n        register$1(editor);\n        if (!editor.options.isSet('resize')) {\n          editor.options.set('resize', false);\n        }\n        if (!editor.inline) {\n          const oldSize = Cell(0);\n          register(editor, oldSize);\n          setup(editor, oldSize);\n        }\n      });\n    };\n\n    Plugin();\n\n})();\n"],"names":["Cell","initial","value","v","global$1","constant","global","fireResizeEditor","editor","option","name","register$1","registerOption","getMinHeight","getMaxHeight","getAutoResizeOverflowPadding","getAutoResizeBottomMargin","isFullscreen","toggleScrolling","state","body","parseCssValueToInt","dom","elm","computed","_a","shouldScrollIntoView","trigger","setContentEvent","resize","oldSize","getExtraMarginBottom","doc","docEle","resizeBottomMargin","minHeight","resizeHeight","marginTop","marginBottom","contentHeight","containerHeight","contentAreaHeight","chromeHeight","maxHeight","deltaSize","win","setup","resizeCounter","sizeAfterFirstResize","e","overflowPadding","isLooping","register","Plugin"],"mappings":"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","x_google_ignoreList":[0]}