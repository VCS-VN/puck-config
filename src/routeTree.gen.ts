/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SearchRouteImport } from './routes/search'
import { Route as RenderRouteImport } from './routes/render'
import { Route as EditorRouteImport } from './routes/editor'

const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const RenderRoute = RenderRouteImport.update({
  id: '/render',
  path: '/render',
  getParentRoute: () => rootRouteImport,
} as any)
const EditorRoute = EditorRouteImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/editor': typeof EditorRoute
  '/render': typeof RenderRoute
  '/search': typeof SearchRoute
}
export interface FileRoutesByTo {
  '/editor': typeof EditorRoute
  '/render': typeof RenderRoute
  '/search': typeof SearchRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/editor': typeof EditorRoute
  '/render': typeof RenderRoute
  '/search': typeof SearchRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/editor' | '/render' | '/search'
  fileRoutesByTo: FileRoutesByTo
  to: '/editor' | '/render' | '/search'
  id: '__root__' | '/editor' | '/render' | '/search'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  EditorRoute: typeof EditorRoute
  RenderRoute: typeof RenderRoute
  SearchRoute: typeof SearchRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/render': {
      id: '/render'
      path: '/render'
      fullPath: '/render'
      preLoaderRoute: typeof RenderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/editor': {
      id: '/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  EditorRoute: EditorRoute,
  RenderRoute: RenderRoute,
  SearchRoute: SearchRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
